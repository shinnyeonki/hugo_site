<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C on My Test Site</title>
    <link>http://localhost:1313/tags/c/</link>
    <description>Recent content in C on My Test Site</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <lastBuildDate>Mon, 06 Oct 2025 04:30:41 +0900</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/c/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>c 선언부 문법 읽기</title>
      <link>http://localhost:1313/01.publish/c-%EC%84%A0%EC%96%B8%EB%B6%80-%EB%AC%B8%EB%B2%95-%EC%9D%BD%EA%B8%B0/</link>
      <pubDate>Mon, 06 Oct 2025 04:30:41 +0900</pubDate>
      <guid>http://localhost:1313/01.publish/c-%EC%84%A0%EC%96%B8%EB%B6%80-%EB%AC%B8%EB%B2%95-%EC%9D%BD%EA%B8%B0/</guid>
      <description>&lt;p&gt;쉬운 선언&lt;br&gt;&#xA;&lt;code&gt;int foo[5];&lt;/code&gt;    // &lt;em&gt;foo는 5개의 정수로 구성된 배열입니다.&lt;/em&gt;&lt;br&gt;&#xA;&lt;code&gt;char *foo;&lt;/code&gt;        // &lt;em&gt;foo는 char에 대한 포인터입니다.&lt;/em&gt;&lt;br&gt;&#xA;&lt;code&gt;double foo();&lt;/code&gt;      // &lt;em&gt;foo는 double을 반환하는 함수입니다.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;그러나 선언이 좀 더 복잡해지면 보고 있는 내용을 정확히 아는 것이 더 어려워진다&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;**&lt;/span&gt;foo[][&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;])())[]; &lt;span style=&#34;color:#75715e&#34;&gt;//???&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;위의 구문처럼 코딩을 하는 경우는 잘 없지만 하나하나 해석하면서 선언부 문법을 완벽하게 이해해 보자&lt;/p&gt;&#xA;&lt;h2 id=&#34;규칙&#34;&gt;규칙&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;long&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;**&lt;/span&gt;foo[&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;어떤 영문 자료에서 확인한 자료이다&lt;br&gt;&#xA;언제나 먼저 변수 이름으로 시작합니다 =&amp;gt; foo 는 &amp;hellip;&lt;br&gt;&#xA;언제나 마지막은 type 입니다 =&amp;gt; foo 는 char 입니다&lt;br&gt;&#xA;가운데는 &amp;ldquo;go right when you can, go left when you must&amp;rdquo;&lt;br&gt;&#xA;갈 수 있다면 오른쪽으로 왼쪽으로는 가야할때만!!&lt;/p&gt;</description>
    </item>
    <item>
      <title>빌드(컴파일) 과정</title>
      <link>http://localhost:1313/02.inbox/%EB%B9%8C%EB%93%9C%EC%BB%B4%ED%8C%8C%EC%9D%BC-%EA%B3%BC%EC%A0%95/</link>
      <pubDate>Thu, 05 Jun 2025 10:26:11 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EB%B9%8C%EB%93%9C%EC%BB%B4%ED%8C%8C%EC%9D%BC-%EA%B3%BC%EC%A0%95/</guid>
      <description>&lt;h2 id=&#34;과정별-순서&#34;&gt;과정별 순서&lt;/h2&gt;&#xA;&lt;h2 id=&#34;요약&#34;&gt;요약&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240104121023.png&#34; alt=&#34; (Image resource not found)&#34; &gt;%20image%2020240104121023.png)&lt;/p&gt;&#xA;&lt;h2 id=&#34;전처리기&#34;&gt;전처리기&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;gcc -E program.c -o program.i&lt;/code&gt;&#xA;옵션 : &lt;code&gt;-E  Preprocess only; do not compile, assemble or link.&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;헤더 파일 삽입&lt;/strong&gt; : #include 지시문을 만나면 해당하는 헤더 파일을 찾아 &lt;strong&gt;헤더 파일에 있는 모든 내용을 복사해서 소스 코드에 삽입&lt;/strong&gt;한다. 즉, 헤더 파일은 컴파일에 사용되지 않고 소스 코드 파일 내에 전부 복사된다. 헤더 파일에 선언된 함수 원형은 후에 링킹 과정을 통해 실제로 함수가 정의되어 있는 오브젝트 파일(컴파일된 소스 코드 파일)과 결합한다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>abi</title>
      <link>http://localhost:1313/02.inbox/abi/</link>
      <pubDate>Wed, 22 Jan 2025 18:31:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/abi/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;gcc-arm-[플렛폼]-[ABI 타입]&#xA;&#xA;&#xA;gcc-arm-linux-gnueabi/jammy 4:11.2.0-1ubuntu1 amd64&#xA;  GNU C compiler for the armel architecture&#xA;&#xA;gcc-arm-linux-gnueabihf/jammy 4:11.2.0-1ubuntu1 amd64&#xA;  GNU C compiler for the armhf architecture&#xA;&#xA;gcc-arm-none-eabi/jammy 15:10.3-2021.07-4 amd64&#xA;  GCC cross compiler for ARM Cortex-R/M processors&#xA;&#xA;gcc-arm-none-eabi-source/jammy 15:10.3-2021.07-4 all&#xA;  GCC cross compiler for ARM Cortex-R/M processors (source)&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;arm-none-eabi-gcc&lt;/p&gt;&#xA;&lt;p&gt;ABI는 &amp;ldquo;Application Binary Interface&amp;quot;의 약자로, 소프트웨어와 하드웨어 간의 상호작용을 정의하는 규약입니다. ABI는 다음과 같은 요소를 포함합니다:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;데이터 타입: 데이터의 크기, 정렬 방식, 표현 방식 등을 정의합니다.&lt;/li&gt;&#xA;&lt;li&gt;함수 호출 규약: 함수에 인자를 전달하는 방법, 반환 값 처리, 스택 관리 등을 규정합니다.&lt;/li&gt;&#xA;&lt;li&gt;레지스터 사용: CPU 레지스터의 사용 방식과 어떤 레지스터가 어떤 용도로 사용되는지를 정의합니다.&lt;/li&gt;&#xA;&lt;li&gt;바이너리 형식: 실행 파일과 라이브러리의 구조와 형식에 대해 설명합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>gdb 사용법</title>
      <link>http://localhost:1313/temp/gdb-%EC%82%AC%EC%9A%A9%EB%B2%95/</link>
      <pubDate>Mon, 30 Dec 2024 23:48:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/gdb-%EC%82%AC%EC%9A%A9%EB%B2%95/</guid>
      <description>&lt;h2 id=&#34;기본-명령어&#34;&gt;기본 명령어&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;strong&gt;명령어&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;설명&lt;/strong&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;list&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;현재 디버깅 중인 소스 코드의 일부를 출력합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;run&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;프로그램을 실행합니다. (명령 뒤에 인자를 추가하여 프로그램 실행 시 인자를 전달할 수 있습니다.)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;break&lt;/code&gt; (또는 &lt;code&gt;b&lt;/code&gt;)&lt;/td&gt;&#xA;          &lt;td&gt;브레이크포인트를 설정합니다. (예: &lt;code&gt;b main&lt;/code&gt; 또는 &lt;code&gt;b 파일명:줄번호&lt;/code&gt;)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;clear&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;특정 위치에 설정된 브레이크포인트를 삭제합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;delete&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;설정된 브레이크포인트를 삭제합니다. (예: &lt;code&gt;delete 1&lt;/code&gt;으로 특정 브레이크포인트 삭제)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;next&lt;/code&gt; (또는 &lt;code&gt;n&lt;/code&gt;)&lt;/td&gt;&#xA;          &lt;td&gt;한 줄씩 코드 실행을 진행합니다(함수 호출은 건너뜀).&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;step&lt;/code&gt; (또는 &lt;code&gt;s&lt;/code&gt;)&lt;/td&gt;&#xA;          &lt;td&gt;한 줄씩 코드 실행을 진행하며, 함수 호출 내부로 진입합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;print&lt;/code&gt; (또는 &lt;code&gt;p&lt;/code&gt;)&lt;/td&gt;&#xA;          &lt;td&gt;변수나 표현식의 값을 출력합니다. (예: &lt;code&gt;p 변수명&lt;/code&gt;)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;display&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;특정 변수의 값을 계속 표시합니다. (예: &lt;code&gt;display 변수명&lt;/code&gt;)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;bt&lt;/code&gt; (또는 &lt;code&gt;backtrace&lt;/code&gt;)&lt;/td&gt;&#xA;          &lt;td&gt;호출 스택(traceback)을 출력합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;kill&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;실행 중인 프로그램을 강제 종료합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;cout&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;GDB에서 직접 제공하지 않는 명령어로, 일반적으로 C++에서 표준 출력 스트림을 의미합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;help&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;GDB 명령어 도움말을 제공합니다. (예: &lt;code&gt;help break&lt;/code&gt;)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;quit&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;GDB를 종료합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;watch varname&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;특정 변수(&lt;code&gt;varname&lt;/code&gt;)의 값이 변경될 때 중단합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;info locals&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;현재 스코프의 지역 변수 값을 표시합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;info variables&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;모든 전역 변수와 정적 변수를 표시합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;info break&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;설정된 모든 브레이크포인트를 나열합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;info func&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;디버깅 대상의 모든 함수 이름을 나열합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;set&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;특정 변수나 환경 설정을 변경합니다. (예: &lt;code&gt;set var 변수명 = 값&lt;/code&gt;)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;finish&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;현재 함수의 실행을 끝내고 호출한 함수로 복귀합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;추가-명령어&#34;&gt;추가 명령어&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;strong&gt;명령어&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;설명&lt;/strong&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;continue&lt;/code&gt; (또는 &lt;code&gt;c&lt;/code&gt;)&lt;/td&gt;&#xA;          &lt;td&gt;브레이크포인트까지 계속 실행합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;stepi&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;기계어 수준에서 한 단계 실행합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;disassemble&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;기계어 수준에서 디스어셈블리된 코드를 출력합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;info threads&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;현재 실행 중인 모든 스레드의 정보를 표시합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;thread apply&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;특정 스레드에 대해 명령을 적용합니다. (예: &lt;code&gt;thread apply all bt&lt;/code&gt;는 모든 스레드의 백트레이스를 출력)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;set args&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;실행 시 전달할 프로그램의 인자를 설정합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;info registers&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;레지스터의 상태를 출력합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;x&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;메모리를 검사합니다. (예: &lt;code&gt;x/10x 변수&lt;/code&gt;는 변수부터 10개의 16진수를 출력)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;attach&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;실행 중인 프로세스에 연결하여 디버깅합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;detach&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;연결된 프로세스에서 디버깅을 종료하고 분리합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;추가로 궁금한 명령어나 세부적인 사용 예시가 필요하다면 알려주세요! 😊&lt;/p&gt;</description>
    </item>
    <item>
      <title>gcc defalut 버전 확인</title>
      <link>http://localhost:1313/02.inbox/gcc-defalut-%EB%B2%84%EC%A0%84-%ED%99%95%EC%9D%B8/</link>
      <pubDate>Mon, 23 Dec 2024 13:30:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/gcc-defalut-%EB%B2%84%EC%A0%84-%ED%99%95%EC%9D%B8/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gcc -dM -E -x c - &amp;lt; /dev/null | grep __STDC_VERSION__&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;g++ -dM -E -x c++ - &amp;lt; /dev/null | grep __cplusplus&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;C++98: 199711&#xA;C++11: 201103&#xA;C++14: 201402&#xA;C++17: 201703&#xA;C++20: 202002&lt;/p&gt;</description>
    </item>
    <item>
      <title>c 에서 오류를 발생시키는 방법</title>
      <link>http://localhost:1313/temp/c-%EC%97%90%EC%84%9C-%EC%98%A4%EB%A5%98%EB%A5%BC-%EB%B0%9C%EC%83%9D%EC%8B%9C%ED%82%A4%EB%8A%94-%EB%B0%A9%EB%B2%95/</link>
      <pubDate>Fri, 27 Sep 2024 13:07:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/c-%EC%97%90%EC%84%9C-%EC%98%A4%EB%A5%98%EB%A5%BC-%EB%B0%9C%EC%83%9D%EC%8B%9C%ED%82%A4%EB%8A%94-%EB%B0%A9%EB%B2%95/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;반환 값 사용:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;함수에서 특정 값을 반환하여 오류를 나타냅니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;  &lt;span style=&#34;color:#75715e&#34;&gt;// 오류를 나타내는 음수 값&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; NULL;  &lt;span style=&#34;color:#75715e&#34;&gt;// 포인터 함수에서 오류 표시&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;exit() 함수:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;프로그램을 즉시 종료하고 운영 체제에 상태 코드를 반환합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;exit&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);  &lt;span style=&#34;color:#75715e&#34;&gt;// 비정상 종료를 나타내는 0이 아닌 값&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;abort() 함수:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;프로그램을 비정상적으로 종료하고 코어 덤프를 생성합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;abort&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;assert() 매크로:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;조건이 거짓일 때 프로그램을 중단하고 오류 메시지를 출력합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;assert.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;assert&lt;/span&gt;(condition);  &lt;span style=&#34;color:#75715e&#34;&gt;// condition이 거짓이면 오류 발생&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;perror() 함수:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Makefile</title>
      <link>http://localhost:1313/temp/makefile/</link>
      <pubDate>Mon, 22 Jan 2024 03:36:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/makefile/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;target : dependency&#xA;&amp;lt;탭&amp;gt; command&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;tarrget 은 일반적인 command 로 생성된 파일을 의미할 수도 있고 목표하는 의미가 될 수도 있다&#xA;예를 들어 target 에 clean 이 들어가면 빌드 생성파일을 삭제한다&lt;/p&gt;&#xA;&lt;h2 id=&#34;변수&#34;&gt;변수&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;매크로의 사용에서 ${..}, $(..), $..를 모두 사용할 수 있습니다. 그러나 대부분의 책에서는 $(..) 을 사용하라고 권하는군요&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;OBJS = main.o read.o write.o&#xA;&#xA;test : $(OBJS)&#xA;&#x9;gcc -o test $(OBJS)&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;미리-정해저-있는-predefind-변수&#34;&gt;미리 정해저 있는 predefind 변수&lt;/h3&gt;&#xA;&lt;p&gt;make -p&lt;/p&gt;&#xA;&lt;h2 id=&#34;자동변수&#34;&gt;자동변수&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;$@&lt;/code&gt; : 현재 타겟 이름&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;$^&lt;/code&gt; : 현재 타겟이 의존하는 대상들의 전체 목록&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;$^&lt;/code&gt; : 의존 대상의 처음 대상&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>pragma</title>
      <link>http://localhost:1313/02.inbox/pragma/</link>
      <pubDate>Thu, 04 Jan 2024 12:18:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/pragma/</guid>
      <description>&lt;p&gt;사용할 일은 잦은데~ 너무 무관심한 척 한 것 같다~ &lt;/p&gt;&#xA;&lt;p&gt;매번 매번 사용해도 헷갈리는 pragma의 용법에 대해 모아 총정리 하였다.&lt;/p&gt;&#xA;&lt;p&gt;#pragma는 define 이나 include와 같이 #으로 시작하는 전처리구문(precompiler)의 하나이다.  &lt;/p&gt;&#xA;&lt;p&gt; 컴파일러에 종속적인 구문이라 컴파일러가 변경되었을 경우 제대로된 동작을 보장하지 못하므로 프로젝트 진행중에 서로 다른 컴파일러를 사용한다면 사용하지 않음이 바람직 하겠다.  &lt;/p&gt;&#xA;&lt;p&gt; - 대신 대체하는 문법을 사용해야 되겠다.&lt;/p&gt;&#xA;&lt;p&gt;**#pragma once  &lt;/p&gt;&#xA;&lt;p&gt;** 이것은 &amp;ldquo;컴파일러에게 한번만 컴파일해!&amp;rdquo; 라고 명령한다.  &lt;/p&gt;&#xA;&lt;p&gt; 헤더의 중복을 막아준다.  &lt;/p&gt;&#xA;&lt;p&gt; 무슨말인가 하면&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;a.h를 구현한 a.cpp, a.h는 독립적이다.(include가 없다.)  &lt;/p&gt;</description>
    </item>
    <item>
      <title>함수포인터</title>
      <link>http://localhost:1313/02.inbox/%ED%95%A8%EC%88%98%ED%8F%AC%EC%9D%B8%ED%84%B0/</link>
      <pubDate>Fri, 22 Dec 2023 11:30:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%ED%95%A8%EC%88%98%ED%8F%AC%EC%9D%B8%ED%84%B0/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;foo&lt;/span&gt;(){ &lt;span style=&#34;color:#75715e&#34;&gt;// foo 코드는 메모리 주소 0x002717f0에서 시작한다.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%d&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;foo&lt;/span&gt;()); &lt;span style=&#34;color:#75715e&#34;&gt;// 주소 0x002717f0로 점프한다. 5 출력&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%p&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;,foo); &lt;span style=&#34;color:#75715e&#34;&gt;// 주소를 출력&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;코드에서 보듯 함수의 이름은 함수의 주소를 가르킨다 int a[7] 에서 a 가 주소를 가리키듯&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; a, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; b){&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b;} &lt;span style=&#34;color:#75715e&#34;&gt;//덧셈함수&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sub&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; a, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; b){&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; b;} &lt;span style=&#34;color:#75715e&#34;&gt;//뺄셈함수&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;mul&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; a, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; b){&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; b;} &lt;span style=&#34;color:#75715e&#34;&gt;//곱셈함수&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;div&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; a, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; b){&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; b;} &lt;span style=&#34;color:#75715e&#34;&gt;//나눗셈함수&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;fp[&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;])(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;); &lt;span style=&#34;color:#75715e&#34;&gt;//함수 포인터 배열 선언&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;fp[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; add; &lt;span style=&#34;color:#75715e&#34;&gt;// 배열[1]에 덧셈 함수의 메모리 주소 저장&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;fp[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sub; &lt;span style=&#34;color:#75715e&#34;&gt;// 배열[2]에 뺄셈 함수의 메모리 주소 저장&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;fp[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mul; &lt;span style=&#34;color:#75715e&#34;&gt;// 배열[3]에 곱셈 함수의 메모리 주소 저장&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;fp[&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; div; &lt;span style=&#34;color:#75715e&#34;&gt;// 배열[4]에 나눗셈 함수의 메모리 주소 저장&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;; i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;배열[%d](20,%2010));&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;typedef&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;int&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;PtrFunc)(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PtrFunc fp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; NULL;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; add;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>c, cpp 연산자 우선순위</title>
      <link>http://localhost:1313/02.inbox/c-cpp-%EC%97%B0%EC%82%B0%EC%9E%90-%EC%9A%B0%EC%84%A0%EC%88%9C%EC%9C%84/</link>
      <pubDate>Fri, 22 Dec 2023 10:31:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/c-cpp-%EC%97%B0%EC%82%B0%EC%9E%90-%EC%9A%B0%EC%84%A0%EC%88%9C%EC%9C%84/</guid>
      <description>&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20231222103216.png&#34; alt=&#34;c 연산자 우선순위-20231222103216 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://learn.microsoft.com/ko-kr/cpp/c-language/precedence-and-order-of-evaluation?view=msvc-170#precedence-and-associativity-of-c-operators&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://learn.microsoft.com/ko-kr/cpp/cpp/cpp-built-in-operators-precedence-and-associativity?view=msvc-170#c-operator-precedence-and-associativity-table&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
