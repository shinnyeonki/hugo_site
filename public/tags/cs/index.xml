<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cs on My Test Site</title>
    <link>http://localhost:1313/tags/cs/</link>
    <description>Recent content in Cs on My Test Site</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <lastBuildDate>Sun, 12 Oct 2025 15:43:22 +0900</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/cs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>그래서 컴퓨터는 어떻게 동작하나요 1</title>
      <link>http://localhost:1313/02.inbox/%EA%B7%B8%EB%9E%98%EC%84%9C-%EC%BB%B4%ED%93%A8%ED%84%B0%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8F%99%EC%9E%91%ED%95%98%EB%82%98%EC%9A%94/%EA%B7%B8%EB%9E%98%EC%84%9C-%EC%BB%B4%ED%93%A8%ED%84%B0%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8F%99%EC%9E%91%ED%95%98%EB%82%98%EC%9A%94-1/</link>
      <pubDate>Sun, 12 Oct 2025 15:43:22 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EA%B7%B8%EB%9E%98%EC%84%9C-%EC%BB%B4%ED%93%A8%ED%84%B0%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8F%99%EC%9E%91%ED%95%98%EB%82%98%EC%9A%94/%EA%B7%B8%EB%9E%98%EC%84%9C-%EC%BB%B4%ED%93%A8%ED%84%B0%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8F%99%EC%9E%91%ED%95%98%EB%82%98%EC%9A%94-1/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;WORD : CPU 에 의해 한번에 처리될 수 있는 비트 수&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;sr-latch&#34;&gt;SR latch&lt;/h2&gt;&#xA;&lt;p&gt;NOR 게이트를 사용한 SR 래치는 기본적인 SR 래치로, 아래와 같이 작동합니다.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;두 개의 NOR 게이트를 교차 연결합니다.&lt;/li&gt;&#xA;&lt;li&gt;입력은 S(Set)와 R(Reset)입니다&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;S&lt;/th&gt;&#xA;          &lt;th&gt;R&lt;/th&gt;&#xA;          &lt;th&gt;Q (다음 상태)&lt;/th&gt;&#xA;          &lt;th&gt;¬Q (다음 상태)&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0&lt;/td&gt;&#xA;          &lt;td&gt;0&lt;/td&gt;&#xA;          &lt;td&gt;Q (이전 상태)&lt;/td&gt;&#xA;          &lt;td&gt;¬Q (이전 상태)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0&lt;/td&gt;&#xA;          &lt;td&gt;1&lt;/td&gt;&#xA;          &lt;td&gt;0&lt;/td&gt;&#xA;          &lt;td&gt;1&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;1&lt;/td&gt;&#xA;          &lt;td&gt;0&lt;/td&gt;&#xA;          &lt;td&gt;1&lt;/td&gt;&#xA;          &lt;td&gt;0&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;1&lt;/td&gt;&#xA;          &lt;td&gt;1&lt;/td&gt;&#xA;          &lt;td&gt;불안정&lt;/td&gt;&#xA;          &lt;td&gt;불안정&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;NAND 게이트를 사용한 SR 래치는 약간 다르게 동작합니다. 이 경우에는 입력을 보통 S&amp;rsquo;와 R&amp;rsquo;으로 표기합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>그래프(graph)</title>
      <link>http://localhost:1313/02.inbox/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8B%A4-with-python/%EA%B7%B8%EB%9E%98%ED%94%84graph/</link>
      <pubDate>Sat, 11 Oct 2025 05:12:07 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8B%A4-with-python/%EA%B7%B8%EB%9E%98%ED%94%84graph/</guid>
      <description>&lt;h2 id=&#34;-그래프의-종류와-개념&#34;&gt;📖 그래프의 종류와 개념&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://localhost:1313/02.inbox/2%EC%9D%98-%EB%B3%B4%EC%88%98%EB%A5%BC-%EC%9D%8C%EC%88%98-%ED%91%9C%ED%98%84%EB%B2%95%EC%9C%BC%EB%A1%9C-%EC%A0%95%ED%95%9C-%EC%9D%B4%EC%9C%A0/&#34; class=&#34;internal-link&#34;&gt;hello&lt;/a&gt;&#xA;&lt;a href=&#34;http://localhost:1313/08.media/Bootloader%20Boot%20Procedure.pdf&#34; class=&#34;internal-file-link&#34;&gt;pdf 테스트&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;그래프는 여러 개의 점(노드 또는 정점)들이 선으로 연결된 구조를 나타내는 &lt;strong&gt;수학적인 개념&lt;/strong&gt;입니다. 그래프는 다양한 현실 세계의 문제를 모델링하고 분석하는 데 사용됩니다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;그래프의-용어&#34;&gt;그래프의 용어&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240428022601.png&#34; alt=&#34;Pasted image 20240428022601 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;dl&gt;&#xA;&lt;dt&gt;&lt;code&gt;노드(Node) 또는 정점(Vertex)&lt;/code&gt; N or V&lt;/dt&gt;&#xA;&lt;dd&gt;그래프에서 하나의 점을 나타냅니다. 노드는 데이터를 저장하는데 사용될 수 있습니다.&lt;br&gt;&#xA;&lt;code&gt;간선(Edge)&lt;/code&gt;  E&lt;/dd&gt;&#xA;&lt;dd&gt;그래프에서 노드와 노드를 연결하는 선을 나타냅니다. 간선은 노드 쌍 사이의 관계를 나타냅니다.&lt;br&gt;&#xA;&lt;code&gt;인접(Adjacent)&lt;/code&gt;&lt;/dd&gt;&#xA;&lt;dd&gt;두 개의 노드가 간선으로 직접 연결되어 있는 상태를 말합니다. 인접한 노드는 서로 이웃이라고도 합니다.&lt;br&gt;&#xA;&lt;code&gt;차수(Degree)&lt;/code&gt;&lt;/dd&gt;&#xA;&lt;dd&gt;&lt;strong&gt;노드에 연결된 간선의 수&lt;/strong&gt;를 나타냅니다. 무방향 그래프에서는 노드의 차수는 해당 노드와 인접한 노드의 수입니다.&lt;br&gt;&#xA;&lt;code&gt;경로(Path)&lt;/code&gt;&lt;/dd&gt;&#xA;&lt;dd&gt;그래프에서 노드들을 연결하는 간선의 순서를 나타내는 순서쌍입니다. 경로의 길이는 경로에 속한 간선의 수입니다.&lt;br&gt;&#xA;&lt;code&gt;사이클(Cycle)&lt;/code&gt;&lt;/dd&gt;&#xA;&lt;dd&gt;그래프에서 동일한 노드로 되돌아오는 경로를 말합니다. 즉, 경로의 시작 노드와 끝 노드가 동일한 경우를 말합니다.&lt;br&gt;&#xA;&lt;code&gt;가중치(Weight)&lt;/code&gt;&lt;/dd&gt;&#xA;&lt;dd&gt;가중치 그래프에서 간선에 할당된 값 또는 비용을 나타냅니다. 가중치는 간선의 특성을 나타내는데 사용됩니다.&lt;/dd&gt;&#xA;&lt;/dl&gt;&#xA;&lt;h2 id=&#34;그래프의-종류&#34;&gt;그래프의 종류&lt;/h2&gt;&#xA;&lt;dl&gt;&#xA;&lt;dt&gt;&lt;code&gt;무방향 그래프&lt;/code&gt; &amp;amp; &lt;code&gt;방향 그래프&lt;/code&gt;&lt;/dt&gt;&#xA;&lt;dd&gt;간선의 방향의 유무에 따라 구분되는 그래프&lt;br&gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240428022606.png&#34; alt=&#34;Pasted image 20240428022606 (Image resource not found)&#34; &gt;&lt;br&gt;&#xA;&lt;code&gt;가중치 그래프&lt;/code&gt;&lt;/dd&gt;&#xA;&lt;dd&gt;그래프에 가중치 또는 비용이 할당된 그래프(네트워크 이론이나 신경망 이론에 활용되는 개념)&lt;br&gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240428022605.png&#34; alt=&#34;Pasted image 20240428022605 (Image resource not found)&#34; &gt;&lt;br&gt;&#xA;&lt;code&gt;연결 그래프&lt;/code&gt; &amp;amp; &lt;code&gt;비연결 그래프&lt;/code&gt;&lt;/dd&gt;&#xA;&lt;dd&gt;모든 노드에 대해 경로가 존재하면 &lt;strong&gt;연결 그래프&lt;/strong&gt;, 특정 노드에 대한 경로가 하나라도 존재하지 않을 경우 &lt;strong&gt;비연결 그래프&lt;/strong&gt;&lt;br&gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240428022602.png&#34; alt=&#34;Pasted image 20240428022602 (Image resource not found)&#34; &gt;&lt;br&gt;&#xA;&lt;code&gt;사이클 그래프&lt;/code&gt; &amp;amp; &lt;code&gt;비순환 그래프&lt;/code&gt;&lt;br&gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240428022603.png&#34; alt=&#34;Pasted image 20240428022603 (Image resource not found)&#34; &gt;&lt;br&gt;&#xA;&lt;code&gt;완전 그래프&lt;/code&gt;&lt;/dd&gt;&#xA;&lt;dd&gt;그래프의 모든 노드가 연결되어 있는 그래프&lt;br&gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240428022604.png&#34; alt=&#34;Pasted image 20240428022604 (Image resource not found)&#34; &gt;&lt;/dd&gt;&#xA;&lt;/dl&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;그래프의-한-종류인-트리에-대해&#34;&gt;그래프의 한 종류인 트리에 대해🧐&lt;/h2&gt;&#xA;&lt;p&gt;트리(Tree)는 그래프(Graph)의 한 종류로, &lt;strong&gt;계층적인 구조&lt;/strong&gt;를 나타내는 &lt;strong&gt;비순환적인 연결 그래프&lt;/strong&gt;입니다. 트리는 하나의 루트(Root) 노드에서 시작하여 다양한 자식(Child) 노드들로 확장되는 구조를 가지며, 각 노드는 하나의 부모(Parent) 노드와 연결되어 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>메모리 최대 크기</title>
      <link>http://localhost:1313/02.inbox/%EB%A9%94%EB%AA%A8%EB%A6%AC-%EC%B5%9C%EB%8C%80-%ED%81%AC%EA%B8%B0/</link>
      <pubDate>Mon, 22 Sep 2025 13:58:18 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EB%A9%94%EB%AA%A8%EB%A6%AC-%EC%B5%9C%EB%8C%80-%ED%81%AC%EA%B8%B0/</guid>
      <description>&lt;h2 id=&#34;문제-발생-이전&#34;&gt;문제 발생 이전&lt;/h2&gt;&#xA;&lt;p&gt;메모리의 최대 크기는 RAM 에 저장할 수 있는 bit 최대 개수를 의미한다&#xA;word 는 bus 의 크기를 이야기 한다&#xA;하지만 직접 CPU 를 만들다 보니(logisim) (&lt;a href=&#34;http://localhost:1313/02.inbox/%EA%B7%B8%EB%9E%98%EC%84%9C-%EC%BB%B4%ED%93%A8%ED%84%B0%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8F%99%EC%9E%91%ED%95%98%EB%82%98%EC%9A%94/%EA%B7%B8%EB%9E%98%EC%84%9C-%EC%BB%B4%ED%93%A8%ED%84%B0%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8F%99%EC%9E%91%ED%95%98%EB%82%98%EC%9A%94-1/&#34; class=&#34;internal-link&#34;&gt;그래서 컴퓨터는 어떻게 동작하나요 1&lt;/a&gt;) 지금까지 나는 byte 단위로 메모리에 접근한 것이 아닌 word 단위로 접근 했었고 이것이 8비트 cpu 에서는 word 와 byte 가 운 좋게 8bit 로 일치되어 메모리 최대 크기를 계산 할 때 주소폭 크기 (data bit width = word) * 2^(address bit width) 즉 8 * 2^8 즉 2048b ~= 256B 라고 계산 했었다 답은 맞지만 16비트 32 비트로 cpu 를 개선해나가는 과정에서 문제가 발생했다&lt;/p&gt;</description>
    </item>
    <item>
      <title>탐욕법(greedy)</title>
      <link>http://localhost:1313/02.inbox/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8B%A4-with-python/%ED%83%90%EC%9A%95%EB%B2%95greedy/</link>
      <pubDate>Fri, 05 Sep 2025 03:50:44 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8B%A4-with-python/%ED%83%90%EC%9A%95%EB%B2%95greedy/</guid>
      <description>&lt;p&gt;현재 상황에서 지금 당장 가장 좋은 것만 고르는 방법&lt;/p&gt;&#xA;&lt;p&gt;지금 당장 가장 좋은 것을 고르는 방식이 답이 되는 것을 보장하는가?&#xA;=&amp;gt; 정당성&lt;/p&gt;&#xA;&lt;p&gt;그리디의 경우 &lt;span style=&#34;background:rgba(240, 200, 0, 0.2)&#34;&gt;정당성 분석&lt;/span&gt;이 가장 중요&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20231220052551.png&#34; alt=&#34;Pasted image 20231220052551 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;단순히 매 상황에서 가장 큰 값만 고르는 경우(그리디)의 경우 5 -&amp;gt; 10 -&amp;gt; 4 를 고르게 되어 틀리게 된다&lt;/p&gt;&#xA;&lt;p&gt;[!]&#xA;탐욕법으로 얻은 해가 최적의 해가 되는 상황에서 이를 추론 할 수 있어야 풀리는 문제 출제&lt;/p&gt;</description>
    </item>
    <item>
      <title>빌드(컴파일) 과정</title>
      <link>http://localhost:1313/02.inbox/%EB%B9%8C%EB%93%9C%EC%BB%B4%ED%8C%8C%EC%9D%BC-%EA%B3%BC%EC%A0%95/</link>
      <pubDate>Thu, 05 Jun 2025 10:26:11 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EB%B9%8C%EB%93%9C%EC%BB%B4%ED%8C%8C%EC%9D%BC-%EA%B3%BC%EC%A0%95/</guid>
      <description>&lt;h2 id=&#34;과정별-순서&#34;&gt;과정별 순서&lt;/h2&gt;&#xA;&lt;h2 id=&#34;요약&#34;&gt;요약&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240104121023.png&#34; alt=&#34; (Image resource not found)&#34; &gt;%20image%2020240104121023.png)&lt;/p&gt;&#xA;&lt;h2 id=&#34;전처리기&#34;&gt;전처리기&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;gcc -E program.c -o program.i&lt;/code&gt;&#xA;옵션 : &lt;code&gt;-E  Preprocess only; do not compile, assemble or link.&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;헤더 파일 삽입&lt;/strong&gt; : #include 지시문을 만나면 해당하는 헤더 파일을 찾아 &lt;strong&gt;헤더 파일에 있는 모든 내용을 복사해서 소스 코드에 삽입&lt;/strong&gt;한다. 즉, 헤더 파일은 컴파일에 사용되지 않고 소스 코드 파일 내에 전부 복사된다. 헤더 파일에 선언된 함수 원형은 후에 링킹 과정을 통해 실제로 함수가 정의되어 있는 오브젝트 파일(컴파일된 소스 코드 파일)과 결합한다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>RISC-V 명령어 구조</title>
      <link>http://localhost:1313/02.inbox/%EA%B7%B8%EB%9E%98%EC%84%9C-%EC%BB%B4%ED%93%A8%ED%84%B0%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8F%99%EC%9E%91%ED%95%98%EB%82%98%EC%9A%94/risc-v-%EB%AA%85%EB%A0%B9%EC%96%B4-%EA%B5%AC%EC%A1%B0/</link>
      <pubDate>Sat, 31 Aug 2024 09:44:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EA%B7%B8%EB%9E%98%EC%84%9C-%EC%BB%B4%ED%93%A8%ED%84%B0%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8F%99%EC%9E%91%ED%95%98%EB%82%98%EC%9A%94/risc-v-%EB%AA%85%EB%A0%B9%EC%96%B4-%EA%B5%AC%EC%A1%B0/</guid>
      <description>&lt;p&gt;RISC-V emulator RV32I 를 코드로 구현하기 위해 먼저 RISC-V 공식 문서를 확인하여&#xA;구현할 명령의 구조를 공부한다&lt;/p&gt;&#xA;&lt;p&gt;RISC V 의 경우 32비트인지 64 비트인지 128비트인지에 따라 RV32, RV64, RV128 로 나누어지며 기본적인 명령인 integer instruction set 을 구현하면 RV32I, RV64I, RV128I 라고 불리운다 또한 아래의 4가지 확장을 추가하여 자유롭게 가능한 명령을 추가 할 수 있다&#xA;또한 문서는 2가지로 privilige 명령과 non privilige 명령 문서가 있으며 아래는 non privilige 명령만을 설명한다&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;1권, 권한 없는 사양 버전 20240411 &lt;a href=&#34;https://drive.google.com/file/d/1uviu1nH-tScFfgrovvFCrj7Omv8tFtkp/view?usp=drive_link&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;PDF&lt;/a&gt;, &lt;a href=&#34;https://github.com/riscv/riscv-isa-manual/releases/tag/20240411&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;GitHub&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;2권, 권한 사양 버전 20240411 &lt;a href=&#34;https://drive.google.com/file/d/17GeetSnT5wW3xNuAHI95-SI1gPGd5sJ_/view?usp=drive_link&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;PDF&lt;/a&gt;, &lt;a href=&#34;https://github.com/riscv/riscv-isa-manual/releases/tag/20240411&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;GitHub&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;non privilige 의 확장 명령 종류&lt;/p&gt;</description>
    </item>
    <item>
      <title>그래서 컴퓨터는 어떻게 동작하나요 2</title>
      <link>http://localhost:1313/02.inbox/%EA%B7%B8%EB%9E%98%EC%84%9C-%EC%BB%B4%ED%93%A8%ED%84%B0%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8F%99%EC%9E%91%ED%95%98%EB%82%98%EC%9A%94/%EA%B7%B8%EB%9E%98%EC%84%9C-%EC%BB%B4%ED%93%A8%ED%84%B0%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8F%99%EC%9E%91%ED%95%98%EB%82%98%EC%9A%94-2/</link>
      <pubDate>Sat, 10 Aug 2024 16:37:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EA%B7%B8%EB%9E%98%EC%84%9C-%EC%BB%B4%ED%93%A8%ED%84%B0%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8F%99%EC%9E%91%ED%95%98%EB%82%98%EC%9A%94/%EA%B7%B8%EB%9E%98%EC%84%9C-%EC%BB%B4%ED%93%A8%ED%84%B0%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8F%99%EC%9E%91%ED%95%98%EB%82%98%EC%9A%94-2/</guid>
      <description>&lt;p&gt;여기서 부터는 32 비트로 설계하게 된다&#xA;즉 word 가 32 비트 이다&lt;/p&gt;&#xA;&lt;h2 id=&#34;변경점&#34;&gt;변경점&lt;/h2&gt;&#xA;&lt;h3 id=&#34;ram&#34;&gt;RAM&lt;/h3&gt;&#xA;&lt;p&gt;RAM 의 경우 data bit size 는 32가 가능하지만 address bit width 의 경우 32 비트가 가능하지 않다(logisim 의 한계 4기가의 메모리는 감당하지 못한다) 그러므로 address bit width 의 경우 24 비트로 한다&lt;/p&gt;&#xA;&lt;p&gt;현대 컴퓨터에 사용하는 RAM 과 ㄱ&lt;/p&gt;&#xA;&lt;h3 id=&#34;register&#34;&gt;Register&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;IAR INSTRUCTION ADDRESS REGISTER 을 PC PROGRAM COUTER 로 표기한다&lt;/li&gt;&#xA;&lt;li&gt;레지스터의 경우 7비트에서는 2개가 존재했다&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;instruction-set&#34;&gt;Instruction set&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;8비트&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>실수 표현방법 고정소수점과 부동소수점</title>
      <link>http://localhost:1313/02.inbox/%EC%8B%A4%EC%88%98-%ED%91%9C%ED%98%84%EB%B0%A9%EB%B2%95-%EA%B3%A0%EC%A0%95%EC%86%8C%EC%88%98%EC%A0%90%EA%B3%BC-%EB%B6%80%EB%8F%99%EC%86%8C%EC%88%98%EC%A0%90/</link>
      <pubDate>Sun, 07 Jul 2024 21:55:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EC%8B%A4%EC%88%98-%ED%91%9C%ED%98%84%EB%B0%A9%EB%B2%95-%EA%B3%A0%EC%A0%95%EC%86%8C%EC%88%98%EC%A0%90%EA%B3%BC-%EB%B6%80%EB%8F%99%EC%86%8C%EC%88%98%EC%A0%90/</guid>
      <description>&lt;h3 id=&#34;소수의-10진수-2진수-계산-방법&#34;&gt;소수의 10진수 2진수 계산 방법&lt;/h3&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250408173559.png&#34; alt=&#34;Pasted image 20250408173559 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;예시 1: 10진수 1.625 → 2진수 1.101&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;정수 부분(1):&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;1 ÷ 2 = 0 &amp;hellip; &lt;strong&gt;나머지 1&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;따라서 정수 부분은 &lt;strong&gt;1&lt;/strong&gt;입니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;소수 부분(0.625):&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;0.625 × 2 = 1.25 → &lt;strong&gt;정수 부분 1&lt;/strong&gt;, 소수 부분 0.25&lt;/li&gt;&#xA;&lt;li&gt;0.25 × 2 = 0.5 → &lt;strong&gt;정수 부분 0&lt;/strong&gt;, 소수 부분 0.5&lt;/li&gt;&#xA;&lt;li&gt;0.5 × 2 = 1.0 → &lt;strong&gt;정수 부분 1&lt;/strong&gt;, 소수 부분 0 (계산 종료)&lt;/li&gt;&#xA;&lt;li&gt;따라서 소수 부분은 &lt;strong&gt;101&lt;/strong&gt;입니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;결과:&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>java 메모리(memory)</title>
      <link>http://localhost:1313/02.inbox/java-%EB%A9%94%EB%AA%A8%EB%A6%ACmemory/</link>
      <pubDate>Mon, 29 Jan 2024 05:38:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/java-%EB%A9%94%EB%AA%A8%EB%A6%ACmemory/</guid>
      <description>&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240127113149-1.jpeg&#34; alt=&#34;Pasted image 20240127113149-1 (Image resource not found)&#34; &gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>DFS 알고리즘</title>
      <link>http://localhost:1313/02.inbox/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8B%A4-with-python/dfs-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/</link>
      <pubDate>Tue, 26 Dec 2023 07:59:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8B%A4-with-python/dfs-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/</guid>
      <description>&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20231228191101.gif&#34; alt=&#34;1_GT9oSo0agIeIj6nTg3jFEA (Image resource not found)&#34; &gt;1.gif)&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;stack vs recursion 풀이 2개로 나뉘며&#xA;stack 의 경우 dfs 시 탐색해야할 나머지 노드를 stack 에 저장해두고 빼서 탐색하는 방식의 알고리즘&#xA;recursion 의 경우&#xA;하위 트리가 없을 때 또는 자신이 null 일때 탈출조건을 준다면 recursion 풀이가 가능하다&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;binary-tree-dfs&#34;&gt;binary tree DFS&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;stack 기반 풀이&#xA;1.&lt;/li&gt;&#xA;&lt;li&gt;recursion 기반 풀이&#xA;1.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;grath-dfs&#34;&gt;grath DFS&lt;/h2&gt;&#xA;&lt;p&gt;기본적으로 작은 숫자부터 탐색하는 것을 기본으로 한다&lt;/p&gt;&#xA;&lt;p&gt;recursion 풀이&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;namespace&lt;/span&gt; std;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;bool&lt;/span&gt; visited[&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vector&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; graph[&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// DFS 함수 정의&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dfs&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; x) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 현재 노드 방문 처리&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    visited[x] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; true;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 현재 노드와 연결된 다른 노드를 재귀적으로 방문&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; graph[x].size(); i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; graph[x][i];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;visited[y]) dfs(y);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 각 노드의 인접 노드 정보를 초기화 리스트로 간단하게 할당&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    graph[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    graph[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    graph[&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    graph[&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    graph[&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    graph[&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    graph[&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    graph[&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    dfs(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;stack 풀이&lt;/p&gt;</description>
    </item>
    <item>
      <title>스택과 큐 자료구조</title>
      <link>http://localhost:1313/02.inbox/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8B%A4-with-python/%EC%8A%A4%ED%83%9D%EA%B3%BC-%ED%81%90-%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/</link>
      <pubDate>Mon, 25 Dec 2023 12:15:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8B%A4-with-python/%EC%8A%A4%ED%83%9D%EA%B3%BC-%ED%81%90-%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;[!NOTE] 스택&#xA;선입 후출&#xA;박스 쌓기&#xA;pop 함수 &amp;ldquo;후출&amp;rdquo; 구현&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;[!NOTE] 큐&#xA;선입 선출&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;python-의-스택&#34;&gt;python 의 스택&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20231225165748.png&#34; alt=&#34;스택과 큐 자료구조-20231225165748 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;c-의-스택&#34;&gt;c++ 의 스택&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20231225165800.png&#34; alt=&#34;스택과 큐 자료구조-20231225165800 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;java의-스택&#34;&gt;java의 스택&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20231225165815.png&#34; alt=&#34;스택과 큐 자료구조-20231225165815 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;python-의-큐&#34;&gt;python 의 큐&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20231225165829.png&#34; alt=&#34;스택과 큐 자료구조-20231225165829 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;c-의-큐&#34;&gt;c++ 의 큐&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20231225165844.png&#34; alt=&#34;스택과 큐 자료구조-20231225165844 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;java의-큐&#34;&gt;java의 큐&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20231225165618.png&#34; alt=&#34;스택과 큐 자료구조-20231225165618 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;스택 라이브러리 대신에 재귀함수를 이용하는 경우&lt;/p&gt;</description>
    </item>
    <item>
      <title>구현(Implementation)</title>
      <link>http://localhost:1313/02.inbox/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8B%A4-with-python/%EA%B5%AC%ED%98%84implementation/</link>
      <pubDate>Sat, 23 Dec 2023 12:43:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8B%A4-with-python/%EA%B5%AC%ED%98%84implementation/</guid>
      <description>&lt;p&gt;&lt;strong&gt;머릿속에 있는 알고리즘을 소스코드로 바꾸는 과정&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;알고리즘은 간단한데 코드가 지나칠 만큼 길어지는 문제&lt;/li&gt;&#xA;&lt;li&gt;실수 연산을 다루고 특정 소수점 자리까지 출력해야 하는 문제&lt;/li&gt;&#xA;&lt;li&gt;문자열을 특정한 기준에 따라서 끊어 처리해야 하는 문제&lt;/li&gt;&#xA;&lt;li&gt;적절한 라이브러리를 찾아서 사용해야 하는 문제 ( 모든 순열 모든 조합을 찾는 문제 python itertools 모듈을 사용해야 쉬워진다 )&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;시뮬레이션 유형 구현 유형 완전탐색 &#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240428050418.png&#34; alt=&#34; (Image resource not found)&#34; &gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240428050422.png&#34; alt=&#34;Pasted image 20240428050422 (Image resource not found)&#34; &gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240428050425.png&#34; alt=&#34;Pasted image 20240428050425 (Image resource not found)&#34; &gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ascii code</title>
      <link>http://localhost:1313/02.inbox/ascii-code/</link>
      <pubDate>Wed, 20 Dec 2023 07:12:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/ascii-code/</guid>
      <description>&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20231213153502.png&#34; alt=&#34;Untitled (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20231223153501.png&#34; alt=&#34;Untitled 1 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;제어 문자&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;0 (Null) - 십진수 0에 해당하는 제어 문자입니다. 주로 문자열의 종료를 나타내는 데 사용됩니다.&lt;/li&gt;&#xA;&lt;li&gt;1 (Start of Heading) - 통신 제어에서 사용되는 제어 문자로, 통신 헤더의 시작을 나타냅니다.&lt;/li&gt;&#xA;&lt;li&gt;2 (Start of Text) - 통신 제어에서 사용되는 제어 문자로, 텍스트 데이터의 시작을 나타냅니다.&lt;/li&gt;&#xA;&lt;li&gt;3 (End of Text) - 통신 제어에서 사용되는 제어 문자로, 텍스트 데이터의 종료를 나타냅니다.&lt;/li&gt;&#xA;&lt;li&gt;4 (End of Transmission) - 통신 제어에서 사용되는 제어 문자로, 전송의 종료를 나타냅니다.&lt;/li&gt;&#xA;&lt;li&gt;5 (Enquiry) - 통신 제어에서 사용되는 제어 문자로, 상대방에게 정보 요청을 나타냅니다.&lt;/li&gt;&#xA;&lt;li&gt;6 (Acknowledge) - 통신 제어에서 사용되는 제어 문자로, 정보 수신을 확인하는 신호를 나타냅니다.&lt;/li&gt;&#xA;&lt;li&gt;7 (Bell) - 터미널이나 출력 장치에서 경고음을 발생시키는 제어 문자입니다.&lt;/li&gt;&#xA;&lt;li&gt;8 (Backspace) - 커서를 한 칸 뒤로 이동시키는 제어 문자입니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;공백문자&lt;/p&gt;</description>
    </item>
    <item>
      <title>알고리즘 성능 평가</title>
      <link>http://localhost:1313/02.inbox/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8B%A4-with-python/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EC%84%B1%EB%8A%A5-%ED%8F%89%EA%B0%80/</link>
      <pubDate>Wed, 20 Dec 2023 07:12:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8B%A4-with-python/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EC%84%B1%EB%8A%A5-%ED%8F%89%EA%B0%80/</guid>
      <description>&lt;p&gt;시간 복잡도&#xA;공간 복잡도&lt;/p&gt;&#xA;&lt;h2 id=&#34;수행시간-요구-사항&#34;&gt;수행시간 요구 사항&lt;/h2&gt;&#xA;&lt;p&gt;N &amp;lt; 500 시간 복잡도 O(N^3)&#xA;N &amp;lt; 2000 시간 복잡도 O(N^2)&#xA;N &amp;lt; 100,000 시간 복잡도 O(NlogN)&#xA;N &amp;lt; 10,000,000 시간 복잡도 O(N)&#xA;예측 다음과 같은 이론을 따르는 것이 좋다&lt;/p&gt;</description>
    </item>
    <item>
      <title>파이썬 문법</title>
      <link>http://localhost:1313/02.inbox/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8B%A4-with-python/%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EB%AC%B8%EB%B2%95/</link>
      <pubDate>Wed, 20 Dec 2023 07:12:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8B%A4-with-python/%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EB%AC%B8%EB%B2%95/</guid>
      <description>&lt;p&gt;파이썬 자료형&lt;/p&gt;&#xA;&lt;p&gt;정수형 실수형 복소수형 문자열 리스트 튜플 사전 등등&lt;br&gt;&#xA;python 타입 확인&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;\__class\__&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;type(a)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;isinstance(a) &lt;span style=&#34;color:#75715e&#34;&gt;# 상속관계도 알려줌&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;리스트-&#34;&gt;리스트 []&lt;/h2&gt;&#xA;&lt;p&gt;append(value)&#xA;sort()&#xA;reverse()&#xA;insert(index,value)&#xA;count(value)&#xA;remove(value)&lt;/p&gt;&#xA;&lt;h2 id=&#34;튜플-&#34;&gt;튜플 ()&lt;/h2&gt;&#xA;&lt;p&gt;변경 불가&#xA;문자열&lt;/p&gt;&#xA;&lt;h2 id=&#34;dictionary&#34;&gt;dictionary&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;key &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a[key] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; value&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;집합&#34;&gt;집합&lt;/h2&gt;&#xA;&lt;h2 id=&#34;입출력&#34;&gt;입출력&lt;/h2&gt;&#xA;&lt;p&gt;map() 리스트의 모든 원소에 각각 특정한 함수를 적용할 때 사용합니다&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;list(map(int, input()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;split()))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;map( 함수 &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; 리스트 )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;바르게 입력받기&#xA;sys.stdin.readline() 줄바꿈 기호 입력되므로 rstrip() 메서드도 사용한다&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stin&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;readline()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;rstrip()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;f-string-36-부터&#34;&gt;f-string 3.6 부터&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;정답은 &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;answer&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;입니다&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;조건부-표현식&#34;&gt;조건부 표현식&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Success&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; score &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Fail&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;람다-표현식&#34;&gt;람다 표현식&lt;/h2&gt;&#xA;&lt;p&gt;함수를 한줄에 작성 가능&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
