<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>System-Call on My Test Site</title>
    <link>http://localhost:1313/tags/system-call/</link>
    <description>Recent content in System-Call on My Test Site</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <lastBuildDate>Fri, 27 Jun 2025 19:57:04 +0900</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/system-call/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>04-FILE 조작</title>
      <link>http://localhost:1313/06.university/system-programminguniversity/04-file-%EC%A1%B0%EC%9E%91/</link>
      <pubDate>Fri, 27 Jun 2025 19:57:04 +0900</pubDate>
      <guid>http://localhost:1313/06.university/system-programminguniversity/04-file-%EC%A1%B0%EC%9E%91/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;1.link() / unlink() / remove() / rename()&lt;/li&gt;&#xA;&lt;li&gt;umask()&lt;/li&gt;&#xA;&lt;li&gt;chmod() / fchmod()&lt;/li&gt;&#xA;&lt;li&gt;truncate() / ftruncate()&lt;/li&gt;&#xA;&lt;li&gt;utime()&lt;/li&gt;&#xA;&lt;li&gt;Directory&lt;/li&gt;&#xA;&lt;li&gt;mkdir() / opendir() / readdir() / closedir() / rewinddir() / rmdir()&lt;/li&gt;&#xA;&lt;li&gt;chdir() / getcwd()&lt;/li&gt;&#xA;&lt;li&gt;Symbolic link&lt;/li&gt;&#xA;&lt;li&gt;sync() / fsync()&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;파일-시스템&#34;&gt;파일 시스템&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20241005225333.png&#34; alt=&#34; (Image resource not found)&#34; &gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20241005230119.png&#34; alt=&#34;Pasted image 20241005230119 (Image resource not found)&#34; &gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20241005230383.png&#34; alt=&#34;Pasted image 20241005230383 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Boot block&#xA;&lt;ul&gt;&#xA;&lt;li&gt;First block of the file system&lt;/li&gt;&#xA;&lt;li&gt;Program to run system is located&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Super block&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Boot 다음 영역&lt;/li&gt;&#xA;&lt;li&gt;file system 관리 정보&#xA;&lt;ul&gt;&#xA;&lt;li&gt;size of file system&lt;/li&gt;&#xA;&lt;li&gt;info for free block&lt;/li&gt;&#xA;&lt;li&gt;info for i-node&#xA;&lt;ul&gt;&#xA;&lt;li&gt;file type&lt;/li&gt;&#xA;&lt;li&gt;access permission bits&lt;/li&gt;&#xA;&lt;li&gt;file size&lt;/li&gt;&#xA;&lt;li&gt;Time stamp&lt;/li&gt;&#xA;&lt;li&gt;Number of links&lt;/li&gt;&#xA;&lt;li&gt;pointers to data blocks for the file&lt;/li&gt;&#xA;&lt;li&gt;stat 구조체의 field들은 i-node에서 읽어온다&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;block to modify that super block is modified&lt;/li&gt;&#xA;&lt;li&gt;etc&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;resides(상주하다) in kernel memory space in DRAM&lt;/li&gt;&#xA;&lt;li&gt;Needed to be consistent with the super block in disk&lt;/li&gt;&#xA;&lt;li&gt;Use &amp;ldquo;sync&amp;rdquo; system call (also a user cmd)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;i-node block list&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Super block 다음의 영역&lt;/li&gt;&#xA;&lt;li&gt;Consists of many i-nodes&#xA;&lt;ul&gt;&#xA;&lt;li&gt;1 i-node / 1 file&lt;/li&gt;&#xA;&lt;li&gt;Identified by the i-node no.&lt;/li&gt;&#xA;&lt;li&gt;File 관리에 필요한 정보 저장&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Data block&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Last area in the file system&lt;/li&gt;&#xA;&lt;li&gt;Contains the data for general files and directory files.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;general files&lt;/li&gt;&#xA;&lt;li&gt;directory files&#xA;&lt;ul&gt;&#xA;&lt;li&gt;file name&lt;/li&gt;&#xA;&lt;li&gt;i-node numbers for files&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;hard-link&#34;&gt;hard link&lt;/h3&gt;&#xA;&lt;p&gt;Link from directory block to i-node&#xA;Use i-node number to make the link (Linux command ‘ln’)&#xA;Hard link는 같은 file system 내부에서만 연결 가능&lt;/p&gt;</description>
    </item>
    <item>
      <title>03-FILE IO</title>
      <link>http://localhost:1313/06.university/system-programminguniversity/03-file-io/</link>
      <pubDate>Tue, 03 Jun 2025 09:59:32 +0900</pubDate>
      <guid>http://localhost:1313/06.university/system-programminguniversity/03-file-io/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;open()&lt;/li&gt;&#xA;&lt;li&gt;creat()&lt;/li&gt;&#xA;&lt;li&gt;close()&lt;/li&gt;&#xA;&lt;li&gt;read()&lt;/li&gt;&#xA;&lt;li&gt;write()&lt;/li&gt;&#xA;&lt;li&gt;lseek()&lt;/li&gt;&#xA;&lt;li&gt;Disk&lt;/li&gt;&#xA;&lt;li&gt;I/O efficiency&lt;/li&gt;&#xA;&lt;li&gt;dup(), dup2()&lt;/li&gt;&#xA;&lt;li&gt;stat(), fstat(), lstat()&lt;/li&gt;&#xA;&lt;li&gt;access()&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;파일 디스크립터&#xA;프로세스가 실행될때 기본적으로 여는 파일은 3개 각각 0(STDIN), 1(STDOUT) ,2(STDERR)&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;man -s 2 open : 과 같이 메뉴얼 파일을 볼 수 있다&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;open&#34;&gt;open&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;open&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;pathname, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; flags);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;open&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;pathname, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; flags, &lt;span style=&#34;color:#66d9ef&#34;&gt;mode_t&lt;/span&gt; mode);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;int open (const char *pathname, int flags);&#xA;int open (const char *pathname, int flags, mode_t mode);&#xA;파일 디스크립터 값을 반환 -1 은 실패&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
