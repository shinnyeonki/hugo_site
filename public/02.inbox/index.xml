<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>02.inboxes on My Test Site</title>
    <link>http://localhost:1313/02.inbox/</link>
    <description>Recent content in 02.inboxes on My Test Site</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <lastBuildDate>Sun, 19 Oct 2025 22:15:15 +0900</lastBuildDate>
    <atom:link href="http://localhost:1313/02.inbox/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Doxyzen 키워드</title>
      <link>http://localhost:1313/02.inbox/doxyzen-%ED%82%A4%EC%9B%8C%EB%93%9C/</link>
      <pubDate>Sun, 19 Oct 2025 22:15:15 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/doxyzen-%ED%82%A4%EC%9B%8C%EB%93%9C/</guid>
      <description>&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;키워드&lt;/th&gt;&#xA;          &lt;th&gt;용도&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;@brief&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;짧은 설명&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;@param&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;매개변수 설명&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;@return&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;반환값 설명&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;@pre&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;함수를 호출하기 전에 만족되어야 할 조건 (호출자 책임)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;@post&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;함수 실행 후 보장되는 상태 (구현자 책임)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;@throws&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;예외 명시&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;@note&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;부가 정보&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;@warning&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;경고&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;@see&lt;/code&gt;/&lt;code&gt;@ref&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;관련 항목 참조&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;@deprecated&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;사용 중단 알림&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;@todo&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;향후 작업&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;@invariant&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;불변 조건 (클래스용)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;@author&lt;/code&gt;,&lt;code&gt;@date&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;메타 정보&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;brief&#34;&gt;&lt;code&gt;@brief&lt;/code&gt;&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;용도&lt;/strong&gt;: 함수, 클래스, 변수 등의 간결한 요약 설명을 제공합니다. 자동 생성 문서에서 제목처럼 사용되며, 첫 문장으로 쓰는 것이 일반적입니다. 길이 제한은 없지만 한 문장이 이상적입니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>백엔드 구조 변화 역사</title>
      <link>http://localhost:1313/02.inbox/%EB%B0%B1%EC%97%94%EB%93%9C-%EA%B5%AC%EC%A1%B0-%EB%B3%80%ED%99%94-%EC%97%AD%EC%82%AC/</link>
      <pubDate>Sun, 19 Oct 2025 18:28:32 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EB%B0%B1%EC%97%94%EB%93%9C-%EA%B5%AC%EC%A1%B0-%EB%B3%80%ED%99%94-%EC%97%AD%EC%82%AC/</guid>
      <description>&lt;h2 id=&#34;모델-1에서-모델-2로의-진화-웹-개발-아키텍처-심층-분석&#34;&gt;모델 1에서 모델 2로의 진화: 웹 개발 아키텍처 심층 분석&lt;/h2&gt;&#xA;&lt;p&gt;현대 백엔드 개발의 핵심 철학&lt;/p&gt;&#xA;&lt;h3 id=&#34;서론-왜-아키텍처는-중요한가&#34;&gt;서론: 왜 아키텍처는 중요한가?&lt;/h3&gt;&#xA;&lt;p&gt;소프트웨어 개발은 단순히 &amp;lsquo;동작하는 코드&amp;rsquo;를 만드는 행위에서 그치지 않습니다. 시간이 지나면서 요구사항은 끊임없이 변화하고, 새로운 기술이 등장하며, 비즈니스는 확장됩니다. 이러한 변화의 파도 속에서 흔들리지 않는 견고하고 유연한 시스템을 구축하는 것, 이것이 바로 &amp;lsquo;아키텍처&amp;rsquo;의 역할입니다. 제공된 텍스트는 웹 애플리케이션 개발 아키텍처의 중요한 변곡점인 &lt;strong&gt;모델 1&lt;/strong&gt;과 &lt;strong&gt;모델 2&lt;/strong&gt;의 차이를 통해, 좋은 아키텍처가 무엇이며 어떻게 발전해 왔는지를 심도 있게 이야기하고 있습니다. 이는 단순히 기술의 변화가 아닌, &amp;lsquo;문제 해결 방식&amp;rsquo;에 대한 패러다임의 전환을 의미합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>그래서 컴퓨터는 어떻게 동작하나요 1</title>
      <link>http://localhost:1313/02.inbox/%EA%B7%B8%EB%9E%98%EC%84%9C-%EC%BB%B4%ED%93%A8%ED%84%B0%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8F%99%EC%9E%91%ED%95%98%EB%82%98%EC%9A%94/%EA%B7%B8%EB%9E%98%EC%84%9C-%EC%BB%B4%ED%93%A8%ED%84%B0%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8F%99%EC%9E%91%ED%95%98%EB%82%98%EC%9A%94-1/</link>
      <pubDate>Sun, 12 Oct 2025 15:43:22 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EA%B7%B8%EB%9E%98%EC%84%9C-%EC%BB%B4%ED%93%A8%ED%84%B0%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8F%99%EC%9E%91%ED%95%98%EB%82%98%EC%9A%94/%EA%B7%B8%EB%9E%98%EC%84%9C-%EC%BB%B4%ED%93%A8%ED%84%B0%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8F%99%EC%9E%91%ED%95%98%EB%82%98%EC%9A%94-1/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;WORD : CPU 에 의해 한번에 처리될 수 있는 비트 수&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;sr-latch&#34;&gt;SR latch&lt;/h2&gt;&#xA;&lt;p&gt;NOR 게이트를 사용한 SR 래치는 기본적인 SR 래치로, 아래와 같이 작동합니다.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;두 개의 NOR 게이트를 교차 연결합니다.&lt;/li&gt;&#xA;&lt;li&gt;입력은 S(Set)와 R(Reset)입니다&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;S&lt;/th&gt;&#xA;          &lt;th&gt;R&lt;/th&gt;&#xA;          &lt;th&gt;Q (다음 상태)&lt;/th&gt;&#xA;          &lt;th&gt;¬Q (다음 상태)&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0&lt;/td&gt;&#xA;          &lt;td&gt;0&lt;/td&gt;&#xA;          &lt;td&gt;Q (이전 상태)&lt;/td&gt;&#xA;          &lt;td&gt;¬Q (이전 상태)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0&lt;/td&gt;&#xA;          &lt;td&gt;1&lt;/td&gt;&#xA;          &lt;td&gt;0&lt;/td&gt;&#xA;          &lt;td&gt;1&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;1&lt;/td&gt;&#xA;          &lt;td&gt;0&lt;/td&gt;&#xA;          &lt;td&gt;1&lt;/td&gt;&#xA;          &lt;td&gt;0&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;1&lt;/td&gt;&#xA;          &lt;td&gt;1&lt;/td&gt;&#xA;          &lt;td&gt;불안정&lt;/td&gt;&#xA;          &lt;td&gt;불안정&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;NAND 게이트를 사용한 SR 래치는 약간 다르게 동작합니다. 이 경우에는 입력을 보통 S&amp;rsquo;와 R&amp;rsquo;으로 표기합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>디버거 cli 명령어 모음</title>
      <link>http://localhost:1313/02.inbox/%EB%94%94%EB%B2%84%EA%B1%B0-cli-%EB%AA%85%EB%A0%B9%EC%96%B4-%EB%AA%A8%EC%9D%8C/</link>
      <pubDate>Sat, 11 Oct 2025 13:27:52 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EB%94%94%EB%B2%84%EA%B1%B0-cli-%EB%AA%85%EB%A0%B9%EC%96%B4-%EB%AA%A8%EC%9D%8C/</guid>
      <description>&lt;h2 id=&#34;gdb&#34;&gt;GDB&lt;/h2&gt;&#xA;&lt;h3 id=&#34;-기본-실행-및-종료&#34;&gt;🔹 &lt;strong&gt;기본 실행 및 종료&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;명령어&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;gdb &amp;lt;executable&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;실행 파일로 GDB 시작&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;run&lt;/code&gt; 또는 &lt;code&gt;r&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;프로그램 실행 (인자: &lt;code&gt;run arg1 arg2&lt;/code&gt;)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;quit&lt;/code&gt; 또는 &lt;code&gt;q&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;GDB 종료&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-중단점-breakpoint&#34;&gt;🔹 &lt;strong&gt;중단점 (Breakpoint)&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;명령어&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;break main.cpp:10&lt;/code&gt; 또는 &lt;code&gt;b main.cpp:10&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;파일의 특정 라인에 중단점 설정&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;break main&lt;/code&gt; 또는 &lt;code&gt;b main&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;함수 이름에 중단점 설정&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;info breakpoints&lt;/code&gt; 또는 &lt;code&gt;i b&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;현재 중단점 목록 보기&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;delete 1&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;ID가 1인 중단점 삭제&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;disable 1&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;중단점 비활성화&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;enable 1&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;중단점 활성화&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;clear main.cpp:10&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;특정 위치의 중단점 제거&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-스텝-실행-stepping&#34;&gt;🔹 &lt;strong&gt;스텝 실행 (Stepping)&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;명령어&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;step&lt;/code&gt; 또는 &lt;code&gt;s&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;한 줄 실행 (함수 내부로 들어감)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;next&lt;/code&gt; 또는 &lt;code&gt;n&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;한 줄 실행 (함수 내부로 안 들어감)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;finish&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;현재 함수 끝까지 실행 후 반환&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;continue&lt;/code&gt; 또는 &lt;code&gt;c&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;다음 중단점까지 실행&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-변수-및-메모리-보기&#34;&gt;🔹 &lt;strong&gt;변수 및 메모리 보기&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;명령어&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;print &amp;lt;var&amp;gt;&lt;/code&gt; 또는 &lt;code&gt;p &amp;lt;var&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;변수 값 출력 (식 평가 가능)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;display &amp;lt;var&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;매 스텝마다 자동으로 변수 출력&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;undisplay 1&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;display 목록에서 제거&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;x/16xb 0x12345678&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;메모리 덤프 (&lt;code&gt;x/[count][format][size] address&lt;/code&gt;)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;set variable x = 10&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;변수 값 변경&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-스택-및-프레임&#34;&gt;🔹 &lt;strong&gt;스택 및 프레임&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;명령어&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;backtrace&lt;/code&gt; 또는 &lt;code&gt;bt&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;콜 스택 출력&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;frame 2&lt;/code&gt; 또는 &lt;code&gt;f 2&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;특정 프레임으로 이동&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;up&lt;/code&gt; / &lt;code&gt;down&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;스택 프레임 위/아래로 이동&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-프로세스-및-스레드&#34;&gt;🔹 &lt;strong&gt;프로세스 및 스레드&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;명령어&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;info threads&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;현재 스레드 목록&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;thread 2&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;특정 스레드로 전환&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;kill&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;디버그 중인 프로세스 강제 종료&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-도움말-및-설정&#34;&gt;🔹 &lt;strong&gt;도움말 및 설정&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;명령어&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;help&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;전체 도움말&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;help &amp;lt;command&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;특정 명령어에 대한 도움말&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;set args arg1 arg2&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;실행 인자 설정&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;run &amp;lt; input.txt&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;표준 입력 리다이렉션 (쉘 수준에서 처리)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;set environment VAR=value&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;환경 변수 설정&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-lldb--gdb-명령어-비교-참고&#34;&gt;🔹 &lt;strong&gt;LLDB ↔ GDB 명령어 비교 (참고)&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;LLDB&lt;/th&gt;&#xA;          &lt;th&gt;GDB&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;b main&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;b main&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;br list&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;info breakpoints&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;v&lt;/code&gt; 또는 &lt;code&gt;frame variable&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;info locals&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;expr x = 5&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;set variable x = 5&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;process launch&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;run&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;memory read&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;x/...&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;settings set target.run-args ...&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;set args ...&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-팁&#34;&gt;💡 팁&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;GDB는 &lt;code&gt;.gdbinit&lt;/code&gt; 파일을 통해 시작 시 자동으로 명령어를 실행할 수 있습니다.&lt;/li&gt;&#xA;&lt;li&gt;최신 GDB(8.0+)는 Python 스크립팅을 지원하여 고급 디버깅이 가능합니다.&lt;/li&gt;&#xA;&lt;li&gt;ARM64 환경에서도 잘 작동하지만, 크로스 디버깅 시 &lt;code&gt;gdb-multiarch&lt;/code&gt;나 대상 아키텍처 전용 GDB를 사용해야 할 수 있습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;lldb&#34;&gt;LLDB&lt;/h2&gt;&#xA;&lt;h3 id=&#34;-기본-실행-및-종료-1&#34;&gt;🔹 &lt;strong&gt;기본 실행 및 종료&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;명령어&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;lldb &amp;lt;executable&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;실행 파일로 LLDB 시작&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;run&lt;/code&gt; 또는 &lt;code&gt;r&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;프로그램 실행&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;process launch&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;프로그램 실행 (옵션 사용 가능)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;quit&lt;/code&gt; 또는 &lt;code&gt;q&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;LLDB 종료&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-중단점-breakpoint-1&#34;&gt;🔹 &lt;strong&gt;중단점 (Breakpoint)&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;명령어&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;breakpoint set --file main.cpp --line 10&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;파일의 특정 라인에 중단점 설정&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;b main.cpp:10&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;위와 동일 (간단한 형태)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;breakpoint set --name main&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;함수 이름에 중단점 설정&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;b main&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;위와 동일&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;breakpoint list&lt;/code&gt; 또는 &lt;code&gt;br list&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;현재 중단점 목록 보기&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;breakpoint delete 1&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;ID가 1인 중단점 삭제&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;breakpoint disable 1&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;중단점 비활성화&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;breakpoint enable 1&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;중단점 활성화&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-스텝-실행-stepping-1&#34;&gt;🔹 &lt;strong&gt;스텝 실행 (Stepping)&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;명령어&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;step&lt;/code&gt; 또는 &lt;code&gt;s&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;한 줄 실행 (함수 내부로 들어감)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;next&lt;/code&gt; 또는 &lt;code&gt;n&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;한 줄 실행 (함수 내부로 안 들어감)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;finish&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;현재 함수 끝까지 실행 후 반환&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;continue&lt;/code&gt; 또는 &lt;code&gt;c&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;다음 중단점까지 실행&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-변수-및-메모리-보기-1&#34;&gt;🔹 &lt;strong&gt;변수 및 메모리 보기&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;명령어&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;frame variable&lt;/code&gt; 또는 &lt;code&gt;v&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;현재 프레임의 지역 변수 출력&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;print &amp;lt;var&amp;gt;&lt;/code&gt; 또는 &lt;code&gt;p &amp;lt;var&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;변수 값 출력 (식 평가 가능)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;expr &amp;lt;expression&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;표현식 평가 및 실행 (변수 수정도 가능)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;memory read --size 1 --count 16 0x12345678&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;메모리 덤프&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-스택-및-프레임-1&#34;&gt;🔹 &lt;strong&gt;스택 및 프레임&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;명령어&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;bt&lt;/code&gt; 또는 &lt;code&gt;thread backtrace&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;콜 스택 출력&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;frame select 2&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;특정 프레임으로 이동&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;up&lt;/code&gt; / &lt;code&gt;down&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;스택 프레임 위/아래로 이동&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-프로세스-및-스레드-1&#34;&gt;🔹 &lt;strong&gt;프로세스 및 스레드&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;명령어&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;thread list&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;현재 스레드 목록&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;process status&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;현재 프로세스 상태 확인&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;process kill&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;디버그 중인 프로세스 강제 종료&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-도움말-및-설정-1&#34;&gt;🔹 &lt;strong&gt;도움말 및 설정&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;명령어&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;help&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;전체 도움말&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;help &amp;lt;command&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;특정 명령어에 대한 도움말&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;settings set target.run-args arg1 arg2&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;실행 인자 설정&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;settings set target.input-path input.txt&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;표준 입력 리다이렉션&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-gdb--lldb-명령어-비교-참고&#34;&gt;🔹 &lt;strong&gt;GDB ↔ LLDB 명령어 비교 (참고)&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;GDB&lt;/th&gt;&#xA;          &lt;th&gt;LLDB&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;run&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;run&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;break main&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;b main&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;step&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;step&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;next&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;next&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;print x&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;p x&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;info breakpoints&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;br list&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;bt&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;bt&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;</description>
    </item>
    <item>
      <title>c,c&#43;&#43; vs code</title>
      <link>http://localhost:1313/02.inbox/cc&#43;&#43;-vs-code/</link>
      <pubDate>Sat, 11 Oct 2025 07:35:42 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/cc&#43;&#43;-vs-code/</guid>
      <description>&lt;p&gt;컴파일 시에 다음과 같은 3가지 환경 설정이 필요하다(project 내부에서만 작동)&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;==c_cpp_properties.json== (compiler path and IntelliSense settings)&lt;/li&gt;&#xA;&lt;li&gt;==tasks.json== ==(build instructions)&lt;/li&gt;&#xA;&lt;li&gt;==launch.json== ==(debugger settings)==&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;mac-기준&#34;&gt;mac 기준&lt;/h2&gt;&#xA;&lt;p&gt;task.json&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;tasks&amp;#34;&lt;/span&gt;: [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;//c++ 컴파일러&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;shell&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;clang++ 빌드 및 터미널 실행&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;command&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/usr/bin/clang++&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;args&amp;#34;&lt;/span&gt;: [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-std=c++17&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-fcolor-diagnostics&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-fansi-escape-codes&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-g&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;${file}&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-o&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;${fileDirname}/${fileBasenameNoExtension}&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#75715e&#34;&gt;// 파일 실행부&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;amp;&amp;amp;&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;${fileDirname}/${fileBasenameNoExtension}&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            ],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;options&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;cwd&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;${fileDirname}&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;problemMatcher&amp;#34;&lt;/span&gt;: [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$gcc&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            ],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;group&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;kind&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;build&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;isDefault&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;detail&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;직접 실행 task&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;//c 컴파일러&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;shell&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;clang 빌드 및 터미널 실행&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;command&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/usr/bin/clang&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;args&amp;#34;&lt;/span&gt;: [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-std=c11&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-fcolor-diagnostics&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-fansi-escape-codes&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-g&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;${file}&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-o&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;${fileDirname}/${fileBasenameNoExtension}&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#75715e&#34;&gt;// 파일 실행부&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;amp;&amp;amp;&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;${fileDirname}/${fileBasenameNoExtension}&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            ],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;options&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;cwd&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;${fileDirname}&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;problemMatcher&amp;#34;&lt;/span&gt;: [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$gcc&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            ],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;group&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;kind&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;build&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;isDefault&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;detail&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;직접 실행 task&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;//디버깅시에 사용되는 cpp 빌드 설정&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cppbuild&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C/C++: clang++ 활성 파일 빌드&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;command&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/usr/bin/clang++&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;args&amp;#34;&lt;/span&gt;: [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-std=c++17&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-fcolor-diagnostics&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-fansi-escape-codes&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-g&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;${file}&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-o&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;${fileDirname}/${fileBasenameNoExtension}&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            ],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;options&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;cwd&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;${fileDirname}&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;problemMatcher&amp;#34;&lt;/span&gt;: [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$gcc&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            ],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;group&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;kind&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;build&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;isDefault&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;detail&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;디버거에서 생성된 작업입니다.&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;//디버깅시에 사용되는 c 빌드 설정&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cppbuild&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C/C++: clang 활성 파일 빌드&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;command&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/usr/bin/clang&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;args&amp;#34;&lt;/span&gt;: [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-std=c11&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-fcolor-diagnostics&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-fansi-escape-codes&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-g&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;${file}&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-o&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;${fileDirname}/${fileBasenameNoExtension}&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            ],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;options&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;cwd&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;${fileDirname}&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;problemMatcher&amp;#34;&lt;/span&gt;: [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$gcc&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            ],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;group&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;kind&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;build&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;isDefault&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;detail&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;디버거에서 생성된 작업입니다.&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;//실행용&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;exec&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;shell&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;command&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;${fileDirname}/${fileBasenameNoExtension}&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;group&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;kind&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;build&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;isDefault&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;version&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2.0.0&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;launch.json&lt;/p&gt;</description>
    </item>
    <item>
      <title>그래프(graph)</title>
      <link>http://localhost:1313/02.inbox/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8B%A4-with-python/%EA%B7%B8%EB%9E%98%ED%94%84graph/</link>
      <pubDate>Sat, 11 Oct 2025 05:12:07 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8B%A4-with-python/%EA%B7%B8%EB%9E%98%ED%94%84graph/</guid>
      <description>&lt;h2 id=&#34;-그래프의-종류와-개념&#34;&gt;📖 그래프의 종류와 개념&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://localhost:1313/02.inbox/2%EC%9D%98-%EB%B3%B4%EC%88%98%EB%A5%BC-%EC%9D%8C%EC%88%98-%ED%91%9C%ED%98%84%EB%B2%95%EC%9C%BC%EB%A1%9C-%EC%A0%95%ED%95%9C-%EC%9D%B4%EC%9C%A0/&#34; class=&#34;internal-link&#34;&gt;hello&lt;/a&gt;&#xA;&lt;a href=&#34;http://localhost:1313/08.media/Bootloader%20Boot%20Procedure.pdf&#34; class=&#34;internal-file-link&#34;&gt;pdf 테스트&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;그래프는 여러 개의 점(노드 또는 정점)들이 선으로 연결된 구조를 나타내는 &lt;strong&gt;수학적인 개념&lt;/strong&gt;입니다. 그래프는 다양한 현실 세계의 문제를 모델링하고 분석하는 데 사용됩니다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;그래프의-용어&#34;&gt;그래프의 용어&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240428022601.png&#34; alt=&#34;Pasted image 20240428022601 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;dl&gt;&#xA;&lt;dt&gt;&lt;code&gt;노드(Node) 또는 정점(Vertex)&lt;/code&gt; N or V&lt;/dt&gt;&#xA;&lt;dd&gt;그래프에서 하나의 점을 나타냅니다. 노드는 데이터를 저장하는데 사용될 수 있습니다.&lt;br&gt;&#xA;&lt;code&gt;간선(Edge)&lt;/code&gt;  E&lt;/dd&gt;&#xA;&lt;dd&gt;그래프에서 노드와 노드를 연결하는 선을 나타냅니다. 간선은 노드 쌍 사이의 관계를 나타냅니다.&lt;br&gt;&#xA;&lt;code&gt;인접(Adjacent)&lt;/code&gt;&lt;/dd&gt;&#xA;&lt;dd&gt;두 개의 노드가 간선으로 직접 연결되어 있는 상태를 말합니다. 인접한 노드는 서로 이웃이라고도 합니다.&lt;br&gt;&#xA;&lt;code&gt;차수(Degree)&lt;/code&gt;&lt;/dd&gt;&#xA;&lt;dd&gt;&lt;strong&gt;노드에 연결된 간선의 수&lt;/strong&gt;를 나타냅니다. 무방향 그래프에서는 노드의 차수는 해당 노드와 인접한 노드의 수입니다.&lt;br&gt;&#xA;&lt;code&gt;경로(Path)&lt;/code&gt;&lt;/dd&gt;&#xA;&lt;dd&gt;그래프에서 노드들을 연결하는 간선의 순서를 나타내는 순서쌍입니다. 경로의 길이는 경로에 속한 간선의 수입니다.&lt;br&gt;&#xA;&lt;code&gt;사이클(Cycle)&lt;/code&gt;&lt;/dd&gt;&#xA;&lt;dd&gt;그래프에서 동일한 노드로 되돌아오는 경로를 말합니다. 즉, 경로의 시작 노드와 끝 노드가 동일한 경우를 말합니다.&lt;br&gt;&#xA;&lt;code&gt;가중치(Weight)&lt;/code&gt;&lt;/dd&gt;&#xA;&lt;dd&gt;가중치 그래프에서 간선에 할당된 값 또는 비용을 나타냅니다. 가중치는 간선의 특성을 나타내는데 사용됩니다.&lt;/dd&gt;&#xA;&lt;/dl&gt;&#xA;&lt;h2 id=&#34;그래프의-종류&#34;&gt;그래프의 종류&lt;/h2&gt;&#xA;&lt;dl&gt;&#xA;&lt;dt&gt;&lt;code&gt;무방향 그래프&lt;/code&gt; &amp;amp; &lt;code&gt;방향 그래프&lt;/code&gt;&lt;/dt&gt;&#xA;&lt;dd&gt;간선의 방향의 유무에 따라 구분되는 그래프&lt;br&gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240428022606.png&#34; alt=&#34;Pasted image 20240428022606 (Image resource not found)&#34; &gt;&lt;br&gt;&#xA;&lt;code&gt;가중치 그래프&lt;/code&gt;&lt;/dd&gt;&#xA;&lt;dd&gt;그래프에 가중치 또는 비용이 할당된 그래프(네트워크 이론이나 신경망 이론에 활용되는 개념)&lt;br&gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240428022605.png&#34; alt=&#34;Pasted image 20240428022605 (Image resource not found)&#34; &gt;&lt;br&gt;&#xA;&lt;code&gt;연결 그래프&lt;/code&gt; &amp;amp; &lt;code&gt;비연결 그래프&lt;/code&gt;&lt;/dd&gt;&#xA;&lt;dd&gt;모든 노드에 대해 경로가 존재하면 &lt;strong&gt;연결 그래프&lt;/strong&gt;, 특정 노드에 대한 경로가 하나라도 존재하지 않을 경우 &lt;strong&gt;비연결 그래프&lt;/strong&gt;&lt;br&gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240428022602.png&#34; alt=&#34;Pasted image 20240428022602 (Image resource not found)&#34; &gt;&lt;br&gt;&#xA;&lt;code&gt;사이클 그래프&lt;/code&gt; &amp;amp; &lt;code&gt;비순환 그래프&lt;/code&gt;&lt;br&gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240428022603.png&#34; alt=&#34;Pasted image 20240428022603 (Image resource not found)&#34; &gt;&lt;br&gt;&#xA;&lt;code&gt;완전 그래프&lt;/code&gt;&lt;/dd&gt;&#xA;&lt;dd&gt;그래프의 모든 노드가 연결되어 있는 그래프&lt;br&gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240428022604.png&#34; alt=&#34;Pasted image 20240428022604 (Image resource not found)&#34; &gt;&lt;/dd&gt;&#xA;&lt;/dl&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;그래프의-한-종류인-트리에-대해&#34;&gt;그래프의 한 종류인 트리에 대해🧐&lt;/h2&gt;&#xA;&lt;p&gt;트리(Tree)는 그래프(Graph)의 한 종류로, &lt;strong&gt;계층적인 구조&lt;/strong&gt;를 나타내는 &lt;strong&gt;비순환적인 연결 그래프&lt;/strong&gt;입니다. 트리는 하나의 루트(Root) 노드에서 시작하여 다양한 자식(Child) 노드들로 확장되는 구조를 가지며, 각 노드는 하나의 부모(Parent) 노드와 연결되어 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>메모리 최대 크기</title>
      <link>http://localhost:1313/02.inbox/%EB%A9%94%EB%AA%A8%EB%A6%AC-%EC%B5%9C%EB%8C%80-%ED%81%AC%EA%B8%B0/</link>
      <pubDate>Mon, 22 Sep 2025 13:58:18 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EB%A9%94%EB%AA%A8%EB%A6%AC-%EC%B5%9C%EB%8C%80-%ED%81%AC%EA%B8%B0/</guid>
      <description>&lt;h2 id=&#34;문제-발생-이전&#34;&gt;문제 발생 이전&lt;/h2&gt;&#xA;&lt;p&gt;메모리의 최대 크기는 RAM 에 저장할 수 있는 bit 최대 개수를 의미한다&#xA;word 는 bus 의 크기를 이야기 한다&#xA;하지만 직접 CPU 를 만들다 보니(logisim) (&lt;a href=&#34;http://localhost:1313/02.inbox/%EA%B7%B8%EB%9E%98%EC%84%9C-%EC%BB%B4%ED%93%A8%ED%84%B0%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8F%99%EC%9E%91%ED%95%98%EB%82%98%EC%9A%94/%EA%B7%B8%EB%9E%98%EC%84%9C-%EC%BB%B4%ED%93%A8%ED%84%B0%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8F%99%EC%9E%91%ED%95%98%EB%82%98%EC%9A%94-1/&#34; class=&#34;internal-link&#34;&gt;그래서 컴퓨터는 어떻게 동작하나요 1&lt;/a&gt;) 지금까지 나는 byte 단위로 메모리에 접근한 것이 아닌 word 단위로 접근 했었고 이것이 8비트 cpu 에서는 word 와 byte 가 운 좋게 8bit 로 일치되어 메모리 최대 크기를 계산 할 때 주소폭 크기 (data bit width = word) * 2^(address bit width) 즉 8 * 2^8 즉 2048b ~= 256B 라고 계산 했었다 답은 맞지만 16비트 32 비트로 cpu 를 개선해나가는 과정에서 문제가 발생했다&lt;/p&gt;</description>
    </item>
    <item>
      <title>terminal auto logging</title>
      <link>http://localhost:1313/02.inbox/terminal-auto-logging/</link>
      <pubDate>Tue, 09 Sep 2025 17:17:45 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/terminal-auto-logging/</guid>
      <description>&lt;h2 id=&#34;terminal-auto-logger&#34;&gt;Terminal Auto Logger&lt;/h2&gt;&#xA;&lt;h3 id=&#34;프로젝트-개요&#34;&gt;프로젝트 개요&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;프로젝트 이름&lt;/strong&gt;: &lt;code&gt;terminal auto logger&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;로그 디렉토리&lt;/strong&gt;: &lt;code&gt;~/.local/log/terminal_auto_log&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;핵심 동작&lt;/strong&gt;:&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;code&gt;terminal_auto_logger.sh&lt;/code&gt;: 쉘 시작 시 실행되어 로깅 환경을 설정하고, 실제 로깅을 담당하는 Executor 스크립트를 호출합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;_tal_executor.sh&lt;/code&gt;: &lt;code&gt;script&lt;/code&gt; 명령을 직접 실행하고, 세션이 종료된 후 로그 파일의 이름을 최종적으로 결정합니다. (내부 헬퍼 스크립트)&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;1-executor-스크립트-생성&#34;&gt;1. &lt;strong&gt;Executor 스크립트 생성: &lt;code&gt;_tal_executor.sh&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;이 스크립트는 실제 로깅을 실행하고 세션 종료 후 파일명 변경을 담당하는 핵심 로직입니다. 사용자가 직접 실행하는 것이 아닌, 메인 스크립트에 의해 호출됩니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>CDN 링크 찾기</title>
      <link>http://localhost:1313/02.inbox/cdn-%EB%A7%81%ED%81%AC-%EC%B0%BE%EA%B8%B0/</link>
      <pubDate>Tue, 09 Sep 2025 17:16:27 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/cdn-%EB%A7%81%ED%81%AC-%EC%B0%BE%EA%B8%B0/</guid>
      <description>&lt;h4 id=&#34;-jsdelivr&#34;&gt;🔹 &lt;a href=&#34;https://www.jsdelivr.com/&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;jsDelivr&lt;/a&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;GitHub, npm 패키지를 CDN으로 제공&lt;/li&gt;&#xA;&lt;li&gt;검색창에 라이브러리 이름 입력 → 버전 선택 → 자동 생성된 링크 복사&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;예: &lt;code&gt;https://cdn.jsdelivr.net/npm/jquery@3.7.1/dist/jquery.min.js&lt;/code&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h4 id=&#34;-cdnjs&#34;&gt;🔹 &lt;a href=&#34;https://cdnjs.com/&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;cdnjs&lt;/a&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;수천 개의 오픈소스 라이브러리 제공&lt;/li&gt;&#xA;&lt;li&gt;검색 → 원하는 버전 클릭 → Copy 버튼으로 링크 복사&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;예: &lt;code&gt;https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js&lt;/code&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h4 id=&#34;-unpkg&#34;&gt;🔹 &lt;a href=&#34;https://unpkg.com/&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;UNPKG&lt;/a&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;npm 패키지를 CDN으로 제공&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;https://unpkg.com/[패키지명]@[버전]/[파일경로]&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;예: &lt;code&gt;https://unpkg.com/react@18/umd/react.production.min.js&lt;/code&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>android sdk tool list</title>
      <link>http://localhost:1313/02.inbox/android-sdk-tool-list/</link>
      <pubDate>Mon, 08 Sep 2025 14:56:26 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/android-sdk-tool-list/</guid>
      <description>&lt;h3 id=&#34;sdk-locationplatform-tools&#34;&gt;&lt;code&gt;{sdk location}/platform-tools&lt;/code&gt;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;-핵심-도구-가장-중요하고-자주-사용&#34;&gt;⭐ 핵심 도구 (가장 중요하고 자주 사용)&lt;/h4&gt;&#xA;&lt;h5 id=&#34;1-adb-android-debug-bridge&#34;&gt;1. &lt;code&gt;adb&lt;/code&gt; (Android Debug Bridge)&lt;/h5&gt;&#xA;&lt;p&gt;&lt;strong&gt;가장 중요하고 다재다능한 도구&lt;/strong&gt;입니다. 실행 중인 안드로이드 기기(에뮬레이터 포함)와 통신하기 위한 클라이언트-서버 프로그램입니다. PC에서 실행하는 &lt;code&gt;adb&lt;/code&gt;는 클라이언트, 기기에서 실행되는 &lt;code&gt;adbd&lt;/code&gt;는 데몬(서버) 역할을 합니다. USB 케이블이나 Wi-Fi를 통해 연결됩니다.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;주요 기능 및 사용 사례:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;기기 연결 확인:&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;adb devices&lt;/code&gt;: 현재 PC에 연결된 기기 목록을 확인합니다. 기기가 정상적으로 인식되었는지 확인할 때 가장 먼저 사용하는 명령어입니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;앱 설치 및 삭제:&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;adb install [앱이름].apk&lt;/code&gt;: PC에 있는 APK 파일을 기기에 설치합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;adb uninstall [패키지이름]&lt;/code&gt;: 기기에 설치된 앱을 삭제합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;파일 전송:&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;adb push [PC 경로] [기기 경로]&lt;/code&gt;: PC의 파일을 기기로 복사합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;adb pull [기기 경로] [PC 경로]&lt;/code&gt;: 기기의 파일을 PC로 복사합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;쉘(Shell) 접근:&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;adb shell&lt;/code&gt;: 기기의 리눅스 쉘에 원격으로 접속합니다. 이를 통해 기기 내부의 파일 시스템을 탐색하거나, 각종 시스템 명령어를 실행할 수 있습니다. (예: &lt;code&gt;adb shell ls /sdcard/&lt;/code&gt;)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;로그 확인 (디버깅):&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;adb logcat&lt;/code&gt;: 기기에서 실시간으로 발생하는 시스템 로그를 출력합니다. 앱 개발 시 에러나 동작을 추적하는 데 필수적입니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;기기 제어:&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;adb reboot&lt;/code&gt;: 기기를 재부팅합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;adb reboot recovery&lt;/code&gt;: 리커버리 모드로 재부팅합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;adb reboot bootloader&lt;/code&gt;: 부트로더(패스트붓) 모드로 재부팅합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;기타 고급 기능:&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;포트 포워딩:&lt;/strong&gt; &lt;code&gt;adb forward tcp:[PC 포트] tcp:[기기 포트]&lt;/code&gt; - PC의 특정 포트로 들어오는 요청을 기기의 포트로 전달합니다. 디버깅 시 유용합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;스크린샷/녹화:&lt;/strong&gt; &lt;code&gt;adb shell screencap&lt;/code&gt; (스크린샷), &lt;code&gt;adb shell screenrecord&lt;/code&gt; (화면 녹화).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h5 id=&#34;2-fastboot-fastboot-protocol-tool&#34;&gt;2. &lt;code&gt;fastboot&lt;/code&gt; (Fastboot Protocol Tool)&lt;/h5&gt;&#xA;&lt;p&gt;&lt;strong&gt;부트로더(Bootloader) 상태의 기기와 통신&lt;/strong&gt;하는 도구입니다. 운영체제(OS)가 부팅되기 전의 단계에서 기기의 파티션을 수정하거나 펌웨어(ROM)를 설치(플래싱)할 때 사용됩니다. &lt;code&gt;adb&lt;/code&gt;가 OS가 켜진 상태에서 통신하는 것과 달리, &lt;code&gt;fastboot&lt;/code&gt;는 더 낮은 수준(low-level)에서 기기를 제어합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>순수 UI 디자인 용어</title>
      <link>http://localhost:1313/02.inbox/%EC%88%9C%EC%88%98-ui-%EB%94%94%EC%9E%90%EC%9D%B8-%EC%9A%A9%EC%96%B4/</link>
      <pubDate>Mon, 08 Sep 2025 01:49:58 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EC%88%9C%EC%88%98-ui-%EB%94%94%EC%9E%90%EC%9D%B8-%EC%9A%A9%EC%96%B4/</guid>
      <description>&lt;h3 id=&#34;-순수-디자인-관련-용어-30가지-visualui-design-중심&#34;&gt;🖌️ 순수 디자인 관련 용어 30가지 (Visual/UI Design 중심)&lt;/h3&gt;&#xA;&lt;h4 id=&#34;1-스케어모피즘-skeuomorphism&#34;&gt;1. &lt;strong&gt;스케어모피즘 (Skeuomorphism)&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;실제 물체의 질감, 그림자, 입체감을 디지털에 그대로 구현한 디자인 스타일.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h4 id=&#34;2-플랫-디자인-flat-design&#34;&gt;2. &lt;strong&gt;플랫 디자인 (Flat Design)&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;그림자, 텍스처, 그라데이션을 배제하고 단순한 색상과 형태로 구성된 디자인.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h4 id=&#34;3-세미-플랫-디자인-semi-flat-design&#34;&gt;3. &lt;strong&gt;세미 플랫 디자인 (Semi-Flat Design)&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;플랫 디자인에 약간의 그림자나 입체감을 더해 깊이감을 준 디자인.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h4 id=&#34;4-머티리얼-디자인-material-design&#34;&gt;4. &lt;strong&gt;머티리얼 디자인 (Material Design)&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;구글의 디자인 언어. “종이처럼 쌓인 레이어” 컨셉으로 그림자와 모션을 활용.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h4 id=&#34;5-네오모피즘-neumorphism&#34;&gt;5. &lt;strong&gt;네오모피즘 (Neumorphism)&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;소프트한 입체감과 음영을 사용해 “눌린 버튼” 또는 “튀어나온 요소”처럼 보이게 하는 디자인 트렌드.&lt;/p&gt;</description>
    </item>
    <item>
      <title>네트워크 7계층</title>
      <link>http://localhost:1313/02.inbox/%EB%94%B0%EB%9D%BCit/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-7%EA%B3%84%EC%B8%B5/</link>
      <pubDate>Fri, 05 Sep 2025 21:01:24 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EB%94%B0%EB%9D%BCit/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-7%EA%B3%84%EC%B8%B5/</guid>
      <description>&lt;p&gt;5계층 부터 7계층 까지 한번에 관리 {세션 표현 응용}&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;http 1.0 에서 1.1 변경&lt;/li&gt;&#xA;&lt;li&gt;http 요청 프로토콜&lt;/li&gt;&#xA;&lt;li&gt;http 응답 프로토콜&lt;/li&gt;&#xA;&lt;li&gt;http 헤더 포멧&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;http 버전&#xA;RFC2068(1997)&#xA;RFC2616(1999)&#xA;RFC7230~7235(2014)&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;http-10-에서-11-변경&#34;&gt;http 1.0 에서 1.1 변경&lt;/h3&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240207193831.png&#34; alt=&#34;Pasted image 20240207193831 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;매우 비요율적 모든 요청 응답 하나하나 3wh를 해야한다&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240207194010.png&#34; alt=&#34;Pasted image 20240207194010 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;http-요청--응답-프로토콜&#34;&gt;http 요청 &amp;amp; 응답 프로토콜&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240212034842.png&#34; alt=&#34;Pasted image 20240212034842 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;request-line&#34;&gt;request Line&lt;/h3&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240207195646.png&#34; alt=&#34;Pasted image 20240207195646 (Image resource not found)&#34; &gt;&#xA;ex) GET / HTTP/1.1&lt;/p&gt;</description>
    </item>
    <item>
      <title>탐욕법(greedy)</title>
      <link>http://localhost:1313/02.inbox/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8B%A4-with-python/%ED%83%90%EC%9A%95%EB%B2%95greedy/</link>
      <pubDate>Fri, 05 Sep 2025 03:50:44 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8B%A4-with-python/%ED%83%90%EC%9A%95%EB%B2%95greedy/</guid>
      <description>&lt;p&gt;현재 상황에서 지금 당장 가장 좋은 것만 고르는 방법&lt;/p&gt;&#xA;&lt;p&gt;지금 당장 가장 좋은 것을 고르는 방식이 답이 되는 것을 보장하는가?&#xA;=&amp;gt; 정당성&lt;/p&gt;&#xA;&lt;p&gt;그리디의 경우 &lt;span style=&#34;background:rgba(240, 200, 0, 0.2)&#34;&gt;정당성 분석&lt;/span&gt;이 가장 중요&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20231220052551.png&#34; alt=&#34;Pasted image 20231220052551 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;단순히 매 상황에서 가장 큰 값만 고르는 경우(그리디)의 경우 5 -&amp;gt; 10 -&amp;gt; 4 를 고르게 되어 틀리게 된다&lt;/p&gt;&#xA;&lt;p&gt;[!]&#xA;탐욕법으로 얻은 해가 최적의 해가 되는 상황에서 이를 추론 할 수 있어야 풀리는 문제 출제&lt;/p&gt;</description>
    </item>
    <item>
      <title>계층 기반 폴더 구조 vs 서비스 단위 기반 폴더 구조</title>
      <link>http://localhost:1313/02.inbox/%EA%B3%84%EC%B8%B5-%EA%B8%B0%EB%B0%98-%ED%8F%B4%EB%8D%94-%EA%B5%AC%EC%A1%B0-vs-%EC%84%9C%EB%B9%84%EC%8A%A4-%EB%8B%A8%EC%9C%84-%EA%B8%B0%EB%B0%98-%ED%8F%B4%EB%8D%94-%EA%B5%AC%EC%A1%B0/</link>
      <pubDate>Wed, 20 Aug 2025 16:00:56 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EA%B3%84%EC%B8%B5-%EA%B8%B0%EB%B0%98-%ED%8F%B4%EB%8D%94-%EA%B5%AC%EC%A1%B0-vs-%EC%84%9C%EB%B9%84%EC%8A%A4-%EB%8B%A8%EC%9C%84-%EA%B8%B0%EB%B0%98-%ED%8F%B4%EB%8D%94-%EA%B5%AC%EC%A1%B0/</guid>
      <description>&lt;p&gt;좋은 질문입니다. &lt;strong&gt;DTO, Repository, Domain, Service&lt;/strong&gt; 와 같은 &lt;strong&gt;계층 기반 폴더 구조&lt;/strong&gt;(Layered Architecture)와 &lt;strong&gt;서비스 단위 기반 폴더 구조&lt;/strong&gt;(Vertical Slice / Feature-based Architecture) 중 어느 것이 더 나은지는 &lt;strong&gt;프로젝트의 규모, 팀 구조, 유지보수성, 확장성&lt;/strong&gt; 등에 따라 달라집니다.&lt;/p&gt;&#xA;&lt;p&gt;아래에서 두 방식의 특징과 장단점을 비교하고, 어떤 상황에서 어떤 방식이 적합한지 정리해 드릴게요.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-1-계층-기반-구조-layered--horizontal-architecture&#34;&gt;✅ 1. &lt;strong&gt;계층 기반 구조 (Layered / Horizontal Architecture)&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;src/&#xA;├── dto/&#xA;│   ├── UserRequestDto.java&#xA;│   └── UserResponseDto.java&#xA;├── domain/&#xA;│   ├── User.java&#xA;│   └── UserStatus.java&#xA;├── repository/&#xA;│   └── UserRepository.java&#xA;├── service/&#xA;│   └── UserService.java&#xA;├── controller/&#xA;│   └── UserController.java&#xA;└── config/&#xA;    └── DatabaseConfig.java&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;-장점&#34;&gt;✅ 장점&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;일관성 있는 구조&lt;/strong&gt;: 모든 개발자가 동일한 위치에서 동일한 타입의 클래스를 찾을 수 있음.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;초기 개발이 쉬움&lt;/strong&gt;: 특히 작은 프로젝트나 학습용 프로젝트에 적합.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Spring Boot 등의 프레임워크와 자연스럽게 맞음&lt;/strong&gt;: MVC 패턴과 잘 어울림.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;-단점&#34;&gt;❌ 단점&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;변경이 어렵다&lt;/strong&gt;: 하나의 기능을 수정할 때 여러 패키지를 왔다갔다 해야 함 (예: 유저 생성 기능 수정 시 controller → service → repository → dto 모두 확인).&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;결합도 증가&lt;/strong&gt;: 모든 기능이 동일한 계층에 몰려 있어, 관련 없는 기능들끼리 묶임.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;대규모 프로젝트에서 관리 어려움&lt;/strong&gt;: 기능이 많아질수록 파일 수가 많아지고, 관련 코드를 찾기 어려워짐.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-2-서비스기능-단위-구조-vertical-slice--feature-based-architecture&#34;&gt;✅ 2. &lt;strong&gt;서비스(기능) 단위 구조 (Vertical Slice / Feature-based Architecture)&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;src/&#xA;├── user/&#xA;│   ├── User.java&#xA;│   ├── UserRepository.java&#xA;│   ├── UserService.java&#xA;│   ├── UserController.java&#xA;│   ├── UserRequestDto.java&#xA;│   └── UserResponseDto.java&#xA;├── order/&#xA;│   ├── Order.java&#xA;│   ├── OrderService.java&#xA;│   └── OrderController.java&#xA;└── common/&#xA;    ├── config/&#xA;    └── exception/&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;-장점-1&#34;&gt;✅ 장점&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;기능 단위로 코드가 묶여 있어 유지보수 용이&lt;/strong&gt;: 유저 관련 기능은 &lt;code&gt;user/&lt;/code&gt; 폴더 안에 모두 있음.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;변경이 쉬움&lt;/strong&gt;: 기능 하나를 수정할 때 관련된 모든 코드를 한 폴더에서 찾을 수 있음.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;팀 기반 개발에 유리&lt;/strong&gt;: 팀이 기능 단위로 분업하기 쉬움 (예: A팀은 user, B팀은 order 담당).&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;확장성 좋음&lt;/strong&gt;: 새 기능 추가 시 폴더 하나 생성하면 됨.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;-단점-1&#34;&gt;❌ 단점&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;중복 가능성&lt;/strong&gt;: 공통 로직(예: DTO, 유틸)이 각 폴더에 중복될 수 있음 → &lt;code&gt;common&lt;/code&gt; 또는 &lt;code&gt;shared&lt;/code&gt; 패키지로 해결 필요.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;초기 설계가 중요&lt;/strong&gt;: 공통 모듈과 기능 모듈의 경계를 잘 설정해야 함.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;익숙하지 않은 구조&lt;/strong&gt;: 전통적인 계층 구조에 익숙한 개발자에게는 어색할 수 있음.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-결론-어떤-걸-선택해야-할까&#34;&gt;✅ 결론: 어떤 걸 선택해야 할까?&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;프로젝트 유형&lt;/th&gt;&#xA;          &lt;th&gt;추천 구조&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;작은 프로젝트, 학습용, MVP&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;✅ 계층 기반 구조 (간단하고 직관적)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;중대형 프로젝트, 장기 운영, 팀 개발&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;✅ &lt;strong&gt;서비스/기능 단위 구조&lt;/strong&gt; (유지보수성 ↑)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;도메인 중심 설계(DDD) 적용&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;✅ 기능 단위 + bounded context 기반 구성&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;마이크로서비스 아키텍처&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;✅ 각 서비스 내부는 기능 단위 구조 권장&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-보완-전략-하이브리드-접근&#34;&gt;🔁 보완 전략 (하이브리드 접근)&lt;/h3&gt;&#xA;&lt;p&gt;실제로는 &lt;strong&gt;하이브리드&lt;/strong&gt;로 구성하는 경우도 많습니다:&lt;/p&gt;</description>
    </item>
    <item>
      <title>spring RequestMapping 구현체</title>
      <link>http://localhost:1313/02.inbox/spring-requestmapping-%EA%B5%AC%ED%98%84%EC%B2%B4/</link>
      <pubDate>Tue, 19 Aug 2025 22:16:22 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/spring-requestmapping-%EA%B5%AC%ED%98%84%EC%B2%B4/</guid>
      <description>&lt;p&gt;스프링 MVC의 &lt;strong&gt;&lt;code&gt;HandlerMapping&lt;/code&gt; 구현체&lt;/strong&gt;는 다양한 방식으로 요청을 핸들러(컨트롤러)에 매핑합니다. 각 클래스의 역할과 특징을 체계적으로 정리했습니다:&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;1-abstracthandlermapping&#34;&gt;1. &lt;strong&gt;&lt;code&gt;AbstractHandlerMapping&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: 모든 &lt;code&gt;HandlerMapping&lt;/code&gt;의 &lt;strong&gt;기반 추상 클래스&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;인터셉터(&lt;code&gt;HandlerInterceptor&lt;/code&gt;) 관리 및 실행 로직을 제공합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;getHandler()&lt;/code&gt; 메서드를 구현해 실제 핸들러를 찾는 로직을 정의합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;사용 예시&lt;/strong&gt;:&lt;br&gt;&#xA;다른 구체적인 &lt;code&gt;HandlerMapping&lt;/code&gt; 클래스들이 이 클래스를 상속받아 확장합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;2-abstracturlhandlermapping&#34;&gt;2. &lt;strong&gt;&lt;code&gt;AbstractUrlHandlerMapping&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;URL 기반 매핑&lt;/strong&gt;을 위한 추상 클래스.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;URL 패턴과 핸들러를 연결하는 공통 로직을 제공합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;urlMap&lt;/code&gt; 또는 &lt;code&gt;handlerMap&lt;/code&gt;을 사용해 URL-핸들러 매핑 정보를 저장합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;하위 클래스&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;BeanNameUrlHandlerMapping&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;SimpleUrlHandlerMapping&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;AbstractDetectingUrlHandlerMapping&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;3-beannameurlhandlermapping&#34;&gt;3. &lt;strong&gt;&lt;code&gt;BeanNameUrlHandlerMapping&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;스프링 빈 이름을 URL로 매핑&lt;/strong&gt;합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>싱글톤 내부 의존관계로 프로토타입 스코프의 bean 을 가질때</title>
      <link>http://localhost:1313/02.inbox/%EC%8B%B1%EA%B8%80%ED%86%A4-%EB%82%B4%EB%B6%80-%EC%9D%98%EC%A1%B4%EA%B4%80%EA%B3%84%EB%A1%9C-%ED%94%84%EB%A1%9C%ED%86%A0%ED%83%80%EC%9E%85-%EC%8A%A4%EC%BD%94%ED%94%84%EC%9D%98-bean-%EC%9D%84-%EA%B0%80%EC%A7%88%EB%95%8C/</link>
      <pubDate>Tue, 19 Aug 2025 22:14:19 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EC%8B%B1%EA%B8%80%ED%86%A4-%EB%82%B4%EB%B6%80-%EC%9D%98%EC%A1%B4%EA%B4%80%EA%B3%84%EB%A1%9C-%ED%94%84%EB%A1%9C%ED%86%A0%ED%83%80%EC%9E%85-%EC%8A%A4%EC%BD%94%ED%94%84%EC%9D%98-bean-%EC%9D%84-%EA%B0%80%EC%A7%88%EB%95%8C/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Scope&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;singleton&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ClientBean&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;@Autowired&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; ObjectProvider&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;PrototypeBean&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; prototypeBeanProvider; &lt;span style=&#34;color:#75715e&#34;&gt;// 객체를 필요한 시점에 찾아서 주입받는 경우에 사용&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// private final PrototypeBean prototypeBean;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// @Autowired&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// public ClientBean(PrototypeBean prototypeBean){ // 생성시점에 주입&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;//     this.prototypeBean = prototypeBean;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// }&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;logic&lt;/span&gt;(){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        PrototypeBean prototypeBean &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; prototypeBeanProvider.&lt;span style=&#34;color:#a6e22e&#34;&gt;getObject&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;    &lt;span style=&#34;color:#75715e&#34;&gt;//ApplicationContext ac = &lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;    &lt;span style=&#34;color:#75715e&#34;&gt;//new AnnotationConfigApplicationContext();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;//ac.getBean(PrototypeBean.class);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Scope&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;prototype&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;PrototypeBean&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; count &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;addCount&lt;/span&gt;(){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;count;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getCount&lt;/span&gt;(){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; count;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;Prototype 타입의 객체는 지속적으로 객체를 새로 생성하고자 하는 목적으로 만들었으나 @Autowired 속성, ClientBean 의 singleton scope 속성으로 인해 bean 의존관계 단계에서 미리 생성되어 버림 그리고 다시 생성되지 않음&lt;/p&gt;</description>
    </item>
    <item>
      <title>브라우저 기반 수강신청 알림 시스템 설계서</title>
      <link>http://localhost:1313/02.inbox/%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80-%EA%B8%B0%EB%B0%98-%EC%88%98%EA%B0%95%EC%8B%A0%EC%B2%AD-%EC%95%8C%EB%A6%BC-%EC%8B%9C%EC%8A%A4%ED%85%9C-%EC%84%A4%EA%B3%84%EC%84%9C/</link>
      <pubDate>Tue, 19 Aug 2025 01:08:32 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80-%EA%B8%B0%EB%B0%98-%EC%88%98%EA%B0%95%EC%8B%A0%EC%B2%AD-%EC%95%8C%EB%A6%BC-%EC%8B%9C%EC%8A%A4%ED%85%9C-%EC%84%A4%EA%B3%84%EC%84%9C/</guid>
      <description>&lt;h2 id=&#34;명지대학교-수강신청-빈자리-알림-크롬-확장프로그램-프로젝트-설계서&#34;&gt;명지대학교 수강신청 빈자리 알림 크롬 확장프로그램 프로젝트 설계서&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-프로젝트-개요&#34;&gt;1. 프로젝트 개요&lt;/h3&gt;&#xA;&lt;p&gt;명지대학교 수강신청 시스템의 &amp;lsquo;미리담기 내역&amp;rsquo; 페이지(&lt;code&gt;https://class.mju.ac.kr/main/bag&lt;/code&gt;)에서 &amp;lsquo;인원초과&amp;rsquo; 상태인 강의에 빈자리가 발생했을 때, 사용자에게 데스크탑 알림을 보내주는 크롬 확장 프로그램을 개발한다. 이 프로그램은 사용자가 수동으로 새로고침하며 자리를 확인하는 불편함을 해소하는 것을 목표로 한다.&lt;/p&gt;&#xA;&lt;h3 id=&#34;2-목표&#34;&gt;2. 목표&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;특정 페이지에서만 동작:&lt;/strong&gt; &lt;code&gt;https://class.mju.ac.kr/main/bag&lt;/code&gt; URL에서만 확장 프로그램의 기능이 활성화된다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;UI 요소 삽입:&lt;/strong&gt; &amp;lsquo;인원초과&amp;rsquo;가 표시된 강의 항목에 &amp;lsquo;알림 대기&amp;rsquo; 버튼을 동적으로 추가한다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;백그라운드 모니터링:&lt;/strong&gt; 사용자가 &amp;lsquo;알림 대기&amp;rsquo; 버튼을 클릭하면, 해당 강의를 백그라운드에서 주기적으로 확인한다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;실시간 알림:&lt;/strong&gt; 모니터링 중인 강의에 빈자리(&lt;code&gt;[인원초과]&lt;/code&gt; 문자열 제거)가 확인되면 즉시 사용자에게 크롬 데스크탑 알림을 보낸다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;메모리 기반 데이터 관리:&lt;/strong&gt; 알림 대기 중인 강의 목록, CSRF 토큰 등 모든 상태 정보는 &lt;code&gt;chrome.storage&lt;/code&gt;를 사용하지 않고, 확장 프로그램의 실행 시간 동안 메모리(JavaScript 변수)에만 저장한다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;비-간섭적 작동:&lt;/strong&gt; 백그라운드 확인 작업은 현재 사용자가 보고 있는 페이지를 새로고침하거나 UI를 변경하지 않는다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;3-아키텍처-및-구성-요소&#34;&gt;3. 아키텍처 및 구성 요소&lt;/h3&gt;&#xA;&lt;p&gt;확장 프로그램은 다음과 같은 세 가지 주요 파일로 구성된다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>브라우저 기반 수강신청 알림</title>
      <link>http://localhost:1313/02.inbox/%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80-%EA%B8%B0%EB%B0%98-%EC%88%98%EA%B0%95%EC%8B%A0%EC%B2%AD-%EC%95%8C%EB%A6%BC/</link>
      <pubDate>Thu, 14 Aug 2025 11:58:34 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80-%EA%B8%B0%EB%B0%98-%EC%88%98%EA%B0%95%EC%8B%A0%EC%B2%AD-%EC%95%8C%EB%A6%BC/</guid>
      <description>&lt;p&gt;이 사이트를 기준으로 알림 확장 프로그램을 만들꺼야&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;만약 현재 사이트 url 이 &lt;code&gt;https://class.mju.ac.kr/main/bag&lt;/code&gt; 일때만 작동&lt;/li&gt;&#xA;&lt;li&gt;사이트에서 &lt;code&gt;[인원초과]&lt;/code&gt; 가 들어가 있는 강의에는 수강신청, 미리담기 삭제 옆에 알림 대기 버튼을 삽입&lt;/li&gt;&#xA;&lt;li&gt;정해진 시간마다 백그라운드로 뒤에서 작동&#xA;fetch(&amp;quot;&lt;a href=&#34;https://www.google.com/url?sa=E&amp;amp;q=https%3A%2F%2Fclass.mju.ac.kr%2Fmain%2Fbag&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;https://class.mju.ac.kr/main/bag&lt;/a&gt;&amp;quot;, {&lt;br&gt;&#xA;&amp;ldquo;headers&amp;rdquo;: {&lt;br&gt;&#xA;&amp;ldquo;accept&amp;rdquo;: &amp;ldquo;text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,/;q=0.8,application/signed-exchange;v=b3;q=0.7&amp;rdquo;,&lt;br&gt;&#xA;&amp;ldquo;accept-language&amp;rdquo;: &amp;ldquo;ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7&amp;rdquo;,&lt;br&gt;&#xA;&amp;ldquo;cache-control&amp;rdquo;: &amp;ldquo;no-cache&amp;rdquo;,&lt;br&gt;&#xA;&amp;ldquo;content-type&amp;rdquo;: &amp;ldquo;application/x-www-form-urlencoded&amp;rdquo;,&lt;br&gt;&#xA;&amp;ldquo;pragma&amp;rdquo;: &amp;ldquo;no-cache&amp;rdquo;,&lt;br&gt;&#xA;&amp;ldquo;sec-ch-ua&amp;rdquo;: &amp;ldquo;&amp;ldquo;Not;A=Brand&amp;rdquo;;v=&amp;ldquo;99&amp;rdquo;, &amp;ldquo;Google Chrome&amp;rdquo;;v=&amp;ldquo;139&amp;rdquo;, &amp;ldquo;Chromium&amp;rdquo;;v=&amp;ldquo;139&amp;quot;&amp;rdquo;,&lt;br&gt;&#xA;&amp;ldquo;sec-ch-ua-mobile&amp;rdquo;: &amp;ldquo;?0&amp;rdquo;,&lt;br&gt;&#xA;&amp;ldquo;sec-ch-ua-platform&amp;rdquo;: &amp;ldquo;&amp;ldquo;Windows&amp;rdquo;&amp;rdquo;,&lt;br&gt;&#xA;&amp;ldquo;sec-fetch-dest&amp;rdquo;: &amp;ldquo;document&amp;rdquo;,&lt;br&gt;&#xA;&amp;ldquo;sec-fetch-mode&amp;rdquo;: &amp;ldquo;navigate&amp;rdquo;,&lt;br&gt;&#xA;&amp;ldquo;sec-fetch-site&amp;rdquo;: &amp;ldquo;same-origin&amp;rdquo;,&lt;br&gt;&#xA;&amp;ldquo;sec-fetch-user&amp;rdquo;: &amp;ldquo;?1&amp;rdquo;,&lt;br&gt;&#xA;&amp;ldquo;upgrade-insecure-requests&amp;rdquo;: &amp;ldquo;1&amp;rdquo;&lt;br&gt;&#xA;},&lt;br&gt;&#xA;&amp;ldquo;referrer&amp;rdquo;: &amp;ldquo;&lt;a href=&#34;https://www.google.com/url?sa=E&amp;amp;q=https%3A%2F%2Fclass.mju.ac.kr%2Fmain%2Fclass&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;https://class.mju.ac.kr/main/class&lt;/a&gt;&amp;rdquo;,&lt;br&gt;&#xA;&amp;ldquo;body&amp;rdquo;: &amp;ldquo;_csrf=8e4b9cbe-fc28-4a14-82f1-3e34e72aba4b&amp;rdquo;,&lt;br&gt;&#xA;&amp;ldquo;method&amp;rdquo;: &amp;ldquo;POST&amp;rdquo;,&lt;br&gt;&#xA;&amp;ldquo;mode&amp;rdquo;: &amp;ldquo;cors&amp;rdquo;,&lt;br&gt;&#xA;&amp;ldquo;credentials&amp;rdquo;: &amp;ldquo;include&amp;rdquo;&lt;br&gt;&#xA;});&#xA;요청해서  백단에서 해당 강의가 &lt;code&gt;[인원초과]&lt;/code&gt; 문자가 사라지면 사용자에게 알림을 알리는 방식&lt;/li&gt;&#xA;&lt;li&gt;백그라운드에서 일정 시간마다 요청할때는 초기에 요청했던 초반 html 에서 csrf 토큰을 가져와햐야해&lt;/li&gt;&#xA;&lt;li&gt;백그라운드에서 일정시간마다 요청한다고 화면을 갱신하지는 마 해당 백그라운드의 의미는 &lt;code&gt;[인원초과]&lt;/code&gt; 가 아닌지만 확인하면되&lt;/li&gt;&#xA;&lt;li&gt;인원초과가 사라지면 기존에 사이트에서 해당강의가 &lt;code&gt;[인원초과]&lt;/code&gt;라고 판단했던 것은 강제 refresh&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;아래는 초기 &lt;code&gt;https://class.mju.ac.kr/main/bag&lt;/code&gt; 사이트의 요청 결과야&lt;/p&gt;</description>
    </item>
    <item>
      <title>드라이버는 커널인가</title>
      <link>http://localhost:1313/02.inbox/%EB%93%9C%EB%9D%BC%EC%9D%B4%EB%B2%84%EB%8A%94-%EC%BB%A4%EB%84%90%EC%9D%B8%EA%B0%80/</link>
      <pubDate>Mon, 11 Aug 2025 03:00:33 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EB%93%9C%EB%9D%BC%EC%9D%B4%EB%B2%84%EB%8A%94-%EC%BB%A4%EB%84%90%EC%9D%B8%EA%B0%80/</guid>
      <description>&lt;p&gt;&amp;ldquo;&lt;strong&gt;모든 드라이버는 커널의 일부로 간주되는가?&lt;/strong&gt;&amp;rdquo;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;✅ &lt;strong&gt;하드웨어 제어를 직접 하는 전통적인 장치 드라이버는 &amp;lsquo;커널의 일부&amp;rsquo;로 간주됩니다.&lt;/strong&gt;&lt;br&gt;&#xA;❌ 하지만 &lt;strong&gt;모든 드라이버가 커널 코드 트리에 포함되거나, 커널 공간에서만 동작하는 것은 아닙니다.&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;1-전통적인-장치-드라이버--커널의-일부-예-네트워크-카드-usb-디스크-tty-드라이버-등&#34;&gt;1. 전통적인 장치 드라이버 → 커널의 일부 (예: 네트워크 카드, USB, 디스크, TTY 드라이버 등)&lt;/h3&gt;&#xA;&lt;p&gt;이들은 다음 조건을 충족하므로 &lt;strong&gt;커널의 일부&lt;/strong&gt;로 간주됩니다:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;커널 공간&lt;/strong&gt;(kernel space)에서 실행됨&lt;/li&gt;&#xA;&lt;li&gt;하드웨어 레지스터, 인터럽트, DMA 등에 접근&lt;/li&gt;&#xA;&lt;li&gt;시스템 콜이나 VFS(가상 파일 시스템)와 통합됨&lt;/li&gt;&#xA;&lt;li&gt;커널의 메모리 관리, 스케줄러와 상호작용&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;예시&#34;&gt;예시:&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 커널 소스 트리에서 볼 수 있는 드라이버 코드 예&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;drivers&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;usb&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;core&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;hub.c&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;drivers&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;tty&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;pty.c&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;drivers&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;net&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;ethernet&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;intel&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;e1000&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;e1000_main.c&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;→ 이 코드들은 리눅스 커널 소스 트리(&lt;code&gt;https://git.kernel.org&lt;/code&gt;)에 포함되어 있고,&lt;br&gt;&#xA;컴파일 시 &lt;strong&gt;커널의 일부&lt;/strong&gt;가 되거나, &lt;strong&gt;로드 가능한 모듈&lt;/strong&gt;로 분리됩니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>터미널 동작 원리 매우 상세하게</title>
      <link>http://localhost:1313/02.inbox/%ED%84%B0%EB%AF%B8%EB%84%90-%EB%8F%99%EC%9E%91-%EC%9B%90%EB%A6%AC-%EB%A7%A4%EC%9A%B0-%EC%83%81%EC%84%B8%ED%95%98%EA%B2%8C/</link>
      <pubDate>Mon, 11 Aug 2025 02:58:32 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%ED%84%B0%EB%AF%B8%EB%84%90-%EB%8F%99%EC%9E%91-%EC%9B%90%EB%A6%AC-%EB%A7%A4%EC%9A%B0-%EC%83%81%EC%84%B8%ED%95%98%EA%B2%8C/</guid>
      <description>&lt;p&gt;터미널의 동작원리를 정확하게 이해하기 위해 터미널의 구성요소를 먼저 알아보고 case 별로 어떤 방식으로 이벤트가 전달되는가를 확인해보자&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;터미널의-구성-요소와-역할&#34;&gt;&lt;strong&gt;터미널의 구성 요소와 역할&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;터미널 환경은 크게 **3개의 행위자(Actor)**와 이들을 연결하는 **1개의 통신 채널(Channel)**로 구성됩니다. 각 요소가 어떤 일을 하는지 명확히 구분하는 것이 중요합니다.&lt;/p&gt;&#xA;&lt;h4 id=&#34;터미널-에뮬레이터-terminal-emulator-예&#34;&gt;&lt;strong&gt;터미널 에뮬레이터 (Terminal Emulator, 예: &lt;code&gt;gnome-terminal&lt;/code&gt;, &lt;code&gt;iTerm2&lt;/code&gt;)&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;역할:&lt;/strong&gt; 사용자를 위한 그래픽 인터페이스(GUI 창)를 제공하고, 그래픽 시스템과 바이트 스트림 간의 번역을 담당합니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;입력 처리:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;누구에게 받아서:&lt;/strong&gt; &lt;strong&gt;사용자&lt;/strong&gt;로부터 키보드 입력, 마우스 클릭 등 &lt;strong&gt;그래픽 시스템 이벤트&lt;/strong&gt;를 받습니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;무엇을 하는가:&lt;/strong&gt; 이벤트를 해석하여 약속된 &lt;strong&gt;바이트(byte) 데이터&lt;/strong&gt;로 변환합니다.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;A&lt;/code&gt; 키 → &lt;code&gt;0x41&lt;/code&gt; 바이트&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;위쪽 화살표&lt;/code&gt; 키 → &lt;code&gt;\033[A&lt;/code&gt; (이스케이프 시퀀스)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;어디에 전달:&lt;/strong&gt; 변환된 바이트 데이터를 &lt;strong&gt;PTY 통신 채널의 마스터(Master) 측 파일 디스크립터에 씁니다(write).&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;출력 처리:&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>터미널 동작 원리 매우 상세하게2 (디버깅)</title>
      <link>http://localhost:1313/02.inbox/%ED%84%B0%EB%AF%B8%EB%84%90-%EB%8F%99%EC%9E%91-%EC%9B%90%EB%A6%AC-%EB%A7%A4%EC%9A%B0-%EC%83%81%EC%84%B8%ED%95%98%EA%B2%8C2-%EB%94%94%EB%B2%84%EA%B9%85/</link>
      <pubDate>Mon, 11 Aug 2025 02:53:56 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%ED%84%B0%EB%AF%B8%EB%84%90-%EB%8F%99%EC%9E%91-%EC%9B%90%EB%A6%AC-%EB%A7%A4%EC%9A%B0-%EC%83%81%EC%84%B8%ED%95%98%EA%B2%8C2-%EB%94%94%EB%B2%84%EA%B9%85/</guid>
      <description>&lt;p&gt;각 케이스별로 터미널의 동작을 디버깅하고 특히 &lt;strong&gt;PTY 마스터-슬레이브 간의 통신을 실시간으로 확인하는 방법&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;디버깅을-위한-핵심-도구-toolbox&#34;&gt;디버깅을 위한 핵심 도구 (Toolbox)&lt;/h3&gt;&#xA;&lt;p&gt;우리가 사용할 주요 도구는 다음과 같습니다. 각 도구의 역할을 이해하면 어떤 상황에 무엇을 써야 할지 명확해집니다.&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;도구&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;핵심 기능&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;무엇을 볼 수 있는가?&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;&lt;code&gt;strace&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;시스템 콜 추적&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;프로세스(셸, vim)가 커널과 어떤 상호작용을 하는지 (&lt;code&gt;read&lt;/code&gt;, &lt;code&gt;write&lt;/code&gt;, &lt;code&gt;ioctl&lt;/code&gt; 호출 및 주고받는 데이터)를 정확히 보여줍니다. &lt;strong&gt;슬레이브 측 통신 확인에 최적화&lt;/strong&gt;되어 있습니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;&lt;code&gt;script&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;터미널 세션 기록&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;터미널 에뮬레이터와 PTY 마스터 사이의 **모든 바이트 스트림(입력/출력)**을 날것 그대로 파일에 기록합니다. &lt;strong&gt;마스터 측 통신 확인에 완벽&lt;/strong&gt;합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;&lt;code&gt;socat&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;만능 데이터 중계기&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;두 개의 통신 채널을 엮고 그 사이를 흐르는 데이터를 엿볼 수 있습니다. PTY를 직접 생성하여 &lt;strong&gt;마스터-슬레이브 양단의 모든 트래픽을 실시간 Hex 덤프로 확인&lt;/strong&gt;하는 궁극의 방법입니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;&lt;code&gt;lsof&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;열린 파일 목록 확인&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;특정 프로세스가 어떤 파일 디스크립터(PTY 슬레이브 포함)를 열고 있는지 확인하는 데 사용합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;실전-디버깅-시나리오-strace로-셸slave-관찰하기&#34;&gt;실전! 디버깅 시나리오: &lt;code&gt;strace&lt;/code&gt;로 셸(Slave) 관찰하기&lt;/h3&gt;&#xA;&lt;p&gt;이 방법은 &lt;strong&gt;셸(bash)이 PTY 슬레이브와 어떻게 상호작용하는지&lt;/strong&gt;를 가장 직접적으로 보여줍니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>wsl 에서 폴더가 초록색 배경으로 보이는 이유</title>
      <link>http://localhost:1313/02.inbox/wsl-%EC%97%90%EC%84%9C-%ED%8F%B4%EB%8D%94%EA%B0%80-%EC%B4%88%EB%A1%9D%EC%83%89-%EB%B0%B0%EA%B2%BD%EC%9C%BC%EB%A1%9C-%EB%B3%B4%EC%9D%B4%EB%8A%94-%EC%9D%B4%EC%9C%A0/</link>
      <pubDate>Mon, 11 Aug 2025 00:49:10 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/wsl-%EC%97%90%EC%84%9C-%ED%8F%B4%EB%8D%94%EA%B0%80-%EC%B4%88%EB%A1%9D%EC%83%89-%EB%B0%B0%EA%B2%BD%EC%9C%BC%EB%A1%9C-%EB%B3%B4%EC%9D%B4%EB%8A%94-%EC%9D%B4%EC%9C%A0/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;전제조건&lt;/li&gt;&#xA;&lt;li&gt;초록색 이유&lt;/li&gt;&#xA;&lt;li&gt;선택 전제 조건&lt;/li&gt;&#xA;&lt;li&gt;윈도우 파일과 유닉스 파일의 파일 시스템 차이&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;전제조건&#34;&gt;전제조건&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;wsl 우분투 배포판을 기준 debian 계열은 거이 비슷&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;wsl 측에서 바라본 윈도우 파일 시스템(ntfs) 를 wsl 환경에서 윈도우측 파일시스템을 &lt;code&gt;/mnt&lt;/code&gt; 폴더 아래에 보조메모리 디바이스 장치 이름  으로 마운트 되어있다&#xA;#ModificationRequired&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;shinnk@DESKTOP-KRSG68U:/mnt$ mount&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;C:&lt;span style=&#34;color:#ae81ff&#34;&gt;\ &lt;/span&gt;on /mnt/c type 9p &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;rw,noatime,dirsync,aname&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;drvfs;path&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;C:&lt;span style=&#34;color:#ae81ff&#34;&gt;\;&lt;/span&gt;uid&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;1000;gid&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;1000;symlinkroot&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/mnt/,mmap,access&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;client,msize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;65536,trans&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;fd,rfd&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;5,wfd&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;5&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;ls, dir, grep, 등등의 명령은 화면에 적절한 색깔을 입혀서 표시할 필요가 있는데 이때 LS_COLORS 라는 환경변수를 참조해서 적절히 색깔을 입혀서 출력한다&lt;/p&gt;</description>
    </item>
    <item>
      <title>Zone.Identifier 삭제</title>
      <link>http://localhost:1313/02.inbox/zone.identifier-%EC%82%AD%EC%A0%9C/</link>
      <pubDate>Thu, 24 Jul 2025 00:01:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/zone.identifier-%EC%82%AD%EC%A0%9C/</guid>
      <description>&lt;p&gt;. 현재 폴더 아래의 &amp;ldquo;:Zone.Identifier&amp;rdquo; 이 뒤에 붙은 모든 파일을 삭제&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;find . -name &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*:Zone.Identifier&amp;#34;&lt;/span&gt; -type f -delete&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;어떤 기능을 하는 명령어인지 알아봅시다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>spring controller 추상화 단계별 어노테이션 파라미터</title>
      <link>http://localhost:1313/02.inbox/spring-controller-%EC%B6%94%EC%83%81%ED%99%94-%EB%8B%A8%EA%B3%84%EB%B3%84-%EC%96%B4%EB%85%B8%ED%85%8C%EC%9D%B4%EC%85%98-%ED%8C%8C%EB%9D%BC%EB%AF%B8%ED%84%B0/</link>
      <pubDate>Sat, 12 Jul 2025 13:15:36 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/spring-controller-%EC%B6%94%EC%83%81%ED%99%94-%EB%8B%A8%EA%B3%84%EB%B3%84-%EC%96%B4%EB%85%B8%ED%85%8C%EC%9D%B4%EC%85%98-%ED%8C%8C%EB%9D%BC%EB%AF%B8%ED%84%B0/</guid>
      <description>&lt;h3 id=&#34;추상화-단계별-설명&#34;&gt;추상화 단계별 설명&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Level 1: Servlet API 직접 사용 (가장 낮은 추상화 단계)&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Spring이 있기 전, Java 웹 개발의 근간인 Servlet API를 직접 사용하는 방식입니다.&lt;/li&gt;&#xA;&lt;li&gt;Spring Controller에서도 이 객체들을 직접 파라미터로 받아 모든 것을 수동으로 제어할 수 있습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Level 2: 기본 매핑과 요청 데이터 추출&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Servlet API를 직접 다루는 불편함을 줄이고, 특정 URL 요청을 특정 메서드에 연결(매핑)하고 요청 데이터를 쉽게 추출하는 단계입니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Level 3: 데이터 바인딩 및 응답 데이터 처리&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>대소문자 구분 불가 문제</title>
      <link>http://localhost:1313/02.inbox/%EB%8C%80%EC%86%8C%EB%AC%B8%EC%9E%90-%EA%B5%AC%EB%B6%84-%EB%B6%88%EA%B0%80-%EB%AC%B8%EC%A0%9C/</link>
      <pubDate>Wed, 02 Jul 2025 04:19:23 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EB%8C%80%EC%86%8C%EB%AC%B8%EC%9E%90-%EA%B5%AC%EB%B6%84-%EB%B6%88%EA%B0%80-%EB%AC%B8%EC%A0%9C/</guid>
      <description>&lt;p&gt;window os(NTFS), mac os(APFS) 파일 시스템의 경우 대소문자 구분이 되지 않는다&#xA;위의 두 os는 사람들이 많이 쓰는 os 이므로 이 문제에 관해&#xA;git 은 대소문자 구분을 하지 않는 것을 기본으로 설정한다&lt;/p&gt;&#xA;&lt;p&gt;이에 대해 두가지 방법이 있다&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;설정 자제를 변경(한프로젝트 에서만 동작)(global 은 따로 설정)&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git config core.ignorecase false &lt;span style=&#34;color:#75715e&#34;&gt;# default true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git rm -r --cached . &lt;span style=&#34;color:#75715e&#34;&gt;# 캐쉬 삭제&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;git 의 기능을 사용한다( 전체 config 변경에 따른 사이드 이팩트 원천 봉쇄)&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git mv test Test&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>가변인자(variadic)</title>
      <link>http://localhost:1313/02.inbox/%EA%B0%80%EB%B3%80%EC%9D%B8%EC%9E%90variadic/</link>
      <pubDate>Wed, 02 Jul 2025 04:19:18 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EA%B0%80%EB%B3%80%EC%9D%B8%EC%9E%90variadic/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://blog.woong.org/v/59aa5b8cd845cbff6d76d418&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;가변 인자 매크로의 모든 것 - 개론&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://blog.woong.org/v/59aa6080d845cbff6d76d421&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;가변 인자 매크로의 모든 것 - 과거&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://blog.woong.org/v/59aa6099d845cbff6d76d422&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;가변 인자 매크로의 모든 것 - 현재 #1&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://blog.woong.org/v/59c0bf15d2db27f70d345e76&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;가변 인자 매크로의 모든 것 - 현재 #2&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://blog.woong.org/v/59f9be99e7d0b554c97017cc&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;가변 인자 매크로의 모든 것 - 현재 #3&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://blog.woong.org/v/59c0bf41d2db27f70d345e77&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;가변 인자 매크로의 모든 것 - 미래&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://blog.woong.org/v/59aa60b0d845cbff6d76d423&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;가변 인자 매크로의 모든 것 - 구현&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://blog.woong.org/v/5a52fb5aa51c946933994ee3&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;가변 인자 매크로의 모든 것 - 보충&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;여러개의 데이터를 묶어 하나의 변수에 대입 (패킹)&#xA;vs&#xA;컬랙션 속의 요소들을 여러 개의 변수에 나누어 대입(언패킹)&#xA;컬랙션 (list tuple dictionary set)&amp;hellip;&lt;/p&gt;</description>
    </item>
    <item>
      <title>주석 유형 docstring</title>
      <link>http://localhost:1313/02.inbox/%EC%A3%BC%EC%84%9D-%EC%9C%A0%ED%98%95-docstring/</link>
      <pubDate>Tue, 01 Jul 2025 06:44:14 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EC%A3%BC%EC%84%9D-%EC%9C%A0%ED%98%95-docstring/</guid>
      <description>&lt;h3 id=&#34;docstring-유형-라벨-분류&#34;&gt;docstring 유형 라벨 (분류)&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;한국어&lt;/th&gt;&#xA;          &lt;th&gt;영어 라벨&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;설명&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;Description&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;함수/클래스의 기본 동작 설명&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;사용법&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;Usage&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;호출 방법, 예제 포함&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;예제&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;Example&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;실제 사용 예시 (&lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt;) 포함 가능&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;매개변수&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;Parameters&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;입력 인자 설명&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;반환값&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;Returns&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;반환 값에 대한 설명&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;예외&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;Raises&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;발생 가능한 예외 설명&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;참고&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;See Also&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;관련된 함수/클래스 참조&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;문법&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;Syntax&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;문법 구조나 규칙 설명&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;성능&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;Performance&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;시간/공간 복잡도, 효율성 관련&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;주의사항&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;Note&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;경고 또는 주의해야 할 사항&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;변경이력&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;Change Log&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;변경 내역 (버전별 관리 시)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;의존성&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;Dependencies&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;외부 모듈이나 라이브러리 요구사항&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;</description>
    </item>
    <item>
      <title>2의 보수를 음수 표현법으로 정한 이유</title>
      <link>http://localhost:1313/02.inbox/2%EC%9D%98-%EB%B3%B4%EC%88%98%EB%A5%BC-%EC%9D%8C%EC%88%98-%ED%91%9C%ED%98%84%EB%B2%95%EC%9C%BC%EB%A1%9C-%EC%A0%95%ED%95%9C-%EC%9D%B4%EC%9C%A0/</link>
      <pubDate>Fri, 27 Jun 2025 19:56:01 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/2%EC%9D%98-%EB%B3%B4%EC%88%98%EB%A5%BC-%EC%9D%8C%EC%88%98-%ED%91%9C%ED%98%84%EB%B2%95%EC%9C%BC%EB%A1%9C-%EC%A0%95%ED%95%9C-%EC%9D%B4%EC%9C%A0/</guid>
      <description>&lt;p&gt;첫자리 a0 부터 a3 이라고 가정&#xA;맨 앞자리를 음수를 나타내는 비트라고 정하는 방법과&#xA;2의 보수를 음수를 나타내는 비트라고 정하는 방법 2가지를 비교&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;이진수&lt;/th&gt;&#xA;          &lt;th&gt;초기 구현&lt;/th&gt;&#xA;          &lt;th&gt;2의 보수로 구현한 음수&lt;/th&gt;&#xA;          &lt;th&gt;더하기 식&lt;/th&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0000&lt;/td&gt;&#xA;          &lt;td&gt;0&lt;/td&gt;&#xA;          &lt;td&gt;0&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;0*a3 + 0*a2 + 0*a1 + 0*a0&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0001&lt;/td&gt;&#xA;          &lt;td&gt;1&lt;/td&gt;&#xA;          &lt;td&gt;1&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;1*a3 + 0*a2 + 0*a1 + 1*a0&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0010&lt;/td&gt;&#xA;          &lt;td&gt;2&lt;/td&gt;&#xA;          &lt;td&gt;2&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;0*a3 + 0*a2 + 1*a1 + 0*a0&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0011&lt;/td&gt;&#xA;          &lt;td&gt;3&lt;/td&gt;&#xA;          &lt;td&gt;3&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;0*a3 + 0*a2 + 1*a1 + 1*a0&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0100&lt;/td&gt;&#xA;          &lt;td&gt;4&lt;/td&gt;&#xA;          &lt;td&gt;4&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;0*a3 + 1*a2 + 0*a1 + 0*a0&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0101&lt;/td&gt;&#xA;          &lt;td&gt;5&lt;/td&gt;&#xA;          &lt;td&gt;5&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;0*a3 + 1*a2 + 0*a1 + 1*a0&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0110&lt;/td&gt;&#xA;          &lt;td&gt;6&lt;/td&gt;&#xA;          &lt;td&gt;6&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;0*a3 + 1*a2 + 1*a1 + 0*a0&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0111&lt;/td&gt;&#xA;          &lt;td&gt;7&lt;/td&gt;&#xA;          &lt;td&gt;7&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;0*a3 + 1*a2 + 1*a1 + 1*a0&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;1000&lt;/td&gt;&#xA;          &lt;td&gt;-0&lt;/td&gt;&#xA;          &lt;td&gt;-8&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;-1*a3 + 0*a2 + 0*a1 + 0*a0&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;1001&lt;/td&gt;&#xA;          &lt;td&gt;-1&lt;/td&gt;&#xA;          &lt;td&gt;-7&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;-1*a3 + 0*a2 + 0*a1 + 1*a0&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;1010&lt;/td&gt;&#xA;          &lt;td&gt;-2&lt;/td&gt;&#xA;          &lt;td&gt;-6&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;-1*a3 + 0*a2 + 1*a1 + 0*a0&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;1011&lt;/td&gt;&#xA;          &lt;td&gt;-3&lt;/td&gt;&#xA;          &lt;td&gt;-5&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;-1*a3 + 0*a2 + 1*a1 + 1*a0&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;1100&lt;/td&gt;&#xA;          &lt;td&gt;-4&lt;/td&gt;&#xA;          &lt;td&gt;-4&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;-1*a3 + 1*a2 + 0*a1 + 0*a0&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;1101&lt;/td&gt;&#xA;          &lt;td&gt;-5&lt;/td&gt;&#xA;          &lt;td&gt;-3&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;-1*a3 + 1*a2 + 0*a1 + 1*a0&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;1110&lt;/td&gt;&#xA;          &lt;td&gt;-6&lt;/td&gt;&#xA;          &lt;td&gt;-2&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;-1*a3 + 1*a2 + 1*a1 + 0*a0&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;1111&lt;/td&gt;&#xA;          &lt;td&gt;-7&lt;/td&gt;&#xA;          &lt;td&gt;-1&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;-1*a3 + 1*a2 + 1*a1 + 1*a0&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;이진수 덧셈 방식에 따를 때 (회로의 구현방식중 ) 2의 보수가 가장 적절한 음수 표현 방법이다&lt;/p&gt;</description>
    </item>
    <item>
      <title>00.초기 설정</title>
      <link>http://localhost:1313/02.inbox/real-my-sql/00.%EC%B4%88%EA%B8%B0-%EC%84%A4%EC%A0%95/</link>
      <pubDate>Fri, 27 Jun 2025 19:55:46 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/real-my-sql/00.%EC%B4%88%EA%B8%B0-%EC%84%A4%EC%A0%95/</guid>
      <description>&lt;h2 id=&#34;서버&#34;&gt;서버&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ apt install mysql-server, mysql-common&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;update-alternatives: using /var/lib/mecab/dic/ipadic-utf8 to provide /var/lib/mecab/dic/debian &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;mecab-dictionary&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; in auto mode&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Setting up mysql-server-8.0 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;8.0.40-0ubuntu0.22.04.1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; ...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;update-alternatives: using /etc/mysql/mysql.cnf to provide /etc/mysql/my.cnf &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;my.cnf&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; in auto mode&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Renaming removed key_buffer and myisam-recover options &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; present&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mysqld will log errors to /var/log/mysql/error.log&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mysqld is running as pid &lt;span style=&#34;color:#ae81ff&#34;&gt;13348&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Created symlink /etc/systemd/system/multi-user.target.wants/mysql.service → /lib/systemd/system/mysql.service.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Setting up mysql-server &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;8.0.40-0ubuntu0.22.04.1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; ...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Processing triggers &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; man-db &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;2.10.2-1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; ...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Processing triggers &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; libc-bin &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;2.35-0ubuntu3.8&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; ...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;동작 확인 : &lt;code&gt;nc -zv localhost(host/ip) mysql(port/service name)&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>cpp 메모리 할당 추척</title>
      <link>http://localhost:1313/02.inbox/cpp-%EB%A9%94%EB%AA%A8%EB%A6%AC-%ED%95%A0%EB%8B%B9-%EC%B6%94%EC%B2%99/</link>
      <pubDate>Fri, 27 Jun 2025 19:48:59 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/cpp-%EB%A9%94%EB%AA%A8%EB%A6%AC-%ED%95%A0%EB%8B%B9-%EC%B6%94%EC%B2%99/</guid>
      <description>&lt;p&gt;operator new를 오버로딩하여 메모리 할당 시 로그를 출력&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;operator&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;new&lt;/span&gt;(std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;size_t count) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; count &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; bytes 할당 &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;endl;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; malloc(count);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;stdout 으로 할당된 양을 뽑는다&lt;/p&gt;</description>
    </item>
    <item>
      <title>HTTPS와 비대칭 키 초기 설정부터 데이터 전송까지의 모든 과정 simulation</title>
      <link>http://localhost:1313/02.inbox/https%EC%99%80-%EB%B9%84%EB%8C%80%EC%B9%AD-%ED%82%A4-%EC%B4%88%EA%B8%B0-%EC%84%A4%EC%A0%95%EB%B6%80%ED%84%B0-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%A0%84%EC%86%A1%EA%B9%8C%EC%A7%80%EC%9D%98-%EB%AA%A8%EB%93%A0-%EA%B3%BC%EC%A0%95-simulation/</link>
      <pubDate>Thu, 26 Jun 2025 23:03:48 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/https%EC%99%80-%EB%B9%84%EB%8C%80%EC%B9%AD-%ED%82%A4-%EC%B4%88%EA%B8%B0-%EC%84%A4%EC%A0%95%EB%B6%80%ED%84%B0-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%A0%84%EC%86%A1%EA%B9%8C%EC%A7%80%EC%9D%98-%EB%AA%A8%EB%93%A0-%EA%B3%BC%EC%A0%95-simulation/</guid>
      <description>&lt;p&gt;클라이언트가 서버로부터 HTTPS 프로토콜을 통해 &lt;code&gt;index.html&lt;/code&gt;을 요청하는 상황에서 TCP 핸드셰이크가 완료된 후 진행되는 TLS 과정은 크게 세 단계로 나눌 수 있습니다:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;핸드셰이크 (Handshake Phase)&lt;/li&gt;&#xA;&lt;li&gt;키 도출 (Key Derivation Phase)&lt;/li&gt;&#xA;&lt;li&gt;데이터 전송 (Data Transfer Phase)&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;tls-과정-상세-설명&#34;&gt;TLS 과정 상세 설명&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;1. TLS 핸드셰이크 (Handshake Phase)&lt;/strong&gt; TLS 핸드셰이크 단계는 클라이언트와 서버가 안전한 통신을 위해 필요한 매개변수와 키를 설정하는 과정입니다. 이 단계에서는 다음의 중요한 과정들이 진행됩니다:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;클라이언트 &amp;ldquo;Hello&amp;rdquo; 메시지 전송&lt;/strong&gt;:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;클라이언트(Bob)는 서버(Alice)에게 &lt;strong&gt;지원하는 암호화 알고리즘 목록&lt;/strong&gt;을 보냅니다. 이 목록에는 대칭키 알고리즘 (예: AES), 공개키 알고리즘 (예: RSA), HMAC 알고리즘 (예: MD5 또는 SHA-1) 등이 포함될 수 있습니다.&lt;/li&gt;&#xA;&lt;li&gt;또한, **클라이언트 논스(Client Nonce)**를 함께 전송합니다. 논스는 프로토콜에서 한 번만 사용되는 고유한 숫자이며, 재생 공격(playback attack)을 방지하고 상대방이 &amp;lsquo;살아있는(live)&amp;rsquo; 상태임을 확인하는 데 사용됩니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;서버 &amp;ldquo;Hello&amp;rdquo; 및 인증서 응답&lt;/strong&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>인사이트, 제안, 주장의 차이점</title>
      <link>http://localhost:1313/02.inbox/%EC%9D%B8%EC%82%AC%EC%9D%B4%ED%8A%B8-%EC%A0%9C%EC%95%88-%EC%A3%BC%EC%9E%A5%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90/</link>
      <pubDate>Mon, 23 Jun 2025 21:01:15 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EC%9D%B8%EC%82%AC%EC%9D%B4%ED%8A%B8-%EC%A0%9C%EC%95%88-%EC%A3%BC%EC%9E%A5%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90/</guid>
      <description>&lt;h3 id=&#34;인사이트-제안-주장의-차이점&#34;&gt;인사이트, 제안, 주장의 차이점&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;인사이트(Insight): 관찰·분석을 통해 얻은 흥미로운 사실이나 트렌드 공유&lt;br&gt;&#xA;예) “최근에 이런 현상이 있더라.”&lt;/li&gt;&#xA;&lt;li&gt;제안(Suggestion): 문제 해결을 위한 여러 옵션을 제시&lt;br&gt;&#xA;예) “이렇게 해보는 건 어떨까요?”&lt;/li&gt;&#xA;&lt;li&gt;주장(Assertion): 구체적이고 명확한 방향성과 행동을 제시하며, 그에 대한 책임을 본인이 짐&lt;br&gt;&#xA;예) “이렇게 해야 합니다. 제가 책임지고 추진하겠습니다.”&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;왜-주장이-중요한가&#34;&gt;왜 ‘주장’이 중요한가?&lt;/h3&gt;&#xA;&lt;p&gt;인사이트와 제안만으로는 실제 변화나 실행이 일어나지 않음&lt;br&gt;&#xA;주장은 행동과 결과에 대한 책임을 동반, 실제로 무언가를 ‘움직이게’ 만듦&lt;br&gt;&#xA;조직 내에서 영향력을 가지려면, 단순히 정보 전달이 아니라 본인만의 관점과 실행 의지가 필요&lt;/p&gt;</description>
    </item>
    <item>
      <title>대칭키 비대칭기 암호화</title>
      <link>http://localhost:1313/02.inbox/%EB%8C%80%EC%B9%AD%ED%82%A4-%EB%B9%84%EB%8C%80%EC%B9%AD%EA%B8%B0-%EC%95%94%ED%98%B8%ED%99%94/</link>
      <pubDate>Fri, 20 Jun 2025 19:29:29 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EB%8C%80%EC%B9%AD%ED%82%A4-%EB%B9%84%EB%8C%80%EC%B9%AD%EA%B8%B0-%EC%95%94%ED%98%B8%ED%99%94/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;단방향 암호화 : 일종의 해시&#xA;&lt;ul&gt;&#xA;&lt;li&gt;단일문자 대응 암호&lt;/li&gt;&#xA;&lt;li&gt;블록 암호화&#xA;&lt;ul&gt;&#xA;&lt;li&gt;PGP TLS IPsec&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;, SHA-256, SHA-1, MD5 등&lt;/li&gt;&#xA;&lt;li&gt;db 에 비밀번호를 저장할 떄는 단방향 암호화&lt;/li&gt;&#xA;&lt;li&gt;데이터 무결성 검증 (예: 파일 해시 비교, TCP UDP 의 checksum)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;양방향 암호화&#xA;&lt;ul&gt;&#xA;&lt;li&gt;대칭키: 암호화와 복호화에 동일한 키를 사용하는 암호 방식이다. $K_{a} = K_{b}$&#xA;&lt;ul&gt;&#xA;&lt;li&gt;AES, DES&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;비대칭키: 개인키(비밀) 공개키(공개)로 키가 나뉘며 1개의 키로 암호화 1개의 키로 복호화 하는 방법 $K_{a} \neq K_{b}$&#xA;&lt;ul&gt;&#xA;&lt;li&gt;server or client: $A, B$&lt;/li&gt;&#xA;&lt;li&gt;공개키: $K^{+}&lt;em&gt;{A,B}$ , 개인키: $K^{-}&lt;/em&gt;{A,B}$&lt;/li&gt;&#xA;&lt;li&gt;public key 암호화 =&amp;gt; 종단간 암호화&#xA;&lt;ul&gt;&#xA;&lt;li&gt;$K^{+}&lt;em&gt;{A}(K^{-}&lt;/em&gt;{A}(m)) = m$&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;private key 암호화 =&amp;gt; 인증&#xA;&lt;ul&gt;&#xA;&lt;li&gt;$K^{-}&lt;em&gt;{A}(K^{+}&lt;/em&gt;{A}(m)) = m$&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;기밀성&lt;br&gt;&#xA;메세지 무결성&lt;br&gt;&#xA;종단점 인증&lt;br&gt;&#xA;운영보안&lt;br&gt;&#xA;운영보안&#xA;블럭 암호화&lt;br&gt;&#xA;k == 64 이면 64 비트블록으로 쪼개어 각 블록을 독립적으로 암호화 한다&lt;/p&gt;</description>
    </item>
    <item>
      <title>mac java 관리</title>
      <link>http://localhost:1313/02.inbox/mac-java-%EA%B4%80%EB%A6%AC/</link>
      <pubDate>Fri, 20 Jun 2025 02:16:33 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/mac-java-%EA%B4%80%EB%A6%AC/</guid>
      <description>&lt;p&gt;apple 에서 관리되는 방식이므로 brew 패키지 관리자를 통해 하는 방법이 아니다&lt;/p&gt;&#xA;&lt;p&gt;설치된 java 보기&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/usr/libexec/java_home -verbose &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol&gt;&#xA;&lt;li&gt;모든 JDK는 기본 위치인 &lt;code&gt;/Library/Java/JavaVirtualMachines&lt;/code&gt;에 놔두어집니다. 시스템은 기본적으로 가장 높은 버전을 선택합니다.&lt;/li&gt;&#xA;&lt;li&gt;기본 선택에서 제외하려면 해당 JDK의 &lt;code&gt;Contents/Info.plist&lt;/code&gt; 파일 이름을 &lt;code&gt;Info.plist.disabled&lt;/code&gt;로 변경합니다. 이렇게 하면 &lt;code&gt;$JAVA_HOME&lt;/code&gt;이 해당 JDK를 가리키거나 스크립트나 설정에서 명시적으로 참조할 때 해당 JDK를 여전히 사용할 수 있습니다. 단지 시스템의 &lt;code&gt;java&lt;/code&gt; 명령어에서는 무시됩니다.&lt;/li&gt;&#xA;&lt;li&gt;시스템 런처는 &lt;code&gt;Info.plist&lt;/code&gt; 파일이 있는 JDK 중 가장 높은 버전을 사용합니다.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;삭제할 때 여기도 확인&lt;/p&gt;</description>
    </item>
    <item>
      <title>벨만 포드 알고리즘 상세과정</title>
      <link>http://localhost:1313/02.inbox/%EB%B2%A8%EB%A7%8C-%ED%8F%AC%EB%93%9C-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EC%83%81%EC%84%B8%EA%B3%BC%EC%A0%95/</link>
      <pubDate>Thu, 12 Jun 2025 15:40:59 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EB%B2%A8%EB%A7%8C-%ED%8F%AC%EB%93%9C-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EC%83%81%EC%84%B8%EA%B3%BC%EC%A0%95/</guid>
      <description>&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250612154056-1749710456596-image.png&#34; alt=&#34; (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;이 표는 시작 노드 &lt;strong&gt;u&lt;/strong&gt;에서 다른 모든 노드(v, w, x, y, z)까지의 최단 거리를 벨만-포드 알고리즘을 사용하여 찾는 과정을 보여줍니다. 벨만-포드 알고리즘은 &lt;strong&gt;거쳐가는 간선(hop)의 개수를 1개부터 점차 늘려가며&lt;/strong&gt; 최단 거리를 갱신하는 방식입니다.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-기본-개념-벨만-포드-알고리즘&#34;&gt;## 기본 개념: 벨만-포드 알고리즘&lt;/h3&gt;&#xA;&lt;p&gt;벨만-포드 알고리즘의 핵심 아이디어는 다음과 같습니다.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;k개의 간선까지만 사용했을 때의 최단 거리&lt;/strong&gt;를 계산합니다.&lt;/li&gt;&#xA;&lt;li&gt;이전 단계(k-1개 간선 사용)의 최단 거리 정보를 이용해 현재 단계(k개 간선 사용)의 최단 거리를 갱신합니다.&lt;/li&gt;&#xA;&lt;li&gt;공식: &lt;code&gt;D[u] &amp;gt; D[v] + cost(v, u)&lt;/code&gt; 이면 &lt;code&gt;D[u] = D[v] + cost(v, u)&lt;/code&gt;로 갱신합니다. (v를 거쳐 u로 가는 거리가 더 짧다면 갱신)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;주어진 표에서 &amp;ldquo;up to k hops&amp;quot;는 최대 k개의 간선을 사용했을 때 &lt;strong&gt;u&lt;/strong&gt;로부터 각 노드까지의 최단 거리를 의미합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>우분투 리눅스 환경 구성</title>
      <link>http://localhost:1313/02.inbox/%EC%9A%B0%EB%B6%84%ED%88%AC-%EB%A6%AC%EB%88%85%EC%8A%A4-%ED%99%98%EA%B2%BD-%EA%B5%AC%EC%84%B1/</link>
      <pubDate>Thu, 05 Jun 2025 10:58:58 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EC%9A%B0%EB%B6%84%ED%88%AC-%EB%A6%AC%EB%88%85%EC%8A%A4-%ED%99%98%EA%B2%BD-%EA%B5%AC%EC%84%B1/</guid>
      <description>&lt;h2 id=&#34;각-언어별-환경구성&#34;&gt;각 언어별 환경구성&lt;/h2&gt;&#xA;&lt;h3 id=&#34;python&#34;&gt;python&lt;/h3&gt;&#xA;&lt;p&gt;ppa 를 통해 python 의 각 버전을 설치&#xA;기본적으로 full 버전을 설치, 제안인 dev 버전도 설치&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ apt depends python3.12-full&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3.12-full&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Depends: python3.12 &lt;span style=&#34;color:#f92672&#34;&gt;(=&lt;/span&gt; 3.12.8-1+jammy1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Depends: libpython3.12-testsuite&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Depends: python3.12-venv &lt;span style=&#34;color:#f92672&#34;&gt;(=&lt;/span&gt; 3.12.8-1+jammy1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Depends: idle-python3.12&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Depends: python3.12-gdbm&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Depends: python3.12-lib2to3&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Depends: python3.12-tk&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Depends: ca-certificates&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Recommends: python3.12-examples&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Suggests: python3.12-dev&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;파이썬 인터브리터를 변경하는방법&#xA;/bin 폴더를 ln 을 조작함&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lrwxrwxrwx &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root      &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt; Nov &lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt; 19:51 python -&amp;gt; python3.12*&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lrwxrwxrwx &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root      &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt; Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt; 21:06 python3 -&amp;gt; python3.10*&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rwxr-xr-x &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;5941832&lt;/span&gt; Nov  &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; 05:22 python3.10*&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rwxr-xr-x &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;7894408&lt;/span&gt; Oct  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; 17:52 python3.12*&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lrwxrwxrwx &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root      &lt;span style=&#34;color:#ae81ff&#34;&gt;34&lt;/span&gt; Oct  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; 17:52 python3.12-config -&amp;gt; x86_64-linux-gnu-python3.12-config*&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;python3 의 경우 우분투가 사용하는 버전&#xA;python 의 경우 내가 사용하는 버전&#xA;&lt;strong&gt;패키지 관리자&lt;/strong&gt;&#xA;get-pip.py 를 통해 설치&#xA;get-pip.py 의 경우 ~/.local 에 설치되며&#xA;변경시 get-pip 를 다시 실행해서 설치한다&lt;/p&gt;</description>
    </item>
    <item>
      <title>빌드(컴파일) 과정</title>
      <link>http://localhost:1313/02.inbox/%EB%B9%8C%EB%93%9C%EC%BB%B4%ED%8C%8C%EC%9D%BC-%EA%B3%BC%EC%A0%95/</link>
      <pubDate>Thu, 05 Jun 2025 10:26:11 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EB%B9%8C%EB%93%9C%EC%BB%B4%ED%8C%8C%EC%9D%BC-%EA%B3%BC%EC%A0%95/</guid>
      <description>&lt;h2 id=&#34;과정별-순서&#34;&gt;과정별 순서&lt;/h2&gt;&#xA;&lt;h2 id=&#34;요약&#34;&gt;요약&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240104121023.png&#34; alt=&#34; (Image resource not found)&#34; &gt;%20image%2020240104121023.png)&lt;/p&gt;&#xA;&lt;h2 id=&#34;전처리기&#34;&gt;전처리기&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;gcc -E program.c -o program.i&lt;/code&gt;&#xA;옵션 : &lt;code&gt;-E  Preprocess only; do not compile, assemble or link.&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;헤더 파일 삽입&lt;/strong&gt; : #include 지시문을 만나면 해당하는 헤더 파일을 찾아 &lt;strong&gt;헤더 파일에 있는 모든 내용을 복사해서 소스 코드에 삽입&lt;/strong&gt;한다. 즉, 헤더 파일은 컴파일에 사용되지 않고 소스 코드 파일 내에 전부 복사된다. 헤더 파일에 선언된 함수 원형은 후에 링킹 과정을 통해 실제로 함수가 정의되어 있는 오브젝트 파일(컴파일된 소스 코드 파일)과 결합한다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>주소 바인딩 실습(소스코드 부터 프로세스까지)</title>
      <link>http://localhost:1313/02.inbox/%EC%A3%BC%EC%86%8C-%EB%B0%94%EC%9D%B8%EB%94%A9-%EC%8B%A4%EC%8A%B5%EC%86%8C%EC%8A%A4%EC%BD%94%EB%93%9C-%EB%B6%80%ED%84%B0-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%EA%B9%8C%EC%A7%80/</link>
      <pubDate>Tue, 03 Jun 2025 05:44:08 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EC%A3%BC%EC%86%8C-%EB%B0%94%EC%9D%B8%EB%94%A9-%EC%8B%A4%EC%8A%B5%EC%86%8C%EC%8A%A4%EC%BD%94%EB%93%9C-%EB%B6%80%ED%84%B0-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%EA%B9%8C%EC%A7%80/</guid>
      <description>&lt;h2 id=&#34;주소-바인딩address-binding-과정-심층-분석&#34;&gt;주소 바인딩(Address Binding) 과정 심층 분석&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-주소-바인딩의-개념과-목적&#34;&gt;1. 주소 바인딩의 개념과 목적&lt;/h3&gt;&#xA;&lt;p&gt;**주소 바인딩(Address Binding)**이란 프로그램의 소스 코드에 사용된 변수나 함수 같은 심볼릭 주소(Symbolic Address)가 실제 물리 메모리(Physical Memory)의 주소로 변환되는 전체 과정을 의미합니다. 이 과정은 컴퓨터가 프로그램을 실행하기 위한 핵심적인 메커니즘입니다.&lt;/p&gt;&#xA;&lt;h4 id=&#34;목적&#34;&gt;목적&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;재배치(Relocation)&lt;/strong&gt;: 프로그램을 메모리의 어느 위치에든 적재하여 실행할 수 있도록 합니다. 만약 주소가 고정되어 있다면 여러 프로그램을 동시에 실행하기 어렵습니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;메모리 보호(Memory Protection)&lt;/strong&gt;: 각 프로세스가 자신에게 할당된 메모리 영역만 접근하도록 격리하여 시스템의 안정성을 높입니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;메모리 효율성 증대&lt;/strong&gt;: 가상 메모리(Virtual Memory), 공유 라이브러리(Shared Library) 등의 기법을 통해 한정된 물리 메모리를 여러 프로세스가 효율적으로 나누어 사용할 수 있게 합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;본 문서는 리눅스 CLI 환경에서 제공하는 다양한 도구를 활용하여, &lt;strong&gt;컴파일 → 링크 → 적재 → 실행&lt;/strong&gt; 각 단계에서 주소 바인딩이 어떻게 이루어지는지 구체적인 명령과 출력을 통해 심층적으로 추적하고 분석하는 것을 목표로 합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>h2 database 사용법</title>
      <link>http://localhost:1313/02.inbox/h2-database-%EC%82%AC%EC%9A%A9%EB%B2%95/</link>
      <pubDate>Mon, 26 May 2025 14:22:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/h2-database-%EC%82%AC%EC%9A%A9%EB%B2%95/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;다운로드 링크&lt;br&gt;&#xA;&lt;a href=&#34;https://www.h2database.com/html/download.html&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;h2 homepage link&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;tcp 포트&lt;/th&gt;&#xA;          &lt;th&gt;웹 접근 포트&lt;/th&gt;&#xA;          &lt;th&gt;file 접근&lt;/th&gt;&#xA;          &lt;th&gt;TCP 접근&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;TCP:9092&lt;/td&gt;&#xA;          &lt;td&gt;TCP:8082&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;jdbc:h2:~/test&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;jdbc:h2:tcp://&amp;lt;서버IP&amp;gt;:9092/~/test&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;main&#34;&gt;main&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;h2/bin/h2.sh&lt;/code&gt; == &#x9;&lt;code&gt;java -cp h2-2.3.232.jar org.h2.tools.Server -tcp -web&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;-tcp&lt;/code&gt;: TCP 서버 실행&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;-tcpAllowOthers&lt;/code&gt;: TCP 서버에 외부 IP에서 접속 가능하게 함&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;-web&lt;/code&gt;: 웹 콘솔 실행&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;-webAllowOthers&lt;/code&gt;: 웹 콘솔에 외부 IP에서 접속 가능하게 함&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;webGUI 기본&#xA;&lt;ul&gt;&#xA;&lt;li&gt;link path &lt;code&gt;localhost:8082&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;cli&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;java -cp h2-2.3.232.jar org.h2.tools.Shell&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;추가-도구&#34;&gt;추가 도구&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;strong&gt;도구명&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;설명&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;사용 예시&lt;/strong&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;RunScript&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;SQL 스크립트 파일을 실행하여 데이터베이스 초기화 또는 변경 적용&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;bash java -cp h2-*.jar org.h2.tools.RunScript -url jdbc:h2:~/test -user sa -script init.sql &lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;Recover&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;크래시나 오류 후 데이터베이스 복구&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;bash java -cp h2-*.jar org.h2.tools.Recover -dir ~/h2db/ &lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;ChangeFileEncryption&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;데이터베이스 파일 암호화 방식 변경&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;bash java -cp h2-*.jar org.h2.tools.ChangeFileEncryption -dir ~/h2db/ -oldPassword oldpass -newPassword newpass &lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;RunScript&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>sse (server sent event)</title>
      <link>http://localhost:1313/02.inbox/sse-server-sent-event/</link>
      <pubDate>Mon, 26 May 2025 14:09:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/sse-server-sent-event/</guid>
      <description>&lt;h3 id=&#34;back&#34;&gt;Back&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;package&lt;/span&gt; com.example.sse.controller;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; org.springframework.http.MediaType;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; org.springframework.web.bind.annotation.GetMapping;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; org.springframework.web.bind.annotation.RestController;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; org.springframework.web.servlet.mvc.method.annotation.SseEmitter;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; java.io.IOException;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; java.util.Random;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; java.util.concurrent.ExecutorService;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; java.util.concurrent.Executors;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@RestController&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;SseController&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;final&lt;/span&gt; Random random &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Random();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;@GetMapping&lt;/span&gt;(value &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/sse&amp;#34;&lt;/span&gt;, produces &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; MediaType.&lt;span style=&#34;color:#a6e22e&#34;&gt;TEXT_EVENT_STREAM_VALUE&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; SseEmitter &lt;span style=&#34;color:#a6e22e&#34;&gt;handleSse&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        SseEmitter emitter &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; SseEmitter(60_000L); &lt;span style=&#34;color:#75715e&#34;&gt;// 타임아웃 설정&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;//&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ExecutorService executor &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Executors.&lt;span style=&#34;color:#a6e22e&#34;&gt;newSingleThreadExecutor&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        executor.&lt;span style=&#34;color:#a6e22e&#34;&gt;execute&lt;/span&gt;(() &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; 10; i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) { &lt;span style=&#34;color:#75715e&#34;&gt;// 10번의 무작위 이벤트&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; delay &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; random.&lt;span style=&#34;color:#a6e22e&#34;&gt;nextInt&lt;/span&gt;(3000) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; 1000; &lt;span style=&#34;color:#75715e&#34;&gt;// 1~4초 사이 랜덤 지연&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    Thread.&lt;span style=&#34;color:#a6e22e&#34;&gt;sleep&lt;/span&gt;(delay);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    String eventData &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Event at &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; System.&lt;span style=&#34;color:#a6e22e&#34;&gt;currentTimeMillis&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    emitter.&lt;span style=&#34;color:#a6e22e&#34;&gt;send&lt;/span&gt;(eventData);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                emitter.&lt;span style=&#34;color:#a6e22e&#34;&gt;complete&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            } &lt;span style=&#34;color:#66d9ef&#34;&gt;catch&lt;/span&gt; (IOException &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; InterruptedException e) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                emitter.&lt;span style=&#34;color:#a6e22e&#34;&gt;completeWithError&lt;/span&gt;(e);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            } &lt;span style=&#34;color:#66d9ef&#34;&gt;finally&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                executor.&lt;span style=&#34;color:#a6e22e&#34;&gt;shutdown&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        });&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; emitter;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;produces = MediaType.TEXT_EVENT_STREAM_VALUE&lt;/code&gt;: 클라이언트에게 &lt;strong&gt;text/event-stream&lt;/strong&gt; 형식의 데이터를 보낸다는 의미 → SSE 방식.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;반환형은 &lt;code&gt;SseEmitter&lt;/code&gt; 객체이며, 서버에서 클라이언트로 일방향 통신을 가능하게 합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;SseEmitter emitter = new SseEmitter(60_000L); // 타임아웃 60초&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;클라이언트가 60초 동안 응답을 받지 않으면 연결이 종료됩니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;별도의 스레드에서 비동기적으로 작업 수행.&lt;/li&gt;&#xA;&lt;li&gt;총 10번의 이벤트를 랜덤한 시간 간격(1~4초)으로 전송.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;emitter.send(data)&lt;/code&gt;로 클라이언트에게 데이터를 실시간 전송.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;front&#34;&gt;Front&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lang&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ko&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;charset&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;SSE 실시간 이벤트&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;h2&lt;/span&gt;&amp;gt;실시간 이벤트 수신&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;h2&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;ul&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;eventList&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;ul&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;eventSource&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;EventSource&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/sse&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;eventSource&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;onmessage&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;event&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;li&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; document.&lt;span style=&#34;color:#a6e22e&#34;&gt;createElement&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;li&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;li&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;textContent&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;event&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            document.&lt;span style=&#34;color:#a6e22e&#34;&gt;getElementById&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;eventList&amp;#34;&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;appendChild&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;li&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        };&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;eventSource&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;onerror&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;error&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SSE 오류:&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        };&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>register x64</title>
      <link>http://localhost:1313/02.inbox/register-x64/</link>
      <pubDate>Sun, 25 May 2025 23:35:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/register-x64/</guid>
      <description>&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240417101228.png&#34; alt=&#34; (Image resource not found)&#34; &gt;%20image%2020240417101228.png)&lt;/p&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240417225940.png&#34; alt=&#34;Pasted image 20240417225940 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;vscode-c-디버깅-시에-나오는-레지스터-종류&#34;&gt;vscode c 디버깅 시에 나오는 레지스터 종류&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;other register :&#xA;&lt;ul&gt;&#xA;&lt;li&gt;x0 - x28&lt;/li&gt;&#xA;&lt;li&gt;fp&lt;/li&gt;&#xA;&lt;li&gt;w0 - w28&lt;/li&gt;&#xA;&lt;li&gt;v0 - v31&lt;/li&gt;&#xA;&lt;li&gt;fpsr&lt;/li&gt;&#xA;&lt;li&gt;fpsr&lt;/li&gt;&#xA;&lt;li&gt;far&lt;/li&gt;&#xA;&lt;li&gt;esr&lt;/li&gt;&#xA;&lt;li&gt;exception&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;cpu&#xA;&lt;ul&gt;&#xA;&lt;li&gt;lr&lt;/li&gt;&#xA;&lt;li&gt;sp&lt;/li&gt;&#xA;&lt;li&gt;pc&lt;/li&gt;&#xA;&lt;li&gt;cpsr&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;IEEE single&#xA;&lt;ul&gt;&#xA;&lt;li&gt;s0 - s31&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;IEEE double&#xA;&lt;ul&gt;&#xA;&lt;li&gt;d0 - d31&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>TCP TELNET 통신 과정 시뮬레이션</title>
      <link>http://localhost:1313/02.inbox/tcp-telnet-%ED%86%B5%EC%8B%A0-%EA%B3%BC%EC%A0%95-%EC%8B%9C%EB%AE%AC%EB%A0%88%EC%9D%B4%EC%85%98/</link>
      <pubDate>Wed, 21 May 2025 09:08:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/tcp-telnet-%ED%86%B5%EC%8B%A0-%EA%B3%BC%EC%A0%95-%EC%8B%9C%EB%AE%AC%EB%A0%88%EC%9D%B4%EC%85%98/</guid>
      <description>&lt;h2 id=&#34;telnet-tcp-기반-패킷-이동-시뮬레이션-senderreceiver-윈도우-및-패킷-내용&#34;&gt;Telnet (TCP 기반) 패킷 이동 시뮬레이션: Sender/Receiver 윈도우 및 패킷 내용&lt;/h2&gt;&#xA;&lt;p&gt;Telnet은 애플리케이션 계층 프로토콜이며, 전송 계층에서는 **TCP(Transmission Control Protocol)**를 사용합니다. TCP는 신뢰성 있는 데이터 전송을 보장하기 위해 &lt;strong&gt;연결 설정(3-way handshake)&lt;/strong&gt;, &lt;strong&gt;데이터 전송(슬라이딩 윈도우, 확인 응답)&lt;/strong&gt;, &lt;strong&gt;연결 해제(4-way handshake)&lt;/strong&gt; 과정을 거칩니다.&lt;/p&gt;&#xA;&lt;p&gt;아래는 Telnet 클라이언트(Sender)가 Telnet 서버(Receiver)에 접속하여 간단한 데이터를 주고받는 과정을 가상으로 시뮬레이션한 결과입니다. 실제 환경에서는 윈도우 크기 변화, 패킷 손실 및 재전송 등 더 복잡한 상황이 발생할 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>linux locale setting</title>
      <link>http://localhost:1313/02.inbox/linux-locale-setting/</link>
      <pubDate>Tue, 20 May 2025 18:55:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/linux-locale-setting/</guid>
      <description>&lt;h3 id=&#34;systemd-기반-리눅스-배포판&#34;&gt;systemd 기반 리눅스 배포판&lt;/h3&gt;&#xA;&lt;p&gt;&lt;code&gt;localectl&lt;/code&gt; 명령은 &lt;strong&gt;systemd 기반 리눅스 배포판&lt;/strong&gt; 에서 사용할 수 있는 시스템 관리 도구로, 로케일(locale), 키보드 레이아웃, 가상 콘솔(Console) 설정 등을 관리하는 데 사용됩니다.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;1. 로케일 및 키보드 설정 확인&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# localectl &lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   System Locale: LANG&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;en_US.UTF-8&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       VC Keymap: n/a&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      X11 Layout: us&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       X11 Model: pc105&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;strong&gt;형식&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;의미&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;System Locale&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;현재 설정되어 있는 로케일(Locale)을 표시합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;VC Keymap&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;가상콘솔에서 사용하는 키맵을 표시합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;X11 Layout&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Xwindows에서 사용되는 키보드 레이아웃을 표시합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;X11 Model&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;키보드 모델을 표시 합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;&lt;strong&gt;2. 설정 가능한 로케일(Locale) 확인&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ipv4 vs ipv6</title>
      <link>http://localhost:1313/02.inbox/ipv4-vs-ipv6/</link>
      <pubDate>Wed, 07 May 2025 21:26:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/ipv4-vs-ipv6/</guid>
      <description>&lt;h3 id=&#34;-ipv4-헤더-필드&#34;&gt;📋 &lt;strong&gt;IPv4 헤더 필드&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;필드 이름&lt;/th&gt;&#xA;          &lt;th&gt;크기&lt;/th&gt;&#xA;          &lt;th&gt;간단 설명&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Version&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;4비트&lt;/td&gt;&#xA;          &lt;td&gt;IP 버전 (예: IPv4, IPv6) 지정&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Header Length (IHL)&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;4비트&lt;/td&gt;&#xA;          &lt;td&gt;헤더 길이 (옵션 유무에 따라 달라짐)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Type of Service (TOS)&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;8비트&lt;/td&gt;&#xA;          &lt;td&gt;QoS 설정 (DSCP + ECN 포함)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Total Length&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;16비트&lt;/td&gt;&#xA;          &lt;td&gt;전체 패킷 크기 (헤더 + 데이터)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Identification&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;16비트&lt;/td&gt;&#xA;          &lt;td&gt;프래그먼트 식별을 위한 고유 번호&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Flags&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;3비트&lt;/td&gt;&#xA;          &lt;td&gt;프래그먼트 가능 여부 표시 (예: DF, MF)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Fragment Offset&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;13비트&lt;/td&gt;&#xA;          &lt;td&gt;조각난 패킷의 위치 정보&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Time To Live (TTL)&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;8비트&lt;/td&gt;&#xA;          &lt;td&gt;패킷 수명 (라우터 통과 시 감소, 0이 되면 폐기)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Protocol&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;8비트&lt;/td&gt;&#xA;          &lt;td&gt;상위 계층 프로토콜 (TCP=6, UDP=17 등)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Header Checksum&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;16비트&lt;/td&gt;&#xA;          &lt;td&gt;헤더 오류 검출용 체크섬&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Source IP Address&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;32비트&lt;/td&gt;&#xA;          &lt;td&gt;보낸 사람 IP 주소&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Destination IP Address&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;32비트&lt;/td&gt;&#xA;          &lt;td&gt;받는 사람 IP 주소&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Options (선택적)&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;가변&lt;/td&gt;&#xA;          &lt;td&gt;추가 기능 제공 (보통 사용 안 함)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Data (Payload)&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;가변&lt;/td&gt;&#xA;          &lt;td&gt;실제 전송할 데이터 (TCP/UDP 세그먼트 등)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;-ipv6-헤더-필드&#34;&gt;📋 &lt;strong&gt;IPv6 헤더 필드&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;필드 이름&lt;/th&gt;&#xA;          &lt;th&gt;크기&lt;/th&gt;&#xA;          &lt;th&gt;간단 설명&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Version&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;4비트&lt;/td&gt;&#xA;          &lt;td&gt;IP 버전 번호 (IPv6이므로 값은 항상 &lt;code&gt;6&lt;/code&gt;)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Traffic Class&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;8비트&lt;/td&gt;&#xA;          &lt;td&gt;트래픽 우선순위 지정 (IPv4의 TOS/DSCP와 유사, QoS 지원)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Flow Label&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;20비트&lt;/td&gt;&#xA;          &lt;td&gt;특정 패킷 흐름(예: 실시간 음성/영상) 식별용 라벨 (QoS 및 Flow 기반 처리 지원)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Payload Length&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;16비트&lt;/td&gt;&#xA;          &lt;td&gt;헤더 이후 데이터(payload)의 길이 (바이트 단위)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Next Header&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;8비트&lt;/td&gt;&#xA;          &lt;td&gt;다음 헤더의 타입을 지정 (TCP=6, UDP=17 등, IPv4의 Protocol 필드와 유사)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Hop Limit&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;8비트&lt;/td&gt;&#xA;          &lt;td&gt;패킷이 지나갈 수 있는 최대 라우터 수 (IPv4의 TTL 필드와 동일한 역할)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Source Address&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;128비트&lt;/td&gt;&#xA;          &lt;td&gt;보낸 호스트의 IPv6 주소&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Destination Address&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;128비트&lt;/td&gt;&#xA;          &lt;td&gt;받는 호스트의 IPv6 주소&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Data (Payload)&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;가변&lt;/td&gt;&#xA;          &lt;td&gt;실제 전송되는 데이터 (TCP/UDP 세그먼트 또는 다른 프로토콜 데이터)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;-ipv4-vs-ipv6-헤더-비교표-기능별-분류&#34;&gt;📊 &lt;strong&gt;IPv4 vs IPv6 헤더 비교표 (기능별 분류)&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;1--버전-및-기본-정보&#34;&gt;1. ✅ &lt;strong&gt;버전 및 기본 정보&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;기능 그룹&lt;/th&gt;&#xA;          &lt;th&gt;IPv4 필드&lt;/th&gt;&#xA;          &lt;th&gt;크기&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;          &lt;th&gt;IPv6 필드&lt;/th&gt;&#xA;          &lt;th&gt;크기&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;IP 버전&lt;/td&gt;&#xA;          &lt;td&gt;Version&lt;/td&gt;&#xA;          &lt;td&gt;4비트&lt;/td&gt;&#xA;          &lt;td&gt;IP 버전 식별 (IPv4=4, IPv6=6)&lt;/td&gt;&#xA;          &lt;td&gt;Version&lt;/td&gt;&#xA;          &lt;td&gt;4비트&lt;/td&gt;&#xA;          &lt;td&gt;IP 버전 식별 (IPv6=6)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;헤더 길이&lt;/td&gt;&#xA;          &lt;td&gt;Header Length (IHL)&lt;/td&gt;&#xA;          &lt;td&gt;4비트&lt;/td&gt;&#xA;          &lt;td&gt;헤더 총 길이 (옵션 포함 여부에 따라 다름)&lt;/td&gt;&#xA;          &lt;td&gt;-&lt;/td&gt;&#xA;          &lt;td&gt;-&lt;/td&gt;&#xA;          &lt;td&gt;IPv6는 고정 헤더 길이 (40바이트)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;전체 패킷 크기&lt;/td&gt;&#xA;          &lt;td&gt;Total Length&lt;/td&gt;&#xA;          &lt;td&gt;16비트&lt;/td&gt;&#xA;          &lt;td&gt;헤더 + 데이터 전체 크기&lt;/td&gt;&#xA;          &lt;td&gt;Payload Length&lt;/td&gt;&#xA;          &lt;td&gt;16비트&lt;/td&gt;&#xA;          &lt;td&gt;헤더 이후 데이터(payload) 길이만 지정&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h4 id=&#34;2--주소-지정-및-라우팅&#34;&gt;2. 🎯 &lt;strong&gt;주소 지정 및 라우팅&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;기능 그룹&lt;/th&gt;&#xA;          &lt;th&gt;IPv4 필드&lt;/th&gt;&#xA;          &lt;th&gt;크기&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;          &lt;th&gt;IPv6 필드&lt;/th&gt;&#xA;          &lt;th&gt;크기&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;출발지 주소&lt;/td&gt;&#xA;          &lt;td&gt;Source IP Address&lt;/td&gt;&#xA;          &lt;td&gt;32비트&lt;/td&gt;&#xA;          &lt;td&gt;송신자 IPv4 주소&lt;/td&gt;&#xA;          &lt;td&gt;Source Address&lt;/td&gt;&#xA;          &lt;td&gt;128비트&lt;/td&gt;&#xA;          &lt;td&gt;송신자 IPv6 주소&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;목적지 주소&lt;/td&gt;&#xA;          &lt;td&gt;Destination IP Address&lt;/td&gt;&#xA;          &lt;td&gt;32비트&lt;/td&gt;&#xA;          &lt;td&gt;수신자 IPv4 주소&lt;/td&gt;&#xA;          &lt;td&gt;Destination Address&lt;/td&gt;&#xA;          &lt;td&gt;128비트&lt;/td&gt;&#xA;          &lt;td&gt;수신자 IPv6 주소&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;다음 헤더&lt;/td&gt;&#xA;          &lt;td&gt;-&lt;/td&gt;&#xA;          &lt;td&gt;-&lt;/td&gt;&#xA;          &lt;td&gt;-&lt;/td&gt;&#xA;          &lt;td&gt;Next Header&lt;/td&gt;&#xA;          &lt;td&gt;8비트&lt;/td&gt;&#xA;          &lt;td&gt;다음 헤더 유형 지정 (TCP/UDP/확장헤더 등)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h4 id=&#34;3--qos-및-트래픽-관리&#34;&gt;3. ⚙️ &lt;strong&gt;QoS 및 트래픽 관리&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;기능 그룹&lt;/th&gt;&#xA;          &lt;th&gt;IPv4 필드&lt;/th&gt;&#xA;          &lt;th&gt;크기&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;          &lt;th&gt;IPv6 필드&lt;/th&gt;&#xA;          &lt;th&gt;크기&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;트래픽 우선순위&lt;/td&gt;&#xA;          &lt;td&gt;Type of Service (TOS)&lt;/td&gt;&#xA;          &lt;td&gt;8비트&lt;/td&gt;&#xA;          &lt;td&gt;DSCP(6비트) + ECN(2비트), QoS 설정&lt;/td&gt;&#xA;          &lt;td&gt;Traffic Class&lt;/td&gt;&#xA;          &lt;td&gt;8비트&lt;/td&gt;&#xA;          &lt;td&gt;DSCP(6비트) + ECN(2비트), QoS 설정&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;흐름 식별&lt;/td&gt;&#xA;          &lt;td&gt;-&lt;/td&gt;&#xA;          &lt;td&gt;-&lt;/td&gt;&#xA;          &lt;td&gt;-&lt;/td&gt;&#xA;          &lt;td&gt;Flow Label&lt;/td&gt;&#xA;          &lt;td&gt;20비트&lt;/td&gt;&#xA;          &lt;td&gt;특정 흐름(flow) 식별용 라벨 (실시간 서비스 지원)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h4 id=&#34;4--패킷-처리-및-포워딩&#34;&gt;4. 🔄 &lt;strong&gt;패킷 처리 및 포워딩&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;기능 그룹&lt;/th&gt;&#xA;          &lt;th&gt;IPv4 필드&lt;/th&gt;&#xA;          &lt;th&gt;크기&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;          &lt;th&gt;IPv6 필드&lt;/th&gt;&#xA;          &lt;th&gt;크기&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;생존 시간&lt;/td&gt;&#xA;          &lt;td&gt;Time To Live (TTL)&lt;/td&gt;&#xA;          &lt;td&gt;8비트&lt;/td&gt;&#xA;          &lt;td&gt;패킷의 최대 홉 수 (라우터 통과 시 감소)&lt;/td&gt;&#xA;          &lt;td&gt;Hop Limit&lt;/td&gt;&#xA;          &lt;td&gt;8비트&lt;/td&gt;&#xA;          &lt;td&gt;동일한 기능 (IPv4 TTL과 동일)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;체크섬 검사&lt;/td&gt;&#xA;          &lt;td&gt;Header Checksum&lt;/td&gt;&#xA;          &lt;td&gt;16비트&lt;/td&gt;&#xA;          &lt;td&gt;헤더 오류 검출용 (매 라우터마다 재계산)&lt;/td&gt;&#xA;          &lt;td&gt;-&lt;/td&gt;&#xA;          &lt;td&gt;-&lt;/td&gt;&#xA;          &lt;td&gt;IPv6에서는 헤더 체크섬 제거 (TCP/UDP에서 처리)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;프래그먼트 처리&lt;/td&gt;&#xA;          &lt;td&gt;Identification&lt;br&gt;Flags&lt;br&gt;Fragment Offset&lt;/td&gt;&#xA;          &lt;td&gt;16+3+13비트&lt;/td&gt;&#xA;          &lt;td&gt;패킷 분할 및 조립 정보&lt;/td&gt;&#xA;          &lt;td&gt;-&lt;/td&gt;&#xA;          &lt;td&gt;-&lt;/td&gt;&#xA;          &lt;td&gt;IPv6에서는 프래그먼트 처리 소스/목적지에서만 가능&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h4 id=&#34;5--확장성-및-추가-기능&#34;&gt;5. 🔧 &lt;strong&gt;확장성 및 추가 기능&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;기능 그룹&lt;/th&gt;&#xA;          &lt;th&gt;IPv4 필드&lt;/th&gt;&#xA;          &lt;th&gt;크기&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;          &lt;th&gt;IPv6 필드&lt;/th&gt;&#xA;          &lt;th&gt;크기&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;확장 옵션&lt;/td&gt;&#xA;          &lt;td&gt;Options&lt;/td&gt;&#xA;          &lt;td&gt;가변&lt;/td&gt;&#xA;          &lt;td&gt;선택적 기능 제공 (보통 사용 안 함)&lt;/td&gt;&#xA;          &lt;td&gt;Extension Headers&lt;/td&gt;&#xA;          &lt;td&gt;가변&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;Next Header&lt;/code&gt;로 연결되는 확장 헤더 구조&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;데이터 영역&lt;/td&gt;&#xA;          &lt;td&gt;Data (Payload)&lt;/td&gt;&#xA;          &lt;td&gt;가변&lt;/td&gt;&#xA;          &lt;td&gt;실제 전송 데이터 (TCP/UDP 등)&lt;/td&gt;&#xA;          &lt;td&gt;Data (Payload)&lt;/td&gt;&#xA;          &lt;td&gt;가변&lt;/td&gt;&#xA;          &lt;td&gt;실제 전송 데이터 (TCP/UDP 등)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h4 id=&#34;-요약-비교-요약표&#34;&gt;✅ &lt;strong&gt;요약 비교 요약표&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;항목&lt;/th&gt;&#xA;          &lt;th&gt;IPv4&lt;/th&gt;&#xA;          &lt;th&gt;IPv6&lt;/th&gt;&#xA;          &lt;th&gt;특징&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;주소 길이&lt;/td&gt;&#xA;          &lt;td&gt;32비트&lt;/td&gt;&#xA;          &lt;td&gt;128비트&lt;/td&gt;&#xA;          &lt;td&gt;IPv6는 주소 고갈 문제 해결&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;헤더 길이&lt;/td&gt;&#xA;          &lt;td&gt;가변 (20~60바이트)&lt;/td&gt;&#xA;          &lt;td&gt;고정 (40바이트)&lt;/td&gt;&#xA;          &lt;td&gt;IPv6는 단순화된 헤더 구조&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;QoS 지원&lt;/td&gt;&#xA;          &lt;td&gt;TOS (DSCP + ECN)&lt;/td&gt;&#xA;          &lt;td&gt;Traffic Class (DSCP + ECN)&lt;br&gt;Flow Label&lt;/td&gt;&#xA;          &lt;td&gt;IPv6가 더 세밀한 QoS 지원&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;프래그먼트&lt;/td&gt;&#xA;          &lt;td&gt;중간 노드에서 가능&lt;/td&gt;&#xA;          &lt;td&gt;소스/목적지만 가능&lt;/td&gt;&#xA;          &lt;td&gt;IPv6는 라우터 부담 감소&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;체크섬&lt;/td&gt;&#xA;          &lt;td&gt;헤더 체크섬 있음&lt;/td&gt;&#xA;          &lt;td&gt;없음&lt;/td&gt;&#xA;          &lt;td&gt;IPv6는 TCP/UDP에서 처리&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;확장 기능&lt;/td&gt;&#xA;          &lt;td&gt;Options 필드&lt;/td&gt;&#xA;          &lt;td&gt;Extension Headers&lt;/td&gt;&#xA;          &lt;td&gt;IPv6가 더 유연한 확장 구조&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;다음 헤더&lt;/td&gt;&#xA;          &lt;td&gt;Protocol 필드&lt;/td&gt;&#xA;          &lt;td&gt;Next Header&lt;/td&gt;&#xA;          &lt;td&gt;유사한 역할 수행&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;데이터평면-제어-평면&#34;&gt;데이터평면, 제어 평면&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;데이터 평면 (Data Plane)&lt;/strong&gt;&lt;br&gt;&#xA;→ 실제 데이터 패킷을 전달하는 역할 (패킷 포워딩)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;제어 평면 (Control Plane)&lt;/strong&gt;&lt;br&gt;&#xA;→ 어떤 경로로 패킷을 보낼지 결정하는 역할 (라우팅)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;항목&lt;/th&gt;&#xA;          &lt;th&gt;데이터 평면 (Data Plane)&lt;/th&gt;&#xA;          &lt;th&gt;제어 평면 (Control Plane)&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;목적&lt;/td&gt;&#xA;          &lt;td&gt;패킷 전달 (포워딩)&lt;/td&gt;&#xA;          &lt;td&gt;경로 결정 (라우팅)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;수행 작업&lt;/td&gt;&#xA;          &lt;td&gt;패킷 수신 → 목적지 주소 확인 → 다음 홉 선택 → 전달&lt;/td&gt;&#xA;          &lt;td&gt;라우팅 프로토콜 실행, 경로 계산, 라우팅 테이블 업데이트&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;처리 속도&lt;/td&gt;&#xA;          &lt;td&gt;매우 빠름 (마이크로초 이하)&lt;/td&gt;&#xA;          &lt;td&gt;상대적으로 느림&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;사용 메커니즘&lt;/td&gt;&#xA;          &lt;td&gt;포워딩 테이블 (FIB), 캐시 등&lt;/td&gt;&#xA;          &lt;td&gt;라우팅 프로토콜 (RIP, OSPF, BGP 등)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;주요 구성 요소&lt;/td&gt;&#xA;          &lt;td&gt;라우터의 포워딩 엔진&lt;/td&gt;&#xA;          &lt;td&gt;라우터의 CPU, 라우팅 프로토콜 모듈&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;보안 영향&lt;/td&gt;&#xA;          &lt;td&gt;직접적인 패킷 유출/손실 영향&lt;/td&gt;&#xA;          &lt;td&gt;라우팅 정보 변조, 네트워크 다운 위험&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;ip-헤더-필드별로-데이터-평면--제어-평면-사용-여부-정리&#34;&gt;&lt;strong&gt;IP 헤더 필드별로 데이터 평면 / 제어 평면 사용 여부 정리&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;필드 이름&lt;/th&gt;&#xA;          &lt;th&gt;크기&lt;/th&gt;&#xA;          &lt;th&gt;간단 설명&lt;/th&gt;&#xA;          &lt;th&gt;사용되는 평면&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Version&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;4비트&lt;/td&gt;&#xA;          &lt;td&gt;IP 버전 (예: IPv4, IPv6) 지정&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;데이터 평면&lt;/strong&gt;&lt;br&gt;(패킷 포워딩 시 해석 필요)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Header Length (IHL)&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;4비트&lt;/td&gt;&#xA;          &lt;td&gt;헤더 길이 (옵션 유무에 따라 달라짐)&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;데이터 평면&lt;/strong&gt;&lt;br&gt;(헤더 파싱 및 데이터 위치 식별)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Type of Service (TOS)&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;8비트&lt;/td&gt;&#xA;          &lt;td&gt;QoS 설정 (DSCP + ECN 포함)&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;데이터 평면&lt;/strong&gt;&lt;br&gt;(QoS 기반 포워딩 정책 적용)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Total Length&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;16비트&lt;/td&gt;&#xA;          &lt;td&gt;전체 패킷 크기 (헤더 + 데이터)&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;데이터 평면&lt;/strong&gt;&lt;br&gt;(패킷 처리 및 메모리 관리를 위해 사용)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Identification&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;16비트&lt;/td&gt;&#xA;          &lt;td&gt;프래그먼트 식별을 위한 고유 번호&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;데이터 평면&lt;/strong&gt;&lt;br&gt;(프래그먼트 재조립 시 사용)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Flags&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;3비트&lt;/td&gt;&#xA;          &lt;td&gt;프래그먼트 가능 여부 표시 (예: DF, MF)&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;데이터 평면&lt;/strong&gt;&lt;br&gt;(패킷 분할 및 재조합 결정)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Fragment Offset&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;13비트&lt;/td&gt;&#xA;          &lt;td&gt;조각난 패킷의 위치 정보&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;데이터 평면&lt;/strong&gt;&lt;br&gt;(패킷 재조립 시 사용)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Time To Live (TTL)&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;8비트&lt;/td&gt;&#xA;          &lt;td&gt;패킷 수명 (라우터 통과 시 감소, 0이 되면 폐기)&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;데이터 평면&lt;/strong&gt;&lt;br&gt;(패킷 생존 시간 관리 및 폐기 결정)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Protocol&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;8비트&lt;/td&gt;&#xA;          &lt;td&gt;상위 계층 프로토콜 (TCP=6, UDP=17 등)&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;데이터 평면&lt;/strong&gt;&lt;br&gt;(상위 계층으로 전달 시 필요)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Header Checksum&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;16비트&lt;/td&gt;&#xA;          &lt;td&gt;헤더 오류 검출용 체크섬&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;데이터 평면&lt;/strong&gt;&lt;br&gt;(패킷 손상 검사 후 전달 결정)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Source IP Address&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;32비트&lt;/td&gt;&#xA;          &lt;td&gt;보낸 사람 IP 주소&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;데이터 평면&lt;/strong&gt;, &lt;strong&gt;제어 평면&lt;/strong&gt;&lt;br&gt;→ 포워딩에는 직접 사용되지 않지만, 로깅/필터링, 라우팅 프로토콜에서 활용&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Destination IP Address&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;32비트&lt;/td&gt;&#xA;          &lt;td&gt;받는 사람 IP 주소&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;제어 평면&lt;/strong&gt;, &lt;strong&gt;데이터 평면&lt;/strong&gt;&lt;br&gt;→ 가장 핵심적인 필드&lt;br&gt;→ &lt;strong&gt;제어 평면&lt;/strong&gt;: 경로 계산 (라우팅 테이블 매칭)&lt;br&gt;→ &lt;strong&gt;데이터 평면&lt;/strong&gt;: 다음 홉 선택 및 포워딩&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Options (선택적)&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;가변&lt;/td&gt;&#xA;          &lt;td&gt;추가 기능 제공 (보통 사용 안 함)&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;데이터 평면&lt;/strong&gt;&lt;br&gt;(특수한 경우에만 처리됨)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Data (Payload)&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;가변&lt;/td&gt;&#xA;          &lt;td&gt;실제 전송할 데이터 (TCP/UDP 세그먼트 등)&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;데이터 평면&lt;/strong&gt;&lt;br&gt;(포워딩 대상인 실제 데이터)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;</description>
    </item>
    <item>
      <title>IPC (massage passing)</title>
      <link>http://localhost:1313/02.inbox/ipc-massage-passing/</link>
      <pubDate>Thu, 01 May 2025 13:03:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/ipc-massage-passing/</guid>
      <description>&lt;p&gt;아래는 &lt;strong&gt;Unix에서 사용되는 다양한 프로세스 간 통신&lt;/strong&gt;(Inter-Process Communication, IPC) 방식들에 대한 &lt;strong&gt;자세한 설명&lt;/strong&gt;입니다.&lt;br&gt;&#xA;주요 내용은 다음과 같은 IPC 기법들을 포함합니다:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;Ordinary Pipe (일반 파이프)&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Named Pipe (FIFO)&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;UNIX Domain Socket&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-1-ordinary-pipe-일반-파이프&#34;&gt;🔹 1. Ordinary Pipe (일반 파이프)&lt;/h3&gt;&#xA;&lt;h4 id=&#34;-개념&#34;&gt;✅ 개념&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;pipe()&lt;/code&gt; 시스템 콜을 통해 생성됨&lt;/li&gt;&#xA;&lt;li&gt;두 개의 &lt;strong&gt;파일 디스크립터&lt;/strong&gt;(file descriptor) 반환:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;하나는 &lt;strong&gt;쓰기 전용&lt;/strong&gt;(write-end)&lt;/li&gt;&#xA;&lt;li&gt;하나는 &lt;strong&gt;읽기 전용&lt;/strong&gt;(read-end)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;데이터는 쓰기 쪽으로 넣고, 읽기 쪽에서 뺌 → &lt;strong&gt;Producer-Consumer 패턴&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;단방향(unidirectional) 통신만 지원&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;-특징&#34;&gt;✅ 특징&lt;/h4&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;항목&lt;/th&gt;&#xA;          &lt;th&gt;내용&lt;/th&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;범위&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;부모와 자식 프로세스 간만 가능 (fork 이후 공유)&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;존속성&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;프로세스 종료 시 사라짐&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;방향성&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;단방향 (한쪽에서만 보내고 한쪽에서만 받음)&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;사용 예시&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;쉘 명령어 연결 (&lt;code&gt;ls | grep &amp;quot;txt&amp;quot;&lt;/code&gt;)&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h4 id=&#34;-예제-코드&#34;&gt;✅ 예제 코드&lt;/h4&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;unistd.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; pipefd[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;pid_t&lt;/span&gt; pid;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; buf;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;pipe&lt;/span&gt;(pipefd) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;perror&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Pipe failed&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;exit&lt;/span&gt;(EXIT_FAILURE);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    pid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fork&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (pid &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) { &lt;span style=&#34;color:#75715e&#34;&gt;// Fork 실패&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;perror&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Fork failed&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;exit&lt;/span&gt;(EXIT_FAILURE);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (pid &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) { &lt;span style=&#34;color:#75715e&#34;&gt;// 자식 프로세스 (reader)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;(pipefd[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]); &lt;span style=&#34;color:#75715e&#34;&gt;// 쓰기 fd 닫기&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;read&lt;/span&gt;(pipefd[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;], &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;buf, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;write&lt;/span&gt;(STDOUT_FILENO, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;buf, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;(pipefd[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; { &lt;span style=&#34;color:#75715e&#34;&gt;// 부모 프로세스 (writer)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;(pipefd[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]); &lt;span style=&#34;color:#75715e&#34;&gt;// 읽기 fd 닫기&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;write&lt;/span&gt;(pipefd[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;], &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello from parent&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;17&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;(pipefd[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;wait&lt;/span&gt;(NULL); &lt;span style=&#34;color:#75715e&#34;&gt;// 자식 기다리기&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;이 코드는 부모가 메시지를 보내고 자식이 그것을 출력하는 간단한 파이프 예제입니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>UDP와 TCP Demultiplexing 의 이해</title>
      <link>http://localhost:1313/02.inbox/udp%EC%99%80-tcp-demultiplexing-%EC%9D%98-%EC%9D%B4%ED%95%B4/</link>
      <pubDate>Fri, 28 Mar 2025 09:53:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/udp%EC%99%80-tcp-demultiplexing-%EC%9D%98-%EC%9D%B4%ED%95%B4/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;디멀티플렉싱은 수신된 네트워크 패킷을 분석하여 해당 패킷이 어떤 소켓으로 전달되어야 하는지를 결정하는 과정&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;멀티플렉싱은 여러 응용 프로그램에서 생성된 데이터를 하나의 네트워크 인터페이스로 전송하는 과정&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;UDP와 TCP 디멀티플렉싱의 비교 분석&#xA;UDP는 디멀티플렉싱을 위해 목적지 IP 주소와 목적지 포트 번호라는 2-튜플을 사용하는 반면 8, TCP는 송신지 IP 주소, 송신지 포트 번호, 목적지 IP 주소, 목적지 포트 번호로 구성된 4-튜플을 사용합니다&#xA;&#xA;이러한 차이는 각 프로토콜의 연결 지향성 여부에서 비롯됩니다. TCP는 연결 지향적인 특성상 각 연결의 상태를 추적해야 하며, 이는 고유한 4-튜플을 통해 이루어집니다&#xA;TCP 연결은 두 특정 호스트의 두 특정 프로세스 간의 전용 통신 채널을 의미하므로, 더 자세한 식별 정보가 필요합니다. TCP의 신뢰성 있는 데이터 전송과 순서 보장 기능은 이러한 연결 상태 유지에 의존합니다.&#xA;반면, UDP는 각 데이터그램을 독립적인 단위로 취급하는 비연결형 프로토콜이므로 데이터그램을 올바른 포트에서 수신 대기 중인 애플리케이션에 전달하는 데 목적지 정보만으로 충분합니다. UDP의 이러한 단순성은 디멀티플렉싱 과정을 더 빠르고 효율적으로 만들어줍니다&#xA;이는 속도가 중요하고 일부 데이터 손실이 허용되는 애플리케이션(예: 스트리밍, 온라인 게임)에 UDP가 적합한 이유입니다.&#xA;반대로, TCP의 복잡한 디멀티플렉싱 방식은 여러 동시 연결을 통해 데이터를 안정적이고 순서대로 전달하는 데 필수적이며 3, 웹 브라우징, 파일 전송, 이메일과 같이 데이터 무결성이 중요한 애플리케이션에 적합합니다.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;udp와-tcp의-demultiplexing-이해하기&#34;&gt;UDP와 TCP의 Demultiplexing 이해하기&lt;/h3&gt;&#xA;&lt;p&gt;UDP와 TCP의 demultiplexing 차이는 각 프로토콜의 연결 방식에서 비롯됩니다. UDP는 비연결형으로, 각 데이터그램을 독립적으로 처리하며 목적지 포트만으로 충분히 데이터를 전달할 수 있습니다. 반면, TCP는 연결 지향형으로, 두 호스트 간의 특정 프로세스 쌍을 식별하기 위해 더 많은 정보(4-튜플)가 필요합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>윈도우 파일이름으로 사용할 수 없는 문자</title>
      <link>http://localhost:1313/02.inbox/%EC%9C%88%EB%8F%84%EC%9A%B0-%ED%8C%8C%EC%9D%BC%EC%9D%B4%EB%A6%84%EC%9C%BC%EB%A1%9C-%EC%82%AC%EC%9A%A9%ED%95%A0-%EC%88%98-%EC%97%86%EB%8A%94-%EB%AC%B8%EC%9E%90/</link>
      <pubDate>Thu, 27 Mar 2025 23:28:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EC%9C%88%EB%8F%84%EC%9A%B0-%ED%8C%8C%EC%9D%BC%EC%9D%B4%EB%A6%84%EC%9C%BC%EB%A1%9C-%EC%82%AC%EC%9A%A9%ED%95%A0-%EC%88%98-%EC%97%86%EB%8A%94-%EB%AC%B8%EC%9E%90/</guid>
      <description>&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;문자&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;이유&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;\&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;디렉터리의 구분자로 쓰인다.&lt;br&gt;예: &lt;code&gt;C:\\Users\\user\\Downloads\\namuwiki.url&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;/&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;디렉터리의 구분자로 쓰인다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;:&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;C:&lt;/code&gt;, &lt;code&gt;D:&lt;/code&gt;와 같은 드라이브 기호로 쓰인다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;*&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;와일드 카드로 쓰인다.&lt;br&gt;&lt;code&gt;?&lt;/code&gt;는 한 글자의 의미로 쓰이기도 하며, UNC(Universal Naming Convention)에도 사용된다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;?&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;와일드 카드로 쓰인다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&amp;quot;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;경로의 시작과 끝을 나타낸다.&lt;br&gt;예: &lt;code&gt;&amp;quot;C:\\Users\\user\\Downloads\\namuwiki.url&amp;quot;&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&amp;lt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;리다이렉트, 파이프 등 특수 문법에 쓰인다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&amp;gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;리다이렉트, 파이프 등 특수 문법에 쓰인다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;|&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;리다이렉트, 파이프 등 특수 문법에 쓰인다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;? =&amp;gt; ❓&lt;/p&gt;</description>
    </item>
    <item>
      <title>http는 stateless 한데 하위 스택의 tcp 는 stateful 이다 (HTTP1.1 기준)</title>
      <link>http://localhost:1313/02.inbox/http%EB%8A%94-stateless-%ED%95%9C%EB%8D%B0-%ED%95%98%EC%9C%84-%EC%8A%A4%ED%83%9D%EC%9D%98-tcp-%EB%8A%94-stateful-%EC%9D%B4%EB%8B%A4-http1.1-%EA%B8%B0%EC%A4%80/</link>
      <pubDate>Tue, 25 Mar 2025 15:09:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/http%EB%8A%94-stateless-%ED%95%9C%EB%8D%B0-%ED%95%98%EC%9C%84-%EC%8A%A4%ED%83%9D%EC%9D%98-tcp-%EB%8A%94-stateful-%EC%9D%B4%EB%8B%A4-http1.1-%EA%B8%B0%EC%A4%80/</guid>
      <description>&lt;h3 id=&#34;질문&#34;&gt;질문&lt;/h3&gt;&#xA;&lt;p&gt;Persistent HTTP 에서 기본적으로 http 는 stateless 해 하지만 어떻게 Persistent하게 get 요청을 보낼 수 있는 거야 즉 서버 측에서 이미 3way handshake 했다는 것을 어떻게 인지하는 거야??&lt;/p&gt;&#xA;&lt;h3 id=&#34;답변-요약&#34;&gt;답변 요약&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Stateless&lt;/strong&gt; 상태를 유지하지 않는 시스템의 특성의 의미 (HTTP)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Stateful&lt;/strong&gt; 은 상태를 유지하며 동작하는 시스템의 특성을 나타냅니다. (TCP)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Persistent&lt;/strong&gt; 는 연결을 재사용하여 네트워크 효율성을 높이는 방식을 의미합니다.&lt;/li&gt;&#xA;&lt;li&gt;따라서 HTTP는 &lt;strong&gt;stateless&lt;/strong&gt; 지만, &lt;strong&gt;(일반적으로 사용하는)전송 계층에서 TCP의 stateful 특성을 활용&lt;/strong&gt;(HTTP 헤더의 &lt;code&gt;Connection: keep-alive&lt;/code&gt; 속성) 하여 persistent connection을 구현할 수 있다&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;핵심-개념-stateless-vs-stateful&#34;&gt;**핵심 개념: Stateless vs Stateful&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;HTTP는 Stateless(무상태)이다&lt;/strong&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>일반 함수 호출 (User-level Function Call) vs 시스템 콜 (System Call) 호출 방식의 차이</title>
      <link>http://localhost:1313/02.inbox/%EC%9D%BC%EB%B0%98-%ED%95%A8%EC%88%98-%ED%98%B8%EC%B6%9C-user-level-function-call-vs-%EC%8B%9C%EC%8A%A4%ED%85%9C-%EC%BD%9C-system-call-%ED%98%B8%EC%B6%9C-%EB%B0%A9%EC%8B%9D%EC%9D%98-%EC%B0%A8%EC%9D%B4/</link>
      <pubDate>Tue, 11 Mar 2025 11:39:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EC%9D%BC%EB%B0%98-%ED%95%A8%EC%88%98-%ED%98%B8%EC%B6%9C-user-level-function-call-vs-%EC%8B%9C%EC%8A%A4%ED%85%9C-%EC%BD%9C-system-call-%ED%98%B8%EC%B6%9C-%EB%B0%A9%EC%8B%9D%EC%9D%98-%EC%B0%A8%EC%9D%B4/</guid>
      <description>&lt;p&gt;시스템 콜(system call)은 사용자 프로그램이 커널의 기능을 간접적으로 호출하는 메커니즘이며, **매핑 테이블(시스템 콜 테이블)**을 통해 실제 커널 함수로 연결됩니다. 일반 함수 호출과 시스템 콜의 동작 방식을 인텔 어셈블리 문법과 함께 비교 설명합니다.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;1-일반-함수-호출-user-level-function-call&#34;&gt;&lt;strong&gt;1. 일반 함수 호출 (User-level Function Call)&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;동작-방식&#34;&gt;&lt;strong&gt;동작 방식&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;직접 호출&lt;/strong&gt;: 호출자(caller)가 함수의 메모리 주소를 직접 참조합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;파라미터 전달&lt;/strong&gt;: 레지스터 또는 스택을 사용합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;제어권 이동&lt;/strong&gt;: 사용자 공간 내에서만 실행되며, 커널 모드 전환 없이 동작합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;예시-간단한-덧셈-함수-호출&#34;&gt;&lt;strong&gt;예시: 간단한 덧셈 함수 호출&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;section&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;.data&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;num1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;dd&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;num2&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;dd&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;section&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;.text&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;global&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;_start&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;_start:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;; 파라미터 전달 (레지스터 사용)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;mov&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;eax&lt;/span&gt;, [&lt;span style=&#34;color:#66d9ef&#34;&gt;num1&lt;/span&gt;]  &lt;span style=&#34;color:#75715e&#34;&gt;; EAX = 10&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;mov&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ebx&lt;/span&gt;, [&lt;span style=&#34;color:#66d9ef&#34;&gt;num2&lt;/span&gt;]  &lt;span style=&#34;color:#75715e&#34;&gt;; EBX = 20&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;call&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;add_numbers&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;; 함수 호출&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;; 종료 (시스템 콜 예시로 대체 가능)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;mov&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;eax&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;       &lt;span style=&#34;color:#75715e&#34;&gt;; sys_exit 시스템 콜 번호&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0x80&lt;/span&gt;         &lt;span style=&#34;color:#75715e&#34;&gt;; 커널 호출&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;add_numbers:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;eax&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;ebx&lt;/span&gt;     &lt;span style=&#34;color:#75715e&#34;&gt;; EAX = EAX + EBX&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;ret&lt;/span&gt;              &lt;span style=&#34;color:#75715e&#34;&gt;; 결과 반환&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;: &lt;code&gt;call&lt;/code&gt; 명령어로 직접 함수 주소로 점프 → 커널 개입 없이 사용자 공간에서 실행.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;2-시스템-콜-system-call&#34;&gt;&lt;strong&gt;2. 시스템 콜 (System Call)&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;동작-방식-1&#34;&gt;&lt;strong&gt;동작 방식&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;간접 호출&lt;/strong&gt;: 시스템 콜 번호를 **매핑 테이블(sys_call_table)**에 전달해 커널 함수를 찾아 실행합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;모드 전환&lt;/strong&gt;: 사용자 모드 → 커널 모드 전환 (特权级别 변경).&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;파라미터 전달&lt;/strong&gt;: 레지스터에 시스템 콜 번호와 인자 저장 (예: &lt;code&gt;eax&lt;/code&gt;, &lt;code&gt;ebx&lt;/code&gt;, &lt;code&gt;ecx&lt;/code&gt; 등).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;시스템-콜-테이블의-역할&#34;&gt;&lt;strong&gt;시스템 콜 테이블의 역할&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;커널은 &lt;strong&gt;sys_call_table&lt;/strong&gt;이라는 배열을 유지하며, 각 인덱스는 시스템 콜 번호에 해당합니다.&lt;/li&gt;&#xA;&lt;li&gt;예: Linux x86에서 &lt;code&gt;sys_write&lt;/code&gt;의 시스템 콜 번호는 &lt;code&gt;4&lt;/code&gt;입니다.&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Linux 커널 소스 (unistd_32.h)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define __NR_write 4&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;예시&#34;&gt;&lt;strong&gt;예시: &lt;code&gt;sys_write&lt;/code&gt; 시스템 콜 호출&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;section&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;.data&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;msg&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;db&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Hello&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;World&lt;/span&gt;!&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0xA&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;; 출력 메시지 (0xA = 개행)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;len&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;equ&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;$&lt;/span&gt; - &lt;span style=&#34;color:#66d9ef&#34;&gt;msg&lt;/span&gt;               &lt;span style=&#34;color:#75715e&#34;&gt;; 메시지 길이&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;section&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;.text&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;global&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;_start&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;_start:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;; 시스템 콜 파라미터 설정 (레지스터 사용)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;mov&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;eax&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;; sys_write 시스템 콜 번호 (NR_write = 4)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;mov&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ebx&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;; 파일 디스크립터 (stdout = 1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;mov&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ecx&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;msg&lt;/span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;; 메시지 주소&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;mov&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;edx&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;len&lt;/span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;; 메시지 길이&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0x80&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;; 커널 모드 전환 (소프트웨어 인터럽트)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;; 프로그램 종료&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;mov&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;eax&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;; sys_exit 시스템 콜 번호&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;xor&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ebx&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;ebx&lt;/span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;; 반환 값 0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0x80&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;시스템-콜-처리-과정&#34;&gt;&lt;strong&gt;시스템 콜 처리 과정&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;인터럽트 발생&lt;/strong&gt;: &lt;code&gt;int 0x80&lt;/code&gt; 또는 &lt;code&gt;syscall&lt;/code&gt; 명령어로 커널 모드 진입.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;시스템 콜 번호 확인&lt;/strong&gt;: &lt;code&gt;eax&lt;/code&gt; 레지스터에서 시스템 콜 번호를 읽습니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;매핑 테이블 조회&lt;/strong&gt;: 커널은 &lt;code&gt;sys_call_table&lt;/code&gt;에서 해당 번호의 함수 포인터를 찾습니다.&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 커널 내부 sys_call_table 예시 (x86)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;asmlinkage &lt;span style=&#34;color:#66d9ef&#34;&gt;long&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sys_write&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; fd, &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; __user &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;buf, &lt;span style=&#34;color:#66d9ef&#34;&gt;size_t&lt;/span&gt; count);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;함수 실행&lt;/strong&gt;: 매핑된 커널 함수(예: &lt;code&gt;sys_write&lt;/code&gt;)를 실행합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;결과 반환&lt;/strong&gt;: 사용자 모드로 복귀 후 결과를 레지스터(&lt;code&gt;eax&lt;/code&gt;)에 저장합니다.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;3-시스템-콜-vs-일반-함수-호출의-핵심-차이&#34;&gt;&lt;strong&gt;3. 시스템 콜 vs 일반 함수 호출의 핵심 차이&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;strong&gt;구분&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;일반 함수 호출&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;시스템 콜&lt;/strong&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;실행 모드&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;사용자 모드 (User Mode)&lt;/td&gt;&#xA;          &lt;td&gt;커널 모드 (Kernel Mode)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;호출 방식&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;직접 호출 (&lt;code&gt;call&lt;/code&gt; 명령어)&lt;/td&gt;&#xA;          &lt;td&gt;간접 호출 (인터럽트/시스템 콜 명령어)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;파라미터 전달&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;레지스터/스택&lt;/td&gt;&#xA;          &lt;td&gt;레지스터 (커널에서 정의한 규칙)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;오버헤드&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;낮음 (메모리 접근만 발생)&lt;/td&gt;&#xA;          &lt;td&gt;높음 (모드 전환, 컨텍스트 스위칭)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;보안&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;제한 없음&lt;/td&gt;&#xA;          &lt;td&gt;커널이 검증 후 실행&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;시스템-콜-테이블의-구조-linux-x86-예시&#34;&gt;&lt;strong&gt;시스템 콜 테이블의 구조 (Linux x86 예시)&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// arch/x86/kernel/syscall_32.c (커널 소스)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;extern&lt;/span&gt; asmlinkage &lt;span style=&#34;color:#66d9ef&#34;&gt;long&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sys_write&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; __user &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;size_t&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;extern&lt;/span&gt; asmlinkage &lt;span style=&#34;color:#66d9ef&#34;&gt;long&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sys_read&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; __user &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;size_t&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;sys_call_ptr_t&lt;/span&gt; sys_call_table[__NR_syscall_max &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    [&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; ... __NR_syscall_max] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;sys_ni_syscall,  &lt;span style=&#34;color:#75715e&#34;&gt;// 기본값: 지원되지 않는 시스템 콜&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    [__NR_write] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sys_write,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    [__NR_read] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sys_read,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// ... (다른 시스템 콜 매핑)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;간접 참조&lt;/strong&gt;: &lt;code&gt;sys_call_table[__NR_write]&lt;/code&gt; → &lt;code&gt;sys_write&lt;/code&gt; 함수 포인터.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;요약&#34;&gt;&lt;strong&gt;요약&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;일반 함수 호출&lt;/strong&gt;: 사용자 공간 내에서 직접 실행되며, 빠르지만 권한이 제한적입니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;시스템 콜&lt;/strong&gt;: 커널의 매핑 테이블을 통해 간접적으로 실행되며, 모드 전환과 검증 과정을 거쳐 안전하게 하드웨어/커널 자원을 제어합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;: &lt;code&gt;int 0x80&lt;/code&gt;은 커널의 &lt;strong&gt;인터럽트 핸들러&lt;/strong&gt;를 호출해 시스템 콜 테이블을 조회하고, 실제 함수(예: &lt;code&gt;sys_write&lt;/code&gt;)를 실행합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>asm parameter passing 인자 전달 방식</title>
      <link>http://localhost:1313/02.inbox/asm-parameter-passing-%EC%9D%B8%EC%9E%90-%EC%A0%84%EB%8B%AC-%EB%B0%A9%EC%8B%9D/</link>
      <pubDate>Tue, 11 Mar 2025 11:35:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/asm-parameter-passing-%EC%9D%B8%EC%9E%90-%EC%A0%84%EB%8B%AC-%EB%B0%A9%EC%8B%9D/</guid>
      <description>&lt;p&gt;다음은 인텔 어셈블리 문법으로 각 파라미터 전달 방식을 구현한 예시&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;1-register를-통한-파라미터-전달&#34;&gt;&lt;strong&gt;1. Register를 통한 파라미터 전달&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;section&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;.data&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;; (데이터 섹션은 필요 시 정의)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;section&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;.text&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;global&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;_start&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;_start:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;; 두 정수를 레지스터로 전달 (EAX=5, EBX=10)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;mov&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;eax&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;mov&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ebx&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;call&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;add_registers&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;; 함수 호출&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;; 결과 확인 (EAX에 저장됨)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;; ... (종료 코드 생략)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;add_registers:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;eax&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;ebx&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;; EAX = EAX + EBX&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;ret&lt;/span&gt;           &lt;span style=&#34;color:#75715e&#34;&gt;; 결과를 EAX에 반환&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;: 레지스터(&lt;code&gt;eax&lt;/code&gt;, &lt;code&gt;ebx&lt;/code&gt;)에 직접 값 저장 → 빠른 접근 가능.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;주의&lt;/strong&gt;: 레지스터 수가 제한적이므로 복잡한 함수에는 부적합.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;2-memory를-통한-파라미터-전달-포인터-사용&#34;&gt;&lt;strong&gt;2. Memory를 통한 파라미터 전달 (포인터 사용)&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;section&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;.data&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;var1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;dd&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;      &lt;span style=&#34;color:#75715e&#34;&gt;; 32비트 정수 (15)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;var2&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;dd&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;      &lt;span style=&#34;color:#75715e&#34;&gt;; 32비트 정수 (25)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;section&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;.text&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;global&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;_start&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;_start:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;; 메모리 주소를 레지스터로 전달&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;mov&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;esi&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;var1&lt;/span&gt;   &lt;span style=&#34;color:#75715e&#34;&gt;; ESI = var1의 주소&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;mov&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;edi&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;var2&lt;/span&gt;   &lt;span style=&#34;color:#75715e&#34;&gt;; EDI = var2의 주소&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;call&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;add_memory&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;; 함수 호출&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;; ... (종료 코드 생략)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;add_memory:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;mov&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;eax&lt;/span&gt;, [&lt;span style=&#34;color:#66d9ef&#34;&gt;esi&lt;/span&gt;]  &lt;span style=&#34;color:#75715e&#34;&gt;; EAX = [var1] (15)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;eax&lt;/span&gt;, [&lt;span style=&#34;color:#66d9ef&#34;&gt;edi&lt;/span&gt;]  &lt;span style=&#34;color:#75715e&#34;&gt;; EAX += [var2] (25)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;ret&lt;/span&gt;             &lt;span style=&#34;color:#75715e&#34;&gt;; 결과 반환&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;: 메모리 주소를 레지스터(&lt;code&gt;esi&lt;/code&gt;, &lt;code&gt;edi&lt;/code&gt;)로 전달 → 대용량 데이터 처리 가능.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;주의&lt;/strong&gt;: 메모리 접근 오버헤드 발생 (캐시 미스 시 성능 저하).&#xA;일반적으로 힙 영역에 적층&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;3-stack을-통한-파라미터-전달&#34;&gt;&lt;strong&gt;3. Stack을 통한 파라미터 전달&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;section&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;.data&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;; (데이터 섹션은 필요 시 정의)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;section&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;.text&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;global&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;_start&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;_start:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;; 스택에 파라미터 푸시 (역순으로 전달)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;push&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;         &lt;span style=&#34;color:#75715e&#34;&gt;; 두 번째 인자&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;push&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;         &lt;span style=&#34;color:#75715e&#34;&gt;; 첫 번째 인자&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;call&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;add_stack&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;; 함수 호출&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;; 스택 정리 (cdecl 규약: 호출자가 정리)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;esp&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;      &lt;span style=&#34;color:#75715e&#34;&gt;; 2개의 DWORD(4바이트*2) 제거&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;; ... (종료 코드 생략)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;add_stack:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;push&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ebp&lt;/span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;; 베이스 포인터 보존&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;mov&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ebp&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;esp&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;; 스택 프레임 설정&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;; [ebp+8] = 첫 번째 인자 (40)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;; [ebp+12] = 두 번째 인자 (30)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;mov&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;eax&lt;/span&gt;, [&lt;span style=&#34;color:#66d9ef&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;eax&lt;/span&gt;, [&lt;span style=&#34;color:#66d9ef&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;pop&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ebp&lt;/span&gt;         &lt;span style=&#34;color:#75715e&#34;&gt;; 베이스 포인터 복구&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;ret&lt;/span&gt;             &lt;span style=&#34;color:#75715e&#34;&gt;; 결과 반환&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;: 스택을 통해 인자 전달 → 재귀 호출 등 복잡한 로직에 적합.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;주의&lt;/strong&gt;: 스택 오버플로우 위험 (너무 큰 데이터 전달 금지).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;키-포인트&#34;&gt;&lt;strong&gt;키 포인트&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;Register&lt;/strong&gt;: 빠르지만 제한적 → 최적화된 코드에 사용.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Memory&lt;/strong&gt;: 대용량 데이터 처리 가능 → 구조체/배열 전달 시 유리.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Stack&lt;/strong&gt;: 함수 호출 관리 용이 → 대부분의 고수준 언어 기본 방식.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;인텔 문법에서 &lt;code&gt;mov eax, [ebx]&lt;/code&gt;는 &amp;ldquo;ebx가 가리키는 메모리 값 로드&amp;quot;이며, &lt;code&gt;push&lt;/code&gt;, &lt;code&gt;pop&lt;/code&gt;은 스택 조작 명령어입니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>spring View 구현체</title>
      <link>http://localhost:1313/02.inbox/spring-view-%EA%B5%AC%ED%98%84%EC%B2%B4/</link>
      <pubDate>Mon, 10 Mar 2025 00:27:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/spring-view-%EA%B5%AC%ED%98%84%EC%B2%B4/</guid>
      <description>&lt;p&gt;스프링 MVC의 **&lt;code&gt;View&lt;/code&gt;**는 &lt;strong&gt;모델 데이터를 클라이언트에게 렌더링하는 최종 형식&lt;/strong&gt;을 결정하는 인터페이스입니다.&lt;br&gt;&#xA;아래에서 언급된 21개의 &lt;code&gt;View&lt;/code&gt; 구현체를 &lt;strong&gt;목적별로 체계적으로 정리&lt;/strong&gt;했습니다:&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;1-기본-추상-클래스&#34;&gt;1. &lt;strong&gt;기본 추상 클래스&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;11-abstractview&#34;&gt;1.1 &lt;strong&gt;&lt;code&gt;AbstractView&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;모든 뷰 구현체의 기본 추상 클래스&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;render()&lt;/code&gt; 메서드를 구현해 모델 데이터를 응답으로 변환합니다.&lt;/li&gt;&#xA;&lt;li&gt;커스텀 뷰를 만들 때 상속받아 사용합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;사용 예시&lt;/strong&gt;:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;CustomCsvView&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;extends&lt;/span&gt; AbstractView {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;@Override&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;protected&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;renderMergedOutputModel&lt;/span&gt;(Map&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;String, Object&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; model, HttpServletRequest request, HttpServletResponse response) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// CSV 생성 로직&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;2-피드feed-뷰&#34;&gt;2. &lt;strong&gt;피드(Feed) 뷰&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;21-abstractatomfeedview&#34;&gt;2.1 &lt;strong&gt;&lt;code&gt;AbstractAtomFeedView&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;Atom 형식의 피드&lt;/strong&gt;를 생성합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Atom 1.0 스펙을 준수하는 XML 피드를 생성합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;Rome&lt;/code&gt; 라이브러리를 내부적으로 사용합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;: 블로그 글 목록을 Atom 피드로 제공.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;22-abstractrssfeedview&#34;&gt;2.2 &lt;strong&gt;&lt;code&gt;AbstractRssFeedView&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;RSS 형식의 피드&lt;/strong&gt;를 생성합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;RSS 2.0 스펙을 준수하는 XML 피드를 생성합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;Rome&lt;/code&gt; 라이브러리를 사용합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;: 뉴스 사이트의 RSS 피드.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;23-abstractfeedview&#34;&gt;2.3 &lt;strong&gt;&lt;code&gt;AbstractFeedView&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;Atom/RSS 피드의 공통 로직&lt;/strong&gt;을 제공합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;AbstractAtomFeedView&lt;/code&gt;와 &lt;code&gt;AbstractRssFeedView&lt;/code&gt;의 부모 클래스입니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;3-jsonxml-뷰&#34;&gt;3. &lt;strong&gt;JSON/XML 뷰&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;31-mappingjackson2jsonview&#34;&gt;3.1 &lt;strong&gt;&lt;code&gt;MappingJackson2JsonView&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;JSON 형식의 응답&lt;/strong&gt;을 생성합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Jackson 2 라이브러리를 사용해 모델 데이터를 JSON으로 변환합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;@ResponseBody&lt;/code&gt; 대신 뷰를 통해 JSON을 반환할 때 사용됩니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Bean&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; View &lt;span style=&#34;color:#a6e22e&#34;&gt;jsonView&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; MappingJackson2JsonView();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;32-mappingjackson2xmlview&#34;&gt;3.2 &lt;strong&gt;&lt;code&gt;MappingJackson2XmlView&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;XML 형식의 응답&lt;/strong&gt;을 생성합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Jackson 2의 XML 확장을 사용해 모델 데이터를 XML로 변환합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;: 레거시 시스템과의 XML 통신.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;33-marshallingview&#34;&gt;3.3 &lt;strong&gt;&lt;code&gt;MarshallingView&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;XML/JSON 변환을 위한 마샬링 뷰&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;JAXB, Castor 등 다양한 마샬러를 지원합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;Marshaller&lt;/code&gt; 인터페이스를 구현한 라이브러리를 사용합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;4-pdf-뷰&#34;&gt;4. &lt;strong&gt;PDF 뷰&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;41-abstractpdfview&#34;&gt;4.1 &lt;strong&gt;&lt;code&gt;AbstractPdfView&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;PDF 문서&lt;/strong&gt;를 생성합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;iText&lt;/code&gt; 라이브러리를 사용해 PDF를 생성합니다.&lt;/li&gt;&#xA;&lt;li&gt;모델 데이터를 테이블, 텍스트 등으로 렌더링합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;InvoicePdfView&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;extends&lt;/span&gt; AbstractPdfView {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;@Override&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;protected&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;buildPdfDocument&lt;/span&gt;(Map&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;String, Object&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; model, Document document, PdfWriter writer) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// PDF 문서 생성 로직&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;42-abstractpdfstamperview&#34;&gt;4.2 &lt;strong&gt;&lt;code&gt;AbstractPdfStamperView&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;기존 PDF 템플릿에 데이터 채우기&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;iText&lt;/code&gt;의 &lt;code&gt;PdfStamper&lt;/code&gt;를 사용해 정적 PDF 양식을 동적으로 채웁니다.&lt;/li&gt;&#xA;&lt;li&gt;계약서, 청구서 등 고정된 양식에 데이터를 입력할 때 사용됩니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;5-엑셀-뷰&#34;&gt;5. &lt;strong&gt;엑셀 뷰&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;51-abstractxlsview&#34;&gt;5.1 &lt;strong&gt;&lt;code&gt;AbstractXlsView&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;레거시 Excel(.xls) 파일&lt;/strong&gt; 생성.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;Apache POI&lt;/code&gt; 라이브러리를 사용해 Excel 97-2003 형식(.xls)을 생성합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;: 재무 데이터 보고서.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;52-abstractxlsxview&#34;&gt;5.2 &lt;strong&gt;&lt;code&gt;AbstractXlsxView&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;Excel 2007+ 형식(.xlsx) 파일&lt;/strong&gt; 생성.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;Apache POI&lt;/code&gt;의 &lt;code&gt;XSSF&lt;/code&gt; API를 사용해 최신 Excel 형식을 지원합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;53-abstractxlsxstreamingview&#34;&gt;5.3 &lt;strong&gt;&lt;code&gt;AbstractXlsxStreamingView&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;대용량 Excel 파일 스트리밍&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;메모리 사용을 최소화하기 위해 데이터를 스트리밍 방식으로 작성합니다.&lt;/li&gt;&#xA;&lt;li&gt;수십만 행의 데이터를 처리할 때 유용합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;6-템플릿-뷰&#34;&gt;6. &lt;strong&gt;템플릿 뷰&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;61-freemarkerview&#34;&gt;6.1 &lt;strong&gt;&lt;code&gt;FreeMarkerView&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;FreeMarker 템플릿&lt;/strong&gt;을 렌더링합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;FreeMarkerViewResolver&lt;/code&gt;와 함께 사용됩니다.&lt;/li&gt;&#xA;&lt;li&gt;HTML, 텍스트 등 다양한 형식을 지원합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;: 동적 HTML 페이지 생성.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;62-groovymarkupview&#34;&gt;6.2 &lt;strong&gt;&lt;code&gt;GroovyMarkupView&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;Groovy 템플릿&lt;/strong&gt;을 렌더링합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Groovy Markup Template을 사용해 뷰를 생성합니다.&lt;/li&gt;&#xA;&lt;li&gt;간결한 문법으로 XML/HTML을 생성합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;63-scripttemplateview&#34;&gt;6.3 &lt;strong&gt;&lt;code&gt;ScriptTemplateView&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;스크립트 기반 템플릿&lt;/strong&gt;(예: React, Nashorn)을 지원합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;JavaScript 엔진을 사용해 뷰를 렌더링합니다.&lt;/li&gt;&#xA;&lt;li&gt;서버 측에서 React 컴포넌트를 렌더링할 때 사용됩니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;7-jsp리소스-뷰&#34;&gt;7. &lt;strong&gt;JSP/리소스 뷰&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;71-internalresourceview&#34;&gt;7.1 &lt;strong&gt;&lt;code&gt;InternalResourceView&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;JSP 파일&lt;/strong&gt;을 렌더링합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;InternalResourceViewResolver&lt;/code&gt;와 함께 사용됩니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;JstlView&lt;/code&gt;의 부모 클래스입니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;72-jstlview&#34;&gt;7.2 &lt;strong&gt;&lt;code&gt;JstlView&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;JSTL 태그를 지원하는 JSP 뷰&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;JSTL의 &lt;code&gt;&amp;lt;fmt:message&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;c:forEach&amp;gt;&lt;/code&gt; 등을 사용할 수 있습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;8-특수-목적-뷰&#34;&gt;8. &lt;strong&gt;특수 목적 뷰&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;81-redirectview&#34;&gt;8.1 &lt;strong&gt;&lt;code&gt;RedirectView&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;HTTP 리다이렉트&lt;/strong&gt;를 수행합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;redirect:/newPath&lt;/code&gt; 또는 외부 URL(&lt;code&gt;https://example.com&lt;/code&gt;)로 이동합니다.&lt;/li&gt;&#xA;&lt;li&gt;Post/Redirect/Get 패턴 구현에 사용됩니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; ModelAndView(&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; RedirectView(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/home&amp;#34;&lt;/span&gt;));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;82-xsltview&#34;&gt;8.2 &lt;strong&gt;&lt;code&gt;XsltView&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;XML 데이터를 XSLT로 변환&lt;/strong&gt;합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;XML 데이터와 XSLT 스타일시트를 결합해 HTML 등을 생성합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-요약&#34;&gt;📌 &lt;strong&gt;요약&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;뷰 클래스&lt;/th&gt;&#xA;          &lt;th&gt;주요 형식&lt;/th&gt;&#xA;          &lt;th&gt;사용 사례&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;MappingJackson2JsonView&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;JSON&lt;/td&gt;&#xA;          &lt;td&gt;REST API 응답&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;AbstractPdfView&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;PDF&lt;/td&gt;&#xA;          &lt;td&gt;계약서, 보고서 생성&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;AbstractXlsxView&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Excel(.xlsx)&lt;/td&gt;&#xA;          &lt;td&gt;데이터 분석 리포트&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;FreeMarkerView&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;HTML&lt;/td&gt;&#xA;          &lt;td&gt;동적 웹 페이지&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;RedirectView&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;HTTP 리다이렉트&lt;/td&gt;&#xA;          &lt;td&gt;Post-Redirect-Get 패턴&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-핵심-포인트&#34;&gt;💡 &lt;strong&gt;핵심 포인트&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;JSON/XML&lt;/strong&gt;은 &lt;strong&gt;&lt;code&gt;MappingJackson2JsonView&lt;/code&gt;&lt;/strong&gt; 로 처리합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;PDF/Excel&lt;/strong&gt;은 &lt;strong&gt;&lt;code&gt;AbstractPdfView&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;AbstractXlsxView&lt;/code&gt;&lt;/strong&gt; 를 확장해 구현합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;리다이렉트&lt;/strong&gt;는 &lt;strong&gt;&lt;code&gt;RedirectView&lt;/code&gt;&lt;/strong&gt; 를 사용합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;템플릿 엔진&lt;/strong&gt;은 각각 전용 뷰 클래스(예: &lt;code&gt;FreeMarkerView&lt;/code&gt;)를 사용합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>spring ViewResolver 구현체</title>
      <link>http://localhost:1313/02.inbox/spring-viewresolver-%EA%B5%AC%ED%98%84%EC%B2%B4/</link>
      <pubDate>Mon, 10 Mar 2025 00:23:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/spring-viewresolver-%EA%B5%AC%ED%98%84%EC%B2%B4/</guid>
      <description>&lt;p&gt;스프링 MVC의 &lt;strong&gt;&lt;code&gt;ViewResolver&lt;/code&gt;&lt;/strong&gt; 는 &lt;strong&gt;뷰 이름을 실제 &lt;code&gt;View&lt;/code&gt; 객체로 변환&lt;/strong&gt;하는 역할을 합니다.&lt;br&gt;&#xA;다양한 구현체가 있으며, 각각의 특징과 사용 사례를 체계적으로 정리했습니다:&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;1-abstractcachingviewresolver&#34;&gt;1. &lt;strong&gt;&lt;code&gt;AbstractCachingViewResolver&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;뷰 캐싱 기능을 제공하는 추상 클래스&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;뷰 객체를 캐시하여 &lt;strong&gt;반복적인 뷰 생성을 방지&lt;/strong&gt;합니다.&lt;/li&gt;&#xA;&lt;li&gt;하위 클래스(예: &lt;code&gt;UrlBasedViewResolver&lt;/code&gt;)가 캐싱 로직을 재사용할 수 있도록 합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;사용 예시&lt;/strong&gt;:&lt;br&gt;&#xA;&lt;code&gt;InternalResourceViewResolver&lt;/code&gt;가 이 클래스를 상속받아 JSP 뷰 캐싱을 처리합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;2-abstracttemplateviewresolver&#34;&gt;2. &lt;strong&gt;&lt;code&gt;AbstractTemplateViewResolver&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;템플릿 기반 뷰(예: JSP, Thymeleaf)를 처리하는 추상 클래스&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;템플릿 엔진 설정(예: &lt;code&gt;prefix&lt;/code&gt;, &lt;code&gt;suffix&lt;/code&gt;)을 공통으로 관리합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;UrlBasedViewResolver&lt;/code&gt;와 함께 사용됩니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;사용 예시&lt;/strong&gt;:&lt;br&gt;&#xA;&lt;code&gt;FreeMarkerViewResolver&lt;/code&gt;가 이 클래스를 상속받아 FreeMarker 템플릿을 처리합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;3-beannameviewresolver&#34;&gt;3. &lt;strong&gt;&lt;code&gt;BeanNameViewResolver&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;스프링 빈 이름으로 뷰를 조회&lt;/strong&gt;합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;뷰 이름이 스프링 빈 이름과 일치하는 &lt;code&gt;View&lt;/code&gt; 객체를 찾아 반환합니다.&lt;/li&gt;&#xA;&lt;li&gt;커스텀 뷰(예: PDF 생성 뷰)를 빈으로 등록해 사용할 때 유용합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Bean&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; View &lt;span style=&#34;color:#a6e22e&#34;&gt;pdfView&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; AbstractPdfView() { &lt;span style=&#34;color:#75715e&#34;&gt;// PDF 뷰 구현&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;@Override&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;protected&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;buildPdfDocument&lt;/span&gt;(Map&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;String, Object&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; model, Document document, PdfWriter writer) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// PDF 생성 로직&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    };&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;4-contentnegotiatingviewresolver&#34;&gt;4. &lt;strong&gt;&lt;code&gt;ContentNegotiatingViewResolver&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;요청의 &lt;code&gt;Accept&lt;/code&gt; 헤더 또는 쿼리 파라미터에 따라 뷰를 선택&lt;/strong&gt;합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;클라이언트가 원하는 형식(JSON, XML, HTML 등)에 맞는 뷰를 반환합니다.&lt;/li&gt;&#xA;&lt;li&gt;내부적으로 다른 &lt;code&gt;ViewResolver&lt;/code&gt;를 조합해 동작합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Configuration&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;WebConfig&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;implements&lt;/span&gt; WebMvcConfigurer {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;@Override&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;configureViewResolvers&lt;/span&gt;(ViewResolverRegistry registry) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        registry.&lt;span style=&#34;color:#a6e22e&#34;&gt;enableContentNegotiation&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; JsonView(), &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; XmlView());&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;5-freemarkerviewresolver&#34;&gt;5. &lt;strong&gt;&lt;code&gt;FreeMarkerViewResolver&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;FreeMarker 템플릿&lt;/strong&gt;을 처리합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;뷰 이름을 FreeMarker 템플릿 파일 경로(예: &lt;code&gt;views/user.ftl&lt;/code&gt;)로 변환합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;FreeMarkerConfigurer&lt;/code&gt;와 함께 설정됩니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Bean&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; FreeMarkerViewResolver &lt;span style=&#34;color:#a6e22e&#34;&gt;freeMarkerViewResolver&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    FreeMarkerViewResolver resolver &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; FreeMarkerViewResolver();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    resolver.&lt;span style=&#34;color:#a6e22e&#34;&gt;setPrefix&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/WEB-INF/views/&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    resolver.&lt;span style=&#34;color:#a6e22e&#34;&gt;setSuffix&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.ftl&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; resolver;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;6-groovymarkupviewresolver&#34;&gt;6. &lt;strong&gt;&lt;code&gt;GroovyMarkupViewResolver&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;Groovy 템플릿&lt;/strong&gt;을 처리합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Groovy Markup Template(예: &lt;code&gt;user.tpl&lt;/code&gt;)을 렌더링합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;GroovyMarkupConfigurer&lt;/code&gt;로 템플릿 설정을 관리합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Bean&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; GroovyMarkupViewResolver &lt;span style=&#34;color:#a6e22e&#34;&gt;groovyViewResolver&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    GroovyMarkupViewResolver resolver &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; GroovyMarkupViewResolver();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    resolver.&lt;span style=&#34;color:#a6e22e&#34;&gt;setPrefix&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/views/&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    resolver.&lt;span style=&#34;color:#a6e22e&#34;&gt;setSuffix&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.tpl&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; resolver;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;7-internalresourceviewresolver&#34;&gt;7. &lt;strong&gt;&lt;code&gt;InternalResourceViewResolver&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;JSP 뷰&lt;/strong&gt;를 처리하는 가장 일반적인 리졸버.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;뷰 이름을 JSP 파일 경로(예: &lt;code&gt;/WEB-INF/views/home.jsp&lt;/code&gt;)로 변환합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;prefix&lt;/code&gt;와 &lt;code&gt;suffix&lt;/code&gt;로 경로를 설정합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Bean&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; InternalResourceViewResolver &lt;span style=&#34;color:#a6e22e&#34;&gt;viewResolver&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    InternalResourceViewResolver resolver &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; InternalResourceViewResolver();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    resolver.&lt;span style=&#34;color:#a6e22e&#34;&gt;setPrefix&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/WEB-INF/views/&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    resolver.&lt;span style=&#34;color:#a6e22e&#34;&gt;setSuffix&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.jsp&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; resolver;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;8-resourcebundleviewresolver&#34;&gt;8. &lt;strong&gt;&lt;code&gt;ResourceBundleViewResolver&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;프로퍼티 파일&lt;/strong&gt;로 뷰를 정의합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;views.properties&lt;/code&gt; 파일에 뷰 이름과 클래스 정보를 저장합니다.&lt;/li&gt;&#xA;&lt;li&gt;다국어 뷰 또는 외부 설정이 필요한 경우에 사용됩니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-properties&#34; data-lang=&#34;properties&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# views.properties&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;home.class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;org.springframework.web.servlet.view.JstlView&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;home.url&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/WEB-INF/views/home.jsp&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;9-scripttemplateviewresolver&#34;&gt;9. &lt;strong&gt;&lt;code&gt;ScriptTemplateViewResolver&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;스크립트 기반 템플릿&lt;/strong&gt;(예: Nashorn, React)을 처리합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;JavaScript 또는 다른 스크립트 엔진으로 뷰를 렌더링합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;ScriptTemplateConfigurer&lt;/code&gt;로 스크립트 엔진을 설정합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Bean&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; ScriptTemplateViewResolver &lt;span style=&#34;color:#a6e22e&#34;&gt;scriptViewResolver&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ScriptTemplateViewResolver resolver &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; ScriptTemplateViewResolver();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    resolver.&lt;span style=&#34;color:#a6e22e&#34;&gt;setPrefix&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;templates/&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    resolver.&lt;span style=&#34;color:#a6e22e&#34;&gt;setSuffix&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.jsx&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; resolver;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;10-urlbasedviewresolver&#34;&gt;10. &lt;strong&gt;&lt;code&gt;UrlBasedViewResolver&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;URL 기반 뷰&lt;/strong&gt;를 직접 매핑합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;뷰 이름을 URL 경로로 직접 변환합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;InternalResourceViewResolver&lt;/code&gt;의 부모 클래스입니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Bean&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; UrlBasedViewResolver &lt;span style=&#34;color:#a6e22e&#34;&gt;urlBasedViewResolver&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    UrlBasedViewResolver resolver &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; UrlBasedViewResolver();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    resolver.&lt;span style=&#34;color:#a6e22e&#34;&gt;setViewClass&lt;/span&gt;(JstlView.&lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    resolver.&lt;span style=&#34;color:#a6e22e&#34;&gt;setPrefix&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/WEB-INF/views/&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    resolver.&lt;span style=&#34;color:#a6e22e&#34;&gt;setSuffix&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.jsp&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; resolver;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;11-viewresolvercomposite&#34;&gt;11. &lt;strong&gt;&lt;code&gt;ViewResolverComposite&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;다중 &lt;code&gt;ViewResolver&lt;/code&gt;를 조합&lt;/strong&gt;합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;여러 리졸버를 순차적으로 실행해 적절한 뷰를 찾습니다.&lt;/li&gt;&#xA;&lt;li&gt;우선순위를 설정할 수 있습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Bean&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; ViewResolverComposite &lt;span style=&#34;color:#a6e22e&#34;&gt;compositeResolver&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ViewResolverComposite composite &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; ViewResolverComposite();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    composite.&lt;span style=&#34;color:#a6e22e&#34;&gt;addResolver&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; InternalResourceViewResolver());&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    composite.&lt;span style=&#34;color:#a6e22e&#34;&gt;addResolver&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; FreeMarkerViewResolver());&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; composite;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;12-xmlviewresolver&#34;&gt;12. &lt;strong&gt;&lt;code&gt;XmlViewResolver&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;XML 파일&lt;/strong&gt;로 뷰를 정의합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;views.xml&lt;/code&gt;과 같은 XML 설정 파일에서 뷰 빈을 로드합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;ResourceBundleViewResolver&lt;/code&gt;와 유사하지만 XML 형식을 사용합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- views.xml --&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;beans&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;bean&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;home&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;org.springframework.web.servlet.view.JstlView&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;value=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/WEB-INF/views/home.jsp&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/bean&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/beans&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;13-xsltviewresolver&#34;&gt;13. &lt;strong&gt;&lt;code&gt;XsltViewResolver&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;XSLT(XML 변환)&lt;/strong&gt; 뷰를 처리합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;XML 데이터를 XSLT 스타일시트로 변환합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;XsltView&lt;/code&gt; 클래스를 사용해 렌더링합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Bean&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; XsltViewResolver &lt;span style=&#34;color:#a6e22e&#34;&gt;xsltViewResolver&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    XsltViewResolver resolver &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; XsltViewResolver();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    resolver.&lt;span style=&#34;color:#a6e22e&#34;&gt;setPrefix&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/WEB-INF/xsl/&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    resolver.&lt;span style=&#34;color:#a6e22e&#34;&gt;setSuffix&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.xsl&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; resolver;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-요약&#34;&gt;📌 &lt;strong&gt;요약&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;리졸버명&lt;/th&gt;&#xA;          &lt;th&gt;주요 기능&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;InternalResourceViewResolver&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;JSP 뷰 처리 (가장 일반적)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;FreeMarkerViewResolver&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;FreeMarker 템플릿 처리&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;ContentNegotiatingViewResolver&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;요청 형식(JSON/XML)에 따라 뷰 선택&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;BeanNameViewResolver&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;스프링 빈 이름으로 뷰 조회&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;ViewResolverComposite&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;다중 리졸버 조합&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;XsltViewResolver&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;XML을 XSLT로 변환&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-핵심-포인트&#34;&gt;💡 &lt;strong&gt;핵심 포인트&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;JSP&lt;/strong&gt;는 &lt;strong&gt;&lt;code&gt;InternalResourceViewResolver&lt;/code&gt;&lt;/strong&gt; 로 처리합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;템플릿 엔진&lt;/strong&gt;(FreeMarker, Groovy)은 각각 전용 리졸버를 사용합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;다중 포맷 지원&lt;/strong&gt;(JSON, XML)은 &lt;strong&gt;&lt;code&gt;ContentNegotiatingViewResolver&lt;/code&gt;&lt;/strong&gt; 로 구현합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;커스텀 뷰&lt;/strong&gt;는 &lt;code&gt;BeanNameViewResolver&lt;/code&gt; 또는 &lt;code&gt;ResourceBundleViewResolver&lt;/code&gt;로 관리합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>spring HandlerAdapter 구현체</title>
      <link>http://localhost:1313/02.inbox/spring-handleradapter-%EA%B5%AC%ED%98%84%EC%B2%B4/</link>
      <pubDate>Mon, 10 Mar 2025 00:14:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/spring-handleradapter-%EA%B5%AC%ED%98%84%EC%B2%B4/</guid>
      <description>&lt;p&gt;스프링 MVC의 **&lt;code&gt;HandlerAdapter&lt;/code&gt;**는 다양한 유형의 핸들러(컨트롤러)를 실행하는 인터페이스입니다.&lt;br&gt;&#xA;각 &lt;code&gt;HandlerAdapter&lt;/code&gt; 구현체는 특정 유형의 핸들러를 지원합니다.&lt;br&gt;&#xA;아래에서 언급된 6가지 구현체를 체계적으로 설명합니다:&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;1-abstracthandlermethodadapter&#34;&gt;1. &lt;strong&gt;&lt;code&gt;AbstractHandlerMethodAdapter&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;메서드 기반 핸들러 어댑터의 추상 클래스&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;HandlerMethod&lt;/code&gt;를 처리하는 어댑터의 기본 기능을 제공합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;RequestMappingHandlerAdapter&lt;/code&gt;의 상위 클래스로, 메서드 단위 처리 로직을 공통화합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;사용 예시&lt;/strong&gt;:&lt;br&gt;&#xA;구체적인 구현체(&lt;code&gt;RequestMappingHandlerAdapter&lt;/code&gt;)에서 확장되어 사용됩니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;2-handlerfunctionadapter&#34;&gt;2. &lt;strong&gt;&lt;code&gt;HandlerFunctionAdapter&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;함수형 프로그래밍 스타일 핸들러&lt;/strong&gt;(&lt;code&gt;HandlerFunction&lt;/code&gt;)를 지원합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;RouterFunction&lt;/code&gt;과 함께 사용되며, 람다 표현식으로 핸들러를 정의합니다.&lt;/li&gt;&#xA;&lt;li&gt;Spring 5+에서 도입된 &lt;strong&gt;함수형 엔드포인트&lt;/strong&gt;를 처리합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Bean&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; RouterFunction&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;ServerResponse&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;route&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; RouterFunctions.&lt;span style=&#34;color:#a6e22e&#34;&gt;route&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .&lt;span style=&#34;color:#a6e22e&#34;&gt;GET&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/api/users&amp;#34;&lt;/span&gt;, request &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; ServerResponse.&lt;span style=&#34;color:#a6e22e&#34;&gt;ok&lt;/span&gt;().&lt;span style=&#34;color:#a6e22e&#34;&gt;body&lt;/span&gt;(...))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .&lt;span style=&#34;color:#a6e22e&#34;&gt;build&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;3-httprequesthandleradapter&#34;&gt;3. &lt;strong&gt;&lt;code&gt;HttpRequestHandlerAdapter&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;&lt;code&gt;HttpRequestHandler&lt;/code&gt; 인터페이스 구현체&lt;/strong&gt;를 처리합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;서블릿 API(&lt;code&gt;HttpServletRequest&lt;/code&gt;, &lt;code&gt;HttpServletResponse&lt;/code&gt;)를 직접 사용하는 레거시 코드와 호환됩니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;@Controller&lt;/code&gt; 애노테이션 없이도 핸들러를 등록할 수 있습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;LegacyHandler&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;implements&lt;/span&gt; HttpRequestHandler {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;@Override&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;handleRequest&lt;/span&gt;(HttpServletRequest request, HttpServletResponse response) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// 직접 응답을 생성합니다.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;4-requestmappinghandleradapter&#34;&gt;4. &lt;strong&gt;&lt;code&gt;RequestMappingHandlerAdapter&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;애노테이션 기반 컨트롤러&lt;/strong&gt;(&lt;code&gt;@RequestMapping&lt;/code&gt;, &lt;code&gt;@RestController&lt;/code&gt;)를 처리합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;@GetMapping&lt;/code&gt;, &lt;code&gt;@PostMapping&lt;/code&gt;, &lt;code&gt;@PathVariable&lt;/code&gt;, &lt;code&gt;@RequestBody&lt;/code&gt; 등을 지원합니다.&lt;/li&gt;&#xA;&lt;li&gt;현대적인 스프링 애플리케이션에서 &lt;strong&gt;가장 많이 사용되는 어댑터&lt;/strong&gt;입니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@RestController&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;UserController&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;@GetMapping&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/users&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; List&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;User&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getUsers&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; userService.&lt;span style=&#34;color:#a6e22e&#34;&gt;findAll&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;5-simplecontrollerhandleradapter&#34;&gt;5. &lt;strong&gt;&lt;code&gt;SimpleControllerHandlerAdapter&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;&lt;code&gt;Controller&lt;/code&gt; 인터페이스 구현체&lt;/strong&gt;를 처리합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;과거에 사용되던 방식으로, &lt;code&gt;Controller&lt;/code&gt; 인터페이스의 &lt;code&gt;handleRequest()&lt;/code&gt; 메서드를 호출합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;@Controller&lt;/code&gt; 애노테이션 없이 빈으로 등록해야 합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;OldController&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;implements&lt;/span&gt; Controller {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;@Override&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; ModelAndView &lt;span style=&#34;color:#a6e22e&#34;&gt;handleRequest&lt;/span&gt;(HttpServletRequest request, HttpServletResponse response) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; ModelAndView(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;viewName&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;6-simpleservlethandleradapter&#34;&gt;6. &lt;strong&gt;&lt;code&gt;SimpleServletHandlerAdapter&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;일반 서블릿&lt;/strong&gt;(&lt;code&gt;javax.servlet.Servlet&lt;/code&gt;)을 핸들러로 사용합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;기존 서블릿을 스프링 MVC에서 재사용할 수 있도록 합니다.&lt;/li&gt;&#xA;&lt;li&gt;서블릿의 &lt;code&gt;service()&lt;/code&gt; 메서드를 직접 호출합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@WebServlet&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/legacy&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;LegacyServlet&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;extends&lt;/span&gt; HttpServlet {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;@Override&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;protected&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;doGet&lt;/span&gt;(HttpServletRequest req, HttpServletResponse res) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        res.&lt;span style=&#34;color:#a6e22e&#34;&gt;getWriter&lt;/span&gt;().&lt;span style=&#34;color:#a6e22e&#34;&gt;write&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Legacy Servlet Response&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-요약&#34;&gt;📌 &lt;strong&gt;요약&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;어댑터명&lt;/th&gt;&#xA;          &lt;th&gt;처리 대상&lt;/th&gt;&#xA;          &lt;th&gt;주요 사용 사례&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;HandlerFunctionAdapter&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;HandlerFunction&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;함수형 라우팅(람다 기반)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;HttpRequestHandlerAdapter&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;HttpRequestHandler&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;서블릿 API 기반 레거시 코드&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;RequestMappingHandlerAdapter&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;@RequestMapping&lt;/code&gt; 기반 컨트롤러&lt;/td&gt;&#xA;          &lt;td&gt;현대적인 REST API 개발&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;SimpleControllerHandlerAdapter&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;Controller&lt;/code&gt; 인터페이스&lt;/td&gt;&#xA;          &lt;td&gt;과거 버전 호환용 컨트롤러&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;SimpleServletHandlerAdapter&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;일반 서블릿&lt;/td&gt;&#xA;          &lt;td&gt;기존 서블릿 통합&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-핵심-포인트&#34;&gt;💡 &lt;strong&gt;핵심 포인트&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;현대적인 개발&lt;/strong&gt;에서는 &lt;strong&gt;&lt;code&gt;RequestMappingHandlerAdapter&lt;/code&gt;&lt;/strong&gt; 가 주력으로 사용됩니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;함수형 프로그래밍&lt;/strong&gt;은 &lt;strong&gt;&lt;code&gt;HandlerFunctionAdapter&lt;/code&gt;&lt;/strong&gt; 로 처리합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;레거시 코드&lt;/strong&gt; 통합 시 &lt;code&gt;HttpRequestHandlerAdapter&lt;/code&gt; 또는 &lt;code&gt;SimpleServletHandlerAdapter&lt;/code&gt;를 사용합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;SimpleControllerHandlerAdapter&lt;/code&gt;는 거의 사용되지 않으며, &lt;code&gt;@Controller&lt;/code&gt; 애노테이션으로 대체되었습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>abi</title>
      <link>http://localhost:1313/02.inbox/abi/</link>
      <pubDate>Wed, 22 Jan 2025 18:31:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/abi/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;gcc-arm-[플렛폼]-[ABI 타입]&#xA;&#xA;&#xA;gcc-arm-linux-gnueabi/jammy 4:11.2.0-1ubuntu1 amd64&#xA;  GNU C compiler for the armel architecture&#xA;&#xA;gcc-arm-linux-gnueabihf/jammy 4:11.2.0-1ubuntu1 amd64&#xA;  GNU C compiler for the armhf architecture&#xA;&#xA;gcc-arm-none-eabi/jammy 15:10.3-2021.07-4 amd64&#xA;  GCC cross compiler for ARM Cortex-R/M processors&#xA;&#xA;gcc-arm-none-eabi-source/jammy 15:10.3-2021.07-4 all&#xA;  GCC cross compiler for ARM Cortex-R/M processors (source)&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;arm-none-eabi-gcc&lt;/p&gt;&#xA;&lt;p&gt;ABI는 &amp;ldquo;Application Binary Interface&amp;quot;의 약자로, 소프트웨어와 하드웨어 간의 상호작용을 정의하는 규약입니다. ABI는 다음과 같은 요소를 포함합니다:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;데이터 타입: 데이터의 크기, 정렬 방식, 표현 방식 등을 정의합니다.&lt;/li&gt;&#xA;&lt;li&gt;함수 호출 규약: 함수에 인자를 전달하는 방법, 반환 값 처리, 스택 관리 등을 규정합니다.&lt;/li&gt;&#xA;&lt;li&gt;레지스터 사용: CPU 레지스터의 사용 방식과 어떤 레지스터가 어떤 용도로 사용되는지를 정의합니다.&lt;/li&gt;&#xA;&lt;li&gt;바이너리 형식: 실행 파일과 라이브러리의 구조와 형식에 대해 설명합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>gcc defalut 버전 확인</title>
      <link>http://localhost:1313/02.inbox/gcc-defalut-%EB%B2%84%EC%A0%84-%ED%99%95%EC%9D%B8/</link>
      <pubDate>Mon, 23 Dec 2024 13:30:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/gcc-defalut-%EB%B2%84%EC%A0%84-%ED%99%95%EC%9D%B8/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gcc -dM -E -x c - &amp;lt; /dev/null | grep __STDC_VERSION__&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;g++ -dM -E -x c++ - &amp;lt; /dev/null | grep __cplusplus&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;C++98: 199711&#xA;C++11: 201103&#xA;C++14: 201402&#xA;C++17: 201703&#xA;C++20: 202002&lt;/p&gt;</description>
    </item>
    <item>
      <title>xmap 출력</title>
      <link>http://localhost:1313/02.inbox/xmap-%EC%B6%9C%EB%A0%A5/</link>
      <pubDate>Sun, 22 Dec 2024 12:04:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/xmap-%EC%B6%9C%EB%A0%A5/</guid>
      <description>&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20241207204591.png&#34; alt=&#34; (Image resource not found)&#34; &gt;%20image%2020241207204591.png)&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;code&gt;2910149: ./a.out&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;프로세스 ID 2910149의 실행 파일 &lt;code&gt;./a.out&lt;/code&gt;에 대한 메모리 맵입니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;Address Kbytes RSS Dirty Mode Mapping&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;각 열의 의미:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Address&lt;/strong&gt;: 메모리 주소&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Kbytes&lt;/strong&gt;: 해당 영역의 크기(KB)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;RSS&lt;/strong&gt;: 실제 메모리에 올라간 크기(KB)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Dirty&lt;/strong&gt;: 수정된 페이지 수(KB)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Mode&lt;/strong&gt;: 메모리 접근 권한&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Mapping&lt;/strong&gt;: 매핑된 파일이나 영역의 설명&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;0000561ff3b48000 4 4 4 r---- a.out&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;실행 파일의 읽기 전용 영역입니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;0000561ff3b49000 4 4 4 r-x-- a.out&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;실행 권한이 있는 코드 영역입니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;0000561ff3b4a000 4 4 4 r---- a.out&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;추가적인 읽기 전용 데이터 영역입니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;0000561ff3b4b000 4 4 4 r---- a.out&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;또 다른 읽기 전용 영역입니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;0000561ff3b4c000 4 4 4 rw--- a.out&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;쓰기 및 읽기 가능한 데이터 영역입니다(예: 전역 변수).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;0000561ff4380000 132 4 4 rw--- [ anon ]&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;익명 메모리 매핑 영역으로 힙(heap) 영역일 수 있습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;00007f79538e0000 4 0 0 ----- [ anon ]&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;보호된 메모리 영역입니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;00007f79538e1000 8192 8 8 rw--- [ anon ]&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;스레드 스택 영역으로 8MB의 크기를 갖습니다.&#xA;그 이후 줄들은 각 스레드별 스택 영역을 나타냅니다(스레드마다 약 8MB씩 할당):&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;00007f79547fa000&lt;/code&gt;부터 &lt;code&gt;00007f7956fff000&lt;/code&gt;까지 반복적으로 나타나는 8MB 크기의 &lt;code&gt;rw--- [ anon ]&lt;/code&gt; 영역들은 각 스레드의 스택입니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;마지막 부분:&lt;/p&gt;</description>
    </item>
    <item>
      <title>x86-64 레지스터 최소 설명</title>
      <link>http://localhost:1313/02.inbox/x86-64-%EB%A0%88%EC%A7%80%EC%8A%A4%ED%84%B0-%EC%B5%9C%EC%86%8C-%EC%84%A4%EB%AA%85/</link>
      <pubDate>Fri, 20 Dec 2024 09:02:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/x86-64-%EB%A0%88%EC%A7%80%EC%8A%A4%ED%84%B0-%EC%B5%9C%EC%86%8C-%EC%84%A4%EB%AA%85/</guid>
      <description>&lt;p&gt;x86-64 아키텍처에서 각 레지스터는 특정 목적이나 일반적인 연산에 사용됩니다. 이들은 64비트 레지스터이며, 일부는 하위 32비트, 16비트, 8비트 단위로도 사용할 수 있습니다. 여기서는 주요 레지스터와 그 역할을 설명하겠습니다.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;범용-레지스터-general-purpose-registers&#34;&gt;&lt;strong&gt;범용 레지스터 (General-Purpose Registers)&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;레지스터&lt;/th&gt;&#xA;          &lt;th&gt;역할/사용 목적&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;RAX&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;- 주로 산술 연산(곱셈, 나눗셈)의 결과 저장&lt;br&gt;- 함수 호출 시 반환값 저장&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;RBX&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;- 일반 데이터 저장 (callee-saved: 함수 호출 후 유지됨)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;RCX&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;- 반복 연산의 카운터로 사용 (&lt;code&gt;loop&lt;/code&gt; 명령어에서 사용)&lt;br&gt;- 함수 호출 시 세 번째 인수 전달 (Windows x64 ABI 기준)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;RDX&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;- 입출력 연산 및 곱셈/나눗셈에서 사용- 함수 호출 시 두 번째 인수 전달&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;RSI&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;- 문자열 조작에서 소스 주소 (Source Index)&lt;br&gt;- 함수 호출 시 첫 번째 인수 전달 (Linux x86-64 ABI 기준)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;RDI&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;- 문자열 조작에서 대상 주소 (Destination Index)&lt;br&gt;- 함수 호출 시 첫 번째 인수 전달 (Windows x64 ABI 기준)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;RBP&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;- 베이스 포인터 (Base Pointer)&lt;br&gt;- 함수 호출 시 스택 프레임을 추적&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;RSP&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;- 스택 포인터 (Stack Pointer)&lt;br&gt;- 현재 스택의 최상단을 가리킴&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;R8~R15&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;- 추가 범용 레지스터&lt;br&gt;- 함수 호출 시 추가 인수 전달 (Linux 및 Windows x64 ABI)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;특수-목적-레지스터&#34;&gt;&lt;strong&gt;특수 목적 레지스터&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;레지스터&lt;/th&gt;&#xA;          &lt;th&gt;역할/사용 목적&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;RIP&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;- 명령 포인터 (Instruction Pointer)&lt;br&gt;- 현재 실행 중인 명령어의 주소&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;RFLAGS&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;- 플래그 레지스터&lt;br&gt;- 연산 결과의 상태(예: 캐리, 오버플로, 제로 등) 저장&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;RSP&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;- 스택 포인터&lt;br&gt;- 함수 호출 및 지역 변수 할당 관리&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;RBP&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;- 베이스 포인터&lt;br&gt;- 스택 프레임의 기준점 역할&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;세그먼트-레지스터&#34;&gt;&lt;strong&gt;세그먼트 레지스터&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;레지스터&lt;/th&gt;&#xA;          &lt;th&gt;역할/사용 목적&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;CS&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;코드 세그먼트 (Code Segment)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;DS&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;데이터 세그먼트 (Data Segment)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;SS&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;스택 세그먼트 (Stack Segment)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;ES, FS, GS&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;추가 세그먼트&lt;br&gt;- 주로 OS 및 특정 상황에서 사용&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;레지스터-크기&#34;&gt;&lt;strong&gt;레지스터 크기&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;x86-64에서 각 레지스터는 이름에 따라 하위 크기를 참조할 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>05.트랜잭션과 잠금</title>
      <link>http://localhost:1313/02.inbox/real-my-sql/05.%ED%8A%B8%EB%9E%9C%EC%9E%AD%EC%85%98%EA%B3%BC-%EC%9E%A0%EA%B8%88/</link>
      <pubDate>Wed, 18 Dec 2024 02:53:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/real-my-sql/05.%ED%8A%B8%EB%9E%9C%EC%9E%AD%EC%85%98%EA%B3%BC-%EC%9E%A0%EA%B8%88/</guid>
      <description></description>
    </item>
    <item>
      <title>cpp 문자열 split</title>
      <link>http://localhost:1313/02.inbox/cpp-%EB%AC%B8%EC%9E%90%EC%97%B4-split/</link>
      <pubDate>Tue, 17 Dec 2024 06:46:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/cpp-%EB%AC%B8%EC%9E%90%EC%97%B4-split/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vector&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;string&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; split(&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; string&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; input, &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; string&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; delimiter) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    vector&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;string&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; ret;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    size_t pos &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    string token;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// input 문자열이 비어있거나 delimiter가 비어있으면 빈 벡터 반환&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (input.empty() &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; delimiter.empty()) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; ret;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    string str &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; input;  &lt;span style=&#34;color:#75715e&#34;&gt;// 원본 문자열을 수정하지 않기 위해 복사&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 구분자가 문자열에 없을 때까지 반복&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; ((pos &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; str.find(delimiter)) &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; string&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;npos) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        token &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; str.substr(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, pos);  &lt;span style=&#34;color:#75715e&#34;&gt;// 구분자 이전의 문자열 추출&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        ret.push_back(token);          &lt;span style=&#34;color:#75715e&#34;&gt;// 벡터에 추가&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        str.erase(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, pos &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; delimiter.length());  &lt;span style=&#34;color:#75715e&#34;&gt;// 구분자 이후의 문자열로 업데이트&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 남은 문자열 추가&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    ret.push_back(str);  &lt;span style=&#34;color:#75715e&#34;&gt;// 마지막 토큰 추가&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; ret;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>04.아키텍쳐</title>
      <link>http://localhost:1313/02.inbox/real-my-sql/04.%EC%95%84%ED%82%A4%ED%85%8D%EC%B3%90/</link>
      <pubDate>Sat, 14 Dec 2024 19:08:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/real-my-sql/04.%EC%95%84%ED%82%A4%ED%85%8D%EC%B3%90/</guid>
      <description>&lt;p&gt;mysql 엔진 : 커넥션핸들러, sql 파서, 전처리기, 옵티마이저&#xA;스토리지 엔진 : 데이터를 스토리지에 W 또는 R =&amp;gt; 키캐시(MyISAM) 또는 버퍼풀기능&lt;/p&gt;&#xA;&lt;p&gt;mysql 엔진 -&amp;gt; 스토리지 엔진으로 요청시 헨들러 api 사용&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SHOW&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;GLOBAL&lt;/span&gt; STATUS &lt;span style=&#34;color:#66d9ef&#34;&gt;LIKE&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;handler%&amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;실행중인 스레드 목록&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; thread_id, name, &lt;span style=&#34;color:#66d9ef&#34;&gt;type&lt;/span&gt;, processlist_user, processlist_host &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; performance_schema.threads &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; thread_id;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;플러그인 시스템 컴포넌트 시스템 차이&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20241214193749.png&#34; alt=&#34; (Image resource not found)&#34; &gt;&#xA;플러그인 : &lt;code&gt;show plugins;&lt;/code&gt;&#xA;컴포넌트 : &lt;code&gt;select * from mysql.component;&lt;/code&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;innodb&#34;&gt;innodb&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20241220052896.png&#34; alt=&#34;Pasted image 20241220052896 (Image resource not found)&#34; &gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20241220052912.png&#34; alt=&#34;Pasted image 20241220052912 (Image resource not found)&#34; &gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>meterialize view 의 집계연산에서 삽입 삭제에 따른 변화</title>
      <link>http://localhost:1313/02.inbox/meterialize-view-%EC%9D%98-%EC%A7%91%EA%B3%84%EC%97%B0%EC%82%B0%EC%97%90%EC%84%9C-%EC%82%BD%EC%9E%85-%EC%82%AD%EC%A0%9C%EC%97%90-%EB%94%B0%EB%A5%B8-%EB%B3%80%ED%99%94/</link>
      <pubDate>Wed, 04 Dec 2024 15:56:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/meterialize-view-%EC%9D%98-%EC%A7%91%EA%B3%84%EC%97%B0%EC%82%B0%EC%97%90%EC%84%9C-%EC%82%BD%EC%9E%85-%EC%82%AD%EC%A0%9C%EC%97%90-%EB%94%B0%EB%A5%B8-%EB%B3%80%ED%99%94/</guid>
      <description>&lt;p&gt;아래는 집계 연산에서 &lt;code&gt;count&lt;/code&gt;, &lt;code&gt;sum&lt;/code&gt;, &lt;code&gt;avg&lt;/code&gt;, &lt;code&gt;min&lt;/code&gt;, &lt;code&gt;max&lt;/code&gt;의 삽입 및 삭제에 따른 변화를 중심으로 설명하겠습니다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-count&#34;&gt;1. Count&lt;/h2&gt;&#xA;&lt;h3 id=&#34;삽입&#34;&gt;삽입&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;동작&lt;/strong&gt;: 새로운 튜플이 삽입되면, 해당 튜플의 그룹이 이미 존재하는지 확인합니다.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;존재하는 경우&lt;/strong&gt;: 해당 그룹의 카운트를 1 증가시킵니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;존재하지 않는 경우&lt;/strong&gt;: 새로운 그룹을 추가하고 카운트를 1로 설정합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;삭제&#34;&gt;삭제&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;동작&lt;/strong&gt;: 삭제할 튜플이 있을 때, 해당 튜플의 그룹을 찾아 카운트를 감소시킵니다.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;카운트 감소&lt;/strong&gt;: 만약 카운트가 0이 된다면, 해당 그룹을 &lt;code&gt;v&lt;/code&gt;에서 삭제합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;예시&#34;&gt;예시&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;초기 상태: &lt;code&gt;v = { (1, 2), (2, 3) }&lt;/code&gt; (그룹 1의 카운트 2, 그룹 2의 카운트 3)&lt;/li&gt;&#xA;&lt;li&gt;삽입: 튜플 &lt;code&gt;(1)&lt;/code&gt;이 추가되면, &lt;code&gt;v&lt;/code&gt;는 &lt;code&gt;{ (1, 3), (2, 3) }&lt;/code&gt;로 변경됩니다.&lt;/li&gt;&#xA;&lt;li&gt;삭제: 튜플 &lt;code&gt;(2)&lt;/code&gt;가 삭제되면, &lt;code&gt;v&lt;/code&gt;는 &lt;code&gt;{ (1, 3), (2, 2) }&lt;/code&gt;로 변경됩니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;2-sum&#34;&gt;2. Sum&lt;/h2&gt;&#xA;&lt;h3 id=&#34;삽입-1&#34;&gt;삽입&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;동작&lt;/strong&gt;: 새로운 튜플이 삽입되면, 해당 그룹의 값을 합산합니다.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;존재하는 경우&lt;/strong&gt;: 그룹의 합계에 새로운 튜플의 값을 추가합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;존재하지 않는 경우&lt;/strong&gt;: 새로운 그룹을 추가하고 합계를 해당 튜플의 값으로 설정합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;삭제-1&#34;&gt;삭제&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;동작&lt;/strong&gt;: 삭제할 튜플이 있을 때, 해당 튜플의 그룹에서 값을 빼줍니다.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;합계 감소&lt;/strong&gt;: 만약 특정 그룹의 합계가 0이 되면, 해당 그룹을 &lt;code&gt;v&lt;/code&gt;에서 삭제합니다. 하지만 합계가 0일 때 단순히 삭제할 수 없는 이유는 다른 튜플이 여전히 존재할 수 있기 때문입니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;예시-1&#34;&gt;예시&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;초기 상태: &lt;code&gt;v = { (1, 50), (2, 60) }&lt;/code&gt; (그룹 1의 합계 50, 그룹 2의 합계 60)&lt;/li&gt;&#xA;&lt;li&gt;삽입: 튜플 &lt;code&gt;(1, 20)&lt;/code&gt;이 추가되면, &lt;code&gt;v&lt;/code&gt;는 &lt;code&gt;{ (1, 70), (2, 60) }&lt;/code&gt;로 변경됩니다.&lt;/li&gt;&#xA;&lt;li&gt;삭제: 튜플 &lt;code&gt;(1, 50)&lt;/code&gt;가 삭제되면, &lt;code&gt;v&lt;/code&gt;는 &lt;code&gt;{ (1, 20), (2, 60) }&lt;/code&gt;로 변경됩니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;3-average-avg&#34;&gt;3. Average (avg)&lt;/h2&gt;&#xA;&lt;h3 id=&#34;처리-방법&#34;&gt;처리 방법&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;합계와 카운트 별도 유지&lt;/strong&gt;: 평균을 계산하기 위해서는 합계와 카운트를 별도로 유지합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;삭제 시&lt;/strong&gt;: 특정 그룹의 튜플이 삭제되면, 해당 그룹의 합계에서 삭제된 값만큼 빼고, 카운트도 감소시킵니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;예시-2&#34;&gt;예시&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;초기 상태: 그룹 1의 합계 50, 카운트 2 (평균 25)&lt;/li&gt;&#xA;&lt;li&gt;삭제: 튜플 &lt;code&gt;(1, 20)&lt;/code&gt;가 삭제되면, 그룹 1의 합계는 30, 카운트는 1이 되어 평균은 30이 됩니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;4-min-and-max&#34;&gt;4. Min and Max&lt;/h2&gt;&#xA;&lt;h3 id=&#34;삽입-2&#34;&gt;삽입&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;동작&lt;/strong&gt;: 새로운 튜플이 삽입될 때, 해당 그룹의 최소값과 최대값을 업데이트합니다.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;최소값/최대값 변경&lt;/strong&gt;: 새로운 값이 기존의 최소값보다 작거나 최대값보다 클 경우, 해당 값을 업데이트합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;삭제-2&#34;&gt;삭제&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;동작&lt;/strong&gt;: 만약 삭제할 튜플이 최소 최대이면 해당 그룹의 다른 튜플들을 확인하여 새로운 최소값 또는 최대값을 찾아야 합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;비용 발생&lt;/strong&gt;: 이 과정은 다른 튜플을 스캔해야 하므로 비용이 더 발생합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;예시-3&#34;&gt;예시&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;초기 상태: &lt;code&gt;v = { (1, min=10, max=20), (2, min=30, max=40) }&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;삽입: 튜플 &lt;code&gt;(1, 5)&lt;/code&gt;가 추가되면, 그룹 1의 최소값이 5로 업데이트됩니다.&lt;/li&gt;&#xA;&lt;li&gt;삭제: 튜플 &lt;code&gt;(1, 20)&lt;/code&gt;가 삭제되면, 그룹 1의 최대값을 찾기 위해 다른 튜플들을 확인해야 하므로 비용이 발생합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Oracle database 권한</title>
      <link>http://localhost:1313/02.inbox/oracle-database-%EA%B6%8C%ED%95%9C/</link>
      <pubDate>Fri, 29 Nov 2024 13:13:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/oracle-database-%EA%B6%8C%ED%95%9C/</guid>
      <description>&lt;p&gt;Oracle 데이터베이스에서 사용자의 권한을 설정할 때 사용할 수 있는 다양한 &lt;strong&gt;권한&lt;/strong&gt;(privileges)과 &lt;strong&gt;역할&lt;/strong&gt;(roles)의 예시는 아래와 같습니다. 권한은 크게 &lt;strong&gt;시스템 권한&lt;/strong&gt;과 &lt;strong&gt;객체 권한&lt;/strong&gt;으로 나뉩니다. 아래는 그 주요 예들입니다.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;1-시스템-권한-system-privileges&#34;&gt;&lt;strong&gt;1. 시스템 권한 (System Privileges)&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;시스템 권한은 데이터베이스 전체에서 특정 작업을 수행할 수 있도록 허용합니다.&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;strong&gt;권한&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;설명&lt;/strong&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;CREATE SESSION&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;데이터베이스에 연결할 수 있는 권한.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;CREATE TABLE&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;새 테이블을 생성할 수 있는 권한.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;CREATE VIEW&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;새 뷰(View)를 생성할 수 있는 권한.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;CREATE MATERIALIZED VIEW&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;새 물리화된 뷰(Materialized View)를 생성할 수 있는 권한.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;CREATE PROCEDURE&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;프로시저, 함수 또는 패키지를 생성할 수 있는 권한.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;CREATE SEQUENCE&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;새 시퀀스를 생성할 수 있는 권한.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;CREATE TRIGGER&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;트리거(Trigger)를 생성할 수 있는 권한.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;CREATE USER&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;새로운 사용자를 생성할 수 있는 권한.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;CREATE ROLE&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;새로운 역할(Role)을 생성할 수 있는 권한.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;CREATE INDEX&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;새로운 인덱스를 생성할 수 있는 권한.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;CREATE SYNONYM&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;새로운 동의어(Synonym)를 생성할 수 있는 권한.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;CREATE PUBLIC SYNONYM&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;공용 동의어(Public Synonym)를 생성할 수 있는 권한.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;CREATE DATABASE LINK&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;데이터베이스 링크(Database Link)를 생성할 수 있는 권한.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;ALTER USER&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;사용자의 속성(예: 비밀번호, 테이블스페이스 등)을 변경할 수 있는 권한.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;DROP USER&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;사용자를 삭제할 수 있는 권한.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;DROP ANY TABLE&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;모든 테이블을 삭제할 수 있는 권한.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;SELECT ANY TABLE&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;모든 테이블에 대해 SELECT 쿼리를 실행할 수 있는 권한.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;UPDATE ANY TABLE&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;모든 테이블의 데이터를 업데이트할 수 있는 권한.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;DELETE ANY TABLE&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;모든 테이블의 데이터를 삭제할 수 있는 권한.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;INSERT ANY TABLE&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;모든 테이블에 데이터를 삽입할 수 있는 권한.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;EXECUTE ANY PROCEDURE&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;모든 프로시저와 함수를 실행할 수 있는 권한.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;MANAGE TABLESPACE&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;테이블스페이스를 관리할 수 있는 권한.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;2-객체-권한-object-privileges&#34;&gt;&lt;strong&gt;2. 객체 권한 (Object Privileges)&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;객체 권한은 특정 객체(예: 테이블, 뷰, 시퀀스 등)에 대해 작업을 수행할 수 있는 권한입니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cloud Computing 과제2 보고서</title>
      <link>http://localhost:1313/02.inbox/cloud-computing-%EA%B3%BC%EC%A0%9C2-%EB%B3%B4%EA%B3%A0%EC%84%9C/</link>
      <pubDate>Sun, 24 Nov 2024 05:40:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/cloud-computing-%EA%B3%BC%EC%A0%9C2-%EB%B3%B4%EA%B3%A0%EC%84%9C/</guid>
      <description>&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20241124053028.png&#34; alt=&#34;Pasted image 20241124053028 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-기존-wordcount-프로그램에-추가하거나-개선하고자-하는-각-기능-설명&#34;&gt;1. 기존 WordCount 프로그램에 추가하거나 개선하고자 하는 각 기능 설명&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;문장 부호(!?,.&amp;rsquo;&amp;quot;{}()) 및 소 중괄호 제거&lt;/li&gt;&#xA;&lt;li&gt;대소문자 구분 여부를 확인하기 위해 &amp;ndash;case-sensitive true|false 인수를 받음&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;2-입력-데이터-설명---데이터-전체를-보고서에-포함하거나-별도-파일로-제출&#34;&gt;2. 입력 데이터 설명 - 데이터 전체를 보고서에 포함하거나 별도 파일로 제출&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.gnu.org/software/bash/manual/bash.txt&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;bash_menual_file&lt;/a&gt; 를 사용하여 입력데이터로 사용하였음&lt;/p&gt;&#xA;&lt;h2 id=&#34;3-각-기능에-대한-구현-결과물---소스-코드-전체를-보고서에-포함하거나-별도-파일로-제출-jar-파일-x&#34;&gt;3. 각 기능에 대한 구현 결과물 - 소스 코드 전체를 보고서에 포함하거나 별도 파일로 제출 (jar 파일 X)&lt;/h2&gt;&#xA;&lt;p&gt;WordCount.java 파일&lt;/p&gt;</description>
    </item>
    <item>
      <title>서버 db 사용하기</title>
      <link>http://localhost:1313/02.inbox/%EC%84%9C%EB%B2%84-db-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</link>
      <pubDate>Thu, 14 Nov 2024 13:13:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EC%84%9C%EB%B2%84-db-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</guid>
      <description>&lt;p&gt;미리 data 를 담아놓은 db 입니다&#xA;환경구성이 잘 안되시는 분은 여기서 이것을 사용하시면 됩니다&#xA;학기 끝날 때 까지 서버를 열어 두겠습니다&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20241113211582.png&#34; alt=&#34; (Image resource not found)&#34; &gt;%20image%2020241113211582.png)&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20241113211588.png&#34; alt=&#34;Pasted image 20241113211588 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;비밀번호는 1111&#xA;단 data 뷰어 용으로만 사용해 주세요(create문 truncate 등등 data 를 손보는 작업은 하지 말아 주세요)&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>git merge</title>
      <link>http://localhost:1313/02.inbox/git-merge/</link>
      <pubDate>Sat, 09 Nov 2024 13:23:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/git-merge/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-mermaid&#34; data-lang=&#34;mermaid&#34;&gt;gitGraph&#xA;commit id: &amp;#34;H&amp;#34;&#xA;commit id: &amp;#34;I&amp;#34;&#xA;branch topic&#xA;commit id: &amp;#34;B&amp;#34;&#xA;commit id: &amp;#34;C&amp;#34;&#xA;checkout main&#xA;commit id: &amp;#34;J&amp;#34;&#xA;commit id: &amp;#34;K&amp;#34;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;여기서 branch 를 merge 할 때&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;merge commit&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-mermaid&#34; data-lang=&#34;mermaid&#34;&gt;gitGraph&#xA;commit id: &amp;#34;D&amp;#34;&#xA;commit id: &amp;#34;E&amp;#34;&#xA;branch topic&#xA;commit id: &amp;#34;B&amp;#34;&#xA;commit id: &amp;#34;C&amp;#34;&#xA;checkout main&#xA;commit id: &amp;#34;F&amp;#34;&#xA;commit id: &amp;#34;G&amp;#34;&#xA;merge topic&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이러한 방식이 기본적인 e commit 를 base 로 한 merge 방식이다&lt;/p&gt;&#xA;&lt;p&gt;git 은 main 의 commit 가 있을 경우 위의 방식을 선택한다&#xA;하지만 만약&lt;/p&gt;</description>
    </item>
    <item>
      <title>db-book 답지 파일 다운받는 javascript</title>
      <link>http://localhost:1313/02.inbox/db-book-%EB%8B%B5%EC%A7%80-%ED%8C%8C%EC%9D%BC-%EB%8B%A4%EC%9A%B4%EB%B0%9B%EB%8A%94-javascript/</link>
      <pubDate>Tue, 05 Nov 2024 17:05:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/db-book-%EB%8B%B5%EC%A7%80-%ED%8C%8C%EC%9D%BC-%EB%8B%A4%EC%9A%B4%EB%B0%9B%EB%8A%94-javascript/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://db-book.com/bib-dir/index.html&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;https://db-book.com/bib-dir/index.html&lt;/a&gt;&#xA;여기 위치에서 콘솔창은 연후 모든 pdf 파일을 다운받는다&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 모든 PDF 링크와 이름을 선택&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; document.&lt;span style=&#34;color:#a6e22e&#34;&gt;evaluate&lt;/span&gt;(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/html/body/center/table/tbody/tr&amp;#39;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    document,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;XPathResult&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;ORDERED_NODE_SNAPSHOT_TYPE&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 링크 배열 생성&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;pdfData&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rows&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;snapshotLength&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;row&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rows&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;snapshotItem&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;nameElement&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;row&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;querySelector&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;td:nth-child(1)&amp;#39;&lt;/span&gt;); &lt;span style=&#34;color:#75715e&#34;&gt;// 파일 이름&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;linkElement&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;row&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;querySelector&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;td:nth-child(2) a&amp;#39;&lt;/span&gt;); &lt;span style=&#34;color:#75715e&#34;&gt;// PDF 링크&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 요소가 존재하는지 확인&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;nameElement&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;linkElement&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;nameElement&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;textContent&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;trim&lt;/span&gt;(); &lt;span style=&#34;color:#75715e&#34;&gt;// 파일 이름&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;url&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;linkElement&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;href&lt;/span&gt;; &lt;span style=&#34;color:#75715e&#34;&gt;// PDF 링크&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;pdfData&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;push&lt;/span&gt;({&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;url&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;url&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        });&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;warn&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;`Row &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; does not contain the expected elements.`&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// PDF 다운로드 함수&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;downloadFiles&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;async&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;pdfData&lt;/span&gt;) =&amp;gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;url&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt; } &lt;span style=&#34;color:#66d9ef&#34;&gt;of&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;pdfData&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; document.&lt;span style=&#34;color:#a6e22e&#34;&gt;createElement&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;href&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;url&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;download&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.pdf&amp;#39;&lt;/span&gt;; &lt;span style=&#34;color:#75715e&#34;&gt;// 파일 이름 지정&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        document.&lt;span style=&#34;color:#a6e22e&#34;&gt;body&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;appendChild&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;click&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        document.&lt;span style=&#34;color:#a6e22e&#34;&gt;body&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;removeChild&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// 오류발생 가능성 때문에 다운로드 사이에 잠시 대기 오류발생 가능성 때문에&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;await&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Promise(&lt;span style=&#34;color:#a6e22e&#34;&gt;resolve&lt;/span&gt; =&amp;gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setTimeout&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;resolve&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;)); &lt;span style=&#34;color:#75715e&#34;&gt;// 0.1초 대기&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// PDF 다운로드 수행&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;downloadFiles&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;pdfData&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>RISC-V 명령어 구조</title>
      <link>http://localhost:1313/02.inbox/%EA%B7%B8%EB%9E%98%EC%84%9C-%EC%BB%B4%ED%93%A8%ED%84%B0%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8F%99%EC%9E%91%ED%95%98%EB%82%98%EC%9A%94/risc-v-%EB%AA%85%EB%A0%B9%EC%96%B4-%EA%B5%AC%EC%A1%B0/</link>
      <pubDate>Sat, 31 Aug 2024 09:44:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EA%B7%B8%EB%9E%98%EC%84%9C-%EC%BB%B4%ED%93%A8%ED%84%B0%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8F%99%EC%9E%91%ED%95%98%EB%82%98%EC%9A%94/risc-v-%EB%AA%85%EB%A0%B9%EC%96%B4-%EA%B5%AC%EC%A1%B0/</guid>
      <description>&lt;p&gt;RISC-V emulator RV32I 를 코드로 구현하기 위해 먼저 RISC-V 공식 문서를 확인하여&#xA;구현할 명령의 구조를 공부한다&lt;/p&gt;&#xA;&lt;p&gt;RISC V 의 경우 32비트인지 64 비트인지 128비트인지에 따라 RV32, RV64, RV128 로 나누어지며 기본적인 명령인 integer instruction set 을 구현하면 RV32I, RV64I, RV128I 라고 불리운다 또한 아래의 4가지 확장을 추가하여 자유롭게 가능한 명령을 추가 할 수 있다&#xA;또한 문서는 2가지로 privilige 명령과 non privilige 명령 문서가 있으며 아래는 non privilige 명령만을 설명한다&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;1권, 권한 없는 사양 버전 20240411 &lt;a href=&#34;https://drive.google.com/file/d/1uviu1nH-tScFfgrovvFCrj7Omv8tFtkp/view?usp=drive_link&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;PDF&lt;/a&gt;, &lt;a href=&#34;https://github.com/riscv/riscv-isa-manual/releases/tag/20240411&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;GitHub&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;2권, 권한 사양 버전 20240411 &lt;a href=&#34;https://drive.google.com/file/d/17GeetSnT5wW3xNuAHI95-SI1gPGd5sJ_/view?usp=drive_link&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;PDF&lt;/a&gt;, &lt;a href=&#34;https://github.com/riscv/riscv-isa-manual/releases/tag/20240411&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;GitHub&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;non privilige 의 확장 명령 종류&lt;/p&gt;</description>
    </item>
    <item>
      <title>AT&amp;T 문법 과 Intel Assemble 문법 차이</title>
      <link>http://localhost:1313/02.inbox/att-%EB%AC%B8%EB%B2%95-%EA%B3%BC-intel-assemble-%EB%AC%B8%EB%B2%95-%EC%B0%A8%EC%9D%B4/</link>
      <pubDate>Mon, 26 Aug 2024 07:37:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/att-%EB%AC%B8%EB%B2%95-%EA%B3%BC-intel-assemble-%EB%AC%B8%EB%B2%95-%EC%B0%A8%EC%9D%B4/</guid>
      <description>&lt;p&gt;x86 아키텍처에서 어셈블리 언어는 주로 Intel과 AT&amp;amp;T 두 가지 구문 형식으로 나뉘어 사용된다 이 두 형식은 문법과 명령어의 표현 방식에서 차이가 있다&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-intel-구문&#34;&gt;1. Intel 구문&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;형식&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;피연산자는 보통 목적지(대상) 먼저, 원천(소스) 다음으로 나열&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;:&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-assembly&#34; data-lang=&#34;assembly&#34;&gt;MOV EAX, EBX  ; EBX의 값을 EAX로 이동&#xA;ADD EAX, 5    ; EAX에 5를 더함&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;2-att-구문&#34;&gt;2. AT&amp;amp;T 구문&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;형식&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;소스가 먼저, 목적지가 뒤&lt;/li&gt;&#xA;&lt;li&gt;레지스터와 즉시 값 앞에 &amp;lsquo;%&amp;lsquo;와 &amp;lsquo;$&amp;lsquo;를 붙입니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;:&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-assembly&#34; data-lang=&#34;assembly&#34;&gt;mov %ebx, %eax  ; EBX의 값을 EAX로 이동&#xA;add $5, %eax    ; EAX에 5를 더함&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>어셈블러</title>
      <link>http://localhost:1313/02.inbox/%EA%B7%B8%EB%9E%98%EC%84%9C-%EC%BB%B4%ED%93%A8%ED%84%B0%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8F%99%EC%9E%91%ED%95%98%EB%82%98%EC%9A%94/%EC%96%B4%EC%85%88%EB%B8%94%EB%9F%AC/</link>
      <pubDate>Mon, 26 Aug 2024 06:42:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EA%B7%B8%EB%9E%98%EC%84%9C-%EC%BB%B4%ED%93%A8%ED%84%B0%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8F%99%EC%9E%91%ED%95%98%EB%82%98%EC%9A%94/%EC%96%B4%EC%85%88%EB%B8%94%EB%9F%AC/</guid>
      <description></description>
    </item>
    <item>
      <title>그래서 컴퓨터는 어떻게 동작하나요 2</title>
      <link>http://localhost:1313/02.inbox/%EA%B7%B8%EB%9E%98%EC%84%9C-%EC%BB%B4%ED%93%A8%ED%84%B0%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8F%99%EC%9E%91%ED%95%98%EB%82%98%EC%9A%94/%EA%B7%B8%EB%9E%98%EC%84%9C-%EC%BB%B4%ED%93%A8%ED%84%B0%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8F%99%EC%9E%91%ED%95%98%EB%82%98%EC%9A%94-2/</link>
      <pubDate>Sat, 10 Aug 2024 16:37:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EA%B7%B8%EB%9E%98%EC%84%9C-%EC%BB%B4%ED%93%A8%ED%84%B0%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8F%99%EC%9E%91%ED%95%98%EB%82%98%EC%9A%94/%EA%B7%B8%EB%9E%98%EC%84%9C-%EC%BB%B4%ED%93%A8%ED%84%B0%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8F%99%EC%9E%91%ED%95%98%EB%82%98%EC%9A%94-2/</guid>
      <description>&lt;p&gt;여기서 부터는 32 비트로 설계하게 된다&#xA;즉 word 가 32 비트 이다&lt;/p&gt;&#xA;&lt;h2 id=&#34;변경점&#34;&gt;변경점&lt;/h2&gt;&#xA;&lt;h3 id=&#34;ram&#34;&gt;RAM&lt;/h3&gt;&#xA;&lt;p&gt;RAM 의 경우 data bit size 는 32가 가능하지만 address bit width 의 경우 32 비트가 가능하지 않다(logisim 의 한계 4기가의 메모리는 감당하지 못한다) 그러므로 address bit width 의 경우 24 비트로 한다&lt;/p&gt;&#xA;&lt;p&gt;현대 컴퓨터에 사용하는 RAM 과 ㄱ&lt;/p&gt;&#xA;&lt;h3 id=&#34;register&#34;&gt;Register&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;IAR INSTRUCTION ADDRESS REGISTER 을 PC PROGRAM COUTER 로 표기한다&lt;/li&gt;&#xA;&lt;li&gt;레지스터의 경우 7비트에서는 2개가 존재했다&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;instruction-set&#34;&gt;Instruction set&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;8비트&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>실수 표현방법 고정소수점과 부동소수점</title>
      <link>http://localhost:1313/02.inbox/%EC%8B%A4%EC%88%98-%ED%91%9C%ED%98%84%EB%B0%A9%EB%B2%95-%EA%B3%A0%EC%A0%95%EC%86%8C%EC%88%98%EC%A0%90%EA%B3%BC-%EB%B6%80%EB%8F%99%EC%86%8C%EC%88%98%EC%A0%90/</link>
      <pubDate>Sun, 07 Jul 2024 21:55:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EC%8B%A4%EC%88%98-%ED%91%9C%ED%98%84%EB%B0%A9%EB%B2%95-%EA%B3%A0%EC%A0%95%EC%86%8C%EC%88%98%EC%A0%90%EA%B3%BC-%EB%B6%80%EB%8F%99%EC%86%8C%EC%88%98%EC%A0%90/</guid>
      <description>&lt;h3 id=&#34;소수의-10진수-2진수-계산-방법&#34;&gt;소수의 10진수 2진수 계산 방법&lt;/h3&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250408173559.png&#34; alt=&#34;Pasted image 20250408173559 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;예시 1: 10진수 1.625 → 2진수 1.101&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;정수 부분(1):&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;1 ÷ 2 = 0 &amp;hellip; &lt;strong&gt;나머지 1&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;따라서 정수 부분은 &lt;strong&gt;1&lt;/strong&gt;입니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;소수 부분(0.625):&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;0.625 × 2 = 1.25 → &lt;strong&gt;정수 부분 1&lt;/strong&gt;, 소수 부분 0.25&lt;/li&gt;&#xA;&lt;li&gt;0.25 × 2 = 0.5 → &lt;strong&gt;정수 부분 0&lt;/strong&gt;, 소수 부분 0.5&lt;/li&gt;&#xA;&lt;li&gt;0.5 × 2 = 1.0 → &lt;strong&gt;정수 부분 1&lt;/strong&gt;, 소수 부분 0 (계산 종료)&lt;/li&gt;&#xA;&lt;li&gt;따라서 소수 부분은 &lt;strong&gt;101&lt;/strong&gt;입니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;결과:&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>컴퓨터 구조 chapter1</title>
      <link>http://localhost:1313/02.inbox/%EC%BB%B4%ED%93%A8%ED%84%B0-%EA%B5%AC%EC%A1%B0-chapter1/</link>
      <pubDate>Tue, 18 Jun 2024 11:30:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EC%BB%B4%ED%93%A8%ED%84%B0-%EA%B5%AC%EC%A1%B0-chapter1/</guid>
      <description>&lt;h2 id=&#34;a-tour-of-computer-systems&#34;&gt;A Tour of Computer Systems&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;1.1 Information Is Bits + Context 39 정보는 비트 + 문맥이다&#xA;&lt;ul&gt;&#xA;&lt;li&gt;동일한 비트열이 문맥에 따라 string integer floating-point instruction 으로 해석될수 있다&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;1.2 Programs Are Translated by Other Programs into Different Forms 40&lt;/li&gt;&#xA;&lt;li&gt;1.3 It Pays to Understand How Compilation Systems Work 42&lt;/li&gt;&#xA;&lt;li&gt;1.4 Processors Read and Interpret Instructions Stored in Memory 43&lt;/li&gt;&#xA;&lt;li&gt;1.5 Caches Matter 47&lt;/li&gt;&#xA;&lt;li&gt;1.6 Storage Devices Form a Hierarchy 50&lt;/li&gt;&#xA;&lt;li&gt;1.7 The Operating System Manages the Hardware 50&lt;/li&gt;&#xA;&lt;li&gt;1.8 Systems Communicate with Other Systems Using Networks 55&lt;/li&gt;&#xA;&lt;li&gt;1.9 Important Themes 58&lt;/li&gt;&#xA;&lt;li&gt;1.10 Summary 63&#xA;Bibliographic Notes 64&#xA;Solutions to Practice Problems 64&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;direct memory access (DMA, discussed in Chap- ter 6)&#xA;cache memories chapter6&#xA;공유 라이브러리 주소 공간 chapter 7&#xA;kernel vietual memory 가 뭐지?? chapter 9&#xA;unix i o chapter 10&#xA;Thread-Level Concurrency vs instruction level parallelism 의 차이 12장 에서 하이퍼스레딩? 5장에서 instruction ??&#xA;파이프라닝 chapter4&lt;/p&gt;</description>
    </item>
    <item>
      <title>선형대수학 worksheet11-6번</title>
      <link>http://localhost:1313/02.inbox/%EC%84%A0%ED%98%95%EB%8C%80%EC%88%98%ED%95%99-worksheet11-6%EB%B2%88/</link>
      <pubDate>Mon, 03 Jun 2024 19:20:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EC%84%A0%ED%98%95%EB%8C%80%EC%88%98%ED%95%99-worksheet11-6%EB%B2%88/</guid>
      <description>&lt;p&gt;$R_2 의\ 기저는 { u_1 = (1,-3), u_2 = (2,2)}$ $이를\ 통해\ 직교기저 {v_1, v_2} 를\ 구하여라\  &amp;amp;\  정규직교기저 {q_1, q_2} 를 구하라$&lt;/p&gt;&#xA;&lt;p&gt;$문제\ 1\ 그램\ 슈미트\ 직교화\ 과정을\ 통해\ 직교기저가\ 아닌\ 기저에서\ 직교기저를\ 구한다$&#xA;$u_1 = v_1 = (1,-3)$&#xA;$u_2 = (2,2)$&#xA;$v_2 = u_2 - \frac{u_2 \cdot v_1}{|v_1|^2} v_1$&#xA;$v_2 = (2,2) + \frac{4}{10}(1,-3)$&#xA;$v_2 = (\frac{12}{5}, \frac{4}{5})$&#xA;$즉\ 직교기저\ {v_1,v_2} = {(1,-3),(\frac{12}{5},\frac{4}{5})}$&lt;/p&gt;&#xA;&lt;p&gt;$문제\ 2\ 직교\ 기저에\ 정규화를\ 진행한다$&#xA;$각각의\ 원소의\ 크기가\ 1이어야\ 한다$&#xA;$(q_1,q_2) = {(k_1,-3k_1),(\frac{12}{5}k_2,\frac{4}{5}k_2)}$&#xA;$|q_1| = \sqrt{{k_1}^2 + 9k_1^2} = 1$&#xA;$|q_2| = \sqrt{\frac{144}{25}{{k_2}^2 + \frac{16}{25}k_2^2}} = 1$&#xA;$k_1 = \frac{1}{\sqrt{10}}$&#xA;$k_2 = \frac{5}{4\sqrt{10}}$&#xA;$즉\ 정규직교기저\ {q_1,q_2}= {(\frac{1}{\sqrt{10}},\frac{-3}{\sqrt{10}}),(\frac{3}{\sqrt{10}},\frac{1}{\sqrt{10}})}\  이다$&lt;/p&gt;</description>
    </item>
    <item>
      <title>yt-dlp 명령어 모음</title>
      <link>http://localhost:1313/02.inbox/yt-dlp-%EB%AA%85%EB%A0%B9%EC%96%B4-%EB%AA%A8%EC%9D%8C/</link>
      <pubDate>Sun, 02 Jun 2024 01:03:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/yt-dlp-%EB%AA%85%EB%A0%B9%EC%96%B4-%EB%AA%A8%EC%9D%8C/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yt-dlp -F &lt;span style=&#34;color:#75715e&#34;&gt;# 다운받을 수 있는 모든 포멧종류&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yt-dlp -f &lt;span style=&#34;color:#f92672&#34;&gt;[{&lt;/span&gt;포멧 id&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;확장자&lt;span style=&#34;color:#f92672&#34;&gt;}]&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 포멧 지정 다운&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yt-dlp -x --audio-format &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;오디오 포맷&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;URL&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;-f-표시-목록&#34;&gt;-F 표시 목록&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;ID&lt;/strong&gt;: 동영상 화질/오디오 옵션의 고유 식별자입니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;EXT&lt;/strong&gt;: 파일 확장자입니다. 일반적으로 mp4, webm, m4a 등이 사용됩니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;RESOLUTION&lt;/strong&gt;: 동영상의 해상도입니다. 예를 들어 1920x1080은 1080p, 1280x720은 720p를 의미합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;FPS&lt;/strong&gt;: 동영상의 프레임 레이트입니다. 초당 프레임 수를 나타냅니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;CH&lt;/strong&gt;: 오디오 채널 수입니다. 일반적으로 2채널 스테레오 오디오가 사용됩니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;FILESIZE&lt;/strong&gt;: 파일 크기입니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;TBR&lt;/strong&gt;: 평균 비트레이트(Transmission Bitrate)입니다. 동영상 및 오디오의 평균 데이터 전송률을 나타냅니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;PROTO&lt;/strong&gt;: 동영상 스트리밍 프로토콜입니다. 일반적으로 https, m3u8 등이 사용됩니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;VCODEC&lt;/strong&gt;: 동영상 코덱입니다. 예를 들어 avc1.4D401F는 H.264 코덱을 의미합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;VBR&lt;/strong&gt;: 동영상 비트레이트입니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;ACODEC&lt;/strong&gt;: 오디오 코덱입니다. 예를 들어 mp4a.40.2는 AAC 코덱을 의미합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;ABR&lt;/strong&gt;: 오디오 비트레이트입니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;ASR&lt;/strong&gt;: 오디오 샘플링 레이트입니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;MORE INFO&lt;/strong&gt;: 추가 정보입니다. 화질, 오디오 옵션 등에 대한 설명이 포함됩니다.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;이 정보를 통해 동영상의 화질, 오디오 품질, 파일 크기 등을 확인할 수 있습니다. 사용자의 네트워크 환경이나 기기 성능에 따라 적절한 옵션을 선택할 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>sql 에서 백틱, 작은따옴표, 큰따옴표 의미</title>
      <link>http://localhost:1313/02.inbox/sql-%EC%97%90%EC%84%9C-%EB%B0%B1%ED%8B%B1-%EC%9E%91%EC%9D%80%EB%94%B0%EC%98%B4%ED%91%9C-%ED%81%B0%EB%94%B0%EC%98%B4%ED%91%9C-%EC%9D%98%EB%AF%B8/</link>
      <pubDate>Tue, 21 May 2024 21:17:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/sql-%EC%97%90%EC%84%9C-%EB%B0%B1%ED%8B%B1-%EC%9E%91%EC%9D%80%EB%94%B0%EC%98%B4%ED%91%9C-%ED%81%B0%EB%94%B0%EC%98%B4%ED%91%9C-%EC%9D%98%EB%AF%B8/</guid>
      <description>&lt;p&gt;각 데이터베이스 관리 시스템(DBMS)에서 백틱(`), 작은따옴표(&amp;rsquo;), 그리고 큰따옴표(&amp;quot;)의 사용과 의미는 조금씩 다릅니다&lt;/p&gt;&#xA;&lt;h2 id=&#34;oracle&#34;&gt;Oracle&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;백틱(`)&lt;/strong&gt;: Oracle에서는 백틱을 사용하지 않습니다. 특별한 의미를 가지지 않으며, 식별자나 문자열을 나타내는 데 사용되지 않습니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;작은따옴표(&#39;)&lt;/strong&gt;: 문자열 리터럴을 정의하는 데 사용됩니다. 예를 들어, &lt;code&gt;SELECT &#39;문자열&#39; FROM DUAL;&lt;/code&gt;과 같이 사용할 수 있습니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;큰따옴표(&amp;quot;)&lt;/strong&gt;: 식별자(테이블 이름, 컬럼 이름 등)를 정의하는 데 사용됩니다. 대소문자를 구분하며, 기본적으로 Oracle은 대소문자를 구분하지 않지만, 큰따옴표로 묶인 식별자는 대소문자를 구분합니다. 예를 들어, &lt;code&gt;SELECT &amp;quot;Column&amp;quot; FROM &amp;quot;MyTable&amp;quot;;&lt;/code&gt;과 같이 사용할 수 있습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;mysql&#34;&gt;MySQL&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;백틱(`)&lt;/strong&gt;: 테이블 이름이나 컬럼 이름 같은 식별자를 묶는 데 사용됩니다. MySQL에서는 특별한 문자나 예약어, 공백 등이 포함된 식별자를 백틱으로 묶어 사용할 수 있습니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;작은따옴표(&amp;rsquo;)&lt;/strong&gt;: 문자열 리터럴을 정의하는 데 사용됩니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;큰따옴표(&amp;quot;)&lt;/strong&gt;: 기본 설정(SQL 모드)에 따라 다르지만, ANSI_QUOTES SQL 모드가 활성화되어 있을 때 식별자를 묶는 데 사용될 수 있습니다. 그렇지 않은 경우에는 작은따옴표와 같이 문자열 리터럴을 정의하는 데 사용됩니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;postgresql&#34;&gt;PostgreSQL&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;백틱(`)&lt;/strong&gt;: PostgreSQL에서는 백틱을 사용하지 않습니다. 특별한 의미를 가지지 않으며, 식별자나 문자열을 나타내는 데 사용되지 않습니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;작은따옴표(&amp;rsquo;)&lt;/strong&gt;: 문자열 리터럴을 정의하는 데 사용됩니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;큰따옴표(&amp;quot;)&lt;/strong&gt;: 식별자를 묶는 데 사용됩니다. PostgreSQL에서는 큰따옴표로 묶인 식별자가 대소문자를 구분합니다. 예를 들어, &lt;code&gt;SELECT &amp;quot;Column&amp;quot; FROM &amp;quot;MyTable&amp;quot;;&lt;/code&gt;에서 &amp;ldquo;MyTable&amp;quot;과 &amp;ldquo;Column&amp;quot;은 대소문자를 구분하는 식별자입니다.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>ios 터미널 접근</title>
      <link>http://localhost:1313/02.inbox/ios-%ED%84%B0%EB%AF%B8%EB%84%90-%EC%A0%91%EA%B7%BC/</link>
      <pubDate>Wed, 15 May 2024 14:30:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/ios-%ED%84%B0%EB%AF%B8%EB%84%90-%EC%A0%91%EA%B7%BC/</guid>
      <description>&lt;h2 id=&#34;외부-접근&#34;&gt;외부 접근&lt;/h2&gt;&#xA;&lt;p&gt;ios 는 모바일 운영체제로서 샌드박스 형태의 아키텍쳐를 취하고 있다&#xA;즉 앱 하나하나다 일종의 User 로서 로그인하게 되고 유저의 home 영역을 제외한 곳은 읽기 조차 금지 되어있다 하지만 android 는 초창기 부터 다른 A 앱에서 B 앱의 접근을 api 로서 허용하고 있으며 이를 활용해 삼성의 &amp;lsquo;내파일&amp;rsquo; &amp;lsquo;사진&amp;rsquo; &amp;lsquo;한글뷰어&amp;rsquo; 과 같은 앱들은 android 가 제공하는 공용 공간에 접근 api 를 사용하여 동일한 공간에 사용자의 파일을 몰아넣고 데스크탑과 비슷한 환경을 구축해놓았다 하지만 ios 의 경우에는 이런것이 매우 부족하다 하지만 ios 13 부터였나(?) 이러한 api 가 개발자들에게 지원되기 시작했고 이를 이를 통해 할 수 있는 포텐셜이 늘어나게 되었다&lt;/p&gt;</description>
    </item>
    <item>
      <title>대학교 운영체제</title>
      <link>http://localhost:1313/02.inbox/%EB%8C%80%ED%95%99%EA%B5%90-%EC%9A%B4%EC%98%81%EC%B2%B4%EC%A0%9C/</link>
      <pubDate>Mon, 18 Mar 2024 05:46:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EB%8C%80%ED%95%99%EA%B5%90-%EC%9A%B4%EC%98%81%EC%B2%B4%EC%A0%9C/</guid>
      <description>&lt;h2 id=&#34;cpu-동작-과정&#34;&gt;cpu 동작 과정&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/Pasted%20video%2020240318100401.mp4&#34; alt=&#34;Pasted video 20240318100401 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;cpu-구조&#34;&gt;cpu 구조&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240318163101.gif&#34; alt=&#34; (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240318163101.gif&#34; alt=&#34;Pasted image 20240318163101 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;주요 부품&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;레지스터&#xA;&lt;ul&gt;&#xA;&lt;li&gt;PC  프로그램 카운터 (progam counter) : 다음에 실행될 메모리 주소를 저장&lt;/li&gt;&#xA;&lt;li&gt;MAR  메모리 주소 레지스터 (memory Address registor) : pc 에서 주소를 넘겨 받아 메인 메모리에 접근해 데이터를 MBR  (memory buffer registor)에 저장하는 역할&lt;/li&gt;&#xA;&lt;li&gt;MBR 메모리 버퍼 레지스터 (memory buffer registor) : MBR 을 통해 가져온 데이터를 임시 저장, 명령 부분은 IR(Instruction Register) 에 저장, 연산에 사용될 데이터는 AC(Accumulator) 누산기 레지스터에 저장, 메모리에 저장될 데이터를 임시 저장&lt;/li&gt;&#xA;&lt;li&gt;IR 명령어 레지스터 (Instruction Register) : 현재 실행되고 있는 명령을 저장하는 레지스터&lt;/li&gt;&#xA;&lt;li&gt;AC 누산기 (Accumulator) : ALU 연산을 위한 레지스터로서 연산해야 할 값 또는 연산 결과를 임시 저장&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;coutrol 제어장치 : 명령어 레지스터 IR 에 있는 명령을 받아 해석하고 장치들을 제어&lt;/li&gt;&#xA;&lt;li&gt;ALU : 산술 논리 연산 장치&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;추가 부품&lt;/p&gt;</description>
    </item>
    <item>
      <title>mysql 명령 모음</title>
      <link>http://localhost:1313/02.inbox/mysql-%EB%AA%85%EB%A0%B9-%EB%AA%A8%EC%9D%8C/</link>
      <pubDate>Tue, 05 Mar 2024 16:15:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/mysql-%EB%AA%85%EB%A0%B9-%EB%AA%A8%EC%9D%8C/</guid>
      <description>&lt;p&gt;mysql 로그인&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mysql -u &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;name&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; -p &lt;span style=&#34;color:#75715e&#34;&gt;# name 유저로 -p 패스워드를 사용해 로그인 하겠다&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;mysql 유저 생성(외부에서)&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mysqladmin -u &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;name&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;mysql 유저 정보 확인&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;USE mysql; &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;user&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;host&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;user&lt;/span&gt;; &lt;span style=&#34;color:#75715e&#34;&gt;/* mysql 유저 정보 확인 */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;mysql 유저 권한 추가&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;GRANT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ALL&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;privileges&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt; DB명.&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TO&lt;/span&gt; username&lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;hostname IDENTIFIED &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;비밀번호&amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;mysql 유저 권환 확인&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SHOW&lt;/span&gt; GRANTS &lt;span style=&#34;color:#66d9ef&#34;&gt;FOR&lt;/span&gt; username&lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;hostname;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SHOW&lt;/span&gt; VARIABLES &lt;span style=&#34;color:#66d9ef&#34;&gt;LIKE&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;general_log%&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;서버 관리를 하다보면 mysql 사용자 계정을 추가해 줄때가 있다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>gitstatus 프롬프트</title>
      <link>http://localhost:1313/02.inbox/gitstatus-%ED%94%84%EB%A1%AC%ED%94%84%ED%8A%B8/</link>
      <pubDate>Sat, 24 Feb 2024 08:39:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/gitstatus-%ED%94%84%EB%A1%AC%ED%94%84%ED%8A%B8/</guid>
      <description>&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;segment&lt;/th&gt;&#xA;          &lt;th&gt;meaning&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;master&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;HEAD가 위치한 브렌치 이름&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;#v1&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;HEAD가 위치한 태그 이름 (브랜치 일 때는 사용 x)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;@5fc6fca4&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;HEAD가 위치한 커밋 hash (브랜치 or hash 일때 사용 x)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;⇣1&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;로컬 브랜치가 원격 브랜치보다 1개의 커밋만큼 뒤쳐져 있음&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;⇡2&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;로컬 브랜치가 원격 브랜치보다 2개의 커밋만큼 앞서 있음&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;⇠3&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;로컬 브랜치가 푸시 원격 브랜치보다 3개의 커밋만큼 뒤쳐져 있음 ??&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;⇢4&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;로컬 브랜치가 푸시 원격 브랜치보다 4개의 커밋만큼 앞서 있음 ??&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;*5&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;5개의 스태시가 있음&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;merge&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;병합이 진행 중임 (다른 작업일 수도 있음)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;~6&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;6개의 병합 충돌이 있음&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;+7&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;7개의 stage 에 변경사항 발생&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;!8&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;8개의 stage 에 없는 변경사항&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;?9&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;9개의 추적되지 않은 파일&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;</description>
    </item>
    <item>
      <title>gcc include path 확인하기</title>
      <link>http://localhost:1313/02.inbox/gcc-include-path-%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0/</link>
      <pubDate>Thu, 15 Feb 2024 04:55:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/gcc-include-path-%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo | gcc -xc -E -v -&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo | gcc -xc++ -E -v -&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>form 태그의 http 패킷(massage) 전송</title>
      <link>http://localhost:1313/02.inbox/form-%ED%83%9C%EA%B7%B8%EC%9D%98-http-%ED%8C%A8%ED%82%B7massage-%EC%A0%84%EC%86%A1/</link>
      <pubDate>Tue, 13 Feb 2024 15:15:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/form-%ED%83%9C%EA%B7%B8%EC%9D%98-http-%ED%8C%A8%ED%82%B7massage-%EC%A0%84%EC%86%A1/</guid>
      <description>&lt;p&gt;클라이언트측 post 메서드 전송 예시&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;form&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;action&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://www.example.com/test&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;method&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;POST&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;label&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;userId&amp;#34;&lt;/span&gt;&amp;gt;User ID:&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;label&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;br&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;text&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;userId&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;userId&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;br&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;label&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt;&amp;gt;Password:&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;label&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;br&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;br&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;submit&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Submit&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;form&lt;/span&gt;&amp;gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;서버측으로 전송되는 패킷 예시&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-http&#34; data-lang=&#34;http&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;POST&lt;/span&gt; /test &lt;span style=&#34;color:#66d9ef&#34;&gt;HTTP&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Host&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;www.example.com&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;User-Agent&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Accept&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Accept-Language&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;en-US,en;q=0.5&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Accept-Encoding&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;gzip, deflate, br&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-Type&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;application/x-www-form-urlencoded&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-Length&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;43&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Origin&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;http://www.example.com&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Connection&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;keep-alive&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Referer&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;http://www.example.com/test&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Cookie&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;PHPSESSID=5a1lvj45uk83a3k9opjkpo3jm2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;\n\r&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;userId=user&amp;amp;password=password&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;클라이언트측 get 메서드 html&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;form&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;action&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://www.example.com/test&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;method&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;GET&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;label&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;userId&amp;#34;&lt;/span&gt;&amp;gt;User ID:&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;label&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;br&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;text&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;userId&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;userId&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;br&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;label&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt;&amp;gt;Password:&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;label&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;br&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;br&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;submit&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Submit&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;form&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;서버측으로 전송되는 패킷 예시&lt;/p&gt;</description>
    </item>
    <item>
      <title>네트워크 고급</title>
      <link>http://localhost:1313/02.inbox/%EB%94%B0%EB%9D%BCit/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EA%B3%A0%EA%B8%89/</link>
      <pubDate>Mon, 12 Feb 2024 04:19:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EB%94%B0%EB%9D%BCit/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EA%B3%A0%EA%B8%89/</guid>
      <description>&lt;p&gt;계층별 장비&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240212042148.png&#34; alt=&#34; (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;물리계층&#34;&gt;물리계층&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;리피터 : 전기적 신호가 약할때 증폭 기능&lt;/li&gt;&#xA;&lt;li&gt;허브 : 데이터를 모든 장비에 전송 일종의 브로드캐스트&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;데이터-링크-2계층&#34;&gt;데이터 링크 2계층&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;브릿지 : 맥주로를 기반으로 전송 포트를 결정&lt;/li&gt;&#xA;&lt;li&gt;스위치 :  브릿지에 collision domain 기능 추가&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;네트워크-계층&#34;&gt;네트워크 계층&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;라우터 : 라우팅 테이브를 참고하여 목적지와 연결되는 포트로 paket 을 전송 =&amp;gt; 라우팅&#xA;&lt;ul&gt;&#xA;&lt;li&gt;3계층 장비는 브로트캐스트를 모두 차단&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;케이블&#34;&gt;케이블&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240212044805.png&#34; alt=&#34;Pasted image 20240212044805 (Image resource not found)&#34; &gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240212044836.png&#34; alt=&#34;Pasted image 20240212044836 (Image resource not found)&#34; &gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>네트워크 관련 명령어 모음</title>
      <link>http://localhost:1313/02.inbox/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EA%B4%80%EB%A0%A8-%EB%AA%85%EB%A0%B9%EC%96%B4-%EB%AA%A8%EC%9D%8C/</link>
      <pubDate>Sun, 11 Feb 2024 20:16:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EA%B4%80%EB%A0%A8-%EB%AA%85%EB%A0%B9%EC%96%B4-%EB%AA%A8%EC%9D%8C/</guid>
      <description>&lt;h2 id=&#34;unix-공통&#34;&gt;unix 공통&lt;/h2&gt;&#xA;&lt;p&gt;ifconfig&#xA;netstat&#xA;ping&#xA;traceroute : 지나간 네트워크 대역 확인&#xA;nc(netcat) :&#xA;nmap :&#xA;route : 라우팅 테이블?&#xA;arp : 동일 네트워크 맥주소 확인 프로토콜&#xA;telnet&lt;/p&gt;&#xA;&lt;h2 id=&#34;linux&#34;&gt;linux&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;ss -ltan&lt;/code&gt; : -l listen, -a all, -t tcp, -n numeric&lt;/p&gt;&#xA;&lt;h3 id=&#34;ip&#34;&gt;ip&lt;/h3&gt;&#xA;&lt;p&gt;ip route&#xA;ip addr&lt;/p&gt;&#xA;&lt;h2 id=&#34;window&#34;&gt;window&lt;/h2&gt;&#xA;&lt;p&gt;ipconfig&#xA;netstat&#xA;ping&#xA;arp : 동일 네트워크 맥주소 확인 프로토콜&#xA;tracert&lt;/p&gt;&#xA;&lt;p&gt;=================&#xA;mac&#xA;맥 환경에서, &#xA;잘모르는 프레임웍 이용한 서버 동작시,&#xA;특정프로그램 이용시,&#xA;내가 사용하는 것 외 데이터가 세어나가는지,&#xA;내가 모르는 포트를 열어놓은 프로세스가 있는지 (찾아서 kill하려고),&#xA;혹은 방화벽 제외 / NAT환경에서의 포트포워딩 정책에 SNAT, DNAT등에 포트 값을 알아내야 할 경우&#xA;lsof와 netstast과 다음과 같은 옵션으로 찾으면 된다.&#xA;(기타 : linux의 경우 netstat -anp | grep 포트번호 or LISTEN or EST등의 소켓 상태로 필터링해서 사용해왔음)&lt;/p&gt;</description>
    </item>
    <item>
      <title>네트워크 4계층</title>
      <link>http://localhost:1313/02.inbox/%EB%94%B0%EB%9D%BCit/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-4%EA%B3%84%EC%B8%B5/</link>
      <pubDate>Tue, 06 Feb 2024 01:19:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EB%94%B0%EB%9D%BCit/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-4%EA%B3%84%EC%B8%B5/</guid>
      <description>&lt;p&gt;&lt;strong&gt;프로그램(프로세스) 간 통신&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;4계층 프로토콜&lt;/li&gt;&#xA;&lt;li&gt;포트번호&lt;/li&gt;&#xA;&lt;li&gt;프로그램 연결 정보&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;4계층-프로토콜&#34;&gt;4계층 프로토콜&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;전송계층&lt;/strong&gt;&#xA;&lt;strong&gt;송신자 프로세스 수신자 프로세스 통신&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;TCP&lt;/li&gt;&#xA;&lt;li&gt;UDP&lt;/li&gt;&#xA;&lt;li&gt;포트번호(4계층 주소)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;udp&#34;&gt;UDP&lt;/h3&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240206174953.png&#34; alt=&#34;Pasted image 20240206174953 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;source Port : 출발 프로세스 포트번호(2바이트 2^16)&lt;/li&gt;&#xA;&lt;li&gt;Destination Port : 도착 프로세스 포트번호&lt;/li&gt;&#xA;&lt;li&gt;Length : 길이&lt;/li&gt;&#xA;&lt;li&gt;Checksum&#xA;DNS 서버 전송이 실패해도 다시보내면 그만&#xA;tftp 서버 : 파일 공유&#xA;RIP 프로토콜 : 라우팅 정보 공유&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;###&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240206174939.png&#34; alt=&#34;Pasted image 20240206174939 (Image resource not found)&#34; &gt;6174939.png)&lt;/p&gt;</description>
    </item>
    <item>
      <title>네트워크 3계층</title>
      <link>http://localhost:1313/02.inbox/%EB%94%B0%EB%9D%BCit/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-3%EA%B3%84%EC%B8%B5/</link>
      <pubDate>Mon, 05 Feb 2024 15:01:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EB%94%B0%EB%9D%BCit/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-3%EA%B3%84%EC%B8%B5/</guid>
      <description>&lt;p&gt;&lt;strong&gt;먼거리(인터넷 통신) 간 통신&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;용어 설명&#xA;IPv4: 현제 PC 에 할당된 ip 주소&#xA;서브넷 마스크 : ip 주소에 대한 네트워크 대역을 규정하는 것&#xA;게이트 웨이 : 외부와 통신할 때 사용하는 네트워크 출입구&lt;/p&gt;&#xA;&lt;h2 id=&#34;목차&#34;&gt;목차&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;ARP 프로토콜 : 동일 네트워크 대역 MAC 주소를 알기 위해 사용하는 프로토콜&lt;/li&gt;&#xA;&lt;li&gt;IPv4 프로토콜 :&lt;/li&gt;&#xA;&lt;li&gt;ICMP 프로토콜 : 연결 확인용 프로토콜&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240205150757.png&#34; alt=&#34;네트워크 3계층-20240205150757 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;arp-protocol&#34;&gt;ARP Protocol&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;동일 네트워크 대역&lt;/strong&gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240205150706.png&#34; alt=&#34;네트워크 3계층-20240205150706 (Image resource not found)&#34; &gt;&#xA;같은 네트워크 대역에서 통신을 하기 위해 MAC 주소를 ip 주소를 이용해서 알아오는 프로토콜&lt;/p&gt;</description>
    </item>
    <item>
      <title>네트워크 2계층</title>
      <link>http://localhost:1313/02.inbox/%EB%94%B0%EB%9D%BCit/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-2%EA%B3%84%EC%B8%B5/</link>
      <pubDate>Mon, 05 Feb 2024 14:54:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EB%94%B0%EB%9D%BCit/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-2%EA%B3%84%EC%B8%B5/</guid>
      <description>&lt;p&gt;ㅆ&lt;strong&gt;근거리(동일 네트워크 대역) 간 통신&lt;/strong&gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240205143927.png&#34; alt=&#34;네트워크-20240205143927 (Image resource not found)&#34; &gt;7.png)&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;ethernet type 을 상위 프로토콜 type 로 이해하자&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ipconfig /all&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;명령으로 자신의 mac 주소를 확인&lt;/p&gt;&#xA;&lt;h2 id=&#34;mac-주소&#34;&gt;mac 주소&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;앞 3자리 OUI : IEEE 에서 부여하는 일종의 제조회사 식별 ID&lt;/li&gt;&#xA;&lt;li&gt;뒤 3자리 고유번호 : 제조사에서 부여한 고유번호&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;destination Address , source address, Ethernet type 만 확인&#xA;destination address 목적지 MAC 주소&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Ethernet Type : 상위 프로토콜 타입 2바이트: IPv4(0x0800), ARP(Ox0806)&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>네트워크</title>
      <link>http://localhost:1313/02.inbox/%EB%94%B0%EB%9D%BCit/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC/</link>
      <pubDate>Mon, 05 Feb 2024 13:17:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EB%94%B0%EB%9D%BCit/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC/</guid>
      <description>&lt;h2 id=&#34;크기에-따른-분류&#34;&gt;크기에 따른 분류&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;LAN ( Local Area Network )&lt;/li&gt;&#xA;&lt;li&gt;WAN ( Wide Area Network )&lt;/li&gt;&#xA;&lt;li&gt;MAN ( Metropolitan Area Network )&lt;/li&gt;&#xA;&lt;li&gt;VLAN&lt;/li&gt;&#xA;&lt;li&gt;CAN&lt;/li&gt;&#xA;&lt;li&gt;PAN&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;연결-형테애-따른-분류&#34;&gt;연결 형테애 따른 분류&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Star 중앙장비에 모든 노드가 연결&lt;/li&gt;&#xA;&lt;li&gt;Mesh 여러노드의 그물 형태&lt;/li&gt;&#xA;&lt;li&gt;Tree 계층 구조의 형태&lt;/li&gt;&#xA;&lt;li&gt;링형, 버스형, 혼합형&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;통신방식에-따른-분류&#34;&gt;통신방식에 따른 분류&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;유니 캐스트 ( 특정 대상과 1:1 통신 )&lt;/li&gt;&#xA;&lt;li&gt;멀티 캐스트 ( 특정 다수와 1:N 통신 멀티 캐스트 {특정 인원})&lt;/li&gt;&#xA;&lt;li&gt;브로트 캐스트 ( 네트워크에 있는 모든 대상과 통신 )&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;계층별-프로토콜&#34;&gt;계층별 프로토콜&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240506030571.png&#34; alt=&#34;네트워크-20240205135843 (Image resource not found)&#34; &gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240506030575.png&#34; alt=&#34;네트워크-20240205140100 (Image resource not found)&#34; &gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240506030587.png&#34; alt=&#34;네트워크-20240205133316 (Image resource not found)&#34; &gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>네트워크 인터페이스</title>
      <link>http://localhost:1313/02.inbox/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4/</link>
      <pubDate>Sun, 04 Feb 2024 21:22:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4/</guid>
      <description>&lt;h2 id=&#34;linux&#34;&gt;Linux&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;enp0s1:&#xA;| | |&#xA;v | |&#xA;en| |   --&amp;gt; ethernet&#xA;  v |&#xA;  p0|   --&amp;gt; bus number (0)&#xA;    v&#xA;    s1  --&amp;gt; slot number (1)&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt; * Two character prefixes based on the type of interface:&#xA; *   en — Ethernet&#xA; *   sl — serial line IP (slip)&#xA; *   wl — wlan&#xA; *   ww — wwan&#xA; *&#xA; * Type of names:&#xA; *   b&amp;lt;number&amp;gt;                             — BCMA bus core number&#xA; *   c&amp;lt;bus_id&amp;gt;                             — CCW bus group name, without leading zeros [s390]&#xA; *   o&amp;lt;index&amp;gt;[d&amp;lt;dev_port&amp;gt;]                 — on-board device index number&#xA; *   s&amp;lt;slot&amp;gt;[f&amp;lt;function&amp;gt;][d&amp;lt;dev_port&amp;gt;]     — hotplug slot index number&#xA; *   x&amp;lt;MAC&amp;gt;                                — MAC address&#xA; *   [P&amp;lt;domain&amp;gt;]p&amp;lt;bus&amp;gt;s&amp;lt;slot&amp;gt;[f&amp;lt;function&amp;gt;][d&amp;lt;dev_port&amp;gt;]&#xA; *                                         — PCI geographical location&#xA; *   [P&amp;lt;domain&amp;gt;]p&amp;lt;bus&amp;gt;s&amp;lt;slot&amp;gt;[f&amp;lt;function&amp;gt;][u&amp;lt;port&amp;gt;][..][c&amp;lt;config&amp;gt;][i&amp;lt;interface&amp;gt;]&#xA; *                                         — USB port number chain&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1. 온보드 장치에 대해 펌웨어/BIOS 제공 인덱스 번호를 통합한 이름(예: eno1)&#xA;2. 펌웨어/BIOS 제공 PCI Express 핫플러그 슬롯 인덱스 번호를 포함하는 이름(예: ens1)&#xA;3. 하드웨어 커넥터의 물리적/지리적 위치를 통합한 이름(예: enp2s0)&#xA;4. 인터페이스의 MAC 주소를 통합한 이름(예: enx78e7d1ea46da)&#xA;5. 예측할 수 없는 고전적인 커널 기반 ethX 이름 지정(예: eth0)&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;mac-os&#34;&gt;mac OS&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;ap1&lt;/code&gt;: 액세스 포인트. MacBook을 연결을 공유하는 무선 호스트로 사용하는 경우에 사용됩니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;awdl0&lt;/code&gt;: Apple Wireless Direct 링크. AirDrop, Airplay 등을 위한 WIFI p2p 연결. Bluetooth에도 사용됩니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;llw0&lt;/code&gt;: 대기 시간이 짧은 WLAN 인터페이스. Skywalk 시스템에서 사용됩니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;utun0&lt;/code&gt;: 터널링 인터페이스. 터널 트래픽에 대한 VPN 연결이나 Back To My Mack와 같은 소프트웨어에 사용됩니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;utun1&lt;/code&gt;: utun01과 동일&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;lo0&lt;/code&gt;: 루프백(localhost)&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;gif0&lt;/code&gt;: 소프트웨어 네트워크 인터페이스&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;stf0&lt;/code&gt;: 6to4 터널 인터페이스&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;en0&lt;/code&gt;: 물리적 무선&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;en1&lt;/code&gt;: 썬더볼트 1&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;en2&lt;/code&gt;: 썬더볼트 2&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;en3&lt;/code&gt;: 썬더볼트 3&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;en4&lt;/code&gt;: 썬더볼트 4&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;en5&lt;/code&gt;: iBridge / Apple T2 컨트롤러&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;en6&lt;/code&gt;: 블루투스 팬&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;en8&lt;/code&gt;: 아이폰 USB&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;en9&lt;/code&gt;: VM 네트워크 인터페이스&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;en10&lt;/code&gt;: 아이패드&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;bridge0&lt;/code&gt;: Thunderbolt 브리지&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>java 메모리(memory)</title>
      <link>http://localhost:1313/02.inbox/java-%EB%A9%94%EB%AA%A8%EB%A6%ACmemory/</link>
      <pubDate>Mon, 29 Jan 2024 05:38:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/java-%EB%A9%94%EB%AA%A8%EB%A6%ACmemory/</guid>
      <description>&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240127113149-1.jpeg&#34; alt=&#34;Pasted image 20240127113149-1 (Image resource not found)&#34; &gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>java 제네릭(generic)</title>
      <link>http://localhost:1313/02.inbox/java-%EC%A0%9C%EB%84%A4%EB%A6%ADgeneric/</link>
      <pubDate>Mon, 29 Jan 2024 05:00:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/java-%EC%A0%9C%EB%84%A4%EB%A6%ADgeneric/</guid>
      <description>&lt;p&gt;java 는 제네릭 배열을 생성하지 못한다&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://cla9.tistory.com/44&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;java generic 원리&lt;/a&gt; 중요!!!&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;Integer &amp;lt;: Number&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;Double &amp;lt;: Number&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;ArrayList&amp;lt;E&amp;gt; &amp;lt;:  List&amp;lt;E&amp;gt;&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;Collection&amp;lt;E&amp;gt; &amp;lt;:  Iterable&amp;lt;E&amp;gt;&lt;/code&gt;&#xA;Super type : Number 는 Integer  에 대해 Super type 이다&#xA;Sub type : Integer 는 Number 에 대해 Sub type 이다&#xA;variant 공변 : Number 와 Integer 는 공변한다&#xA;Invariant 불공변 : Integer 와 String 는 공변하지 않는다&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt; Java에서는 해당 경우에 Substitution Principle을 적용하지 않습니다&lt;/p&gt;</description>
    </item>
    <item>
      <title>java 리플렉션(reflection)</title>
      <link>http://localhost:1313/02.inbox/java-%EB%A6%AC%ED%94%8C%EB%A0%89%EC%85%98reflection/</link>
      <pubDate>Sat, 27 Jan 2024 11:29:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/java-%EB%A6%AC%ED%94%8C%EB%A0%89%EC%85%98reflection/</guid>
      <description>&lt;p&gt;클래스 인터페이스의 메타 정보를 java.lang.Class 클래스 객체에서 관리한다&#xA;이를 통해 런타임 시점에 클래스의 정보를 확인할 수 있다&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Class &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;클래스&lt;/span&gt; 이름.&lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;; &lt;span style=&#34;color:#75715e&#34;&gt;// 클래스 이름을 통해 얻는다&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Class &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Class&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;forName&lt;/span&gt;(클래스 이름); &lt;span style=&#34;color:#75715e&#34;&gt;// 클래스 이름을 통해 얻는다&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Class &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;객체&lt;/span&gt; 참조 변수.&lt;span style=&#34;color:#a6e22e&#34;&gt;getClass&lt;/span&gt;(); &lt;span style=&#34;color:#75715e&#34;&gt;// 객체의 이름을 통해 얻는다&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;이렇게 얻어진 객체로 부터 여러가지 정보를 확인할 수 있다&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;메서드&lt;/th&gt;&#xA;          &lt;th&gt;info&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Package getPackage()&lt;/td&gt;&#xA;          &lt;td&gt;패키지 정보 읽기&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;String getSimpleName()&lt;/td&gt;&#xA;          &lt;td&gt;패키지를 제외한 타입 이름&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;String getName()&lt;/td&gt;&#xA;          &lt;td&gt;패키지를 포함한 전체 타입 이름&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Constuctor[] getDeclaredConstructors()&lt;/td&gt;&#xA;          &lt;td&gt;생성자 정보 읽기&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Method[] getDeclaredMethod()&lt;/td&gt;&#xA;          &lt;td&gt;메서드 정보 읽기&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Field[] getDeclaredField()&lt;/td&gt;&#xA;          &lt;td&gt;필드 정보 읽기&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;등등 많은 것들 을 얻을 수 있다&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://cla9.tistory.com/52&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;제네릭은 런타임에는 타입을 알지 못한다&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>싱글톤 패턴의 문제</title>
      <link>http://localhost:1313/02.inbox/%EC%8B%B1%EA%B8%80%ED%86%A4-%ED%8C%A8%ED%84%B4%EC%9D%98-%EB%AC%B8%EC%A0%9C/</link>
      <pubDate>Fri, 26 Jan 2024 05:15:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EC%8B%B1%EA%B8%80%ED%86%A4-%ED%8C%A8%ED%84%B4%EC%9D%98-%EB%AC%B8%EC%A0%9C/</guid>
      <description>&lt;p&gt;클래스의 생성자를 통해 만들어지는 인스턴스의 개수를 1개로 고정시키는 디자인 패턴이다&#xA;하지만 이는 몇가지 문제를 만들어낸다&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://localhost:1313/%7c%ec%8b%b1%ea%b8%80%ed%86%a4%20%ed%8c%a8%ed%84%b4%ec%9d%98%20%eb%ac%b8%ec%a0%9c#%ec%bd%94%eb%93%9c%ec%96%91%20%ec%a6%9d%ea%b0%80&#34; class=&#34;internal-file-link&#34;&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;의존성 문제&lt;/li&gt;&#xA;&lt;li&gt;OCP 원칙 위반&lt;/li&gt;&#xA;&lt;li&gt;테스트 어려움&lt;/li&gt;&#xA;&lt;li&gt;내부 속성 변경 어려움&lt;/li&gt;&#xA;&lt;li&gt;자식 클래스 생성 어려움&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;코드-양-증가&#34;&gt;코드 양 증가&lt;/h2&gt;&#xA;&lt;p&gt;싱글톤 패턴을 구현하려면 클래스 내에 싱글톤 인스턴스를 생성하고 관리하는 코드가 추가됩니다. 이로 인해 코드가 더 복잡해지고, 가독성이 떨어질 수 있습니다.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;SingletonImpl&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;implements&lt;/span&gt; Singleton{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; SingletonImpl instance;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;SingletonImpl&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// private 생성자&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; SingletonImpl &lt;span style=&#34;color:#a6e22e&#34;&gt;getInstance&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (instance &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            instance &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; SingletonImpl();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; instance;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;의존성-문제&#34;&gt;의존성 문제&lt;/h2&gt;&#xA;&lt;p&gt;클라이언트는 Singleton 클래스에 직접 의존하게 되므로, 의존성 역전 원칙(Dependency Inversion Principle, DIP)을 위반합니다. 즉, 클라이언트는 구체 클래스에 종속되어 유연성이 감소합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>java 컬렉션(Collections Framework)</title>
      <link>http://localhost:1313/02.inbox/java-%EC%BB%AC%EB%A0%89%EC%85%98collections-framework/</link>
      <pubDate>Mon, 22 Jan 2024 18:17:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/java-%EC%BB%AC%EB%A0%89%EC%85%98collections-framework/</guid>
      <description>&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240122181734.jpeg&#34; alt=&#34;Pasted image 20240122181734 (Image resource not found)&#34; &gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240206060503.svg&#34; alt=&#34;Pasted image 20240206060503 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;리스트 : 배열의 확장&lt;/li&gt;&#xA;&lt;li&gt;배열리스트 : 크기를 내부에서 자동으로 정해주는 배열 (vector)&lt;/li&gt;&#xA;&lt;li&gt;링크드리스트 : 인접한 위치에 저장되지 않고 포인터를 사용하여 연결되는 선형 데이터 구조&lt;/li&gt;&#xA;&lt;li&gt;큐 : 선입선출&lt;/li&gt;&#xA;&lt;li&gt;set : 집합 중복 불가&lt;/li&gt;&#xA;&lt;li&gt;map = dictionary : key value 한쌍 구조&lt;/li&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>투 포인터 알고리즘</title>
      <link>http://localhost:1313/02.inbox/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8B%A4-with-python/%ED%88%AC-%ED%8F%AC%EC%9D%B8%ED%84%B0-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/</link>
      <pubDate>Tue, 09 Jan 2024 22:56:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8B%A4-with-python/%ED%88%AC-%ED%8F%AC%EC%9D%B8%ED%84%B0-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/</guid>
      <description>&lt;p&gt;리스트에 순차적으로 접근해야 할 때 두개의 점의 위치를 기록하면서 처리하는 알고리즘&lt;/p&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250106192245.png&#34; alt=&#34;Pasted image 20250106192245 (Image resource not found)&#34; &gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250106192241.png&#34; alt=&#34;Pasted image 20250106192241 (Image resource not found)&#34; &gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250106192805.png&#34; alt=&#34;Pasted image 20250106192805 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;완전 탐색에서&#xA;인덱스인 end 가 1 증가하면 부분합이 증가&#xA;인덱스인 start 가 1 증가하면 부분합이 감소&#xA;이조건을 이용해서 $O(n)$ 으로 만들어야 한다&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;countSubarraysWithSum&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;vector&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; vec, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; M) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; ret &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; &lt;span style=&#34;color:#75715e&#34;&gt;// 부분합이 M인 부분 배열의 개수&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; start &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; &lt;span style=&#34;color:#75715e&#34;&gt;// start 포인터 초기화&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; end &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; &lt;span style=&#34;color:#75715e&#34;&gt;// end 포인터&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; interval_sum &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; &lt;span style=&#34;color:#75715e&#34;&gt;// 현재 부분합&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; (start &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; vec.size()) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// end 포인터를 가능한 만큼 이동&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; (end &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; n &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; interval_sum &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; M) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            interval_sum &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; vec[end]; &lt;span style=&#34;color:#75715e&#34;&gt;// 부분합 계산&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            end&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;                    &lt;span style=&#34;color:#75715e&#34;&gt;// 인덱스 이동&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// 부분합이 M일 때 카운트 증가&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (interval_sum &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; M) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            ret&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;// interval_sum 이 target 보다 클 때는 start 를 이동&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// start 포인터를 증가시키고, interval_sum에서 vec[start]를 빼기&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        interval_sum &lt;span style=&#34;color:#f92672&#34;&gt;-=&lt;/span&gt; vec[start];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        start&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; ret;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250107072079.png&#34; alt=&#34;Pasted image 20250107072079 (Image resource not found)&#34; &gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>python 매개변수 전달</title>
      <link>http://localhost:1313/02.inbox/python-%EB%A7%A4%EA%B0%9C%EB%B3%80%EC%88%98-%EC%A0%84%EB%8B%AC/</link>
      <pubDate>Mon, 08 Jan 2024 07:12:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/python-%EB%A7%A4%EA%B0%9C%EB%B3%80%EC%88%98-%EC%A0%84%EB%8B%AC/</guid>
      <description>&lt;p&gt;파이썬의 매개변수 전달 방식 : 혼합 방식&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;파이썬은 모든 것이 객체이며 다음 2 종류가 있음&lt;/li&gt;&#xA;&lt;li&gt;불변 객체 (immutable object) : int, float, complex, tuples, string, bytes 등&lt;/li&gt;&#xA;&lt;li&gt;가변 객체 (mutable object) : list, dict, set, bytearray 등&lt;/li&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;li&gt;불변 객체가 매개변수로 전달될 때는 call-by-value 로 전달&lt;/li&gt;&#xA;&lt;li&gt;가변 객체가 매개변수로 전달될 때는 call-by-reference 로 전달&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;[!NOTE] 참조&#xA;Call-by-value : 실 매개변수의 값이 전달되며, 함수 내에서 형식 매개변수의 값을 변경해도 실 매개변수의 값은 변하지 않음&#xA;Call-by-reference : 실 매개변수의 주소가 전달&lt;/p&gt;</description>
    </item>
    <item>
      <title>java 어노테이션(anotation)</title>
      <link>http://localhost:1313/02.inbox/java-%EC%96%B4%EB%85%B8%ED%85%8C%EC%9D%B4%EC%85%98anotation/</link>
      <pubDate>Fri, 05 Jan 2024 21:01:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/java-%EC%96%B4%EB%85%B8%ED%85%8C%EC%9D%B4%EC%85%98anotation/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;어노테이션 적용대상  @Target 클래스 필드 메서드 또다른 어노테이션&lt;/li&gt;&#xA;&lt;li&gt;어노테이션 유지정책&#xA;&lt;ul&gt;&#xA;&lt;li&gt;SOURCE=컴파일까지 컴파일 시점에 적용&lt;/li&gt;&#xA;&lt;li&gt;CLASS=메모리 로딩때 까지 이후 제거&lt;/li&gt;&#xA;&lt;li&gt;RUNTIME=계속 유지&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>pragma</title>
      <link>http://localhost:1313/02.inbox/pragma/</link>
      <pubDate>Thu, 04 Jan 2024 12:18:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/pragma/</guid>
      <description>&lt;p&gt;사용할 일은 잦은데~ 너무 무관심한 척 한 것 같다~ &lt;/p&gt;&#xA;&lt;p&gt;매번 매번 사용해도 헷갈리는 pragma의 용법에 대해 모아 총정리 하였다.&lt;/p&gt;&#xA;&lt;p&gt;#pragma는 define 이나 include와 같이 #으로 시작하는 전처리구문(precompiler)의 하나이다.  &lt;/p&gt;&#xA;&lt;p&gt; 컴파일러에 종속적인 구문이라 컴파일러가 변경되었을 경우 제대로된 동작을 보장하지 못하므로 프로젝트 진행중에 서로 다른 컴파일러를 사용한다면 사용하지 않음이 바람직 하겠다.  &lt;/p&gt;&#xA;&lt;p&gt; - 대신 대체하는 문법을 사용해야 되겠다.&lt;/p&gt;&#xA;&lt;p&gt;**#pragma once  &lt;/p&gt;&#xA;&lt;p&gt;** 이것은 &amp;ldquo;컴파일러에게 한번만 컴파일해!&amp;rdquo; 라고 명령한다.  &lt;/p&gt;&#xA;&lt;p&gt; 헤더의 중복을 막아준다.  &lt;/p&gt;&#xA;&lt;p&gt; 무슨말인가 하면&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;a.h를 구현한 a.cpp, a.h는 독립적이다.(include가 없다.)  &lt;/p&gt;</description>
    </item>
    <item>
      <title>BFS 알고리즘</title>
      <link>http://localhost:1313/02.inbox/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8B%A4-with-python/bfs-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/</link>
      <pubDate>Fri, 29 Dec 2023 11:29:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8B%A4-with-python/bfs-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/</guid>
      <description>&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250203205355.png&#34; alt=&#34; (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;queue&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;array&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// for std::array&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;namespace&lt;/span&gt; std;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;bfs&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; start) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    queue&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; q;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    q.push(start);              &lt;span style=&#34;color:#75715e&#34;&gt;// 초기 시작 노드 큐에 삽입&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    visited[start] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; true;      &lt;span style=&#34;color:#75715e&#34;&gt;// 방문 처리&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;// que 처리 알고리즘&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;q.empty()) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;    &lt;span style=&#34;color:#75715e&#34;&gt;// 해당 노드 처리&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; q.front();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        q.pop();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;// 해당 노드와 연결된 방문하지 않은 노드 처리&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; y : graph[x]) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;visited[y]) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                q.push(y);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                visited[y] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; true;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;// visited 배열을 std::array로 변경 (선택적)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;array&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;bool&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; visited{}; &lt;span style=&#34;color:#75715e&#34;&gt;// 기본적으로 false로 초기화&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;// 그래프 연결 정보를 중괄호 초기화 리스트로 표현&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;vector&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; graph[] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;    {}, &lt;span style=&#34;color:#75715e&#34;&gt;// 0번 인덱스는 사용하지 않음 (1번부터 시작)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;    {&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;},  &lt;span style=&#34;color:#75715e&#34;&gt;// 1번 노드에 연결된 노드들&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;    {&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;},      &lt;span style=&#34;color:#75715e&#34;&gt;// 2번 노드에 연결된 노드들&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;    {&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;},  &lt;span style=&#34;color:#75715e&#34;&gt;// 3번 노드에 연결된 노드들&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;    {&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;},      &lt;span style=&#34;color:#75715e&#34;&gt;// 4번 노드에 연결된 노드들&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;    {&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;},      &lt;span style=&#34;color:#75715e&#34;&gt;// 5번 노드에 연결된 노드들&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;    {&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;},        &lt;span style=&#34;color:#75715e&#34;&gt;// 6번 노드에 연결된 노드들&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;    {&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;},  &lt;span style=&#34;color:#75715e&#34;&gt;// 7번 노드에 연결된 노드들&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;    {&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;}       &lt;span style=&#34;color:#75715e&#34;&gt;// 8번 노드에 연결된 노드들&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    bfs(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;); &lt;span style=&#34;color:#75715e&#34;&gt;// 1번 노드부터 탐색 시작&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>python 람다(lambda)</title>
      <link>http://localhost:1313/02.inbox/python-%EB%9E%8C%EB%8B%A4lambda/</link>
      <pubDate>Thu, 28 Dec 2023 07:20:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/python-%EB%9E%8C%EB%8B%A4lambda/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;익명함수로도 불리운다&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20231228101705.jpeg&#34; alt=&#34; (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;인수는 무제한 가능&#xA;함수 이름(생략 가능) = lambda&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20231228101705.jpeg&#34; alt=&#34; (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>DFS 알고리즘</title>
      <link>http://localhost:1313/02.inbox/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8B%A4-with-python/dfs-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/</link>
      <pubDate>Tue, 26 Dec 2023 07:59:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8B%A4-with-python/dfs-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/</guid>
      <description>&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20231228191101.gif&#34; alt=&#34;1_GT9oSo0agIeIj6nTg3jFEA (Image resource not found)&#34; &gt;1.gif)&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;stack vs recursion 풀이 2개로 나뉘며&#xA;stack 의 경우 dfs 시 탐색해야할 나머지 노드를 stack 에 저장해두고 빼서 탐색하는 방식의 알고리즘&#xA;recursion 의 경우&#xA;하위 트리가 없을 때 또는 자신이 null 일때 탈출조건을 준다면 recursion 풀이가 가능하다&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;binary-tree-dfs&#34;&gt;binary tree DFS&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;stack 기반 풀이&#xA;1.&lt;/li&gt;&#xA;&lt;li&gt;recursion 기반 풀이&#xA;1.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;grath-dfs&#34;&gt;grath DFS&lt;/h2&gt;&#xA;&lt;p&gt;기본적으로 작은 숫자부터 탐색하는 것을 기본으로 한다&lt;/p&gt;&#xA;&lt;p&gt;recursion 풀이&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;namespace&lt;/span&gt; std;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;bool&lt;/span&gt; visited[&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vector&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; graph[&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// DFS 함수 정의&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dfs&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; x) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 현재 노드 방문 처리&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    visited[x] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; true;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 현재 노드와 연결된 다른 노드를 재귀적으로 방문&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; graph[x].size(); i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; graph[x][i];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;visited[y]) dfs(y);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 각 노드의 인접 노드 정보를 초기화 리스트로 간단하게 할당&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    graph[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    graph[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    graph[&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    graph[&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    graph[&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    graph[&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    graph[&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    graph[&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    dfs(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;stack 풀이&lt;/p&gt;</description>
    </item>
    <item>
      <title>스택과 큐 자료구조</title>
      <link>http://localhost:1313/02.inbox/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8B%A4-with-python/%EC%8A%A4%ED%83%9D%EA%B3%BC-%ED%81%90-%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/</link>
      <pubDate>Mon, 25 Dec 2023 12:15:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8B%A4-with-python/%EC%8A%A4%ED%83%9D%EA%B3%BC-%ED%81%90-%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;[!NOTE] 스택&#xA;선입 후출&#xA;박스 쌓기&#xA;pop 함수 &amp;ldquo;후출&amp;rdquo; 구현&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;[!NOTE] 큐&#xA;선입 선출&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;python-의-스택&#34;&gt;python 의 스택&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20231225165748.png&#34; alt=&#34;스택과 큐 자료구조-20231225165748 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;c-의-스택&#34;&gt;c++ 의 스택&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20231225165800.png&#34; alt=&#34;스택과 큐 자료구조-20231225165800 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;java의-스택&#34;&gt;java의 스택&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20231225165815.png&#34; alt=&#34;스택과 큐 자료구조-20231225165815 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;python-의-큐&#34;&gt;python 의 큐&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20231225165829.png&#34; alt=&#34;스택과 큐 자료구조-20231225165829 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;c-의-큐&#34;&gt;c++ 의 큐&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20231225165844.png&#34; alt=&#34;스택과 큐 자료구조-20231225165844 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;java의-큐&#34;&gt;java의 큐&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20231225165618.png&#34; alt=&#34;스택과 큐 자료구조-20231225165618 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;스택 라이브러리 대신에 재귀함수를 이용하는 경우&lt;/p&gt;</description>
    </item>
    <item>
      <title>python 이름공간(namespace)</title>
      <link>http://localhost:1313/02.inbox/python-%EC%9D%B4%EB%A6%84%EA%B3%B5%EA%B0%84namespace/</link>
      <pubDate>Sun, 24 Dec 2023 09:14:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/python-%EC%9D%B4%EB%A6%84%EA%B3%B5%EA%B0%84namespace/</guid>
      <description>&lt;p&gt;이름공간과 스코프 두가지 개념을 인지&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240428050441.png&#34; alt=&#34; (Image resource not found)&#34; &gt;%20image%2020240428050441.png)&lt;/p&gt;&#xA;&lt;p&gt;python 에는 포인터 개념이 내부적으로 작동&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;text&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PythonGeeks&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id of text is:&amp;#34;&lt;/span&gt;,id(text))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id of PythonGeeks is:&amp;#34;&lt;/span&gt;,id(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PythonGeeks&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;id of text &lt;span style=&#34;color:#f92672&#34;&gt;is&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;140569298174960&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;id of PythonGeeks &lt;span style=&#34;color:#f92672&#34;&gt;is&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;140569298174960&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;c/cpp 과 완벽히 동일&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;[!NOTE] namespace&#xA;네임스페이스(Namespaces)는 이름을 객체에 매핑(mapping)하는 것으로, 파이썬에서는 변수가 실제 객체를 참조하는 이름의 집합을 의미한다&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;[!NOTE] scope&#xA;변수(variable)나 함수(function)와 같은 식별자(identifier)들이 유효(valid)하고, 접근(access) 가능한 범위(range)를 말한다&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;namespace 의 종류&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;built in namespace :  인터프리터가 시작될 때 생성&lt;/li&gt;&#xA;&lt;li&gt;global namespace :  모든 전역 객체&lt;/li&gt;&#xA;&lt;li&gt;local namespace : 함수 내부&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;func&lt;/span&gt;():&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    var1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;지역공간 namespace : &amp;#34;&lt;/span&gt; , locals())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;var &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;built in namespace : &amp;#34;&lt;/span&gt; , dir())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;전역공간 namespace : &amp;#34;&lt;/span&gt; , globals())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;func()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;built &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; namespace :  built &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; namespace :  [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ArithmeticError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;AssertionError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;AttributeError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;BaseException&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;BaseExceptionGroup&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;BlockingIOError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;BrokenPipeError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;BufferError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;BytesWarning&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ChildProcessError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ConnectionAbortedError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ConnectionError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ConnectionRefusedError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ConnectionResetError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;DeprecationWarning&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;EOFError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Ellipsis&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;EncodingWarning&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;EnvironmentError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Exception&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ExceptionGroup&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;False&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;FileExistsError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;FileNotFoundError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;FloatingPointError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;FutureWarning&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;GeneratorExit&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;IOError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ImportError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ImportWarning&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;IndentationError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;IndexError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;InterruptedError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;IsADirectoryError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;KeyError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;KeyboardInterrupt&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;LookupError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;MemoryError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ModuleNotFoundError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;NameError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;None&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;NotADirectoryError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;NotImplemented&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;NotImplementedError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;OSError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;OverflowError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;PendingDeprecationWarning&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;PermissionError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ProcessLookupError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;RecursionError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ReferenceError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ResourceWarning&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;RuntimeError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;RuntimeWarning&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;StopAsyncIteration&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;StopIteration&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;SyntaxError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;SyntaxWarning&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;SystemError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;SystemExit&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;TabError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;TimeoutError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;True&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;TypeError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;UnboundLocalError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;UnicodeDecodeError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;UnicodeEncodeError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;UnicodeError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;UnicodeTranslateError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;UnicodeWarning&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;UserWarning&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ValueError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Warning&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ZeroDivisionError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;__build_class__&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;__debug__&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;__doc__&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;__import__&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;__loader__&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;__name__&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;__package__&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;__spec__&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;abs&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;aiter&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;all&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;anext&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;any&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ascii&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bin&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bool&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;breakpoint&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bytearray&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bytes&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;callable&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;chr&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;classmethod&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;compile&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;complex&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;copyright&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;credits&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;delattr&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dict&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dir&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;divmod&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;enumerate&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;eval&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;exec&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;exit&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;filter&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;float&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;format&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;frozenset&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;getattr&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;globals&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hasattr&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hash&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;help&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hex&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;input&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;int&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;isinstance&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;issubclass&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;iter&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;len&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;license&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;list&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;locals&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;map&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;max&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;memoryview&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;min&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;next&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;object&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;oct&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;open&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ord&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pow&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;print&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;property&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;quit&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;range&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;repr&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;reversed&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;round&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;set&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;setattr&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;slice&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sorted&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;staticmethod&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;str&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sum&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;super&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tuple&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;type&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;vars&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;zip&amp;#39;&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;전역공간 namespace :  {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;__name__&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;__doc__&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;__package__&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;__loader__&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;_frozen_importlib_external&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;SourceFileLoader object at &lt;span style=&#34;color:#ae81ff&#34;&gt;0x7f2a74ccb350&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;__spec__&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;__annotations__&amp;#39;&lt;/span&gt;: {}, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;__builtins__&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;module &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;builtins&amp;#39;&lt;/span&gt; (built&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;__file__&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/home/shinnk/source_main/personal/python/class/namepace.py&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;__cached__&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;func&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;function func at &lt;span style=&#34;color:#ae81ff&#34;&gt;0x7f2a74c704a0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;var&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;지역공간 namespace :  {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;var1&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240428050445.png&#34; alt=&#34;Pasted image 20240428050445 (Image resource not found)&#34; &gt;&#xA;함수 내부에서&lt;/p&gt;</description>
    </item>
    <item>
      <title>구현(Implementation)</title>
      <link>http://localhost:1313/02.inbox/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8B%A4-with-python/%EA%B5%AC%ED%98%84implementation/</link>
      <pubDate>Sat, 23 Dec 2023 12:43:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8B%A4-with-python/%EA%B5%AC%ED%98%84implementation/</guid>
      <description>&lt;p&gt;&lt;strong&gt;머릿속에 있는 알고리즘을 소스코드로 바꾸는 과정&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;알고리즘은 간단한데 코드가 지나칠 만큼 길어지는 문제&lt;/li&gt;&#xA;&lt;li&gt;실수 연산을 다루고 특정 소수점 자리까지 출력해야 하는 문제&lt;/li&gt;&#xA;&lt;li&gt;문자열을 특정한 기준에 따라서 끊어 처리해야 하는 문제&lt;/li&gt;&#xA;&lt;li&gt;적절한 라이브러리를 찾아서 사용해야 하는 문제 ( 모든 순열 모든 조합을 찾는 문제 python itertools 모듈을 사용해야 쉬워진다 )&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;시뮬레이션 유형 구현 유형 완전탐색 &#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240428050418.png&#34; alt=&#34; (Image resource not found)&#34; &gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240428050422.png&#34; alt=&#34;Pasted image 20240428050422 (Image resource not found)&#34; &gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240428050425.png&#34; alt=&#34;Pasted image 20240428050425 (Image resource not found)&#34; &gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>리스트 컴프리헨션(List Comprehension)</title>
      <link>http://localhost:1313/02.inbox/%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EC%BB%B4%ED%94%84%EB%A6%AC%ED%97%A8%EC%85%98list-comprehension/</link>
      <pubDate>Sat, 23 Dec 2023 11:09:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EC%BB%B4%ED%94%84%EB%A6%AC%ED%97%A8%EC%85%98list-comprehension/</guid>
      <description>&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20231223111957.png&#34; alt=&#34; (Image resource not found)&#34; &gt;%20image%2020231223111957.png)&lt;/p&gt;&#xA;&lt;p&gt;컴퓨터 계산 기준 output 식 발견&#xA;뒤의 for , if 좌측에서 우측으로 순서대로 순회후 out put을 계산&lt;/p&gt;&#xA;&lt;h2 id=&#34;for문&#34;&gt;for문&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;for 문이 무조건 한개는 있어야 한다&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lst &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [x&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; lst]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(a)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; [ (x, y) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;쌈밥&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;치킨&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;피자&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; y &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;사과&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;아이스크림&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;커피&amp;#39;&lt;/span&gt;]] [(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;쌈밥&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;사과&amp;#39;&lt;/span&gt;), &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;쌈밥&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;아이스크림&amp;#39;&lt;/span&gt;), &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;쌈밥&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;커피&amp;#39;&lt;/span&gt;), &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;치킨&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;사과&amp;#39;&lt;/span&gt;), &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;치킨&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;아이스크림&amp;#39;&lt;/span&gt;), &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;치킨&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;커피&amp;#39;&lt;/span&gt;),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;피자&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;사과&amp;#39;&lt;/span&gt;), &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;피자&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;아이스크림&amp;#39;&lt;/span&gt;),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;피자&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;커피&amp;#39;&lt;/span&gt;)]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;좌측부터 계산&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;if-문&#34;&gt;if 문&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lst &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;c &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [x &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; lst &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(c)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;중첩-if-문&#34;&gt;중첩 if 문&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;d &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [x &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; lst &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; x&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;if-else&#34;&gt;if else&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lst &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;e &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [x &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;less than 4&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; lst]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(e)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;less than 4&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;less than 4&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;less than 4&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;less than 4&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;[!NOTE]&#xA;if else 문은 왜 앞에다가 사용하는가??&#xA;if else 는 여기서는 삼항 연산자로 사용된다&#xA;처음에 예시로 든 (x+1)  과 (x if x &amp;gt; 4 else &amp;rsquo;less than 4&amp;rsquo;) 이렇게 하나의 output 이다&#xA;문으로 보지 않도록 하자&lt;/p&gt;</description>
    </item>
    <item>
      <title>함수포인터</title>
      <link>http://localhost:1313/02.inbox/%ED%95%A8%EC%88%98%ED%8F%AC%EC%9D%B8%ED%84%B0/</link>
      <pubDate>Fri, 22 Dec 2023 11:30:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%ED%95%A8%EC%88%98%ED%8F%AC%EC%9D%B8%ED%84%B0/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;foo&lt;/span&gt;(){ &lt;span style=&#34;color:#75715e&#34;&gt;// foo 코드는 메모리 주소 0x002717f0에서 시작한다.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%d&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;foo&lt;/span&gt;()); &lt;span style=&#34;color:#75715e&#34;&gt;// 주소 0x002717f0로 점프한다. 5 출력&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%p&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;,foo); &lt;span style=&#34;color:#75715e&#34;&gt;// 주소를 출력&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;코드에서 보듯 함수의 이름은 함수의 주소를 가르킨다 int a[7] 에서 a 가 주소를 가리키듯&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; a, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; b){&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b;} &lt;span style=&#34;color:#75715e&#34;&gt;//덧셈함수&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sub&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; a, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; b){&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; b;} &lt;span style=&#34;color:#75715e&#34;&gt;//뺄셈함수&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;mul&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; a, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; b){&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; b;} &lt;span style=&#34;color:#75715e&#34;&gt;//곱셈함수&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;div&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; a, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; b){&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; b;} &lt;span style=&#34;color:#75715e&#34;&gt;//나눗셈함수&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;fp[&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;])(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;); &lt;span style=&#34;color:#75715e&#34;&gt;//함수 포인터 배열 선언&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;fp[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; add; &lt;span style=&#34;color:#75715e&#34;&gt;// 배열[1]에 덧셈 함수의 메모리 주소 저장&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;fp[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sub; &lt;span style=&#34;color:#75715e&#34;&gt;// 배열[2]에 뺄셈 함수의 메모리 주소 저장&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;fp[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mul; &lt;span style=&#34;color:#75715e&#34;&gt;// 배열[3]에 곱셈 함수의 메모리 주소 저장&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;fp[&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; div; &lt;span style=&#34;color:#75715e&#34;&gt;// 배열[4]에 나눗셈 함수의 메모리 주소 저장&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;; i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;배열[%d](20,%2010));&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;typedef&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;int&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;PtrFunc)(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PtrFunc fp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; NULL;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; add;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>c, cpp 연산자 우선순위</title>
      <link>http://localhost:1313/02.inbox/c-cpp-%EC%97%B0%EC%82%B0%EC%9E%90-%EC%9A%B0%EC%84%A0%EC%88%9C%EC%9C%84/</link>
      <pubDate>Fri, 22 Dec 2023 10:31:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/c-cpp-%EC%97%B0%EC%82%B0%EC%9E%90-%EC%9A%B0%EC%84%A0%EC%88%9C%EC%9C%84/</guid>
      <description>&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20231222103216.png&#34; alt=&#34;c 연산자 우선순위-20231222103216 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://learn.microsoft.com/ko-kr/cpp/c-language/precedence-and-order-of-evaluation?view=msvc-170#precedence-and-associativity-of-c-operators&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://learn.microsoft.com/ko-kr/cpp/cpp/cpp-built-in-operators-precedence-and-associativity?view=msvc-170#c-operator-precedence-and-associativity-table&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>python 인수 규칙</title>
      <link>http://localhost:1313/02.inbox/python-%EC%9D%B8%EC%88%98-%EA%B7%9C%EC%B9%99/</link>
      <pubDate>Fri, 22 Dec 2023 07:18:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/python-%EC%9D%B8%EC%88%98-%EA%B7%9C%EC%B9%99/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;values: object,  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sep: str &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;,  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;end: str &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;,  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;file: SupportsWrite[str] &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;,  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;flush: Literal[&lt;span style=&#34;color:#66d9ef&#34;&gt;False&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;False&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;파이썬의 print 내장함수 구현체이다&lt;/p&gt;&#xA;&lt;dl&gt;&#xA;&lt;dt&gt;&lt;a href=&#34;http://localhost:1313/%ea%b0%80%eb%b3%80%ec%9d%b8%ec%9e%90%28variadic%29#%ec%9c%84%ec%b9%98%20%ea%b0%80%eb%b3%80%20%ec%9d%b8%ec%9e%90%20*args&#34; class=&#34;internal-file-link&#34;&gt;가변인자&lt;/a&gt; 를 사용함 정확하게는 위치 가변인자를 사용하였다&lt;/dt&gt;&#xA;&lt;dd&gt;object 매개변수의 올 수 있는 타입을 지정하여 오류를 막는다&#xA;&lt;code&gt;: str | None&lt;/code&gt; str 또는 None 가 올 수 있다는 이야기이다&#xA;&lt;code&gt; = &amp;quot; &amp;quot;&lt;/code&gt; None 일때의 기본값을 지정해준다&lt;/dd&gt;&#xA;&lt;/dl&gt;</description>
    </item>
    <item>
      <title>time 명령어</title>
      <link>http://localhost:1313/02.inbox/time-%EB%AA%85%EB%A0%B9%EC%96%B4/</link>
      <pubDate>Thu, 21 Dec 2023 04:32:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/time-%EB%AA%85%EB%A0%B9%EC%96%B4/</guid>
      <description>&lt;p&gt;실제 경과 시간을 나타내는 &amp;ldquo;Real&amp;rdquo;, 프로세스에서 사용된 CPU 시간만을 나타내는 &amp;ldquo;User&amp;rdquo; 및 &amp;ldquo;Sys&amp;quot;는 커널 내에서 실행되는 코드에서 사용된 CPU 시간을 나타냅니다.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Real(실제 시간):&lt;/strong&gt; 호출의 시작에서 끝까지의 경과 시간으로, 다른 프로세스에 의해 사용된 시간 조각과 프로세스가 차단된 시간(예를 들어 I/O 완료를 기다리는 경우)을 포함한 모든 경과 시간입니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;User(사용자 모드 시간):&lt;/strong&gt; 프로세스 내에서 사용자 모드 코드(커널 외부)에서 소비한 CPU 시간입니다. 이는 프로세스를 실행하는 데 사용된 실제 CPU 시간만을 나타냅니다. 다른 프로세스 및 프로세스가 차단된 시간은 이 숫자에 포함되지 않습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>날짜 형식 포멧</title>
      <link>http://localhost:1313/02.inbox/%EB%82%A0%EC%A7%9C-%ED%98%95%EC%8B%9D-%ED%8F%AC%EB%A9%A7/</link>
      <pubDate>Thu, 21 Dec 2023 03:07:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EB%82%A0%EC%A7%9C-%ED%98%95%EC%8B%9D-%ED%8F%AC%EB%A9%A7/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://momentjs.com/docs/#/displaying/format/&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;https://momentjs.com/docs/#/displaying/format/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;Token&lt;/th&gt;&#xA;          &lt;th&gt;Output&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Month&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;M&lt;/td&gt;&#xA;          &lt;td&gt;1 2 &amp;hellip; 11 12&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Mo&lt;/td&gt;&#xA;          &lt;td&gt;1st 2nd &amp;hellip; 11th 12th&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;MM&lt;/td&gt;&#xA;          &lt;td&gt;01 02 &amp;hellip; 11 12&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;MMM&lt;/td&gt;&#xA;          &lt;td&gt;Jan Feb &amp;hellip; Nov Dec&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;MMMM&lt;/td&gt;&#xA;          &lt;td&gt;January February &amp;hellip; November December&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Quarter&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Q&lt;/td&gt;&#xA;          &lt;td&gt;1 2 3 4&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Qo&lt;/td&gt;&#xA;          &lt;td&gt;1st 2nd 3rd 4th&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Day of Month&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;D&lt;/td&gt;&#xA;          &lt;td&gt;1 2 &amp;hellip; 30 31&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Do&lt;/td&gt;&#xA;          &lt;td&gt;1st 2nd &amp;hellip; 30th 31st&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;DD&lt;/td&gt;&#xA;          &lt;td&gt;01 02 &amp;hellip; 30 31&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Day of Year&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;DDD&lt;/td&gt;&#xA;          &lt;td&gt;1 2 &amp;hellip; 364 365&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;DDDo&lt;/td&gt;&#xA;          &lt;td&gt;1st 2nd &amp;hellip; 364th 365th&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;DDDD&lt;/td&gt;&#xA;          &lt;td&gt;001 002 &amp;hellip; 364 365&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Day of Week&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;d&lt;/td&gt;&#xA;          &lt;td&gt;0 1 &amp;hellip; 5 6&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;do&lt;/td&gt;&#xA;          &lt;td&gt;0th 1st &amp;hellip; 5th 6th&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;dd&lt;/td&gt;&#xA;          &lt;td&gt;Su Mo &amp;hellip; Fr Sa&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;ddd&lt;/td&gt;&#xA;          &lt;td&gt;Sun Mon &amp;hellip; Fri Sat&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;dddd&lt;/td&gt;&#xA;          &lt;td&gt;Sunday Monday &amp;hellip; Friday Saturday&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Day of Week (Locale)&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;e&lt;/td&gt;&#xA;          &lt;td&gt;0 1 &amp;hellip; 5 6&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Day of Week (ISO)&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;E&lt;/td&gt;&#xA;          &lt;td&gt;1 2 &amp;hellip; 6 7&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Week of Year&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;w&lt;/td&gt;&#xA;          &lt;td&gt;1 2 &amp;hellip; 52 53&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;wo&lt;/td&gt;&#xA;          &lt;td&gt;1st 2nd &amp;hellip; 52nd 53rd&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;ww&lt;/td&gt;&#xA;          &lt;td&gt;01 02 &amp;hellip; 52 53&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Week of Year (ISO)&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;W&lt;/td&gt;&#xA;          &lt;td&gt;1 2 &amp;hellip; 52 53&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Wo&lt;/td&gt;&#xA;          &lt;td&gt;1st 2nd &amp;hellip; 52nd 53rd&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;WW&lt;/td&gt;&#xA;          &lt;td&gt;01 02 &amp;hellip; 52 53&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Year&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;YY&lt;/td&gt;&#xA;          &lt;td&gt;70 71 &amp;hellip; 29 30&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;YYYY&lt;/td&gt;&#xA;          &lt;td&gt;1970 1971 &amp;hellip; 2029 2030&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;YYYYYY&lt;/td&gt;&#xA;          &lt;td&gt;-001970 -001971 &amp;hellip; +001907 +001971  &lt;br&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;a href=&#34;https://tc39.es/ecma262/#sec-expanded-years&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;&lt;/a&gt; (Covering the full time value range of approximately 273,790 years forward or backward from 01 January, 1970)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Y&lt;/td&gt;&#xA;          &lt;td&gt;1970 1971 &amp;hellip; 9999 +10000 +10001  &lt;br&gt;&lt;strong&gt;Note:&lt;/strong&gt; This complies with the ISO 8601 standard for dates past the year 9999&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Era Year&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;y&lt;/td&gt;&#xA;          &lt;td&gt;1 2 &amp;hellip; 2020 &amp;hellip;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Era&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;N, NN, NNN&lt;/td&gt;&#xA;          &lt;td&gt;BC AD  &lt;br&gt;&lt;strong&gt;Note:&lt;/strong&gt; Abbr era name&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;NNNN&lt;/td&gt;&#xA;          &lt;td&gt;Before Christ, Anno Domini  &lt;br&gt;&lt;strong&gt;Note:&lt;/strong&gt; Full era name&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;NNNNN&lt;/td&gt;&#xA;          &lt;td&gt;BC AD  &lt;br&gt;&lt;strong&gt;Note:&lt;/strong&gt; Narrow era name&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Week Year&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;gg&lt;/td&gt;&#xA;          &lt;td&gt;70 71 &amp;hellip; 29 30&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;gggg&lt;/td&gt;&#xA;          &lt;td&gt;1970 1971 &amp;hellip; 2029 2030&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Week Year (ISO)&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;GG&lt;/td&gt;&#xA;          &lt;td&gt;70 71 &amp;hellip; 29 30&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;GGGG&lt;/td&gt;&#xA;          &lt;td&gt;1970 1971 &amp;hellip; 2029 2030&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;AM/PM&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;A&lt;/td&gt;&#xA;          &lt;td&gt;AM PM&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;a&lt;/td&gt;&#xA;          &lt;td&gt;am pm&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Hour&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;H&lt;/td&gt;&#xA;          &lt;td&gt;0 1 &amp;hellip; 22 23&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;HH&lt;/td&gt;&#xA;          &lt;td&gt;00 01 &amp;hellip; 22 23&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;h&lt;/td&gt;&#xA;          &lt;td&gt;1 2 &amp;hellip; 11 12&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;hh&lt;/td&gt;&#xA;          &lt;td&gt;01 02 &amp;hellip; 11 12&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;k&lt;/td&gt;&#xA;          &lt;td&gt;1 2 &amp;hellip; 23 24&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;kk&lt;/td&gt;&#xA;          &lt;td&gt;01 02 &amp;hellip; 23 24&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Minute&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;m&lt;/td&gt;&#xA;          &lt;td&gt;0 1 &amp;hellip; 58 59&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;mm&lt;/td&gt;&#xA;          &lt;td&gt;00 01 &amp;hellip; 58 59&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Second&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;s&lt;/td&gt;&#xA;          &lt;td&gt;0 1 &amp;hellip; 58 59&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;ss&lt;/td&gt;&#xA;          &lt;td&gt;00 01 &amp;hellip; 58 59&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Fractional Second&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;S&lt;/td&gt;&#xA;          &lt;td&gt;0 1 &amp;hellip; 8 9&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;SS&lt;/td&gt;&#xA;          &lt;td&gt;00 01 &amp;hellip; 98 99&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;SSS&lt;/td&gt;&#xA;          &lt;td&gt;000 001 &amp;hellip; 998 999&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;SSSS &amp;hellip; SSSSSSSSS&lt;/td&gt;&#xA;          &lt;td&gt;000[0..] 001[0..] &amp;hellip; 998[0..] 999[0..]&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Time Zone&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;z or zz&lt;/td&gt;&#xA;          &lt;td&gt;EST CST &amp;hellip; MST PST  &lt;br&gt;&lt;strong&gt;Note:&lt;/strong&gt; as of &lt;strong&gt;1.6.0&lt;/strong&gt;, the z/zz format tokens have been deprecated from plain moment objects. &lt;a href=&#34;https://github.com/moment/moment/issues/162&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;Read more about it here.&lt;/a&gt; However, they &lt;em&gt;do&lt;/em&gt; work if you are using a specific time zone with the moment-timezone addon.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Z&lt;/td&gt;&#xA;          &lt;td&gt;-07:00 -06:00 &amp;hellip; +06:00 +07:00&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;ZZ&lt;/td&gt;&#xA;          &lt;td&gt;-0700 -0600 &amp;hellip; +0600 +0700&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Unix Timestamp&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;X&lt;/td&gt;&#xA;          &lt;td&gt;1360013296&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Unix Millisecond Timestamp&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;x&lt;/td&gt;&#xA;          &lt;td&gt;1360013296123&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;</description>
    </item>
    <item>
      <title>ascii code</title>
      <link>http://localhost:1313/02.inbox/ascii-code/</link>
      <pubDate>Wed, 20 Dec 2023 07:12:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/ascii-code/</guid>
      <description>&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20231213153502.png&#34; alt=&#34;Untitled (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20231223153501.png&#34; alt=&#34;Untitled 1 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;제어 문자&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;0 (Null) - 십진수 0에 해당하는 제어 문자입니다. 주로 문자열의 종료를 나타내는 데 사용됩니다.&lt;/li&gt;&#xA;&lt;li&gt;1 (Start of Heading) - 통신 제어에서 사용되는 제어 문자로, 통신 헤더의 시작을 나타냅니다.&lt;/li&gt;&#xA;&lt;li&gt;2 (Start of Text) - 통신 제어에서 사용되는 제어 문자로, 텍스트 데이터의 시작을 나타냅니다.&lt;/li&gt;&#xA;&lt;li&gt;3 (End of Text) - 통신 제어에서 사용되는 제어 문자로, 텍스트 데이터의 종료를 나타냅니다.&lt;/li&gt;&#xA;&lt;li&gt;4 (End of Transmission) - 통신 제어에서 사용되는 제어 문자로, 전송의 종료를 나타냅니다.&lt;/li&gt;&#xA;&lt;li&gt;5 (Enquiry) - 통신 제어에서 사용되는 제어 문자로, 상대방에게 정보 요청을 나타냅니다.&lt;/li&gt;&#xA;&lt;li&gt;6 (Acknowledge) - 통신 제어에서 사용되는 제어 문자로, 정보 수신을 확인하는 신호를 나타냅니다.&lt;/li&gt;&#xA;&lt;li&gt;7 (Bell) - 터미널이나 출력 장치에서 경고음을 발생시키는 제어 문자입니다.&lt;/li&gt;&#xA;&lt;li&gt;8 (Backspace) - 커서를 한 칸 뒤로 이동시키는 제어 문자입니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;공백문자&lt;/p&gt;</description>
    </item>
    <item>
      <title>disk</title>
      <link>http://localhost:1313/02.inbox/disk/</link>
      <pubDate>Wed, 20 Dec 2023 07:12:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/disk/</guid>
      <description>&lt;p&gt;mount 인수 없음&#xA;findmnt 추천2&#xA;fdisk -l (파티션 설정)&#xA;lsblk * 추천1&#xA;df -a&#xA;dmesg&#xA;blkid&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;[!NOTE] 순서&#xA;디스크 -&amp;gt; 파티션 -&amp;gt; 파일시스템 지정 -&amp;gt; 마운트&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;디스크 -&amp;gt; 파티션 :&#xA;&lt;ul&gt;&#xA;&lt;li&gt;파티션 정보를 저장하는 두 가지 다른 테이블 형식 mbr, gpt 방식을 먼저 정하자&#xA;&lt;ul&gt;&#xA;&lt;li&gt;fdisk&lt;/li&gt;&#xA;&lt;li&gt;parted&lt;/li&gt;&#xA;&lt;li&gt;gdisk&lt;/li&gt;&#xA;&lt;li&gt;cfdisk&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;파티션을 어떻게 사용할지 종류를 지정하자 linux, lvm, swap, EFI 등등&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;파티션 -&amp;gt; 파일지스템 지정:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;파티션을 사용하기 전 어떠한 파일 시스템을 사용할지 정하자&#xA;&lt;ul&gt;&#xA;&lt;li&gt;mkfs.[파일 시스템] [옵션] [디스크 파티션]&lt;/li&gt;&#xA;&lt;li&gt;mkfs -t(파일 시스템) [옵션] [디스크 파이션]&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;[!NOTE] 참조&lt;/p&gt;</description>
    </item>
    <item>
      <title>git reflog</title>
      <link>http://localhost:1313/02.inbox/git-reflog/</link>
      <pubDate>Wed, 20 Dec 2023 07:12:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/git-reflog/</guid>
      <description></description>
    </item>
    <item>
      <title>javascript 자료형</title>
      <link>http://localhost:1313/02.inbox/javascript-%EC%9E%90%EB%A3%8C%ED%98%95/</link>
      <pubDate>Wed, 20 Dec 2023 07:12:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/javascript-%EC%9E%90%EB%A3%8C%ED%98%95/</guid>
      <description>&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;var&lt;/th&gt;&#xA;          &lt;th&gt;let&lt;/th&gt;&#xA;          &lt;th&gt;const&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;재선언&lt;/td&gt;&#xA;          &lt;td&gt;o&lt;/td&gt;&#xA;          &lt;td&gt;x&lt;/td&gt;&#xA;          &lt;td&gt;x&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;업데이트&lt;/td&gt;&#xA;          &lt;td&gt;o&lt;/td&gt;&#xA;          &lt;td&gt;o&lt;/td&gt;&#xA;          &lt;td&gt;x&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;호이스팅&lt;/td&gt;&#xA;          &lt;td&gt;o&lt;/td&gt;&#xA;          &lt;td&gt;o&lt;/td&gt;&#xA;          &lt;td&gt;o&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;자동 초기화&lt;/td&gt;&#xA;          &lt;td&gt;o&lt;/td&gt;&#xA;          &lt;td&gt;x&lt;/td&gt;&#xA;          &lt;td&gt;x&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;호이스팅: let, const 는 오류 발생(호이스팅은 되어도 자동 초기화 안해서 오류 발생)&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;변환&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;// undefined&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;기준&lt;/th&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;원시(primitive)&lt;/td&gt;&#xA;          &lt;td&gt;number&lt;/td&gt;&#xA;          &lt;td&gt;boolean&lt;/td&gt;&#xA;          &lt;td&gt;null&lt;/td&gt;&#xA;          &lt;td&gt;undifined&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;참조(reference)&lt;/td&gt;&#xA;          &lt;td&gt;BigInt&lt;/td&gt;&#xA;          &lt;td&gt;object&lt;/td&gt;&#xA;          &lt;td&gt;array&lt;/td&gt;&#xA;          &lt;td&gt;function&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;자바스크립트에서는 원시 타입(primitive type) 참조 타입(reference type)이라는 두 가지 자료형을 제공한다.&lt;/p&gt;&#xA;&lt;p&gt;숫자, 불린값, null과 undefined는 원시 타입이다. 객체, 배열, 함수는 참조 타입이다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>javascript 함수</title>
      <link>http://localhost:1313/02.inbox/javascript-%ED%95%A8%EC%88%98/</link>
      <pubDate>Wed, 20 Dec 2023 07:12:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/javascript-%ED%95%A8%EC%88%98/</guid>
      <description>&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;var&lt;/th&gt;&#xA;          &lt;th&gt;let&lt;/th&gt;&#xA;          &lt;th&gt;const&lt;/th&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;재선언&lt;/td&gt;&#xA;          &lt;td&gt;o&lt;/td&gt;&#xA;          &lt;td&gt;x&lt;/td&gt;&#xA;          &lt;td&gt;x&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;업데이트&lt;/td&gt;&#xA;          &lt;td&gt;o&lt;/td&gt;&#xA;          &lt;td&gt;o&lt;/td&gt;&#xA;          &lt;td&gt;x&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;호이스팅&lt;/td&gt;&#xA;          &lt;td&gt;o&lt;/td&gt;&#xA;          &lt;td&gt;o&lt;/td&gt;&#xA;          &lt;td&gt;o&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;자동 초기화&lt;/td&gt;&#xA;          &lt;td&gt;o&lt;/td&gt;&#xA;          &lt;td&gt;x&lt;/td&gt;&#xA;          &lt;td&gt;x&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;호이스팅: let, const 는 오류 발생(호이스팅은 되어도 자동 초기화 안해서 오류 발생)&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;변환&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;// undefined&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;기준&lt;/th&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;원시(primitive)&lt;/td&gt;&#xA;          &lt;td&gt;number&lt;/td&gt;&#xA;          &lt;td&gt;boolean&lt;/td&gt;&#xA;          &lt;td&gt;null&lt;/td&gt;&#xA;          &lt;td&gt;undifined&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;참조(reference)&lt;/td&gt;&#xA;          &lt;td&gt;BigInt&lt;/td&gt;&#xA;          &lt;td&gt;object&lt;/td&gt;&#xA;          &lt;td&gt;array&lt;/td&gt;&#xA;          &lt;td&gt;function&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;자바스크립트에서는 원시 타입(primitive type) 참조 타입(reference type)이라는 두 가지 자료형을 제공한다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>python 기본 가상환경 venv</title>
      <link>http://localhost:1313/02.inbox/python-%EA%B8%B0%EB%B3%B8-%EA%B0%80%EC%83%81%ED%99%98%EA%B2%BD-venv/</link>
      <pubDate>Wed, 20 Dec 2023 07:12:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/python-%EA%B8%B0%EB%B3%B8-%EA%B0%80%EC%83%81%ED%99%98%EA%B2%BD-venv/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;python -m venv 가상환경이름&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이제 가상 환경을 활성화합니다. 운영체제에 따라 활성화 방법이 다릅니다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-macos-경우&#34;&gt;(1) MacOS 경우&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;source 가상환경이름/bin/activate&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;2-windowos-경우&#34;&gt;(2) WindowOS 경우&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;source 가상환경이름/Scripts/activate&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;정상적으로 가상환경이 실행되었다면, 터미널에서 현재 디렉토리 맨 앞에 상환경 이름이 괄호 안에 출력됩니다.&lt;/p&gt;&#xA;&lt;p&gt;가상 환경을 비활성화하는 방법입니다.&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;deactivate&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;생성했던 가상 환경을 삭제하는 방법입니다.&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo rm -rf 가상환경이름&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>RAID</title>
      <link>http://localhost:1313/02.inbox/raid/</link>
      <pubDate>Wed, 20 Dec 2023 07:12:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/raid/</guid>
      <description>&lt;p&gt;하드웨어 RAID&lt;/p&gt;&#xA;&lt;p&gt;소프트웨어 RAID&lt;/p&gt;&#xA;&lt;p&gt;여기서는 소프트웨어 RAID 를 이야기 한다&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20230626150025.png&#34; alt=&#34;2023-06-26150025 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;linear RAID : 디스크 여러개를 단순히 이어서 사용한다&lt;/p&gt;&#xA;&lt;p&gt;RAID 0 : 순서대로 저장하는 것이 아니라 동시에 사용 속도를 나누어 사용하므로 속도가 N 개 만큼 빠르다&lt;/p&gt;&#xA;&lt;p&gt;RAID 1 : 복사본 생성&lt;/p&gt;&#xA;&lt;p&gt;RAID 5 : 1개 오류 허용&lt;/p&gt;&#xA;&lt;p&gt;RAID 6 :&lt;/p&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20230626150727.png&#34; alt=&#34;2023-06-26150727 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20230626150829.png&#34; alt=&#34;2023-06-26150829 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20230626151558.png&#34; alt=&#34;2023-06-26151558 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20230626151130.png&#34; alt=&#34;2023-06-26151130 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20230626151329.png&#34; alt=&#34;2023-06-26151329 (Image resource not found)&#34; &gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>UTF-8</title>
      <link>http://localhost:1313/02.inbox/utf-8/</link>
      <pubDate>Wed, 20 Dec 2023 07:12:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/utf-8/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://news.hada.io/topic?id=23059&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;GEEK News&lt;/a&gt; 꼭 읽어보기 바람&lt;/p&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20231225115136.png&#34; alt=&#34;UTF-8-20231225115136 (Image resource not found)&#34; &gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20231225115121.png&#34; alt=&#34;UTF-8-20231225115121 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;예시 1: 문자 &lt;strong&gt;A&lt;/strong&gt;는 아스키 문자이며 유니코드 값은 65로, 이는 16진수 0x41(0100 0001)인데, 7비트 이내로 표현 가능하므로 UTF-8로도 0x41로 표현된다.&lt;/li&gt;&#xA;&lt;li&gt;예시 2: 문자 &lt;strong&gt;π&lt;/strong&gt;는 유니코드 값이 7비트를 벗어난다. 그러나 11비트 이내에 표현이 가능한 비교적 앞쪽에 위치한 문자며, 따라서 그림과 같이 2바이트에 표현이 가능 하다.&lt;/li&gt;&#xA;&lt;li&gt;예시 3: 문자 &lt;strong&gt;한&lt;/strong&gt;은 한글 문자로 16비트를 모두 사용한다. 마지막 16비트가 1이며 따라서 이를 표현하기 위해서는 그림과 같이 3바이트를 사용해야 한다. 참고로 유니코드에는 완성형 한글 11,172자뿐만 아니라 조합형 자모가 모두 포함되어 있으며, 이처럼 한글의 UTF-8 인코딩 값은 모두 각 문자당 3바이트를 차지한다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20231225115204.png&#34; alt=&#34;UTF-8-20231225115204 (Image resource not found)&#34; &gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>문서 객체 모델 (DOM)</title>
      <link>http://localhost:1313/02.inbox/%EB%AC%B8%EC%84%9C-%EA%B0%9D%EC%B2%B4-%EB%AA%A8%EB%8D%B8-dom/</link>
      <pubDate>Wed, 20 Dec 2023 07:12:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EB%AC%B8%EC%84%9C-%EA%B0%9D%EC%B2%B4-%EB%AA%A8%EB%8D%B8-dom/</guid>
      <description>&lt;hr&gt;&#xA;&lt;p&gt;The HTML DOM document object is the owner of all other objects in your web page.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;The document object represents your web page.&lt;/p&gt;&#xA;&lt;p&gt;If you want to access any element in an HTML page, you always start with accessing the document object.&lt;/p&gt;&#xA;&lt;p&gt;Below are some examples of how you can use the document object to access and manipulate HTML.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Method&lt;/th&gt;&#xA;          &lt;th&gt;Description&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;document.getElementById(&lt;em&gt;id&lt;/em&gt;)&lt;/td&gt;&#xA;          &lt;td&gt;Find an element by element id&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;document.getElementsByTagName(&lt;em&gt;name&lt;/em&gt;)&lt;/td&gt;&#xA;          &lt;td&gt;Find elements by tag name&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;document.getElementsByClassName(&lt;em&gt;name&lt;/em&gt;)&lt;/td&gt;&#xA;          &lt;td&gt;Find elements by class name&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Property&lt;/th&gt;&#xA;          &lt;th&gt;Description&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;em&gt;element&lt;/em&gt;.innerHTML =  &lt;em&gt;new html content&lt;/em&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Change the inner HTML of an element&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;em&gt;element&lt;/em&gt;.&lt;em&gt;attribute = new value&lt;/em&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Change the attribute value of an HTML element&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;em&gt;element&lt;/em&gt;.style.&lt;em&gt;property = new style&lt;/em&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Change the style of an HTML element&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Method&lt;/td&gt;&#xA;          &lt;td&gt;Description&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;em&gt;element&lt;/em&gt;.setAttribute_(attribute, value)_&lt;/td&gt;&#xA;          &lt;td&gt;Change the attribute value of an HTML element&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Method&lt;/th&gt;&#xA;          &lt;th&gt;Description&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;document.createElement(&lt;em&gt;element&lt;/em&gt;)&lt;/td&gt;&#xA;          &lt;td&gt;Create an HTML element&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;document.removeChild(&lt;em&gt;element&lt;/em&gt;)&lt;/td&gt;&#xA;          &lt;td&gt;Remove an HTML element&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;document.appendChild(&lt;em&gt;element&lt;/em&gt;)&lt;/td&gt;&#xA;          &lt;td&gt;Add an HTML element&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;document.replaceChild(&lt;em&gt;new, old&lt;/em&gt;)&lt;/td&gt;&#xA;          &lt;td&gt;Replace an HTML element&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;document.write(&lt;em&gt;text&lt;/em&gt;)&lt;/td&gt;&#xA;          &lt;td&gt;Write into the HTML output stream&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Method&lt;/th&gt;&#xA;          &lt;th&gt;Description&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;document.getElementById(&lt;em&gt;id&lt;/em&gt;).onclick = function(){&lt;em&gt;code&lt;/em&gt;}&lt;/td&gt;&#xA;          &lt;td&gt;Adding event handler code to an onclick event&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;The first HTML DOM Level 1 (1998), defined 11 HTML objects, object collections, and properties. These are still valid in HTML5.&lt;/p&gt;</description>
    </item>
    <item>
      <title>알고리즘 성능 평가</title>
      <link>http://localhost:1313/02.inbox/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8B%A4-with-python/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EC%84%B1%EB%8A%A5-%ED%8F%89%EA%B0%80/</link>
      <pubDate>Wed, 20 Dec 2023 07:12:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8B%A4-with-python/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EC%84%B1%EB%8A%A5-%ED%8F%89%EA%B0%80/</guid>
      <description>&lt;p&gt;시간 복잡도&#xA;공간 복잡도&lt;/p&gt;&#xA;&lt;h2 id=&#34;수행시간-요구-사항&#34;&gt;수행시간 요구 사항&lt;/h2&gt;&#xA;&lt;p&gt;N &amp;lt; 500 시간 복잡도 O(N^3)&#xA;N &amp;lt; 2000 시간 복잡도 O(N^2)&#xA;N &amp;lt; 100,000 시간 복잡도 O(NlogN)&#xA;N &amp;lt; 10,000,000 시간 복잡도 O(N)&#xA;예측 다음과 같은 이론을 따르는 것이 좋다&lt;/p&gt;</description>
    </item>
    <item>
      <title>파이썬 문법</title>
      <link>http://localhost:1313/02.inbox/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8B%A4-with-python/%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EB%AC%B8%EB%B2%95/</link>
      <pubDate>Wed, 20 Dec 2023 07:12:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8B%A4-with-python/%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EB%AC%B8%EB%B2%95/</guid>
      <description>&lt;p&gt;파이썬 자료형&lt;/p&gt;&#xA;&lt;p&gt;정수형 실수형 복소수형 문자열 리스트 튜플 사전 등등&lt;br&gt;&#xA;python 타입 확인&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;\__class\__&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;type(a)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;isinstance(a) &lt;span style=&#34;color:#75715e&#34;&gt;# 상속관계도 알려줌&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;리스트-&#34;&gt;리스트 []&lt;/h2&gt;&#xA;&lt;p&gt;append(value)&#xA;sort()&#xA;reverse()&#xA;insert(index,value)&#xA;count(value)&#xA;remove(value)&lt;/p&gt;&#xA;&lt;h2 id=&#34;튜플-&#34;&gt;튜플 ()&lt;/h2&gt;&#xA;&lt;p&gt;변경 불가&#xA;문자열&lt;/p&gt;&#xA;&lt;h2 id=&#34;dictionary&#34;&gt;dictionary&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;key &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a[key] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; value&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;집합&#34;&gt;집합&lt;/h2&gt;&#xA;&lt;h2 id=&#34;입출력&#34;&gt;입출력&lt;/h2&gt;&#xA;&lt;p&gt;map() 리스트의 모든 원소에 각각 특정한 함수를 적용할 때 사용합니다&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;list(map(int, input()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;split()))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;map( 함수 &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; 리스트 )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;바르게 입력받기&#xA;sys.stdin.readline() 줄바꿈 기호 입력되므로 rstrip() 메서드도 사용한다&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stin&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;readline()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;rstrip()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;f-string-36-부터&#34;&gt;f-string 3.6 부터&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;정답은 &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;answer&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;입니다&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;조건부-표현식&#34;&gt;조건부 표현식&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Success&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; score &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Fail&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;람다-표현식&#34;&gt;람다 표현식&lt;/h2&gt;&#xA;&lt;p&gt;함수를 한줄에 작성 가능&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/02.inbox/onenote/html-and-css/css-%EB%B3%B5%ED%95%A9-%EC%84%A0%ED%83%9D%EC%9E%90-%ED%8C%A8%ED%84%B4-%EC%9A%B0%EC%84%A0-%EC%A0%81%EC%9A%A9-%EC%88%9C%EC%9C%84-%EA%B7%9C%EC%B9%99/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/02.inbox/onenote/html-and-css/css-%EB%B3%B5%ED%95%A9-%EC%84%A0%ED%83%9D%EC%9E%90-%ED%8C%A8%ED%84%B4-%EC%9A%B0%EC%84%A0-%EC%A0%81%EC%9A%A9-%EC%88%9C%EC%9C%84-%EA%B7%9C%EC%B9%99/</guid>
      <description>&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240428070496.png&#34; alt=&#34; (Image resource not found)&#34; &gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/02.inbox/onenote/html-and-css/%EB%A6%AC%EB%88%85%EC%8A%A4/rooting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/02.inbox/onenote/html-and-css/%EB%A6%AC%EB%88%85%EC%8A%A4/rooting/</guid>
      <description>&lt;p&gt;&lt;strong&gt;All comments before this are misleading.&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;==Mobile SoC boot process is more complicated than PC boot process. Android phones have 3 stages with different bootloaders. Basically, first two stages are inaccessible as they are fused by the developer in the production mode (which phones are released in). Third one is the one stored in androids boot partition. Roughly, the bootloader hash key should match the one hardcoded into the SoC. First stage bootloader checks the hash key and passes the control to the second stage bootloader. In case of mismatch, the phone goes to the first stage bootloader which boots the recovery mode (EDL, or emergency download mode). In case of match, the second stage bootloader is placed in EFS filesystem (inaccessible in production mode), which is similar to BIOS - it contains all the configuration to initialize all the hardware components. It&amp;rsquo;s called linuxloader bootloader (you can dig it out from xbl.elf of your phone&amp;rsquo;s firmware) which boots one of the EFS partitions, containing the images, you may see on your phone in /dev/block/by-name directory (path can differ). These images contain the main partitions that you flash with an android firmware - boot, recovery, system, vendor, modem, etc. There are also other partitions, but they are not accessible. For example, toolsfv partition in development phones are used to open boot menu, which allows accessing shell, disabling secure boot, booting from usb, etc. You may find the description in Google. Second stage bootloader also provides access to the hypervisor (virtualization, that allows running virtual machines using kvm). Third stage bootloader is simply an android bootloader, which boots your lovely android OS.==&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/02.inbox/onenote/html-and-css/%EB%A6%AC%EB%88%85%EC%8A%A4/vimrc-%ED%8C%8C%EC%9D%BC/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/02.inbox/onenote/html-and-css/%EB%A6%AC%EB%88%85%EC%8A%A4/vimrc-%ED%8C%8C%EC%9D%BC/</guid>
      <description>&lt;p&gt;&amp;quot; 번들 선언부&lt;/p&gt;&#xA;&lt;p&gt;set rtp+=~/.vim/bundle/Vundle.vim&lt;/p&gt;&#xA;&lt;p&gt;call vundle#begin()&lt;/p&gt;&#xA;&lt;p&gt;&amp;quot; 번들 플러그인 관리 파일&lt;/p&gt;&#xA;&lt;p&gt;Plugin &amp;lsquo;VundleVim/Vundle.vim&amp;rsquo;&lt;/p&gt;&#xA;&lt;p&gt;&amp;quot; Keep Plugin commands between vundle#begin/end.&lt;/p&gt;&#xA;&lt;p&gt;Plugin &amp;lsquo;vim-airline/vim-airline&amp;rsquo;&lt;/p&gt;&#xA;&lt;p&gt;Plugin &amp;lsquo;vim-airline/vim-airline-themes&amp;rsquo;&lt;/p&gt;&#xA;&lt;p&gt;Plugin &amp;lsquo;The-NERD-Tree&amp;rsquo;&lt;/p&gt;&#xA;&lt;p&gt;Plugin &amp;rsquo;terryma/vim-multiple-cursors&#39;&lt;/p&gt;&#xA;&lt;p&gt;Plugin &amp;rsquo;terryma/vim-smooth-scroll&#39;&lt;/p&gt;&#xA;&lt;p&gt;Plugin &amp;lsquo;Raimondi/delimitMate&amp;rsquo;&lt;/p&gt;&#xA;&lt;p&gt;Plugin &amp;lsquo;SirVer/ultisnips&amp;rsquo;&lt;/p&gt;&#xA;&lt;p&gt;Plugin &amp;lsquo;honza/vim-snippets&amp;rsquo;&lt;/p&gt;&#xA;&lt;p&gt;Plugin &amp;lsquo;Syntastic&amp;rsquo;&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;번들 선언 종료 지시자&lt;/p&gt;&#xA;&lt;p&gt;call vundle#end() &amp;quot; required&lt;/p&gt;&#xA;&lt;p&gt;filetype plugin indent on &amp;quot; required&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://myeongjae.kim/blog/2017/07/19/vimlinux-10-deoplete%EA%B3%BC-clang_complete-%EC%9E%90%EB%8F%99-%EC%99%84%EC%84%B1-%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;https://myeongjae.kim/blog/2017/07/19/vimlinux-10-deoplete%EA%B3%BC-clang_complete-%EC%9E%90%EB%8F%99-%EC%99%84%EC%84%B1-%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://kamang-it.tistory.com/entry/vivimvi%EC%97%90%EC%84%9C-%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8-%EA%B4%80%EB%A6%AC-vundle&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;https://kamang-it.tistory.com/entry/vivimvi%EC%97%90%EC%84%9C-%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8-%EA%B4%80%EB%A6%AC-vundle&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://mju-my.sharepoint.com/:u:/g/personal/sygys10293_mju_ac_kr/EYI8l9Nc0WxBqOvJqtgLMq4Bn3UIu6qYYfH6xxLH0oEKhw&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;.vimrc&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/02.inbox/onenote/%EC%B1%85/%EC%A7%84%ED%99%94-%EC%8B%AC%EB%A6%AC%ED%95%99/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/02.inbox/onenote/%EC%B1%85/%EC%A7%84%ED%99%94-%EC%8B%AC%EB%A6%AC%ED%95%99/</guid>
      <description>&lt;p&gt;이기적 유전자 - 리처드 도킨스&lt;/p&gt;&#xA;&lt;p&gt;에덴의 강 - 리처드 도킨스&lt;/p&gt;&#xA;&lt;p&gt;인류의 기원 - 리처드 리키&lt;/p&gt;&#xA;&lt;p&gt;놀라운 가설 - 프랜시스 크릭&lt;/p&gt;&#xA;&lt;p&gt;스스로 치유하는 뇌 - 노먼 도이지&lt;/p&gt;&#xA;&lt;p&gt;색스의 진화 - 제러드 다이아몬드&lt;/p&gt;&#xA;&lt;p&gt;진화란 무엇인가 - 에른스트 마이어&lt;/p&gt;&#xA;&lt;p&gt;진화의 미스터리 - 조지 윌리엄스&lt;/p&gt;&#xA;&lt;p&gt;사회생물학 - 에드워드 윌슨&lt;/p&gt;&#xA;&lt;p&gt;이타적 유전자 - 매트 리들리&lt;/p&gt;&#xA;&lt;p&gt;지리의 힘 - 팀 마샬&lt;/p&gt;&#xA;&lt;p&gt;근대세계체제 - 이매뉴얼 월러스틴&lt;/p&gt;&#xA;&lt;p&gt;질투의 민낯 - 지그리트 엥겔브레히트&lt;/p&gt;&#xA;&lt;p&gt;성 정치학 - 케이트 밀레트&lt;/p&gt;&#xA;&lt;p&gt;인간의 조건 - 한나 아렌트&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/02.inbox/onenote/%EC%B1%85/%EC%B2%A0%ED%95%99/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/02.inbox/onenote/%EC%B1%85/%EC%B2%A0%ED%95%99/</guid>
      <description>&lt;p&gt;실존주의&lt;/p&gt;&#xA;&lt;p&gt;시지프 신화 - 알베르 카뮈&lt;/p&gt;&#xA;&lt;p&gt;변신 시골의사 - 프란츠 카프카&lt;/p&gt;</description>
    </item>
    <item>
      <title>di (의존성 주입) 의 타 프레임워크 접근 유튜브 댓글</title>
      <link>http://localhost:1313/02.inbox/di-%EC%9D%98%EC%A1%B4%EC%84%B1-%EC%A3%BC%EC%9E%85-%EC%9D%98-%ED%83%80-%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8C%ED%81%AC-%EC%A0%91%EA%B7%BC-%EC%9C%A0%ED%8A%9C%EB%B8%8C-%EB%8C%93%EA%B8%80/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/02.inbox/di-%EC%9D%98%EC%A1%B4%EC%84%B1-%EC%A3%BC%EC%9E%85-%EC%9D%98-%ED%83%80-%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8C%ED%81%AC-%EC%A0%91%EA%B7%BC-%EC%9C%A0%ED%8A%9C%EB%B8%8C-%EB%8C%93%EA%B8%80/</guid>
      <description>&lt;p&gt;영상을보다가 좀 답답해서 글을 써봅니다. 호돌맨과 항로님이 그냥 코딩에대한 감각이 없는것같다는 생각이 듭니다. 두분이 좋아하는 방식은 데이터를 다루는 영역에서 유효한 방식인데 그게 두분 전문분야인 웹 백엔드죠. 그러다보니 조금 착각이 일어나시는 것 같습니다. 우선 백엔드의 환경에 대해서 알아야하는데 웹 백엔드는 환경을 통제하기 쉽고(내 서버에 배포) 일종의 요청의 처음과 끝이 존재하는 심플한 방식이고 데이터를 가공해서 스토리지에 저장하는것이 주 목적입니다. 이런 환경에서는 말씀하시는 클래스와 DI같은 레이어링을 위한 추상화 방식이 유효해집니다. 스토리지는 인터페이스는 같지만 실제 구현체가 여러종류일 수 있고 (다형성) 그런 구현체를 주입하기위한 DI는 유효할 수 있습니다, 두분이 좋아하시는 자바 스프링의 어노테이션은 나름 괜찮은 표현력을 제공하죠. 저도 어떤 환경에서 프로그래밍을 하던 데이터 레이어가 복잡해지면 그와 같은 방식을 선호합니다. 나쁘지않은 방식이죠 근데 웹 프론트 환경에서의 클래스와 DI는 복잡도를 더 높입니다. 두분이 선호하는 클래스와 DI방식의 프레임워크로는 앵귤러가 있는데요, 앵귤러는 어노테이션 DI 다 스프링처럼 제공합니다. 근데 앵귤러가 왜 시장에서 외면받았느냐를 분석해드리겠습니다. 실제로 웹 프론트엔드 환경에서 코딩을 해보시면 아시겠지만 js환경에서 앵귤러와같은 표현력을 제공하려면 추상화비용에서 오는 손실이 백엔드보다 더 큽니다. 랜더링이라는 개념이 있고 데이터와 상호작용을 해야해하고 이러한 구현들은 클라이언트 전체적인 아키텍쳐와 상호작용합니다. (백엔드와는 이런 부분들이 다르죠). 예를들어 클라이언트에선 뭔가 백그라운드에서 돌아가고 있을 수 도 있고, 거기에 필요한 데이터 영역이 UI와 상호작용할수도 있습니다. 이 뿐만 아니라 컴포넌트끼리의 상호작용까지 있습니다. 이런 환경에서 과도하게 추상화된 영역은 버그를 일으키고 의존성을 파악하기도 힘들어집니다. 디버깅도 어려워지죠. 작성하기 귀찮은 보일러플레이트는 덤이구요. 그래서 앵귤러는 웹 프론트엔드 환경에서 외면받았습니다. react에서도 mobx와 같은 도구들이 있는데요 컨셉은 좋습니다, 클래스로 탄탄하게 데이터를 다루는 표현력을 제공하겠다, 너무 좋죠. 근데 이게 생각보다 간단하지않습니다. 이런 도구들이 react와 붙으려면 역시 복잡한 의존관계를 관리해야하고 규모가 커질수록 이는 파악하기 어려워집니다. 앵귤러와 비슷한 딜레마가 있습니다, 그래서 메이저가 되진 못했죠. 결론적으로 자연스럽게 코딩하다보면, 호돌맨님과 향로님이 제시하시는 방식은 외면받을 수 밖에 없다는걸 깨달을 때가 되신것같은데 아직 깨닫지못했다는게 정말 신기할 따름입니다. 아키텍쳐만 정해주고 직접 코딩하시진 않아서 그런걸까요? 정말로 리액트에서 클래스랑 DI를 사용하는 방식이 생산성이높다는 생각이든다면 뭔가 어거지 보일러 플레이트를 만들면서 잘못 코딩하고 계신거같고 제 생각엔 그냥 효율성 안나오지만 보일러플레이트 정형화되게 착착 쌓고 이러다보니 아 코딩하기 편하군 이라는 착각에 빠져계신 것 같습니다. 실제 웹 프론트엔드에서 생산성높게 일하는 회사가 어떤 방식을 취하고 계신지 한번 살펴보기를 권합니다.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
