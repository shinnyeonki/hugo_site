<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>실습으로 배우는 리눅스 구조s on My Test Site</title>
    <link>http://localhost:1313/%EC%8B%A4%EC%8A%B5%EC%9C%BC%EB%A1%9C-%EB%B0%B0%EC%9A%B0%EB%8A%94-%EB%A6%AC%EB%88%85%EC%8A%A4-%EA%B5%AC%EC%A1%B0/</link>
    <description>Recent content in 실습으로 배우는 리눅스 구조s on My Test Site</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <lastBuildDate>Wed, 01 Oct 2025 19:15:19 +0900</lastBuildDate>
    <atom:link href="http://localhost:1313/%EC%8B%A4%EC%8A%B5%EC%9C%BC%EB%A1%9C-%EB%B0%B0%EC%9A%B0%EB%8A%94-%EB%A6%AC%EB%88%85%EC%8A%A4-%EA%B5%AC%EC%A1%B0/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>프로그램 메모리 구조 파악하기</title>
      <link>http://localhost:1313/%EC%8B%A4%EC%8A%B5%EC%9C%BC%EB%A1%9C-%EB%B0%B0%EC%9A%B0%EB%8A%94-%EB%A6%AC%EB%88%85%EC%8A%A4-%EA%B5%AC%EC%A1%B0/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EA%B5%AC%EC%A1%B0-%ED%8C%8C%EC%95%85%ED%95%98%EA%B8%B0/</link>
      <pubDate>Wed, 01 Oct 2025 19:15:19 +0900</pubDate>
      <guid>http://localhost:1313/%EC%8B%A4%EC%8A%B5%EC%9C%BC%EB%A1%9C-%EB%B0%B0%EC%9A%B0%EB%8A%94-%EB%A6%AC%EB%88%85%EC%8A%A4-%EA%B5%AC%EC%A1%B0/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EA%B5%AC%EC%A1%B0-%ED%8C%8C%EC%95%85%ED%95%98%EA%B8%B0/</guid>
      <description>&lt;p&gt;프로그램의 실행파일로 프로세스를 생성해 프로그램을 돌리는 과정에서 각 과정에서 메모리 구조를 확인할 수 있다&lt;/p&gt;&#xA;&lt;h2 id=&#34;실행파일&#34;&gt;실행파일&lt;/h2&gt;&#xA;&lt;p&gt;먼저 실행파일이다 실행 파일은 운영체제별 포메멧 별로 다르게 사용되는데 이때 code section 과 data section 은 동일하다 이를 확인하기 위한 방법이 size 명령어이다&#xA;하지만  실행 파일의 헤더 및 기타 섹션을 확인하기 위한 방법은 운영 체제와 해당 실행 파일의 포맷(예: ELF, PE, Mach-O 등)에 따라 달라진다 리눅스, 유닉스 계열 시스템에서는 주로 ELF(Executable and Linkable Format) 포맷이 사용되며, Windows에서는 PE(Portable Executable) 포맷, macOS에서는 Mach-O 포맷이 사용된다&lt;/p&gt;</description>
    </item>
    <item>
      <title>05.메모리 관리</title>
      <link>http://localhost:1313/%EC%8B%A4%EC%8A%B5%EC%9C%BC%EB%A1%9C-%EB%B0%B0%EC%9A%B0%EB%8A%94-%EB%A6%AC%EB%88%85%EC%8A%A4-%EA%B5%AC%EC%A1%B0/05.%EB%A9%94%EB%AA%A8%EB%A6%AC-%EA%B4%80%EB%A6%AC/</link>
      <pubDate>Fri, 05 Sep 2025 21:00:05 +0900</pubDate>
      <guid>http://localhost:1313/%EC%8B%A4%EC%8A%B5%EC%9C%BC%EB%A1%9C-%EB%B0%B0%EC%9A%B0%EB%8A%94-%EB%A6%AC%EB%88%85%EC%8A%A4-%EA%B5%AC%EC%A1%B0/05.%EB%A9%94%EB%AA%A8%EB%A6%AC-%EA%B4%80%EB%A6%AC/</guid>
      <description>&lt;h2 id=&#34;free&#34;&gt;free&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240919163385.png&#34; alt=&#34; (Image resource not found)&#34; &gt;%20image%2020240919163385.png)&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240921030745.png&#34; alt=&#34;Pasted image 20240921030745 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;강제로 프로세스를 종료하여 메모리를 확보하는 OOM-Killer 라는 기능이 있다&#xA;서버에는 위의 일이 일어나지 않도록 sysctl 의 vm.panic_on_oom 파라미터의 기본값을 변경하여 메모리 부족시 시스템을 종료하게 하는 방법이 있다&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>프로세스 생성</title>
      <link>http://localhost:1313/%EC%8B%A4%EC%8A%B5%EC%9C%BC%EB%A1%9C-%EB%B0%B0%EC%9A%B0%EB%8A%94-%EB%A6%AC%EB%88%85%EC%8A%A4-%EA%B5%AC%EC%A1%B0/%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-%EC%83%9D%EC%84%B1/</link>
      <pubDate>Tue, 03 Jun 2025 06:11:53 +0900</pubDate>
      <guid>http://localhost:1313/%EC%8B%A4%EC%8A%B5%EC%9C%BC%EB%A1%9C-%EB%B0%B0%EC%9A%B0%EB%8A%94-%EB%A6%AC%EB%88%85%EC%8A%A4-%EA%B5%AC%EC%A1%B0/%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-%EC%83%9D%EC%84%B1/</guid>
      <description>&lt;p&gt;프로세스는 두가지 목적으로 생성한다&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;fork() : 다중 프로세스 프로그램 사용 =&amp;gt; 현재 프로세스의 메모리 복사 다른 프로세스로 등록&lt;/li&gt;&#xA;&lt;li&gt;execve() : 다른 프로그램 실행용( bash 에서 실행할 때 ) =&amp;gt; 현재 프로세스의 메모리를 새로운 프로세스의 메모리로 덮어 쓴다&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;프로세스가 운영체제에게 부여받은 메모리 구조&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240304174149.png&#34; alt=&#34; (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;실행파일&#34;&gt;실행파일&lt;/h2&gt;&#xA;&lt;p&gt;실행파일은 리눅스에서는 ELF (excutable linkable format) 형식이며&#xA;readelf -h {실행파일 명}&#xA;readelf -S {실행파일 명}&#xA;으로 사용 가능하다&lt;/p&gt;</description>
    </item>
    <item>
      <title>리눅스 시스템 기본</title>
      <link>http://localhost:1313/%EC%8B%A4%EC%8A%B5%EC%9C%BC%EB%A1%9C-%EB%B0%B0%EC%9A%B0%EB%8A%94-%EB%A6%AC%EB%88%85%EC%8A%A4-%EA%B5%AC%EC%A1%B0/%EB%A6%AC%EB%88%85%EC%8A%A4-%EC%8B%9C%EC%8A%A4%ED%85%9C-%EA%B8%B0%EB%B3%B8/</link>
      <pubDate>Mon, 04 Mar 2024 17:29:00 +0900</pubDate>
      <guid>http://localhost:1313/%EC%8B%A4%EC%8A%B5%EC%9C%BC%EB%A1%9C-%EB%B0%B0%EC%9A%B0%EB%8A%94-%EB%A6%AC%EB%88%85%EC%8A%A4-%EA%B5%AC%EC%A1%B0/%EB%A6%AC%EB%88%85%EC%8A%A4-%EC%8B%9C%EC%8A%A4%ED%85%9C-%EA%B8%B0%EB%B3%B8/</guid>
      <description>&lt;p&gt;운영 체제 레벨의 패키지 관리자로는 아래와 같은 것들이 있습니다:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;code&gt;dnf&lt;/code&gt;: Fedora 리눅스에서 사용되는 패키지 관리자로, yum의 최신 버전입니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;pacman&lt;/code&gt;: Arch 리눅스에서 사용되는 패키지 관리자입니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;zypper&lt;/code&gt;: openSUSE에서 사용되는 패키지 관리자입니다.&#xA;apt yum brew&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;프로그래밍 언어 레벨의 패키지 관리자로는 아래와 같은 것들이 있습니다:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;code&gt;gem&lt;/code&gt;: Ruby 언어의 패키지 관리자입니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;composer&lt;/code&gt;: PHP 언어의 패키지 관리자입니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;nuget&lt;/code&gt;: .NET 언어의 패키지 관리자입니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;maven&lt;/code&gt;과 &lt;code&gt;gradle&lt;/code&gt;: Java 언어의 패키지 관리자입니다.&#xA;pip, cargo, npm&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;시스템 콜의 종류&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;﻿﻿프로세스 생성, 삭제&lt;/li&gt;&#xA;&lt;li&gt;﻿﻿메모리 확보, 해제&lt;/li&gt;&#xA;&lt;li&gt;﻿﻿프로세스 간 통신(IPC)&lt;/li&gt;&#xA;&lt;li&gt;﻿﻿네트워크&lt;/li&gt;&#xA;&lt;li&gt;﻿﻿파일시스템 다루기&lt;/li&gt;&#xA;&lt;li&gt;﻿﻿파일 다루기(디바이스 접근)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;strace : 시스템 호출 목록 확인&#xA;os 제공&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
