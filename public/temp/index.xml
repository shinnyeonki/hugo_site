<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Temps on My Test Site</title>
    <link>http://localhost:1313/temp/</link>
    <description>Recent content in Temps on My Test Site</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <lastBuildDate>Sat, 27 Sep 2025 15:04:00 +0900</lastBuildDate>
    <atom:link href="http://localhost:1313/temp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Transaction 의 ACID</title>
      <link>http://localhost:1313/temp/transaction-%EC%9D%98-acid/</link>
      <pubDate>Sat, 27 Sep 2025 15:04:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/transaction-%EC%9D%98-acid/</guid>
      <description>&lt;p&gt;ACID는 데이터베이스 트랜잭션의 신뢰성을 보장하는 네 가지 주요 속성입니다. 각각의 속성을 한 문장으로 요약하고 예시를 들어 설명하겠습니다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-원자성-atomicity&#34;&gt;1. 원자성 (Atomicity)&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;요약&lt;/strong&gt;: 트랜잭션 내의 모든 작업이 성공적으로 완료되거나, 전혀 수행되지 않아야 한다.&lt;br&gt;&#xA;&lt;strong&gt;예시&lt;/strong&gt;: 은행에서 10,000원을 A 계좌에서 B 계좌로 이체하는 경우, 두 계좌의 잔액이 모두 변경되거나, 하나라도 실패하면 모든 변경이 취소된다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;2-일관성-consistency&#34;&gt;2. 일관성 (Consistency)&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;요약&lt;/strong&gt;: 트랜잭션이 완료되면 데이터베이스는 항상 일관된 상태를 유지해야 한다.&lt;br&gt;&#xA;&lt;strong&gt;예시&lt;/strong&gt;: 학생 등록 시스템에서 학생의 성적을 업데이트할 때, 성적이 0 이상 100 이하의 범위를 벗어나지 않도록 보장해야 한다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>css hidden 대신 transition</title>
      <link>http://localhost:1313/temp/css-hidden-%EB%8C%80%EC%8B%A0-transition/</link>
      <pubDate>Sat, 27 Sep 2025 06:18:29 +0900</pubDate>
      <guid>http://localhost:1313/temp/css-hidden-%EB%8C%80%EC%8B%A0-transition/</guid>
      <description>&lt;p&gt;Tailwind CSS를 사용한다고 가정하고, 좌우 사이드바(왼쪽 사이드바와 오른쪽 사이드바)가 각각 화면 왼쪽/오른쪽 밖에 숨어 있다가, 필요할 때 애니메이션과 함께 나타나도록 설정하는 과정입니다.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-요구사항-요약&#34;&gt;🔧 요구사항 요약&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;좌우 사이드바에&lt;/strong&gt; 다음 클래스를 추가:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;transition-transform&lt;/code&gt;: &lt;code&gt;transform&lt;/code&gt; 속성에 대한 트랜지션(애니메이션)을 활성화&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;duration-300&lt;/code&gt;: 트랜지션 지속 시간을 300ms로 설정&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;초기 상태에서&lt;/strong&gt;:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;왼쪽 사이드바는 화면 &lt;strong&gt;왼쪽 밖&lt;/strong&gt;에 위치 → &lt;code&gt; -translate-x-full&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;오른쪽 사이드바는 화면 &lt;strong&gt;오른쪽 밖&lt;/strong&gt;에 위치 → &lt;code&gt; translate-x-full&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;기존의 &lt;code&gt;hidden&lt;/code&gt; 클래스는 제거&lt;/strong&gt;&lt;br&gt;&#xA;→ &lt;code&gt;hidden&lt;/code&gt;은 &lt;code&gt;display: none&lt;/code&gt;을 적용하므로, 애니메이션이 작동하지 않음&lt;/p&gt;</description>
    </item>
    <item>
      <title>nextInt vs nextLine</title>
      <link>http://localhost:1313/temp/nextint-vs-nextline/</link>
      <pubDate>Fri, 19 Sep 2025 16:09:18 +0900</pubDate>
      <guid>http://localhost:1313/temp/nextint-vs-nextline/</guid>
      <description>&lt;p&gt;완벽히 이해했습니다.&lt;br&gt;&#xA;아래는 &lt;strong&gt;기존의 틀과 구조를 100% 유지하면서&lt;/strong&gt;,&lt;br&gt;&#xA;&lt;strong&gt;각 단계에서 &lt;code&gt;nextInt()&lt;/code&gt;와 &lt;code&gt;nextLine()&lt;/code&gt;의 동작 차이를 병렬로 설명&lt;/strong&gt;한 버전입니다.&lt;br&gt;&#xA;→ &lt;strong&gt;동일한 입력(&lt;code&gt;25\n&lt;/code&gt;)이 주어졌을 때, 두 메서드가 어떻게 다른 방식으로 버퍼를 소비하고 커서를 이동시키는지&lt;/strong&gt;를 &lt;strong&gt;계층별로 명확히 대조&lt;/strong&gt;합니다.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-완전한-데이터-흐름-사용자-입력--scanner-내부-버퍼&#34;&gt;🧩 완전한 데이터 흐름: 사용자 입력 → Scanner 내부 버퍼&lt;/h2&gt;&#xA;&lt;h3 id=&#34;시스템-프로그래밍--터미널-관점--nextint-vs-nextline-비교-포함&#34;&gt;(시스템 프로그래밍 + 터미널 관점 — &lt;code&gt;nextInt()&lt;/code&gt; vs &lt;code&gt;nextLine()&lt;/code&gt; 비교 포함)&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;✍️ &lt;strong&gt;목표&lt;/strong&gt;: 사용자가 키보드로 &lt;code&gt;25&lt;/code&gt;를 치고 &lt;code&gt;Enter&lt;/code&gt;를 누른 순간부터,&lt;br&gt;&#xA;Java의 &lt;code&gt;Scanner.nextInt()&lt;/code&gt; 또는 &lt;code&gt;Scanner.nextLine()&lt;/code&gt;이 어떻게 다른 방식으로 &lt;code&gt;25\n&lt;/code&gt;을 처리하는지&lt;br&gt;&#xA;&lt;strong&gt;모든 계층을 투명하게 추적 + 비교&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2024-10-25</title>
      <link>http://localhost:1313/temp/2024-10-25/</link>
      <pubDate>Fri, 05 Sep 2025 22:04:13 +0900</pubDate>
      <guid>http://localhost:1313/temp/2024-10-25/</guid>
      <description>&lt;p&gt;2024/10/25자 생성&lt;/p&gt;&#xA;&lt;h2 id=&#34;영어-pdf-문서-통번역정확도-순위별-정렬하이퍼-링크&#34;&gt;영어 pdf 문서 통번역(정확도 순위별 정렬)(하이퍼 링크)&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.deepl.com/ko/translator/files&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;DeepL&lt;/a&gt; =&amp;gt; 5,000자까지, 로그인(회원가입) 필요&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://papago.naver.com/docs/&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;papago&lt;/a&gt; =&amp;gt; 10MB 이하 1만자 이하, 로그인(회원가입) 필요&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://translate.google.com/?hl=ko&amp;amp;tab=wT&amp;amp;sl=en&amp;amp;tl=ko&amp;amp;op=translate&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;google translate&lt;/a&gt; =&amp;gt; 클릭 이후 상단 문서로 이동&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20241025225279.png&#34; alt=&#34; (Image resource not found)&#34; &gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;llm-사용-ai&#34;&gt;LLM 사용 (AI)&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://wrtn.ai/&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;뤼튼&lt;/a&gt; =&amp;gt; 무제한, 로그인 필요&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20241025230788.png&#34; alt=&#34;Pasted image 20241025230788 (Image resource not found)&#34; &gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chatgpt.com/&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;chatGPT&lt;/a&gt; =&amp;gt; 거이 무제한, 로그인 필요&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://claude.ai/&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;Claude&lt;/a&gt; =&amp;gt; 가장 똑똑하지만 제한량이 있음, 로그인 필요&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://copilot.microsoft.com/&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;Microsoft AI Copliot&lt;/a&gt; =&amp;gt; microsoft AI&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://gemini.google.com/app&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;Google AI gemini&lt;/a&gt; =&amp;gt; 구글이 만ems AI&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>spring bean 조회</title>
      <link>http://localhost:1313/temp/spring-bean-%EC%A1%B0%ED%9A%8C/</link>
      <pubDate>Fri, 05 Sep 2025 17:38:41 +0900</pubDate>
      <guid>http://localhost:1313/temp/spring-bean-%EC%A1%B0%ED%9A%8C/</guid>
      <description>&lt;p&gt;![](../08.media/20240202105604.png|spring bean 조회-20240202105604)&lt;/p&gt;&#xA;&lt;p&gt;최상위 BeanFactory 인터페이스를 구현한 모든 클래스들은&#xA;bean 들을 관리하는 컨테이너이다&#xA;HierarchicalBeanFactory: 빈 계층구조 관리&#xA;ListableBeanFactory : 빈 여러개 조회 가능&#xA;ApplicationContext : 컨테이너 + 기능추가&#xA;AnnotationConfigApplicationContext : 어노테이션을 설정 정보로 하는 컨테이너&lt;/p&gt;&#xA;&lt;p&gt;이때 컨테이너에 존재하는 bean 들을 조회하는 방법이다&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;BeanFactory&lt;/span&gt;: &lt;span style=&#34;color:#75715e&#34;&gt;//최상위 컨테이너&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;T &lt;span style=&#34;color:#a6e22e&#34;&gt;getBean&lt;/span&gt;(Class&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; requiredType); &lt;span style=&#34;color:#75715e&#34;&gt;// 타입으로 조회&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Object &lt;span style=&#34;color:#a6e22e&#34;&gt;getBean&lt;/span&gt;(String name); &lt;span style=&#34;color:#75715e&#34;&gt;// 이름으로 조회&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;T &lt;span style=&#34;color:#a6e22e&#34;&gt;getBean&lt;/span&gt;(Class&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; requiredType, Object... args); &lt;span style=&#34;color:#75715e&#34;&gt;//이름과 타입으로 조회&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=============&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ListableBeanFactory&lt;/span&gt;: &lt;span style=&#34;color:#75715e&#34;&gt;// 여러개 조회가능 컨테이너&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getBeanDefinitionCount&lt;/span&gt;() &lt;span style=&#34;color:#75715e&#34;&gt;//팩토리에 정의된 빈 개수를 반환합니다.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;String &lt;span style=&#34;color:#a6e22e&#34;&gt;getBeanDefinitionNames&lt;/span&gt;() &lt;span style=&#34;color:#75715e&#34;&gt;//이 팩토리에 정의된 모든 Bean의 이름을 반환합니다.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; Map&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;String,T&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getBeansOfType&lt;/span&gt;(Class &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; type) &lt;span style=&#34;color:#75715e&#34;&gt;//타입으로 모든 Bean 조회&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;추가적으로 bean들의 설정 정보를 담고 있는 BeanDefinition 클래스가 있다&#xA;getRole(), 등등의 설정 정보를 담고 있는 클래스이다 getBeanDefinition()  메서드를 통해 얻을 수 있다&lt;/p&gt;</description>
    </item>
    <item>
      <title>알르레기 반응 중 건강검진 (피검사)</title>
      <link>http://localhost:1313/temp/%EC%95%8C%EB%A5%B4%EB%A0%88%EA%B8%B0-%EB%B0%98%EC%9D%91-%EC%A4%91-%EA%B1%B4%EA%B0%95%EA%B2%80%EC%A7%84-%ED%94%BC%EA%B2%80%EC%82%AC/</link>
      <pubDate>Wed, 27 Aug 2025 22:04:33 +0900</pubDate>
      <guid>http://localhost:1313/temp/%EC%95%8C%EB%A5%B4%EB%A0%88%EA%B8%B0-%EB%B0%98%EC%9D%91-%EC%A4%91-%EA%B1%B4%EA%B0%95%EA%B2%80%EC%A7%84-%ED%94%BC%EA%B2%80%EC%82%AC/</guid>
      <description>&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;의뢰기관명&lt;/strong&gt; 2222&lt;/td&gt;&#xA;          &lt;td&gt;미금성모의원 3333&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;의뢰기관코드&lt;/strong&gt; 4&lt;/td&gt;&#xA;          &lt;td&gt;66006 5&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;수진자명&lt;/strong&gt; 6&lt;/td&gt;&#xA;          &lt;td&gt;신년기 7777&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;접수번호&lt;/strong&gt; 8&lt;/td&gt;&#xA;          &lt;td&gt;20250826-01865 999&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Chart No.&lt;/strong&gt; 10101010&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;접수일자&lt;/strong&gt; 11&lt;/td&gt;&#xA;          &lt;td&gt;2025/08/26 18:47 121212&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;성별/나이&lt;/strong&gt; 13131313&lt;/td&gt;&#xA;          &lt;td&gt;M/24 14141414&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;검체종류&lt;/strong&gt; 15&lt;/td&gt;&#xA;          &lt;td&gt;NaF, Serum, Urine, WB 161616&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;채취일자&lt;/strong&gt; 17171717&lt;/td&gt;&#xA;          &lt;td&gt;2025-08-26 18181818&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;검사일자&lt;/strong&gt; 19&lt;/td&gt;&#xA;          &lt;td&gt;2025/08/26 20:03 202020&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;담당의사&lt;/strong&gt; 21212121&lt;/td&gt;&#xA;          &lt;td&gt;김중연 22222222&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;보고일자&lt;/strong&gt; 23&lt;/td&gt;&#xA;          &lt;td&gt;2025/08/27 03:50 242424&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;진료과/병동&lt;/strong&gt; 25252525&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;담당자&lt;/strong&gt; 26&lt;/td&gt;&#xA;          &lt;td&gt;609 27&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;주민번호&lt;/strong&gt; 28282828&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;기타&lt;/strong&gt; 29&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;보험코드 3030&lt;/th&gt;&#xA;          &lt;th&gt;검사명 3131&lt;/th&gt;&#xA;          &lt;th&gt;결과 3232&lt;/th&gt;&#xA;          &lt;th&gt;판정 3333&lt;/th&gt;&#xA;          &lt;th&gt;임상참고치/단위 3434&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;■ 간담도, 췌장질환 검사&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;D186000HZ 35&lt;/td&gt;&#xA;          &lt;td&gt;AST(GOT) 36&lt;/td&gt;&#xA;          &lt;td&gt;19 37&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;M: 0-40 U/L&lt;br&gt;F: 0-35 38&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;D185000HZ 39&lt;/td&gt;&#xA;          &lt;td&gt;ALT(GPT) 40&lt;/td&gt;&#xA;          &lt;td&gt;9 41&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;M: 0-45 U/L&lt;br&gt;F: 0-35 42&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;D189000HZ 43&lt;/td&gt;&#xA;          &lt;td&gt;r-GTP 44&lt;/td&gt;&#xA;          &lt;td&gt;11 45&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;M: 11-60 U/L&lt;br&gt;F: 8-39 46&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;■ 신장질환 검사&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;D230000HZ 47&lt;/td&gt;&#xA;          &lt;td&gt;BUN 48&lt;/td&gt;&#xA;          &lt;td&gt;15.8 49&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;8.00-20.00 mg/dL 50&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;D228000HZ 51&lt;/td&gt;&#xA;          &lt;td&gt;Creatinine 52&lt;/td&gt;&#xA;          &lt;td&gt;1.06 53&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;M: 0.67-1.17 mg/dL&lt;br&gt;F: 0.51-0.95 54&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;eGFR(CKD-EPI) 55&lt;/td&gt;&#xA;          &lt;td&gt;97.74 56&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&amp;gt; 60 mL/min/1.73m² 57&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;■ 당뇨관련 검사&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;D302200HZ 58&lt;/td&gt;&#xA;          &lt;td&gt;Glucose(AC) 59&lt;/td&gt;&#xA;          &lt;td&gt;80 60&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;60.00-100.00 mg/dL 61&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;■ 전해질 및 대사관련 검사&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;D231000HZ 62&lt;/td&gt;&#xA;          &lt;td&gt;Uric acid 63&lt;/td&gt;&#xA;          &lt;td&gt;4.5 64&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;M: 3.5-7.2 mg/dL&lt;br&gt;F: 2.6-6.0 65&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;D280002HZ 66&lt;/td&gt;&#xA;          &lt;td&gt;Sodium(Na) 67&lt;/td&gt;&#xA;          &lt;td&gt;136 68&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;135.00-146.00 mmol/L 69&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;D280006HZ 70&lt;/td&gt;&#xA;          &lt;td&gt;Potassium(K) 71&lt;/td&gt;&#xA;          &lt;td&gt;4.6 72&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;3.50- 5.50 mmol/L 73&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;■ 혈액 검사&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;D000201HZ 74&lt;/td&gt;&#xA;          &lt;td&gt;WBC(백혈구) 75&lt;/td&gt;&#xA;          &lt;td&gt;10.9 76&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;3.50-11.00 K/uL 77&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;D000203HZ 78&lt;/td&gt;&#xA;          &lt;td&gt;RBC(적혈구) 79&lt;/td&gt;&#xA;          &lt;td&gt;4.79 80&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;M: 4.30-5.80 M/uL&lt;br&gt;F: 3.68-4.88 81&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;D000205HZ 82&lt;/td&gt;&#xA;          &lt;td&gt;Hemoglobin(혈색소) 83&lt;/td&gt;&#xA;          &lt;td&gt;14.7 84&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;M: 12.4-17.1 g/dL&lt;br&gt;F: 11.5-15.0 85&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;D000204HZ 86&lt;/td&gt;&#xA;          &lt;td&gt;Hematocrit 87&lt;/td&gt;&#xA;          &lt;td&gt;43.1 88&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;M: 38-52 %&lt;br&gt;F: 35-45 89&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;MCV 90&lt;/td&gt;&#xA;          &lt;td&gt;89.9 91&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;80.00-105.00 fL 92&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;MCH 93&lt;/td&gt;&#xA;          &lt;td&gt;30.6 94&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;27.00- 33.00 pg 95&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;MCHC 96&lt;/td&gt;&#xA;          &lt;td&gt;34.1 97&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;31.00- 36.00 g/dL 98&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;D000202HZ 99&lt;/td&gt;&#xA;          &lt;td&gt;RDW 100&lt;/td&gt;&#xA;          &lt;td&gt;12.4 101&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;10.50-14.50 % 102&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;D000206HZ 103&lt;/td&gt;&#xA;          &lt;td&gt;PDW 104&lt;/td&gt;&#xA;          &lt;td&gt;15.9 105&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;10.50- 23.50 fL 106&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;D000207HZ 107&lt;/td&gt;&#xA;          &lt;td&gt;Platelets(혈소판) 108&lt;/td&gt;&#xA;          &lt;td&gt;262 109&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;150.00-440.00 K/uL 110&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;D001300HZ 111&lt;/td&gt;&#xA;          &lt;td&gt;N.Segment 112&lt;/td&gt;&#xA;          &lt;td&gt;76 113&lt;/td&gt;&#xA;          &lt;td&gt;H 114&lt;/td&gt;&#xA;          &lt;td&gt;35.00-70.00 % 115&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;N.Band 116&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;0.00-7.00 % 117&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Lymphocyte 118&lt;/td&gt;&#xA;          &lt;td&gt;18 119&lt;/td&gt;&#xA;          &lt;td&gt;L 120&lt;/td&gt;&#xA;          &lt;td&gt;25.00-55.00 % 121&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Monocyte 122&lt;/td&gt;&#xA;          &lt;td&gt;6 123&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;0.00-11.00 % 124&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Eosinophil 125&lt;/td&gt;&#xA;          &lt;td&gt;0 126&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;0.00-7.00 % 127&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Basophil 128&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;0.00-1.00 % 129&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;■ 소변 검사&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;D225300HZ 130&lt;/td&gt;&#xA;          &lt;td&gt;U-Occult blood 131&lt;/td&gt;&#xA;          &lt;td&gt;음성 132&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Negative 133&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;U-Leukocyte 134&lt;/td&gt;&#xA;          &lt;td&gt;음성 135&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Negative 136&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;U-Bilirubin 137&lt;/td&gt;&#xA;          &lt;td&gt;음성 138&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Negative 139&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;U-Urobilinogen 140&lt;/td&gt;&#xA;          &lt;td&gt;+/- 141&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;+/- 142&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;U-Ketone 143&lt;/td&gt;&#xA;          &lt;td&gt;음성 144&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Negative 145&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;U-Protein 146&lt;/td&gt;&#xA;          &lt;td&gt;음성 147&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Negative 148&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;U-Nitrite 149&lt;/td&gt;&#xA;          &lt;td&gt;음성 150&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Negative 151&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;U-Glucose 152&lt;/td&gt;&#xA;          &lt;td&gt;음성 153&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Negative 154&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;U-pH 155&lt;/td&gt;&#xA;          &lt;td&gt;6.0 156&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;5.00- 8.00 157&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;U-S.G. 158&lt;/td&gt;&#xA;          &lt;td&gt;1.005 159&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;1.005-1.030 160&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;D220101HZ 161&lt;/td&gt;&#xA;          &lt;td&gt;U-WBC 162&lt;/td&gt;&#xA;          &lt;td&gt;0-3 163&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;0-3/HPF 164&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;U-RBC 165&lt;/td&gt;&#xA;          &lt;td&gt;Not Found 166&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;0-2/HPF 167&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;■ 갑상선질환 검사&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;D323006HZ 168&lt;/td&gt;&#xA;          &lt;td&gt;T3 (Triiodothyronine) 169&lt;/td&gt;&#xA;          &lt;td&gt;0.71 170&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;0.60- 1.81 ng/mL 171&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;D323005HZ 172&lt;/td&gt;&#xA;          &lt;td&gt;Free T4 173&lt;/td&gt;&#xA;          &lt;td&gt;1.11 174&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;0.89- 1.76 ng/dL 175&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;D325001HZ 176&lt;/td&gt;&#xA;          &lt;td&gt;TSH 177&lt;/td&gt;&#xA;          &lt;td&gt;1.18 178&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;0.55- 4.78 µIU/mL 179&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;&lt;strong&gt;검사자&lt;/strong&gt;: 전미순 17005 180180180180&lt;/p&gt;</description>
    </item>
    <item>
      <title>의존관계 주입(dependency injection)</title>
      <link>http://localhost:1313/temp/%EC%9D%98%EC%A1%B4%EA%B4%80%EA%B3%84-%EC%A3%BC%EC%9E%85dependency-injection/</link>
      <pubDate>Tue, 19 Aug 2025 22:14:39 +0900</pubDate>
      <guid>http://localhost:1313/temp/%EC%9D%98%EC%A1%B4%EA%B4%80%EA%B3%84-%EC%A3%BC%EC%9E%85dependency-injection/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;생성자 주입&lt;/li&gt;&#xA;&lt;li&gt;설정자 수정자 주입(setter)&lt;/li&gt;&#xA;&lt;li&gt;필드 주입&lt;/li&gt;&#xA;&lt;li&gt;일반 메서드 주입&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;생성자-주입&#34;&gt;생성자 주입&lt;/h2&gt;&#xA;&lt;p&gt;생성자 주입(Constructor Injection) 이 방법 객체 생성 시점 의존성 부여&#xA;불변,필수&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ExampleClass&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; SomeDependency dependency;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ExampleClass&lt;/span&gt;(SomeDependency dependency) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;dependency&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dependency;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;spring 에서는 @Autowired 를 통해 의존성을 주입하는데&#xA;생성자가 1개 라면 생략 가능하다&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;설정자-주입&#34;&gt;설정자 주입&lt;/h2&gt;&#xA;&lt;p&gt;설정자 주입(Setter Injection) 이 방법은 객체 생성 이후에도 의존성 변경 가능&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ExampleClass&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; SomeDependency dependency;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setDependency&lt;/span&gt;(SomeDependency dependency) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;dependency&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dependency;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;h2 id=&#34;필드-주입&#34;&gt;필드 주입&lt;/h2&gt;&#xA;&lt;p&gt;필드 주입(Field Injection)&lt;/p&gt;</description>
    </item>
    <item>
      <title>ANSI escape code</title>
      <link>http://localhost:1313/temp/ansi-escape-code/</link>
      <pubDate>Mon, 11 Aug 2025 01:10:26 +0900</pubDate>
      <guid>http://localhost:1313/temp/ansi-escape-code/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;ANSI 이스케이프 시퀀스는 비디오&lt;/strong&gt; &lt;a href=&#34;https://en.wikipedia.org/wiki/Text_terminal&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;  title=&#34;텍스트 터미널&#34;&gt;텍스트 터미널&lt;/a&gt; 과 &lt;a href=&#34;https://en.wikipedia.org/wiki/Terminal_emulator&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;  title=&#34;터미널 에뮬레이터&#34;&gt;터미널 에뮬레이터&lt;/a&gt; 에서 커서 위치, 색상, 글꼴 스타일 및 기타 옵션을 제어하기 위한 인 &lt;a href=&#34;https://en.wikipedia.org/wiki/In-band_signaling&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;  title=&#34;대역 내 신호 전송&#34;&gt;밴드 신호&lt;/a&gt; 표준&#xA;source wikipedia&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;일반적인 상황에서는 터미널 환경에서 사용한다 GUI 에서 사용하더도 대부분 텍스트를 제어하는 데에 사용된다&lt;/p&gt;</description>
    </item>
    <item>
      <title>SRG(그래픽 랜더링 선택) escape sequence</title>
      <link>http://localhost:1313/temp/srg%EA%B7%B8%EB%9E%98%ED%94%BD-%EB%9E%9C%EB%8D%94%EB%A7%81-%EC%84%A0%ED%83%9D-escape-sequence/</link>
      <pubDate>Mon, 11 Aug 2025 00:45:48 +0900</pubDate>
      <guid>http://localhost:1313/temp/srg%EA%B7%B8%EB%9E%98%ED%94%BD-%EB%9E%9C%EB%8D%94%EB%A7%81-%EC%84%A0%ED%83%9D-escape-sequence/</guid>
      <description>&lt;p&gt;SGR(Select Graphic Rendition)&lt;/p&gt;&#xA;&lt;p&gt;이것을 이해하기 위해&#xA;wiki 에는 이렇게 나와 있다&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;ANSI 이스케이프 시퀀스는 비디오&lt;/strong&gt; &lt;a href=&#34;https://en.wikipedia.org/wiki/Text_terminal&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;  title=&#34;텍스트 터미널&#34;&gt;텍스트 터미널&lt;/a&gt; 과 &lt;a href=&#34;https://en.wikipedia.org/wiki/Terminal_emulator&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;  title=&#34;터미널 에뮬레이터&#34;&gt;터미널 에뮬레이터&lt;/a&gt; 에서 커서 위치, 색상, 글꼴 스타일 및 기타 옵션을 제어하기 위한 인 &lt;a href=&#34;https://en.wikipedia.org/wiki/In-band_signaling&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;  title=&#34;대역 내 신호 전송&#34;&gt;밴드 신호&lt;/a&gt; 표준&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;즉 cli 환경에서 커서 위치, 색상, 글꼴 스타일 등등의 옵션을 제어하기 위한 표준이라고 나와있다&lt;/p&gt;</description>
    </item>
    <item>
      <title>터미널 command line shell</title>
      <link>http://localhost:1313/temp/%ED%84%B0%EB%AF%B8%EB%84%90-command-line-shell/</link>
      <pubDate>Mon, 11 Aug 2025 00:45:47 +0900</pubDate>
      <guid>http://localhost:1313/temp/%ED%84%B0%EB%AF%B8%EB%84%90-command-line-shell/</guid>
      <description>&lt;p&gt;터미널 command line 이라고 한정하여 shell 이라고 말한다면&#xA;일반적으로 /dev 파일 내부에 터미널 드라이브 장치를 통해 사용되는 shell 을 말한다 즉![[../08.media/20231223130204.png|login shell vs non-login shell-20231223130204]]2020231223130204.png)&lt;/p&gt;&#xA;&lt;h2 id=&#34;분류&#34;&gt;분류&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;login vs non-login : shell 이 다른 셸의 하위 프로세스로 실행되는가&lt;/li&gt;&#xA;&lt;li&gt;interactive vs non-interactive : 사용자와 상호작용하는가&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;login-shell-vs-non-login-shell&#34;&gt;login shell vs non-login shell&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;[!요약]&#xA;Login Shell : userid passwd 입력해서 들어가는 방법&#xA;Non Longin Shell : 이미 다른 로그인 된 shell 에서 shell 을 fork 형태로 불러내는 방법&lt;/p&gt;</description>
    </item>
    <item>
      <title>c&#43;&#43; 입력함수</title>
      <link>http://localhost:1313/temp/c&#43;&#43;-%EC%9E%85%EB%A0%A5%ED%95%A8%EC%88%98/</link>
      <pubDate>Thu, 05 Jun 2025 06:16:41 +0900</pubDate>
      <guid>http://localhost:1313/temp/c&#43;&#43;-%EC%9E%85%EB%A0%A5%ED%95%A8%EC%88%98/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 정수  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; n;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cin &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; n;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 문자열  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;string str;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cin &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; str;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;&amp;lt;iostrem&amp;gt;&lt;/code&gt; 에 포함&lt;/li&gt;&#xA;&lt;li&gt;표준 입력 버퍼에서 개행문자를 제외한 값을 가져옴&lt;/li&gt;&#xA;&lt;li&gt;공백이나 개행입력시 공백 이전까지의 값만 결과로 받아드린다&lt;/li&gt;&#xA;&lt;li&gt;개행문자를 입력 버퍼에 남겨둔다&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;getline()함수는 두 가지가 존재하는데 각가 다른 라이브러리에 존재한다. istream 라이브러리에 속한 cin.getline()함수와 string 라이브러리에 속하는 getline()함수가 있다.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;istream 라이브러리의 cin.getline()&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;문자 배열이며 마지막 글자가 ‘\0’(terminator)인 c-string을 입력 받는데 사용&lt;/li&gt;&#xA;&lt;li&gt;n-1개의 문자 개수만큼 읽어와 str에 저장 (n번째 문자는 NULL(‘\0’)로 바꾼다.)&lt;/li&gt;&#xA;&lt;li&gt;세 번째 인자인 delim은 별도로 지정해주지 않으면 엔터(‘\n’)로 인식&lt;/li&gt;&#xA;&lt;li&gt;delim을 지정해주면 그 제한자(delim)문자 직전까지 읽어서 str에 저장&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cin.getline(&lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; str, streamsize n);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cin.getline(&lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; str, streamsize n, &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; dlim);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;cin.getline(변수 주소, 최대 입력 가능 문자수, 종결 문자);&lt;br&gt;&#xA;ex) cin.getline(str, 100);&lt;/p&gt;</description>
    </item>
    <item>
      <title>교차검증</title>
      <link>http://localhost:1313/temp/%EA%B5%90%EC%B0%A8%EA%B2%80%EC%A6%9D/</link>
      <pubDate>Mon, 17 Mar 2025 14:53:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/%EA%B5%90%EC%B0%A8%EA%B2%80%EC%A6%9D/</guid>
      <description>&lt;p&gt;교차 검증(Cross Validation)은 머신러닝 모델의 성능을 평가하는 데 널리 사용되는 기법입니다. 이를 통해 모델이 새로운 데이터에 대해 얼마나 잘 일반화될 수 있는지를 더 정확하게 평가할 수 있습니다. 아래에서 교차 검증의 개념과 예시를 단계별로 설명하겠습니다.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;교차-검증의-기본-아이디어&#34;&gt;&lt;strong&gt;교차 검증의 기본 아이디어&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;데이터셋을 훈련셋과 검증셋으로 나누는 경우, 훈련 데이터와 검증 데이터의 선택이 성능 평가 결과에 영향을 미칠 수 있습니다.&lt;/li&gt;&#xA;&lt;li&gt;따라서 전체 데이터를 여러 개의 작은 부분(fold)으로 나눈 후, 각 부분을 검증셋으로 사용하고 나머지를 훈련셋으로 사용하여 여러 번 실험을 진행합니다.&lt;/li&gt;&#xA;&lt;li&gt;이렇게 얻은 여러 성능 평가 결과의 평균값을 최종 성능 평가 결과로 사용합니다.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;k-겹-교차-검증k-fold-cross-validation의-과정&#34;&gt;&lt;strong&gt;k-겹 교차 검증(K-Fold Cross Validation)의 과정&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;1-데이터를-k개의-서브셋fold으로-나눈다&#34;&gt;1. 데이터를 k개의 서브셋(fold)으로 나눈다.&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;데이터셋을 동일한 크기의 k개로 나눕니다.&lt;/li&gt;&#xA;&lt;li&gt;예를 들어, 데이터셋이 100개이고 $ k=5 $라면, 각 fold는 20개의 데이터를 포함합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;2-각-fold를-검증셋으로-사용하며-모델-학습-및-평가를-반복한다&#34;&gt;2. 각 fold를 검증셋으로 사용하며 모델 학습 및 평가를 반복한다.&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Fold 1을 검증셋으로 사용하고, 나머지 Fold 2~5를 훈련셋으로 사용해 모델을 학습한 후 검증셋(Fold 1)에서 성능을 평가합니다.&lt;/li&gt;&#xA;&lt;li&gt;이 과정을 Fold 2, Fold 3, &amp;hellip;, Fold k까지 반복합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;3-k번의-성능-평가-결과를-평균하여-최종-성능을-산출한다&#34;&gt;3. k번의 성능 평가 결과를 평균하여 최종 성능을 산출한다.&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;각 fold에서 얻은 성능(예: 정확도, F1 스코어 등)을 평균하여 최종 성능으로 간주합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;예시&#34;&gt;&lt;strong&gt;예시&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;상황&#34;&gt;상황:&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;데이터셋: 100개의 샘플&lt;/li&gt;&#xA;&lt;li&gt;$ k = 5 $ (5-fold cross validation)&lt;/li&gt;&#xA;&lt;li&gt;성능 평가 지표: 정확도(Accuracy)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;step-by-step-설명&#34;&gt;Step-by-step 설명:&lt;/h4&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;데이터 분할&lt;/strong&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>알고리즘 변수명</title>
      <link>http://localhost:1313/temp/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EB%B3%80%EC%88%98%EB%AA%85/</link>
      <pubDate>Wed, 29 Jan 2025 21:17:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EB%B3%80%EC%88%98%EB%AA%85/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;인덱스&#xA;i(ndex)&#xA;index&#xA;pos(ition)&#xA;count&#xA;&#xA;left &amp;lt;-&amp;gt; right&#xA;start &amp;lt;-&amp;gt; end&#xA;&#xA;&#xA;&#xA;&#xA;[ ]: brackets&#xA;{ } : braces&#xA;( ) : parentheses&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>ELF 구조</title>
      <link>http://localhost:1313/temp/elf-%EA%B5%AC%EC%A1%B0/</link>
      <pubDate>Thu, 23 Jan 2025 10:56:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/elf-%EA%B5%AC%EC%A1%B0/</guid>
      <description>&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250123105644.png&#34; alt=&#34; (Image resource not found)&#34; &gt;%20image%2020250123105644.png)&lt;/p&gt;</description>
    </item>
    <item>
      <title>임베디드 os 개발 프로젝트</title>
      <link>http://localhost:1313/temp/%EC%9E%84%EB%B2%A0%EB%94%94%EB%93%9C-os-%EA%B0%9C%EB%B0%9C-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8/</link>
      <pubDate>Thu, 23 Jan 2025 08:42:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/%EC%9E%84%EB%B2%A0%EB%94%94%EB%93%9C-os-%EA%B0%9C%EB%B0%9C-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://localhost:1313/02.inbox/abi/&#34; class=&#34;internal-link&#34;&gt;abi&lt;/a&gt; 참조&lt;/p&gt;&#xA;&lt;p&gt;realview-pb-a8 을 사용&lt;/p&gt;&#xA;&lt;p&gt;컴퓨터의 전원이 들어오면 가장 먼저 시작하는 명령이 0000.. 번지의 리셋 벡터&#xA;32(word)를 읽어서 실행&lt;/p&gt;&#xA;&lt;p&gt;어셈블&#xA;바이너리 덤프&#xA;hexdump&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;arm-none-eabi-as -march&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;armv7-a -mcpu&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;cortex-a8 -o Entry.o ./Entry.S&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;arm-none-eabi-objcopy -O binary Entry.o Entry.bin&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hexdump Entry.bin&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;.text&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;.code&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;.global&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;vector_start&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;.global&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;vector_end&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;vector_start:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9; &lt;span style=&#34;color:#a6e22e&#34;&gt;MOV&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;R0&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;R1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;vector_end:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &#x9; &lt;span style=&#34;color:#a6e22e&#34;&gt;.space&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1024&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;.end&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;.text&lt;/code&gt; : text 섹션임을 알림 섹션 종료 지시자인 &lt;code&gt;.end&lt;/code&gt; 까지&#xA;&lt;code&gt;.global&lt;/code&gt; : c 언어의 extern 과 일치&#xA;&lt;code&gt;.code&lt;/code&gt; : 명령어의 크기가 32 임을 알림&#xA;&lt;code&gt;vector_start&lt;/code&gt;, &lt;code&gt;vector_end&lt;/code&gt; : 레이블 설정&#xA;&lt;code&gt;MOV R0, R1&lt;/code&gt; : r1 레지스터의 내용을 r0 레지스터로&#xA;&lt;code&gt;.space 1024, 0&lt;/code&gt; : 현재 위치부터 1024 바이트를 0으로 채우라는 명령&lt;/p&gt;</description>
    </item>
    <item>
      <title>문자 찾기</title>
      <link>http://localhost:1313/temp/%EB%AC%B8%EC%9E%90-%EC%B0%BE%EA%B8%B0/</link>
      <pubDate>Tue, 31 Dec 2024 22:23:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/%EB%AC%B8%EC%9E%90-%EC%B0%BE%EA%B8%B0/</guid>
      <description>&lt;p&gt;일반적인 이중 반복&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; index &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; &lt;span style=&#34;color:#75715e&#34;&gt;// 인덱스 초기화&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; (index &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; n) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 특정 작업 수행&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    doSomething(index);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 조건에 맞는 동안 반복하는 작업 수행&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; (someCondition(index) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; index &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; n) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        doSomethingElse(index);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        index&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 조건이 충족되지 않았을 때도 index 증가&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (index &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; n) index&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;재귀 방식&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;processIndex&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; index, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; n) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (index &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; n) &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;; &lt;span style=&#34;color:#75715e&#34;&gt;// 종료 조건&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 특정 작업 수행&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    doSomething(index);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 조건에 따라 작업 수행 반복&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (someCondition(index)) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        doSomethingElse(index);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        processIndex(index &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, n); &lt;span style=&#34;color:#75715e&#34;&gt;// 다음 인덱스 재귀 호출&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// 조건이 충족되지 않았을 때 처리&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        doSomethingElse(index);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        processIndex(index &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, n); &lt;span style=&#34;color:#75715e&#34;&gt;// 다음 인덱스 재귀 호출&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>gdb 사용법</title>
      <link>http://localhost:1313/temp/gdb-%EC%82%AC%EC%9A%A9%EB%B2%95/</link>
      <pubDate>Mon, 30 Dec 2024 23:48:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/gdb-%EC%82%AC%EC%9A%A9%EB%B2%95/</guid>
      <description>&lt;h2 id=&#34;기본-명령어&#34;&gt;기본 명령어&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;strong&gt;명령어&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;설명&lt;/strong&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;list&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;현재 디버깅 중인 소스 코드의 일부를 출력합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;run&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;프로그램을 실행합니다. (명령 뒤에 인자를 추가하여 프로그램 실행 시 인자를 전달할 수 있습니다.)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;break&lt;/code&gt; (또는 &lt;code&gt;b&lt;/code&gt;)&lt;/td&gt;&#xA;          &lt;td&gt;브레이크포인트를 설정합니다. (예: &lt;code&gt;b main&lt;/code&gt; 또는 &lt;code&gt;b 파일명:줄번호&lt;/code&gt;)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;clear&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;특정 위치에 설정된 브레이크포인트를 삭제합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;delete&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;설정된 브레이크포인트를 삭제합니다. (예: &lt;code&gt;delete 1&lt;/code&gt;으로 특정 브레이크포인트 삭제)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;next&lt;/code&gt; (또는 &lt;code&gt;n&lt;/code&gt;)&lt;/td&gt;&#xA;          &lt;td&gt;한 줄씩 코드 실행을 진행합니다(함수 호출은 건너뜀).&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;step&lt;/code&gt; (또는 &lt;code&gt;s&lt;/code&gt;)&lt;/td&gt;&#xA;          &lt;td&gt;한 줄씩 코드 실행을 진행하며, 함수 호출 내부로 진입합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;print&lt;/code&gt; (또는 &lt;code&gt;p&lt;/code&gt;)&lt;/td&gt;&#xA;          &lt;td&gt;변수나 표현식의 값을 출력합니다. (예: &lt;code&gt;p 변수명&lt;/code&gt;)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;display&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;특정 변수의 값을 계속 표시합니다. (예: &lt;code&gt;display 변수명&lt;/code&gt;)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;bt&lt;/code&gt; (또는 &lt;code&gt;backtrace&lt;/code&gt;)&lt;/td&gt;&#xA;          &lt;td&gt;호출 스택(traceback)을 출력합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;kill&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;실행 중인 프로그램을 강제 종료합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;cout&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;GDB에서 직접 제공하지 않는 명령어로, 일반적으로 C++에서 표준 출력 스트림을 의미합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;help&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;GDB 명령어 도움말을 제공합니다. (예: &lt;code&gt;help break&lt;/code&gt;)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;quit&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;GDB를 종료합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;watch varname&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;특정 변수(&lt;code&gt;varname&lt;/code&gt;)의 값이 변경될 때 중단합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;info locals&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;현재 스코프의 지역 변수 값을 표시합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;info variables&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;모든 전역 변수와 정적 변수를 표시합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;info break&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;설정된 모든 브레이크포인트를 나열합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;info func&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;디버깅 대상의 모든 함수 이름을 나열합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;set&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;특정 변수나 환경 설정을 변경합니다. (예: &lt;code&gt;set var 변수명 = 값&lt;/code&gt;)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;finish&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;현재 함수의 실행을 끝내고 호출한 함수로 복귀합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;추가-명령어&#34;&gt;추가 명령어&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;strong&gt;명령어&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;설명&lt;/strong&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;continue&lt;/code&gt; (또는 &lt;code&gt;c&lt;/code&gt;)&lt;/td&gt;&#xA;          &lt;td&gt;브레이크포인트까지 계속 실행합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;stepi&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;기계어 수준에서 한 단계 실행합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;disassemble&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;기계어 수준에서 디스어셈블리된 코드를 출력합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;info threads&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;현재 실행 중인 모든 스레드의 정보를 표시합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;thread apply&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;특정 스레드에 대해 명령을 적용합니다. (예: &lt;code&gt;thread apply all bt&lt;/code&gt;는 모든 스레드의 백트레이스를 출력)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;set args&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;실행 시 전달할 프로그램의 인자를 설정합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;info registers&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;레지스터의 상태를 출력합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;x&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;메모리를 검사합니다. (예: &lt;code&gt;x/10x 변수&lt;/code&gt;는 변수부터 10개의 16진수를 출력)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;attach&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;실행 중인 프로세스에 연결하여 디버깅합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;detach&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;연결된 프로세스에서 디버깅을 종료하고 분리합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;추가로 궁금한 명령어나 세부적인 사용 예시가 필요하다면 알려주세요! 😊&lt;/p&gt;</description>
    </item>
    <item>
      <title>서브쿼리 종류</title>
      <link>http://localhost:1313/temp/%EC%84%9C%EB%B8%8C%EC%BF%BC%EB%A6%AC-%EC%A2%85%EB%A5%98/</link>
      <pubDate>Wed, 04 Dec 2024 15:06:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/%EC%84%9C%EB%B8%8C%EC%BF%BC%EB%A6%AC-%EC%A2%85%EB%A5%98/</guid>
      <description></description>
    </item>
    <item>
      <title>join 연산 크기 추청</title>
      <link>http://localhost:1313/temp/join-%EC%97%B0%EC%82%B0-%ED%81%AC%EA%B8%B0-%EC%B6%94%EC%B2%AD/</link>
      <pubDate>Wed, 04 Dec 2024 14:29:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/join-%EC%97%B0%EC%82%B0-%ED%81%AC%EA%B8%B0-%EC%B6%94%EC%B2%AD/</guid>
      <description>&lt;p&gt;이 문제는 관계형 데이터베이스에서 &lt;strong&gt;조인 연산의 크기 추정&lt;/strong&gt;에 대한 설명입니다. 주어진 내용을 기반으로 예제를 들어 설명하겠습니다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;문제-설명&#34;&gt;문제 설명:&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;$R \bowtie S$&lt;/strong&gt;: 릴레이션 $R$과 $S$를 조인합니다.&lt;/li&gt;&#xA;&lt;li&gt;**$A$**는 두 릴레이션 $R$과 $S$ 사이의 조인 속성입니다.&lt;/li&gt;&#xA;&lt;li&gt;$n_R$: 릴레이션 $R$의 튜플 수&lt;/li&gt;&#xA;&lt;li&gt;$n_S$: 릴레이션 $S$의 튜플 수&lt;/li&gt;&#xA;&lt;li&gt;$V(A, S)$: 속성 $A$의 $S$에서의 고유 값 수 (카디널리티)&lt;/li&gt;&#xA;&lt;li&gt;$V(A, R)$: 속성 $A$의 $R$에서의 고유 값 수&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;조인 결과의 크기는 아래와 같이 두 가지 방식으로 추정됩니다:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;$n_R \times \frac{n_S}{V(A, S)}$&lt;/li&gt;&#xA;&lt;li&gt;$n_S \times \frac{n_R}{V(A, R)}$&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;이 두 값 중 더 작은 값을 선택하는 것이 더 정확한 추정을 # join 연산 크기 추청&#xA;제공한다고 설명합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>쓰레드의 공유 자원과 분리자원</title>
      <link>http://localhost:1313/temp/%EC%93%B0%EB%A0%88%EB%93%9C%EC%9D%98-%EA%B3%B5%EC%9C%A0-%EC%9E%90%EC%9B%90%EA%B3%BC-%EB%B6%84%EB%A6%AC%EC%9E%90%EC%9B%90/</link>
      <pubDate>Tue, 03 Dec 2024 15:56:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/%EC%93%B0%EB%A0%88%EB%93%9C%EC%9D%98-%EA%B3%B5%EC%9C%A0-%EC%9E%90%EC%9B%90%EA%B3%BC-%EB%B6%84%EB%A6%AC%EC%9E%90%EC%9B%90/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;child_routine&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;param)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;)param;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Detach thread %d&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, id);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;pthread_detach&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;pthread_self&lt;/span&gt;());&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;pthread_t&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;thread&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;return_value[&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;; i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;pthread_create&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;thread&lt;/span&gt;[i], &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;child_routine, (&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;i);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;위의 코드는 오류가 발생한다 왜 발생할까&lt;/p&gt;</description>
    </item>
    <item>
      <title>프로젝트 로그인 기능 구현</title>
      <link>http://localhost:1313/temp/%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84/</link>
      <pubDate>Mon, 25 Nov 2024 10:56:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84/</guid>
      <description>&lt;p&gt;&lt;code&gt;/test/employee&lt;/code&gt; 뷰를 특정 역할을 가진 로그인된 사용자만 접근할 수 있도록 하려면 인증 및 권한 부여를 구현해야 합니다. 이를 위해 Flask-Login과 역할 기반 액세스 제어(RBAC)를 사용할 수 있습니다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;단계별-가이드&#34;&gt;단계별 가이드:&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;Flask-Login 설치 및 설정&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;사용자 모델 생성 및 역할 추가&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;로그인 및 로그아웃 기능 구현&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;접근 제한 데코레이터 작성&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;employee 뷰 보호&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;1-flask-login-설치-및-설정&#34;&gt;1. Flask-Login 설치 및 설정&lt;/h2&gt;&#xA;&lt;p&gt;먼저 Flask-Login을 설치합니다:&#xA;&lt;code&gt;pip install flask-login&lt;/code&gt;&#xA;&lt;code&gt;app.py&lt;/code&gt;에서 Flask-Login을 설정합니다:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; flask &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Flask&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; flask_login &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; LoginManager&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;create_app&lt;/span&gt;():&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    app &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Flask(__name__)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    app&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;secret_key &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;urandom(&lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Initialize the database&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    init_db(app)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Initialize Flask-Login&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    login_manager &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; LoginManager()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    login_manager&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;login_view &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;auth.login&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    login_manager&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;init_app(app)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Register blueprints&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; auth &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; auth &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; auth_blueprint&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    app&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;register_blueprint(auth_blueprint)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; views&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; test_views&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    app&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;register_blueprint(views&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;main)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    app&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;register_blueprint(test_views&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;test)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; app&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;2-사용자-모델-생성-및-역할-추가&#34;&gt;2. 사용자 모델 생성 및 역할 추가&lt;/h2&gt;&#xA;&lt;p&gt;사용자 정보를 저장하고 역할을 관리하기 위한 모델을 생성합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>zsh 성능 측정</title>
      <link>http://localhost:1313/temp/zsh-%EC%84%B1%EB%8A%A5-%EC%B8%A1%EC%A0%95/</link>
      <pubDate>Mon, 18 Nov 2024 05:09:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/zsh-%EC%84%B1%EB%8A%A5-%EC%B8%A1%EC%A0%95/</guid>
      <description>&lt;p&gt;zsh는 측정용 프로파일링 모듈을 가지고 있다. &lt;a href=&#34;https://zsh.sourceforge.io/Doc/Release/Zsh-Modules.html#The-zsh_002fzprof-Module&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;&lt;/a&gt;라는 모듈인데, &lt;code&gt;.zshrc&lt;/code&gt; 파일에 설정만 해두면 사용할 수 있다.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;code&gt;~/.zshrc&lt;/code&gt; 파일 가장 상단에 &lt;code&gt;zmodload zsh/zprof&lt;/code&gt; 를 적는다. (import라고 생각하자)&lt;/li&gt;&#xA;&lt;li&gt;그리고 가장 하단에 &lt;code&gt;zprof&lt;/code&gt; 라고 적어두자. (이는 세션이 시작될 때 zprof 명령어를 실행한다는 의미와 같다.)&lt;/li&gt;&#xA;&lt;li&gt;세션 로드가 완료되면 &lt;code&gt;time zsh -i -c echo&lt;/code&gt; 명령어를 사용해 측정 결과를 얻자.&lt;/li&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>클컴</title>
      <link>http://localhost:1313/temp/%ED%81%B4%EC%BB%B4/</link>
      <pubDate>Fri, 25 Oct 2024 18:37:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/%ED%81%B4%EC%BB%B4/</guid>
      <description>&lt;p&gt;하둡은 2개자로&lt;/p&gt;&#xA;&lt;h2 id=&#34;hadoop-hdfs&#34;&gt;hadoop HDFS&lt;/h2&gt;&#xA;&lt;p&gt;hadoop file system&lt;/p&gt;&#xA;&lt;p&gt;hdfs 좋은점&#xA;일반적 하드웨어를 사용해서 비싸지 않다&#xA;노드 죽어도 계속된다&lt;/p&gt;&#xA;&lt;p&gt;hdfs 나쁜점&#xA;접근의 낮은시간 =&amp;gt; 지연시간의 희생 높은 처리량&#xA;많은 작은 파일 =&amp;gt;&#xA;데이터 수정, 많은 작성자&lt;/p&gt;&#xA;&lt;p&gt;64MB large block size =&amp;gt; SEEK 상승&#xA;RAID 금지&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;namenode (Master) :&lt;/strong&gt;&#xA;namespace, 파일시스템에 정보는 local disk 에도 저장&#xA;블락 위치는 ram 에만 저장 켜질때 보고 받고 재구성&#xA;3개의 복제&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;datanodes (Slave) :&lt;/strong&gt;&#xA;원본 data&#xA;block’s metadata including checksums for the block data and&#xA;the generation stamp&lt;/p&gt;</description>
    </item>
    <item>
      <title>데이터 베이스 비이진 관계 스키마 생성시</title>
      <link>http://localhost:1313/temp/%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B2%A0%EC%9D%B4%EC%8A%A4-%EB%B9%84%EC%9D%B4%EC%A7%84-%EA%B4%80%EA%B3%84-%EC%8A%A4%ED%82%A4%EB%A7%88-%EC%83%9D%EC%84%B1%EC%8B%9C/</link>
      <pubDate>Sat, 12 Oct 2024 08:49:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B2%A0%EC%9D%B4%EC%8A%A4-%EB%B9%84%EC%9D%B4%EC%A7%84-%EA%B4%80%EA%B3%84-%EC%8A%A4%ED%82%A4%EB%A7%88-%EC%83%9D%EC%84%B1%EC%8B%9C/</guid>
      <description>&lt;h2 id=&#34;비이진-관계에서의-기본-키-선택&#34;&gt;비이진 관계에서의 기본 키 선택&lt;/h2&gt;&#xA;&lt;p&gt;비이진 관계에서 카디널리티 제약이 없는 경우, 앞서 설명한 대로 형성된 슈퍼키가 유일한 후보 키가 되며, 이를 기본 키로 선택합니다. 하지만 카디널리티 제약이 있을 경우 기본 키 선택이 더 복잡해집니다.&lt;/p&gt;&#xA;&lt;p&gt;우리가 6.4절에서 언급한 바와 같이, 비이진 관계 집합에서 최대 한 개의 화살표만 허용합니다. 이는 비이진 관계 집합에서 두 개 이상의 화살표가 있을 경우 해석이 두 가지로 나뉘어질 수 있기 때문입니다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;예시&#34;&gt;예시&lt;/h2&gt;&#xA;&lt;p&gt;관계 집합 ( R )이 엔티티 집합 ( E1, E2, E3, E4 ) 간의 관계를 나타내고, 화살표가 ( E3 )와 ( E4 )로만 향해 있다고 가정합니다. 이 경우 두 가지 가능한 해석이 있습니다:&lt;/p&gt;</description>
    </item>
    <item>
      <title>데이터베이스 전공책 chapter6, 7 정리</title>
      <link>http://localhost:1313/temp/%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4-%EC%A0%84%EA%B3%B5%EC%B1%85-chapter6-7-%EC%A0%95%EB%A6%AC/</link>
      <pubDate>Fri, 11 Oct 2024 04:31:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4-%EC%A0%84%EA%B3%B5%EC%B1%85-chapter6-7-%EC%A0%95%EB%A6%AC/</guid>
      <description>&lt;p&gt;ER diagram 설명 및 스키마 변경&#xA;스키마의 좋은 나쁜 설계 판별&lt;/p&gt;&#xA;&lt;p&gt;요구사항 명세서 -&amp;gt; 개념적 설계(ERD ER diagram) -&amp;gt; 기능적 요구사항 명세서 -&amp;gt; 논리적 설계(ddl) -&amp;gt; 물리적 설계(인덱싱 파일 구성)&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;redundancy : database 에서 attribute 는 1개만 있는 것이 좋다 왜래키로 지정하자 dept_name 은 departname 을 pk 로 가져가고 나머지는 fk 로 만들자&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;entity 개체 : 사람A : 속성의 집합&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;entity set 개체 집합 : instructor : 개체의 집합&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;attribute 속성 : 구성원들이 소유하는 설명 특성&lt;/p&gt;</description>
    </item>
    <item>
      <title>리눅스 파일 권한</title>
      <link>http://localhost:1313/temp/%EB%A6%AC%EB%88%85%EC%8A%A4-%ED%8C%8C%EC%9D%BC-%EA%B6%8C%ED%95%9C/</link>
      <pubDate>Mon, 07 Oct 2024 04:56:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/%EB%A6%AC%EB%88%85%EC%8A%A4-%ED%8C%8C%EC%9D%BC-%EA%B6%8C%ED%95%9C/</guid>
      <description>&lt;p&gt;인터넷에 적절하지 못한 파일 권한 설명 그중에 특히 sticky 비트에 대해 오류가 많아 작성하게 됨&lt;/p&gt;&#xA;&lt;p&gt;OS 의 경우 linux 를 가정하고 Mac OS 의 경우 도 조금 서술&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;FILE TYPE&lt;/th&gt;&#xA;          &lt;th&gt;expression&lt;/th&gt;&#xA;          &lt;th&gt;nomal&lt;/th&gt;&#xA;          &lt;th&gt;directory&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;read&lt;/td&gt;&#xA;          &lt;td&gt;r&lt;/td&gt;&#xA;          &lt;td&gt;읽기&lt;/td&gt;&#xA;          &lt;td&gt;내부 파일 이름 읽기&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;write&lt;/td&gt;&#xA;          &lt;td&gt;w&lt;/td&gt;&#xA;          &lt;td&gt;쓰기&lt;/td&gt;&#xA;          &lt;td&gt;내부에 파일 생성 삭제 변경(execute 의존)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;execute&lt;/td&gt;&#xA;          &lt;td&gt;x&lt;/td&gt;&#xA;          &lt;td&gt;실행&lt;/td&gt;&#xA;          &lt;td&gt;내부 파일 메타데이터 읽기(read 의존)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;setUID&lt;br&gt;&lt;/td&gt;&#xA;          &lt;td&gt;s&lt;/td&gt;&#xA;          &lt;td&gt;소유자 권한으로 실행&lt;/td&gt;&#xA;          &lt;td&gt;소유자 권한으로 실행&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;setGID&lt;br&gt;bit&lt;/td&gt;&#xA;          &lt;td&gt;s&lt;/td&gt;&#xA;          &lt;td&gt;소유 그룹 권한으로 실행&lt;/td&gt;&#xA;          &lt;td&gt;소유한 그룹의 권한으로 실행&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;sticky bit&lt;/td&gt;&#xA;          &lt;td&gt;t&lt;/td&gt;&#xA;          &lt;td&gt;linux : 무시&lt;/td&gt;&#xA;          &lt;td&gt;쓰기 권한이 존재해도 다른 사용자가 소유한 파일을 건드리지 못한다 (ex /tmp)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;s 와 t 가 대문자인 경우 소유한 유저 또는 소유한 그룹이 실행 권한이 없어 비트가 설정되어 있어도 실제로는 동작시키지 못한다&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;실행별-결과&#34;&gt;실행별 결과&lt;/h2&gt;&#xA;&lt;p&gt;rwx 디렉토리 동작과정&lt;/p&gt;</description>
    </item>
    <item>
      <title>vscode 설정</title>
      <link>http://localhost:1313/temp/vscode-%EC%84%A4%EC%A0%95/</link>
      <pubDate>Sun, 06 Oct 2024 03:00:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/vscode-%EC%84%A4%EC%A0%95/</guid>
      <description>&lt;p&gt;keybindings.json&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Toggle between terminal and editor focus&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;{ &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;key&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ctrl+&amp;#39;&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;command&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;workbench.action.terminal.focus&amp;#34;&lt;/span&gt;}&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{ &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;key&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ctrl+&amp;#39;&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;command&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;workbench.action.focusActiveEditorGroup&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;when&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;terminalFocus&amp;#34;&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;터미널 왔다리 갔다리&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;1-ctrl--space&#34;&gt;1. &lt;strong&gt;&lt;code&gt;Ctrl + Space&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;기능-트리거-제안trigger-suggestions&#34;&gt;&lt;strong&gt;기능: 트리거 제안(Trigger Suggestions)&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;설명&lt;/strong&gt;: 현재 커서 위치에서 사용 가능한 코드 제안(Suggestions)을 수동으로 호출합니다. 이는 자동 완성(IntelliSense) 기능을 강제로 활성화하는 역할을 합니다.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;예를 들어, 변수 이름이나 함수 이름을 입력 중일 때, VSCode가 자동으로 제안을 보여주지 않는 경우에 &lt;code&gt;Ctrl + Space&lt;/code&gt;를 눌러 명시적으로 제안 목록을 열 수 있습니다.&lt;/li&gt;&#xA;&lt;li&gt;제안 목록에는 변수, 함수, 클래스, 메서드 등이 포함됩니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;단축키&#34;&gt;&lt;strong&gt;단축키&lt;/strong&gt;:&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Windows/Linux: &lt;code&gt;Ctrl + Space&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;macOS: &lt;code&gt;Control + Space&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;2-tab&#34;&gt;2. &lt;strong&gt;&lt;code&gt;Tab&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;기능-자동-완성-선택-또는-들여쓰기indentation&#34;&gt;&lt;strong&gt;기능: 자동 완성 선택 또는 들여쓰기(Indentation)&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;설명&lt;/strong&gt;:&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;자동 완성 선택&lt;/strong&gt;: IntelliSense 제안 목록이 열려 있는 상태에서 &lt;code&gt;Tab&lt;/code&gt; 키를 누르면 현재 선택된 제안을 확정하고 코드를 자동으로 완성합니다.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;예: &lt;code&gt;pri&lt;/code&gt;를 입력한 후 제안 목록에서 &lt;code&gt;print()&lt;/code&gt;가 선택된 상태라면 &lt;code&gt;Tab&lt;/code&gt;을 누르면 &lt;code&gt;print()&lt;/code&gt;로 자동 완성됩니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;들여쓰기&lt;/strong&gt;: 코드 블록에서 &lt;code&gt;Tab&lt;/code&gt; 키를 누르면 줄을 오른쪽으로 들여씁니다(indent). 반대로 &lt;code&gt;Shift + Tab&lt;/code&gt;은 줄을 왼쪽으로 밀어냅니다(unindent).&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;단축키-1&#34;&gt;&lt;strong&gt;단축키&lt;/strong&gt;:&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Windows/Linux/macOS: &lt;code&gt;Tab&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;3-인수-목록parameter-hints&#34;&gt;3. &lt;strong&gt;인수 목록(Parameter Hints)&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;기능-함수-또는-메서드의-매개변수-정보-표시&#34;&gt;&lt;strong&gt;기능: 함수 또는 메서드의 매개변수 정보 표시&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;설명&lt;/strong&gt;: 함수 또는 메서드를 호출할 때, 인수 목록과 각 매개변수의 타입 및 설명을 툴팁 형태로 표시합니다.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;예를 들어, Python에서 &lt;code&gt;print(&lt;/code&gt;를 입력하면 &lt;code&gt;print(*objects, sep=&#39; &#39;, end=&#39;\n&#39;, file=sys.stdout, flush=False)&lt;/code&gt;와 같은 매개변수 정보가 표시됩니다.&lt;/li&gt;&#xA;&lt;li&gt;이를 통해 함수 호출 시 필요한 인수와 그 순서를 쉽게 파악할 수 있습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;단축키-2&#34;&gt;&lt;strong&gt;단축키&lt;/strong&gt;:&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;기본적으로 매개변수 힌트는 함수 호출 시 자동으로 표시됩니다.&lt;/li&gt;&#xA;&lt;li&gt;만약 자동으로 표시되지 않는다면, &lt;code&gt;Ctrl + Shift + Space&lt;/code&gt;를 눌러 수동으로 매개변수 힌트를 열 수 있습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;단축키-3&#34;&gt;&lt;strong&gt;단축키&lt;/strong&gt;:&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Windows/Linux: &lt;code&gt;Ctrl + Shift + Space&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;macOS: &lt;code&gt;Command + Shift + Space&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;4-함수-설명function-documentation&#34;&gt;4. &lt;strong&gt;함수 설명(Function Documentation)&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;기능-함수-또는-메서드에-대한-문서documentation-표시&#34;&gt;&lt;strong&gt;기능: 함수 또는 메서드에 대한 문서(Documentation) 표시&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;설명&lt;/strong&gt;: 특정 함수나 메서드에 대한 상세 설명을 확인할 수 있습니다. 이 설명에는 함수의 목적, 매개변수, 반환값, 예제 코드 등이 포함될 수 있습니다.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;예를 들어, Python에서 &lt;code&gt;len(&lt;/code&gt;를 입력하면 &lt;code&gt;len(object) -&amp;gt; int&lt;/code&gt;와 같은 설명이 표시되며, 추가적으로 &amp;ldquo;Return the number of items in a container.&amp;ldquo;와 같은 문서 내용을 볼 수 있습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;단축키-4&#34;&gt;&lt;strong&gt;단축키&lt;/strong&gt;:&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;기본적으로 함수 이름 위에 마우스를 올리거나, 함수 이름을 입력한 후 잠시 대기하면 자동으로 문서 힌트가 표시됩니다.&lt;/li&gt;&#xA;&lt;li&gt;수동으로 문서 힌트를 열고 싶다면 &lt;code&gt;Ctrl + K, Ctrl + I&lt;/code&gt;를 사용합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;단속키&#34;&gt;&lt;strong&gt;단속키&lt;/strong&gt;:&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Windows/Linux: &lt;code&gt;Ctrl + K, Ctrl + I&lt;/code&gt; (두 키를 순차적으로 누름)&lt;/li&gt;&#xA;&lt;li&gt;macOS: &lt;code&gt;Command + K, Command + I&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;요약&#34;&gt;요약&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;기능&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;          &lt;th&gt;단축키 (Windows/Linux)&lt;/th&gt;&#xA;          &lt;th&gt;단축키 (macOS)&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;트리거 제안&lt;/td&gt;&#xA;          &lt;td&gt;IntelliSense 제안 목록을 수동으로 호출&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;Ctrl + Space&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;Control + Space&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;자동 완성/들여쓰기&lt;/td&gt;&#xA;          &lt;td&gt;제안 목록에서 선택하거나 코드를 들여쓰기&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;Tab&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;Tab&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;인수 목록&lt;/td&gt;&#xA;          &lt;td&gt;함수 호출 시 매개변수 정보 표시&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;Ctrl + Shift + Space&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;Command + Shift + Space&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;함수 설명&lt;/td&gt;&#xA;          &lt;td&gt;함수 또는 메서드의 문서 및 설명 표시&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;Ctrl + K, Ctrl + I&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;Command + K, Command + I&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;위 기능들은 VSCode의 기본 설정을 기준으로 설명되었습니다. 필요에 따라 단축키를 사용자 정의할 수 있으며, &lt;code&gt;File &amp;gt; Preferences &amp;gt; Keyboard Shortcuts&lt;/code&gt; (또는 &lt;code&gt;Code &amp;gt; Preferences &amp;gt; Keyboard Shortcuts&lt;/code&gt; on macOS)에서 단축키를 변경할 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>c 에서 오류를 발생시키는 방법</title>
      <link>http://localhost:1313/temp/c-%EC%97%90%EC%84%9C-%EC%98%A4%EB%A5%98%EB%A5%BC-%EB%B0%9C%EC%83%9D%EC%8B%9C%ED%82%A4%EB%8A%94-%EB%B0%A9%EB%B2%95/</link>
      <pubDate>Fri, 27 Sep 2024 13:07:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/c-%EC%97%90%EC%84%9C-%EC%98%A4%EB%A5%98%EB%A5%BC-%EB%B0%9C%EC%83%9D%EC%8B%9C%ED%82%A4%EB%8A%94-%EB%B0%A9%EB%B2%95/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;반환 값 사용:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;함수에서 특정 값을 반환하여 오류를 나타냅니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;  &lt;span style=&#34;color:#75715e&#34;&gt;// 오류를 나타내는 음수 값&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; NULL;  &lt;span style=&#34;color:#75715e&#34;&gt;// 포인터 함수에서 오류 표시&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;exit() 함수:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;프로그램을 즉시 종료하고 운영 체제에 상태 코드를 반환합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;exit&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);  &lt;span style=&#34;color:#75715e&#34;&gt;// 비정상 종료를 나타내는 0이 아닌 값&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;abort() 함수:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;프로그램을 비정상적으로 종료하고 코어 덤프를 생성합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;abort&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;assert() 매크로:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;조건이 거짓일 때 프로그램을 중단하고 오류 메시지를 출력합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;assert.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;assert&lt;/span&gt;(condition);  &lt;span style=&#34;color:#75715e&#34;&gt;// condition이 거짓이면 오류 발생&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;perror() 함수:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Postgresql</title>
      <link>http://localhost:1313/temp/postgresql/</link>
      <pubDate>Mon, 16 Sep 2024 04:11:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/postgresql/</guid>
      <description>&lt;h2 id=&#34;postgresql-binary&#34;&gt;Postgresql binary&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;clusterdb&lt;/strong&gt;: 데이터베이스 클러스터의 모든 데이터베이스를 클러스터화합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;createdb&lt;/strong&gt;: 새로운 데이터베이스를 생성합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;createuser&lt;/strong&gt;: 새로운 사용자를 생성합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;dropdb&lt;/strong&gt;: 데이터베이스를 삭제합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;dropuser&lt;/strong&gt;: 사용자를 삭제합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;initdb&lt;/strong&gt;: 새로운 데이터베이스 클러스터를 초기화합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;oid2name&lt;/strong&gt;: OID(객체 식별자)와 이름을 매핑합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;pg_amcheck&lt;/strong&gt;: 인덱스 접근 방법을 검사합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;pg_archivecleanup&lt;/strong&gt;: 아카이브 로그 파일을 정리합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;pg_basebackup&lt;/strong&gt;: 데이터베이스 클러스터의 전체 백업을 생성합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;pgbench&lt;/strong&gt;: 벤치마킹 도구로, 성능 테스트를 수행합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;pg_checksums&lt;/strong&gt;: 데이터베이스 블록의 체크섬을 확인합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;pg_config&lt;/strong&gt;: PostgreSQL 설치 정보 및 구성을 출력합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;pg_controldata&lt;/strong&gt;: 데이터베이스 클러스터의 제어 정보를 출력합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;pg_ctl&lt;/strong&gt;: 데이터베이스 서버를 시작, 중지, 재시작합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;pg_dump&lt;/strong&gt;: 데이터베이스의 백업을 생성합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;pg_dumpall&lt;/strong&gt;: 모든 데이터베이스의 백업을 생성합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;pg_isready&lt;/strong&gt;: 데이터베이스 서버의 상태를 체크합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;pg_receivewal&lt;/strong&gt;: WAL(Write Ahead Log)을 수신합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;pg_recvlogical&lt;/strong&gt;: 논리적 복제를 위한 WAL을 수신합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;pg_resetwal&lt;/strong&gt;: WAL 파일의 상태를 재설정합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;pg_restore&lt;/strong&gt;: pg_dump로 생성된 백업을 복원합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;pg_rewind&lt;/strong&gt;: 마스터와 슬레이브 간의 데이터 동기화를 수행합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;pg_test_fsync&lt;/strong&gt;: fsync 성능을 테스트합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;pg_test_timing&lt;/strong&gt;: 시간 측정 테스트를 수행합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;pg_upgrade&lt;/strong&gt;: 데이터베이스를 새로운 버전으로 업그레이드합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;pg_verifybackup&lt;/strong&gt;: 백업의 유효성을 검사합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;pg_waldump&lt;/strong&gt;: WAL 파일의 내용을 출력합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;postgres&lt;/strong&gt;: PostgreSQL 데이터베이스 서버의 주요 실행 파일입니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;postmaster&lt;/strong&gt;: PostgreSQL 서버를 시작하는 데 사용되는 심볼릭 링크입니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;psql&lt;/strong&gt;: PostgreSQL의 명령줄 인터페이스입니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;reindexdb&lt;/strong&gt;: 데이터베이스의 인덱스를 재생성합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;vacuumdb&lt;/strong&gt;: 데이터베이스의 공간을 회수하고, 통계를 업데이트합니다.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;PostgreSQL에서 &lt;strong&gt;Predefined Roles&lt;/strong&gt;(미리 정의된 역할)은 특정 권한과 기능에 대한 접근을 제공하는 역할로, 데이터베이스 관리자가 사용자나 다른 역할에 부여할 수 있습니다. 이러한 역할은 일반적으로 자주 필요한 권한을 집합적으로 관리할 수 있도록 설계되었습니다. 아래에 각 미리 정의된 역할에 대한 설명을 제공합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>산업경영</title>
      <link>http://localhost:1313/temp/%EC%82%B0%EC%97%85%EA%B2%BD%EC%98%81/</link>
      <pubDate>Thu, 12 Sep 2024 03:59:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/%EC%82%B0%EC%97%85%EA%B2%BD%EC%98%81/</guid>
      <description>&lt;h2 id=&#34;1장&#34;&gt;1장&lt;/h2&gt;&#xA;&lt;p&gt;가내수공업&#xA;공장재 수공업&#xA;공장제 기계공업&#xA;산업&lt;/p&gt;&#xA;&lt;p&gt;분류&#xA;1차 2차 3차 산업&lt;/p&gt;&#xA;&lt;p&gt;clark의 법칙&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240912024542.png&#34; alt=&#34; (Image resource not found)&#34; &gt;%20image%2020240912024542.png)&#xA;초록선 1차&#xA;빨간선 2차&#xA;파란선 3차&#xA;주황선 4차&lt;/p&gt;&#xA;&lt;p&gt;표준 산업 분리 KSCIC&#xA;21개의 대분류&#xA;소분류&#xA;세분류&#xA;세세분류&#xA;4단계의 분리 1197개 2024기준&lt;/p&gt;&#xA;&lt;p&gt;의로용품업체를 지원사업이 실행되면 사업자 등록증에 등록된 산업에 해당되는 산업만 수혜를 얻는다&lt;/p&gt;&#xA;&lt;p&gt;분업&#xA;과학적 관리 (작업관리)&#xA;테일러 시간관점&#xA;길브레스 동작관점 서블릭 (마이크로노미터)(cycle graph)&#xA;간트 간트차트&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;이동조립 시스템에 의한 대량생산&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;이동조립법(포드 시스템)&lt;/li&gt;&#xA;&lt;li&gt;modern times 찰리 채플린(영화)&#xA;품질관리 연구&lt;/li&gt;&#xA;&lt;li&gt;품질 관리도&#xA;작업심리 연구&lt;/li&gt;&#xA;&lt;li&gt;호손 실험 : 물리적 조건 &amp;lt; 심리적 조건&lt;/li&gt;&#xA;&lt;li&gt;인간관계론 태동&lt;/li&gt;&#xA;&lt;li&gt;호손효과&#xA;재고 관리에 대한 연구&lt;/li&gt;&#xA;&lt;li&gt;harris의 경제적 주문량(EOQ)&lt;/li&gt;&#xA;&lt;li&gt;완충 재고 개념을 포함하면서 재고관리 주제로 확장&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;2장&#34;&gt;2장&lt;/h2&gt;&#xA;&lt;p&gt;시스템 systema 통합 전체를 의미하는 그리스어&#xA;시스템 요건&lt;/p&gt;</description>
    </item>
    <item>
      <title>메모리 기반 database</title>
      <link>http://localhost:1313/temp/%EB%A9%94%EB%AA%A8%EB%A6%AC-%EA%B8%B0%EB%B0%98-database/</link>
      <pubDate>Sun, 08 Sep 2024 21:32:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/%EB%A9%94%EB%AA%A8%EB%A6%AC-%EA%B8%B0%EB%B0%98-database/</guid>
      <description>&lt;p&gt;in-memory database 종류&#xA;radis&lt;/p&gt;&#xA;&lt;h2 id=&#34;1데이터-저장-방식&#34;&gt;1. &lt;strong&gt;데이터 저장 방식&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;인메모리 저장&lt;/strong&gt;: 인메모리 DBMS는 데이터를 RAM에 저장하여 빠른 접근을 가능하게 합니다. 데이터는 일반적으로 테이블 형식으로 구성되며, 각 테이블은 행(row)과 열(column)로 이루어져 있습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;2데이터-구조&#34;&gt;2. &lt;strong&gt;데이터 구조&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;행 기반 vs. 열 기반&lt;/strong&gt;: 일부 DBMS는 행 기반 저장 방식을 사용하고, 다른 DBMS는 열 기반 저장 방식을 사용합니다. 예를 들어, SAP HANA는 열 기반 저장 방식을 사용하여 분석 쿼리에 최적화되어 있습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;3트랜잭션-처리&#34;&gt;3. &lt;strong&gt;트랜잭션 처리&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;ACID 준수&lt;/strong&gt;: 많은 인메모리 DBMS는 ACID(원자성, 일관성, 고립성, 지속성) 트랜잭션을 지원합니다. 이들은 메모리에 저장된 데이터의 일관성을 보장하는 메커니즘을 갖추고 있습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;4쿼리-처리&#34;&gt;4. &lt;strong&gt;쿼리 처리&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;SQL 지원&lt;/strong&gt;: 대부분의 인메모리 DBMS는 SQL 쿼리를 지원합니다. 사용자는 SQL을 사용하여 데이터를 삽입, 선택, 업데이트 및 삭제할 수 있습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>레지스터</title>
      <link>http://localhost:1313/temp/%EB%A0%88%EC%A7%80%EC%8A%A4%ED%84%B0/</link>
      <pubDate>Sun, 11 Aug 2024 12:06:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/%EB%A0%88%EC%A7%80%EC%8A%A4%ED%84%B0/</guid>
      <description>&lt;h2 id=&#34;x86-64-amd64&#34;&gt;x86-64, AMD64&lt;/h2&gt;&#xA;&lt;p&gt;CPU&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;rax, rbx, rcx, rdx: 64비트 범용 레지스터입니다.&lt;/li&gt;&#xA;&lt;li&gt;rsi, rdi: 소스 인덱스와 목적지 인덱스 레지스터입니다.&lt;/li&gt;&#xA;&lt;li&gt;rbp, rsp: 베이스 포인터와 스택 포인터 레지스터입니다.&lt;/li&gt;&#xA;&lt;li&gt;r8에서 r15까지: 추가적인 64비트 범용 레지스터입니다.&lt;/li&gt;&#xA;&lt;li&gt;rip: 명령어 포인터 레지스터입니다.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;eflags: 프로세서의 현재 상태를 나타내는 플래그 레지스터입니다.&lt;/li&gt;&#xA;&lt;li&gt;eax, ebx, ecx, edx: 32비트 범용 레지스터입니다.&lt;/li&gt;&#xA;&lt;li&gt;esi, edi: 32비트 소스 인덱스와 목적지 인덱스 레지스터입니다.&lt;/li&gt;&#xA;&lt;li&gt;ebp, esp: 32비트 베이스 포인터와 스택 포인터 레지스터입니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Segs (세그먼트 레지스터):&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;cs: 코드 세그먼트&lt;/li&gt;&#xA;&lt;li&gt;ss: 스택 세그먼트&lt;/li&gt;&#xA;&lt;li&gt;ds: 데이터 세그먼트&lt;/li&gt;&#xA;&lt;li&gt;es: 추가 데이터 세그먼트&lt;/li&gt;&#xA;&lt;li&gt;fs: 추가 데이터 세그먼트&lt;/li&gt;&#xA;&lt;li&gt;gs: 추가 데이터 세그먼트&#xA;FPU (부동 소수점 유닛):&lt;/li&gt;&#xA;&lt;li&gt;st0에서 st7까지: FPU 스택 레지스터&lt;/li&gt;&#xA;&lt;li&gt;fctrl: FPU 제어 레지스터&lt;/li&gt;&#xA;&lt;li&gt;fstat: FPU 상태 레지스터&lt;/li&gt;&#xA;&lt;li&gt;ftag: FPU 태그 워드&lt;/li&gt;&#xA;&lt;li&gt;fiseg: FPU 명령 포인터 세그먼트&lt;/li&gt;&#xA;&lt;li&gt;fioff: FPU 명령 포인터 오프셋&lt;/li&gt;&#xA;&lt;li&gt;foseg: FPU 데이터 포인터 세그먼트&lt;/li&gt;&#xA;&lt;li&gt;fooff: FPU 데이터 포인터 오프셋&lt;/li&gt;&#xA;&lt;li&gt;fop: FPU 연산 코드&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;SSE 섹션:&lt;/p&gt;</description>
    </item>
    <item>
      <title>dbms 잡 정보</title>
      <link>http://localhost:1313/temp/dbms-%EC%9E%A1-%EC%A0%95%EB%B3%B4/</link>
      <pubDate>Sat, 20 Apr 2024 01:32:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/dbms-%EC%9E%A1-%EC%A0%95%EB%B3%B4/</guid>
      <description>&lt;h2 id=&#34;데이터베이스-별-기본-파일-저장-위치&#34;&gt;데이터베이스 별 기본 파일 저장 위치&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;/opt/oracle/oradata&lt;/code&gt; : oracle database&#xA;&lt;code&gt;/var/lib/mysql&lt;/code&gt; : mysql&#xA;&lt;code&gt;/var/lib/mysql&lt;/code&gt; : mariadb&#xA;&lt;code&gt;/var/lib/postgresql/&amp;lt;version&amp;gt;/main&lt;/code&gt; : postgresql&lt;/p&gt;</description>
    </item>
    <item>
      <title>sql date 관련 정리</title>
      <link>http://localhost:1313/temp/sql-date-%EA%B4%80%EB%A0%A8-%EC%A0%95%EB%A6%AC/</link>
      <pubDate>Fri, 12 Apr 2024 09:58:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/sql-date-%EA%B4%80%EB%A0%A8-%EC%A0%95%EB%A6%AC/</guid>
      <description>&lt;p&gt;sql 에서 제공하는 date 에 관련한 정보를 기술한다&lt;/p&gt;&#xA;&lt;h2 id=&#34;자료형&#34;&gt;자료형&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-date-타입&#34;&gt;1. DATE 타입&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;DATE 타입은 날짜는 포함하지만 시간은 포함하지 않을 때 사용하는 타입입니다.&lt;/li&gt;&#xA;&lt;li&gt;DATE 타입 YYYY-MM-DD 형식 입력가능하며, &amp;lsquo;1000-01-01&amp;rsquo; 부터 &amp;lsquo;9999-12-31&amp;rsquo; 까지만 입력가능합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2-datetime-타입&#34;&gt;2. DATETIME 타입&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;DATETIME 타입은 날짜와 시간을 모두 포함할 때 사용하는 타입입니다.&lt;/li&gt;&#xA;&lt;li&gt;YYYY-MM-DD HH:MM:SS의 형태로 사용되며 &amp;lsquo;1001-01-01 00:00:00&amp;rsquo;부터 &amp;lsquo;9999-12-31 23:59:59&amp;rsquo;까지 입력이 가능하다&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;3-time-타입&#34;&gt;3. TIME 타입&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;TIME은 HH:MM:SS의 형태를 지닌다.(HHH:MM:SS의 형태를 띄기도 한다)&lt;/li&gt;&#xA;&lt;li&gt;-838:59:59 부터 838:59:59 까지의 범위를 가진다. 이때 TIME type의 시간이 크다고 느낄수도 있다.&lt;/li&gt;&#xA;&lt;li&gt;TIME은 현재의 시간을 표현할때만 쓰는것이 아니라 이미 지나버린 시간이나, 특정 이벤트끼리의 간극을 표현하는데 사용되기 때문에 이처럼 쓰인다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;4-timestamp-타입&#34;&gt;4. TIMESTAMP 타입&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;TIMESTAMP 역시 날짜와 시간을 포함한다.&lt;/li&gt;&#xA;&lt;li&gt;TIMESTAMP는 1970-01-01 00:00:01 UTC 부터 2038-01-19 03:14:07UTC 까지가 그 범위이다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;관련-함수&#34;&gt;관련 함수&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;dayofweek(date)&lt;/strong&gt;&#xA;날짜를 한 주의 몇 번째 요일인지를 나타내는 숫자로 리턴한다.&#xA;(1 = 일요일, 2 = 월요일, &amp;hellip; 7 = 토요일)&#xA;mysql&amp;gt; select dayofweek(&amp;lsquo;1998-02-03&amp;rsquo;); -&amp;gt; 3&lt;/p&gt;</description>
    </item>
    <item>
      <title>sql 틀린문제</title>
      <link>http://localhost:1313/temp/sql-%ED%8B%80%EB%A6%B0%EB%AC%B8%EC%A0%9C/</link>
      <pubDate>Thu, 11 Apr 2024 13:04:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/sql-%ED%8B%80%EB%A6%B0%EB%AC%B8%EC%A0%9C/</guid>
      <description>&lt;h2 id=&#34;null-의-비교연산&#34;&gt;null 의 비교연산&lt;/h2&gt;&#xA;&lt;p&gt;null&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; referee_id&lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;or&lt;/span&gt; referee_id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;-- 틀린답&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;이&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;아닌&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; referee_id&lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;or&lt;/span&gt; referee_id &lt;span style=&#34;color:#66d9ef&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;-- 이것이 맞는 답&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;SQL에서 NULL 값은 특별하게 취급되며, NULL은 &amp;lsquo;값이 없음&amp;rsquo;을 의미합니다. 따라서, NULL 값은 다른 값들과 일반적인 비교 연산자(=, !=, &amp;lt;, &amp;gt;, 등)로 비교할 수 없습니다. NULL과의 비교는 IS NULL 또는 IS NOT NULL 연산자를 사용해야만 합니다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;not-in-문제&#34;&gt;not in 문제&lt;/h2&gt;&#xA;&lt;p&gt;visits table and transactions table 이 존재 방문했지만 거래를 하지 않은 고객을 식별하려면 방문한 모든 고객의 목록에서 거래를 한 고객의 기록을 제거해야 합니다. 이를 통해 이 문제를 일반적인 &amp;ldquo;NOT IN&amp;rdquo; 문제로 변환합니다. &amp;ldquo;NOT IN&amp;rdquo; 문제를 해결하는 방법은 크게 두 가지입니다:&lt;/p&gt;</description>
    </item>
    <item>
      <title>docker 없이 컨테이너</title>
      <link>http://localhost:1313/temp/docker-%EC%97%86%EC%9D%B4-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88/</link>
      <pubDate>Wed, 10 Apr 2024 03:21:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/docker-%EC%97%86%EC%9D%B4-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/sam0kim/container-internal&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;관련 리포지토리&lt;/a&gt;&#xA;&lt;a href=&#34;https://www.youtube.com/watch?v=mSD88FuST80&amp;amp;t=650s&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;유튜브 영상&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;아래의 패지지 의존&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get update &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get -y install gcc &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get -y install make &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get -y install pkg-config &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get -y install libseccomp-dev &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get -y install tree &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get -y install jq &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get -y install bridge-utils&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;전제&#34;&gt;전제&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;루트 파일 시스템&#xA;&lt;ul&gt;&#xA;&lt;li&gt;container =&amp;gt; / 는 overlay 로 마운트&lt;/li&gt;&#xA;&lt;li&gt;host =&amp;gt; / 는 일반적인 곳으로 마운트&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;프로세스&#xA;&lt;ul&gt;&#xA;&lt;li&gt;container =&amp;gt; 1번이 shell&lt;/li&gt;&#xA;&lt;li&gt;host =&amp;gt; 일반&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;네트워크&#xA;&lt;ul&gt;&#xA;&lt;li&gt;container =&amp;gt; eth0@~~&lt;/li&gt;&#xA;&lt;li&gt;host =&amp;gt; 일반&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;유저 및 호스트&#xA;&lt;ul&gt;&#xA;&lt;li&gt;container =&amp;gt; root (host 의 root 와 동일할까??), 이상한 문자열 호스트네임&lt;/li&gt;&#xA;&lt;li&gt;host =&amp;gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;chroot&#34;&gt;chroot&lt;/h2&gt;&#xA;&lt;p&gt;프로세스를 가두자 =&amp;gt; 사용자 프로세스를 fake 루트를 통해 막는다 (프로세스를 가둔다는 말이 무었일까 #ModificationRequired )&lt;/p&gt;</description>
    </item>
    <item>
      <title>docker 명령 모음</title>
      <link>http://localhost:1313/temp/docker-%EB%AA%85%EB%A0%B9-%EB%AA%A8%EC%9D%8C/</link>
      <pubDate>Mon, 08 Apr 2024 13:33:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/docker-%EB%AA%85%EB%A0%B9-%EB%AA%A8%EC%9D%8C/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&amp;lt;옵션&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &amp;lt;이미지 식별자&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&amp;lt;명령어&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&amp;lt;인자&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;-d : detach =&amp;gt; background&#xA;-it : interactive, tty&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker exec -it &amp;lt;컨테이너 식별자&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&amp;lt;명령어&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>x86-64 CPU 레지스터(Register)의 개념 및 종류</title>
      <link>http://localhost:1313/temp/x86-64-cpu-%EB%A0%88%EC%A7%80%EC%8A%A4%ED%84%B0register%EC%9D%98-%EA%B0%9C%EB%85%90-%EB%B0%8F-%EC%A2%85%EB%A5%98/</link>
      <pubDate>Wed, 20 Mar 2024 14:24:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/x86-64-cpu-%EB%A0%88%EC%A7%80%EC%8A%A4%ED%84%B0register%EC%9D%98-%EA%B0%9C%EB%85%90-%EB%B0%8F-%EC%A2%85%EB%A5%98/</guid>
      <description>&lt;p&gt;32bit, 64bit 운영체제에서 32bit, 64bit 는 레지스터 및 데이터 경로의 크기 를 의미한다.&lt;br&gt;&#xA;위 예시에서 AH 는 8bit 운영체제와 호환되는 레지스터라고 이해하면 된다. &lt;/p&gt;&#xA;&lt;p&gt; 운영체제의 발전에 따라, 수행해야할 기능이 많아지면서&lt;br&gt;&#xA;많은 정보를 다룰 수 있도록 새로운 레지스터가 추가되고, 크기도 점점 커졌다.&lt;/p&gt;&#xA;&lt;p&gt; *  E 는 Extended 의 약자. R은 왜 R인지 모르겠다..&lt;br&gt;&#xA;* CPU의 아키텍쳐에 따라 레지스터의 종류가 다를 수 있다.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;범용-레지스터&#34;&gt;&lt;strong&gt;범용 레지스터&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;====&#xA;범용 레지스터는 연산 결과의 임시 저장, 산술 및 논리 연산, 주소 색인 등 다양한 용도로 사용되는 다목적 레지스터이다.&lt;br&gt;&#xA;종류는 EAX, EBX, ECX, EDX, ESI, EDI, ESP, EBP, EIP 가 있다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>find 명확하게 이해하자</title>
      <link>http://localhost:1313/temp/find-%EB%AA%85%ED%99%95%ED%95%98%EA%B2%8C-%EC%9D%B4%ED%95%B4%ED%95%98%EC%9E%90/</link>
      <pubDate>Sat, 02 Mar 2024 14:44:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/find-%EB%AA%85%ED%99%95%ED%95%98%EA%B2%8C-%EC%9D%B4%ED%95%B4%ED%95%98%EC%9E%90/</guid>
      <description>&lt;p&gt;어떤 폴더를 제외하고 파일을 찾고자 -not -path 옵션을 사용했지만 접근 불가능한 파일(proc 내부의 파일들)에 접근하려고 해서 오류(Permission denied)를 뿜어내서 찾아보게 되었다&#xA;하지만 생각보다 조금 내용이 복잡한 것 같아 완벽하게 정리해 보고자 한다&lt;/p&gt;&#xA;&lt;p&gt;find 명령이 하는 일이 단순하게 2가지를 한다고 이해하면&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;찾는 것 ~= 탐색하는 것&lt;/li&gt;&#xA;&lt;li&gt;탐색의 나열중 조건에 맞는 것을 출력하는 것&#xA;2가지 이다&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;find 기본 문법&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;find &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;option&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;starting pointing&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;expression&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; ...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;option&lt;/li&gt;&#xA;&lt;li&gt;starting pointing : find 명령의 시작 위치&lt;/li&gt;&#xA;&lt;li&gt;expression: 조건 여러가지 종류가 존재&#xA;&lt;ul&gt;&#xA;&lt;li&gt;테스트(Tests) : 파일의 속성에 기반한 true false 값 반환&#xA;&lt;ul&gt;&#xA;&lt;li&gt;ex) -name &amp;lsquo;stdio.h&amp;rsquo; =&amp;gt; 이름이 stdio.h 인 경우 true&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;동작(Actions) : T/F 반환 이외의 std 출력과 같은 부가적이 동작이 있음 그리고 그 부가적인 동작의 성공 여부에 따라 T/F 를 반환&#xA;&lt;ul&gt;&#xA;&lt;li&gt;ex) -path &amp;lsquo;/include&amp;rsquo; -prune =&amp;gt; &amp;lsquo;/include&amp;rsquo; 폴더의 내부는 탐색하지 않는다 또한 전체의 결과는 true 이다&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;전역 옵션(Global options) 전역 옵션은 명령 줄의 어느 부분에서도 지정된 테스트 및 동작의 작동에 영향을 줍니다. 전역 옵션은 항상 true를 반환합니다. 예를 들어 -depth 옵션은 find가 파일 시스템을 깊이 우선 순서로 탐색하도록 만듭니다.&lt;/li&gt;&#xA;&lt;li&gt;위치 옵션(Positional options) 위치 옵션은 그들 뒤에 따라오는 테스트 또는 동작에만 영향을 미칩니다. 위치 옵션은 항상 true를 반환합니다. 예를 들어 -regextype 옵션은 위치 지정이며, 명령 줄에서 나중에 발생하는 정규 표현식에 대해 정규 표현식 방언을 지정합니다.&lt;/li&gt;&#xA;&lt;li&gt;연산자(Operators) 연산자는 표현 내의 다른 항목들을 결합합니다. 예를 들어 -o(논리 OR를 의미함)와 -a(논리 AND를 의미함)가 있습니다. 연산자가 누락된 경우 -a가 가정됩니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;code&gt;/usr&lt;/code&gt; 폴더에서 &lt;code&gt;/usr/bin&lt;/code&gt; 출력하지도 탐색하지도 않고 이름이 stdio.h 인 파일을 찾는다&#xA;&lt;code&gt;find /usr -not \( -path &#39;/usr/bin&#39; -prune \)  -name &#39;stdio.h&#39;&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>정규 표현식</title>
      <link>http://localhost:1313/temp/%EC%A0%95%EA%B7%9C-%ED%91%9C%ED%98%84%EC%8B%9D/</link>
      <pubDate>Fri, 01 Mar 2024 05:45:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/%EC%A0%95%EA%B7%9C-%ED%91%9C%ED%98%84%EC%8B%9D/</guid>
      <description>&lt;p&gt;문자열의 일정한 패턴을 표현하는 일종의 형식 언어&lt;/p&gt;</description>
    </item>
    <item>
      <title>sudo vs su</title>
      <link>http://localhost:1313/temp/sudo-vs-su/</link>
      <pubDate>Wed, 28 Feb 2024 09:13:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/sudo-vs-su/</guid>
      <description>&lt;p&gt;sudo, sudoedit — 명령을 다른 사용자로 실행합니다&lt;br&gt;&#xA;su - 대체 사용자 및 그룹 ID를 사용하여 명령을 실행합니다&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;3308&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3308&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3308&lt;/span&gt; pts/1    00:00:00     bash&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;3519&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3519&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3308&lt;/span&gt; pts/1    00:00:00       sudo&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;3520&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3520&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3520&lt;/span&gt; pts/3    00:00:00         sudo&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;3521&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3521&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3520&lt;/span&gt; pts/3    00:00:00           su&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;3522&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3522&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3520&lt;/span&gt; pts/3    00:00:00             bash&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;3388&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3388&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3388&lt;/span&gt; pts/2    00:00:00     bash&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;3539&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3539&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3388&lt;/span&gt; pts/2    00:00:00       sudo&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;3540&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3540&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3540&lt;/span&gt; pts/4    00:00:00         sudo&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;3541&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3541&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3540&lt;/span&gt; pts/4    00:00:00           bash&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>환경변수와 셸변수의 차이</title>
      <link>http://localhost:1313/temp/%ED%99%98%EA%B2%BD%EB%B3%80%EC%88%98%EC%99%80-%EC%85%B8%EB%B3%80%EC%88%98%EC%9D%98-%EC%B0%A8%EC%9D%B4/</link>
      <pubDate>Mon, 26 Feb 2024 02:58:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/%ED%99%98%EA%B2%BD%EB%B3%80%EC%88%98%EC%99%80-%EC%85%B8%EB%B3%80%EC%88%98%EC%9D%98-%EC%B0%A8%EC%9D%B4/</guid>
      <description>&lt;p&gt;이둘의 차이를 알려면 먼저 셀변수라는 것을 알아야 한다&#xA;터미널에 들어가면 보이는 창 이것이 바로 interactive 하게 작용하는 shell 이 실행중이다&lt;/p&gt;</description>
    </item>
    <item>
      <title>interactive shell vs non-interactive shell</title>
      <link>http://localhost:1313/temp/interactive-shell-vs-non-interactive-shell/</link>
      <pubDate>Wed, 21 Feb 2024 17:21:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/interactive-shell-vs-non-interactive-shell/</guid>
      <description>&lt;p&gt;ex) 터미널 vs #!/bin/bash 로 시작하는 파일&lt;/p&gt;&#xA;&lt;p&gt;파일의 셸은 $BASH_ENV 환경변수를 로드한다&lt;/p&gt;</description>
    </item>
    <item>
      <title>shell 의 로그인 과정</title>
      <link>http://localhost:1313/temp/shell-%EC%9D%98-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EA%B3%BC%EC%A0%95/</link>
      <pubDate>Wed, 21 Feb 2024 16:53:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/shell-%EC%9D%98-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EA%B3%BC%EC%A0%95/</guid>
      <description>&lt;p&gt;linux bash 기준으로 설명&lt;/p&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20231223130204.png&#34; alt=&#34;login shell vs non-login shell-20231223130204 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;login-shell-vs-non-login-shell&#34;&gt;Login Shell vs non Login Shell&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Login Shell : ssh, x 윈도우 접속시 userid passwd 입력해서 들어가는 방법&lt;/li&gt;&#xA;&lt;li&gt;Non Longin Shell : 이미 다른 로그인 된 shell 에서 shell 을 fork 형태로 불러내는 방법&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;interactive-shell-vs-non-interactive-shell&#34;&gt;Interactive Shell vs non Interactive Shell&lt;/h2&gt;&#xA;&lt;p&gt;타 프로그래밍 언어와의 큰 차이이다 interactive Shell 은 python 명령어 입력시 나타나는 것과 비슷한 것으로 사용자 입력을 순차적으로 입력 받을 수 있는 방식이다&#xA;이에 반해 non interactive shell 은 &lt;code&gt;python hello.py&lt;/code&gt; 같이 실행한다&lt;/p&gt;</description>
    </item>
    <item>
      <title>bash</title>
      <link>http://localhost:1313/temp/bash/</link>
      <pubDate>Wed, 21 Feb 2024 16:50:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/bash/</guid>
      <description>&lt;h2 id=&#34;-vs-source--&#34;&gt;./ vs source == .&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://ss64.com/bash/source.html&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;도트 및 소스 연산자 공식문서&lt;/a&gt;&#xA;source 와 . 은 완벽하게 동일&#xA;test.sh 파일&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ps -ejH &lt;span style=&#34;color:#75715e&#34;&gt;# 플로세스를 tree 형태로 보여주는 명령&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;실행별 차이&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;User@HostName:~/test$ . test.sh &lt;span style=&#34;color:#75715e&#34;&gt;# . or source &lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    PID    PGID     SID TTY          TIME CMD&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;3996&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3996&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3996&lt;/span&gt; ?        00:00:00     SessionLeader&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;3998&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3996&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3996&lt;/span&gt; ?        00:00:00       Relay&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;4003&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;4003&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;4003&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;4003&lt;/span&gt; pts/6    00:00:00         bash&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;39032&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;39032&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;4003&lt;/span&gt; pts/6    00:00:00           ps &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;User@HostName:~/test$ ./test.sh &lt;span style=&#34;color:#75715e&#34;&gt;# ./&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    PID    PGID     SID TTY          TIME CMD&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;3996&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3996&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3996&lt;/span&gt; ?        00:00:00     SessionLeader&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;3998&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3996&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3996&lt;/span&gt; ?        00:00:00       Relay&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;4003&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;4003&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;4003&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;4003&lt;/span&gt; pts/6    00:00:00         bash&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;39255&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;39255&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;4003&lt;/span&gt; pts/6    00:00:00           test.sh &lt;span style=&#34;color:#75715e&#34;&gt;# !!!!!!!!!&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;39256&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;39255&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;4003&lt;/span&gt; pts/6    00:00:00             ps&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;./test.sh의 경우 다른 명령(gcc)와 마찬가지로 명령을 셸에서 해석하여 시스템에게 전달하며 새로운 프로세스&lt;u&gt; fork() 형태로 하위 프로세스로 생성한다?&lt;/u&gt; #ModificationRequired&lt;/p&gt;</description>
    </item>
    <item>
      <title>java 쓰레드(thread)</title>
      <link>http://localhost:1313/temp/java-%EC%93%B0%EB%A0%88%EB%93%9Cthread/</link>
      <pubDate>Sun, 18 Feb 2024 19:19:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/java-%EC%93%B0%EB%A0%88%EB%93%9Cthread/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://localhost:1313/memory&#34; class=&#34;internal-file-link&#34;&gt;java 메모리(memory)&lt;/a&gt;).md) 참고&#xA;![Pasted image 2024&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240218210440.png&#34; alt=&#34; (Image resource not found)&#34; &gt;210440.png)&lt;/p&gt;&#xA;&lt;p&gt;java는 thread의&lt;/p&gt;&#xA;&lt;h2 id=&#34;쓰레드-구현-방법&#34;&gt;쓰레드 구현 방법&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Thread 상속&lt;/li&gt;&#xA;&lt;li&gt;Runnable 인터페이스 구현&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Thread thread &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Thread(){ &lt;span style=&#34;color:#75715e&#34;&gt;// Thread 상속 및 익명 클래스로 사용&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Override&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;run&lt;/span&gt;() { 여기에 사용&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;thread.&lt;span style=&#34;color:#a6e22e&#34;&gt;start&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Thread thread &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Thread(&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Runnable(){ &lt;span style=&#34;color:#75715e&#34;&gt;// Runnable 구현 및 생성자의 인자&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Override&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;run&lt;/span&gt;() { 여기에 사용&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;});&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;thread.&lt;span style=&#34;color:#a6e22e&#34;&gt;start&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Thread 를 상속한 객체는 그 자체로 하나의 쓰레드 객체를 의미하지만&#xA;Runnable 인터페이스를 구현한 객체는 쓰레드로 들어가 일거리라는 의미이다 그러므로 Thread 객체를 new Thread 할 때 생성자에 넣어주어야 한다&lt;/p&gt;</description>
    </item>
    <item>
      <title>프로그래밍 특성 분류</title>
      <link>http://localhost:1313/temp/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-%ED%8A%B9%EC%84%B1-%EB%B6%84%EB%A5%98/</link>
      <pubDate>Sun, 18 Feb 2024 17:07:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-%ED%8A%B9%EC%84%B1-%EB%B6%84%EB%A5%98/</guid>
      <description>&lt;h2 id=&#34;정적-타이핑-언어-동적-타입핑-언어&#34;&gt;정적 타이핑 언어 동적 타입핑 언어&lt;/h2&gt;&#xA;&lt;p&gt;코드상의 타입의 명시 유무&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;정적 타이핑 언어&#xA;&lt;ul&gt;&#xA;&lt;li&gt;c, c++, java, typescript&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;동적 타입핑 언어&#xA;&lt;ul&gt;&#xA;&lt;li&gt;python, javascript&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;runtime-타입-정보-유지&#34;&gt;runtime 타입 정보 유지&lt;/h2&gt;&#xA;&lt;p&gt;실행시간에 타입정보를 유지하는가&#xA;실행 시간에 타입 정보를 유지하는 언어의 특성은 &amp;ldquo;런타임 타입 정보&amp;rdquo; (Runtime Type Information, 줄여서 RTTI) 또는 &amp;ldquo;타입 인트로스펙션&amp;rdquo; (Type Introspection)이라고 부릅니다.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;h2 id=&#34;유지&#34;&gt;유지&lt;/h2&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://dataonair.or.kr/db-tech-reference/d-lounge/technical-data/?mod=document&amp;amp;uid=235810&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;https://dataonair.or.kr/db-tech-reference/d-lounge/technical-data/?mod=document&amp;uid=235810&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;타입정보를 유지하므로 인한 기술 reflection&lt;/p&gt;</description>
    </item>
    <item>
      <title>servlet</title>
      <link>http://localhost:1313/temp/servlet/</link>
      <pubDate>Wed, 14 Feb 2024 04:16:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/servlet/</guid>
      <description>&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240214041835.png&#34; alt=&#34; (Image resource not found)&#34; &gt;%20image%2020240214041835.png)&#xA;일반적으로 java 진영에서 많이 사용됨&#xA;소켓 연결 http 파싱후 읽기 등 일반적으로 동일한 방식의 http 방식의 처리를 객체화 하여 쉽게 처리하게 해줌&lt;/p&gt;&#xA;&lt;p&gt;사용자 입장에서 비지니스 로직 파트만 실행될 수 있게 한다&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;HttpServletRequest 요청된 http 정보를 객체화 오버라딩해서 사용&lt;/li&gt;&#xA;&lt;li&gt;HttpServletResponse 응답용 http 정보를 객체화됨&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>stateful 과 stateless 프로토콜</title>
      <link>http://localhost:1313/temp/stateful-%EA%B3%BC-stateless-%ED%94%84%EB%A1%9C%ED%86%A0%EC%BD%9C/</link>
      <pubDate>Tue, 13 Feb 2024 02:02:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/stateful-%EA%B3%BC-stateless-%ED%94%84%EB%A1%9C%ED%86%A0%EC%BD%9C/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;stateful : TCP, FTP&lt;/li&gt;&#xA;&lt;li&gt;stateless : udp http &amp;hellip;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;==stateful 구조는 server와 client 세션의 state(상태)에 기반하여 client 에 response 를 보낸다==&#xA;즉 server 측 client 모두 state 를 저장한다 (참조 &lt;a href=&#34;https://d2.naver.com/helloworld/47667&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;네트워크 스텍&lt;/a&gt;)&lt;/p&gt;&#xA;&lt;p&gt;stateless : 보내고 아몰랑??&lt;/p&gt;&#xA;&lt;h2 id=&#34;궁금증&#34;&gt;궁금증&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;http(stateless) 응용계층의 프로토콜은 하위계층(4계층) TCP(stateful) 를 사용한다??&lt;/li&gt;&#xA;&lt;li&gt;statless http 프로토콜은 연결된 상태를 어떻게 판단 구현하는가??&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;2가지에 대해 궁금증이 생겨서  글을 작성하게됨&lt;/p&gt;&#xA;&lt;h2 id=&#34;tcp-프로토콜은-stateful-을-어떻게-구현하는가&#34;&gt;TCP 프로토콜은 stateful 을 어떻게 구현하는가&lt;/h2&gt;&#xA;&lt;p&gt;stateful 을 구현하고자 하는 &lt;a href=&#34;http://localhost:1313/02.inbox/%eb%94%b0%eb%9d%bcIT/%eb%84%a4%ed%8a%b8%ec%9b%8c%ed%81%ac%204%ea%b3%84%ec%b8%b5.md#TCP&#34; class=&#34;internal-file-link&#34;&gt;&lt;/a&gt; 는 syn.. ack&amp;hellip; 두가지 정보의 교환으로 서로의 연결이 되었다는 것을 논리적으로 확인하게 된다 이때 상태 정보가 운영체제에 스텍으로 메모리에 저장된다 &lt;a href=&#34;https://elixir.bootlin.com/linux/latest/source/net/ipv4/tcp_ipv4.c#L2161&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>나의 웹서버 패킷 분석 이야기</title>
      <link>http://localhost:1313/temp/%EB%82%98%EC%9D%98-%EC%9B%B9%EC%84%9C%EB%B2%84-%ED%8C%A8%ED%82%B7-%EB%B6%84%EC%84%9D-%EC%9D%B4%EC%95%BC%EA%B8%B0/</link>
      <pubDate>Wed, 07 Feb 2024 20:34:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/%EB%82%98%EC%9D%98-%EC%9B%B9%EC%84%9C%EB%B2%84-%ED%8C%A8%ED%82%B7-%EB%B6%84%EC%84%9D-%EC%9D%B4%EC%95%BC%EA%B8%B0/</guid>
      <description>&lt;p&gt;내가 만든 웹서버 shinnk.iptime.org html과 css 로만 만들어진 단순한 index.html 파일을 요청하는 상황이다&#xA;chrome 프로세스가 port 50837를 사용한다&#xA;웹서버는 80 포트로 listen 중이다 http&#xA;wire shark 로 확인하였다&#xA;(https 의 경우 ssl 암호화 과정때문에 프로토콜이 일부 보이지 않는다 그래서 http 로 진행)&lt;/p&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240207203522.png&#34; alt=&#34;Pasted image 20240207203522 (Image resource not found)&#34; &gt;ng)&lt;/p&gt;&#xA;&lt;p&gt;총 7개의 통신 흔적이 보인다&#xA;http 통신은 tcp 를 사용한다 그러므로 3way handshake 과정이 선행된다&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;no 24&lt;/li&gt;&#xA;&lt;li&gt;no 26&lt;/li&gt;&#xA;&lt;li&gt;no 27&lt;/li&gt;&#xA;&lt;li&gt;no 30&lt;/li&gt;&#xA;&lt;li&gt;no 31&lt;/li&gt;&#xA;&lt;li&gt;no 32&lt;/li&gt;&#xA;&lt;li&gt;no 33&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;24 26 27  가 3 way handshake 과정이다&lt;/p&gt;</description>
    </item>
    <item>
      <title>composite pattern</title>
      <link>http://localhost:1313/temp/composite-pattern/</link>
      <pubDate>Tue, 06 Feb 2024 04:27:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/composite-pattern/</guid>
      <description>&lt;p&gt;복합 객체와 단일 객체를 동일하게 취급하고 싶다&#xA;과일과 과일박스를 동일한 과일박스 안에 넣고 싶다&#xA;트리 형태로 퍼져나간다&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;animal&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;__init__&lt;/span&gt;(self, name):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; name&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;speak&lt;/span&gt;(self):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;pass&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dog&lt;/span&gt;(animal):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;speak&lt;/span&gt;(self):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        print(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;name)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;cat&lt;/span&gt;(animal):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;speak&lt;/span&gt;(self):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        print(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;name)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;animal_group&lt;/span&gt;(animal):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;__init__&lt;/span&gt;(self):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;animals &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt;(self, animal):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;animals&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(animal)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;speak&lt;/span&gt;(self):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;group speak&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; animal &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;animals:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            animal&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;speak()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;group1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; animal_group()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;group1&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add(dog(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dog1&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;group1&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add(dog(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dog2&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;group1&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add(cat(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cat1&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;group2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; animal_group()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;group2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add(cat(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cat2&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;group2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add(group1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;group2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;speak()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;====&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;group speak&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;group speak&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dog1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dog2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>spring bean scope</title>
      <link>http://localhost:1313/temp/spring-bean-scope/</link>
      <pubDate>Fri, 02 Feb 2024 09:26:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/spring-bean-scope/</guid>
      <description>&lt;p&gt;스프링은 다음과 같은 다양한 스코프를 지원한다.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;싱글톤: 기본 스코프, 스프링 컨테이너의 시작과 종료까지 유지되는 가장 넓은 범위의 스코프이다.&lt;/li&gt;&#xA;&lt;li&gt;프로토타입: 스프링 컨테이너는 프로토타입 빈의 생성과 의존관계 주입까지만 관여하고 더는 관리하지 않는 매우 짧은 범위의 스코프이다.&lt;/li&gt;&#xA;&lt;li&gt;웹 관련 스코프&#xA;&lt;ul&gt;&#xA;&lt;li&gt;request: 웹 요청이 들어오고 나갈때 까지 유지되는 스코프이다.&lt;/li&gt;&#xA;&lt;li&gt;session: 웹 세션이 생성되고 종료될 때 까지 유지되는 스코프이다.&lt;/li&gt;&#xA;&lt;li&gt;application: 웹의 서블릿 컨텍스트와 같은 범위로 유지되는 스코프이다&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;프로토타입&#34;&gt;프로토타입&lt;/h2&gt;&#xA;&lt;p&gt;초기화 메서드 실행되지만 종료 메서드 호출 안됨 사용자가 직접 해야함&lt;/p&gt;</description>
    </item>
    <item>
      <title>spring life cycle</title>
      <link>http://localhost:1313/temp/spring-life-cycle/</link>
      <pubDate>Thu, 01 Feb 2024 14:18:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/spring-life-cycle/</guid>
      <description>&lt;p&gt;&lt;strong&gt;스프링 빈의 이벤트 라이프사이클&lt;/strong&gt;&#xA;스프링 컨테이너 생성&#xA;-&amp;gt; 스프링 빈 생성&#xA;-&amp;gt; 의존관계 주입&#xA;-&amp;gt; 초기화 콜백&#xA;-&amp;gt; 사용&#xA;-&amp;gt; 소멸전 콜백&#xA;-&amp;gt; 스프링 종료&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;스프링빈 생성시 생성자 의존관계일떄는 같이&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240201211107.png&#34; alt=&#34; (Image resource not found)&#34; &gt;&#xA;설정정보(xml, java etc)를 바탕으로 빈을 관리하는 컨테이너를 생성&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;스프링-빈-생성--의존관계-주입&#34;&gt;스프링 빈 생성 &amp;amp; 의존관계 주입&lt;/h2&gt;&#xA;&lt;h3 id=&#34;수동&#34;&gt;수동&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Configuration&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// 중복되는 객체생성을 막아준다&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;AppConfig&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;@Bean&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; MemberService &lt;span style=&#34;color:#a6e22e&#34;&gt;memberService&lt;/span&gt;(){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; MemberServiceImpl(memberRepository());}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;@Bean&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; OrderService &lt;span style=&#34;color:#a6e22e&#34;&gt;orderService&lt;/span&gt;(){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; OrderServiceImpl(memberRepository(), discountPolicy()); &lt;span style=&#34;color:#75715e&#34;&gt;//필드 주입을 한다면 필요 없음}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;@Bean&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; DiscountPolicy &lt;span style=&#34;color:#a6e22e&#34;&gt;discountPolicy&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; RateDiscountPolicy();}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;@Bean&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; MemberRepository &lt;span style=&#34;color:#a6e22e&#34;&gt;memberRepository&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; MemoryMemberRepository();}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;@Configration 바이트 조작 기술을 통해 중복되는 객체(memberRepository) 생성을 1개만 생성해 공유해 준다&#xA;@Bean 메서드 수준의 어노테이션을 통해 return 되는 값을 객체로 만들어준다&lt;/p&gt;</description>
    </item>
    <item>
      <title>spring @Autowired 의존관계 주입시 중복 문제</title>
      <link>http://localhost:1313/temp/spring-@autowired-%EC%9D%98%EC%A1%B4%EA%B4%80%EA%B3%84-%EC%A3%BC%EC%9E%85%EC%8B%9C-%EC%A4%91%EB%B3%B5-%EB%AC%B8%EC%A0%9C/</link>
      <pubDate>Thu, 01 Feb 2024 08:31:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/spring-@autowired-%EC%9D%98%EC%A1%B4%EA%B4%80%EA%B3%84-%EC%A3%BC%EC%9E%85%EC%8B%9C-%EC%A4%91%EB%B3%B5-%EB%AC%B8%EC%A0%9C/</guid>
      <description>&lt;p&gt;Autowired 어노테이션을 통해 어떠한 객체를 생성할 spring에서 의존 관계를 자동으로 주입해 준다&#xA;이때 조회되는 빈이 2개 이상이라면 즉 동일한 부모타입의 객체가 2개가 중복으로 등록되었다면 다음의 3가지 방법으로 해결한다&#xA;조회 대상 빈이 2개 이상일 때 해결 방법&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;@Autowired 필드 명 매칭&lt;/li&gt;&#xA;&lt;li&gt;@Qualifier -&amp;gt; @Qualifier끼리 매칭 빈 이름 매칭&lt;/li&gt;&#xA;&lt;li&gt;@Primary 사용&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Makefile</title>
      <link>http://localhost:1313/temp/makefile/</link>
      <pubDate>Mon, 22 Jan 2024 03:36:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/makefile/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;target : dependency&#xA;&amp;lt;탭&amp;gt; command&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;tarrget 은 일반적인 command 로 생성된 파일을 의미할 수도 있고 목표하는 의미가 될 수도 있다&#xA;예를 들어 target 에 clean 이 들어가면 빌드 생성파일을 삭제한다&lt;/p&gt;&#xA;&lt;h2 id=&#34;변수&#34;&gt;변수&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;매크로의 사용에서 ${..}, $(..), $..를 모두 사용할 수 있습니다. 그러나 대부분의 책에서는 $(..) 을 사용하라고 권하는군요&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;OBJS = main.o read.o write.o&#xA;&#xA;test : $(OBJS)&#xA;&#x9;gcc -o test $(OBJS)&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;미리-정해저-있는-predefind-변수&#34;&gt;미리 정해저 있는 predefind 변수&lt;/h3&gt;&#xA;&lt;p&gt;make -p&lt;/p&gt;&#xA;&lt;h2 id=&#34;자동변수&#34;&gt;자동변수&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;$@&lt;/code&gt; : 현재 타겟 이름&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;$^&lt;/code&gt; : 현재 타겟이 의존하는 대상들의 전체 목록&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;$^&lt;/code&gt; : 의존 대상의 처음 대상&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>java cli compile</title>
      <link>http://localhost:1313/temp/java-cli-compile/</link>
      <pubDate>Wed, 10 Jan 2024 00:09:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/java-cli-compile/</guid>
      <description></description>
    </item>
    <item>
      <title>정렬</title>
      <link>http://localhost:1313/temp/%EC%A0%95%EB%A0%AC/</link>
      <pubDate>Mon, 08 Jan 2024 04:24:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/%EC%A0%95%EB%A0%AC/</guid>
      <description>&lt;h2 id=&#34;처리되지-않은-데이터-중에서-가장-작은-데이터를-선택해-맨-앞의-처리되지-않은-데이터과-교체한다&#34;&gt;==&lt;strong&gt;처리되지 않은 데이터 중에서 가장 작은 데이터를 선택해 맨 앞의 처리되지 않은 데이터과 교체한다&lt;/strong&gt;==&lt;/h2&gt;&#xA;&lt;p&gt;==&lt;strong&gt;처리되지 않은 데이터를 하나씩 골라 처리된 데이트의 적절한 위치에 삽입한다&lt;/strong&gt;==&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;새로운 배열을 만들 것인가&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;==&lt;strong&gt;기준 데이터를 설정하고 기준보다 큰 데이터와 작은 데이트의 위치를 변경&lt;/strong&gt;==&lt;/p&gt;</description>
    </item>
    <item>
      <title>python 입력함수</title>
      <link>http://localhost:1313/temp/python-%EC%9E%85%EB%A0%A5%ED%95%A8%EC%88%98/</link>
      <pubDate>Mon, 25 Dec 2023 04:06:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/python-%EC%9E%85%EB%A0%A5%ED%95%A8%EC%88%98/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(function) &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;input&lt;/span&gt;(  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;__prompt: object &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;,  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; str&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>python 클래스 및 인스턴스 변수</title>
      <link>http://localhost:1313/temp/python-%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%B0%8F-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4-%EB%B3%80%EC%88%98/</link>
      <pubDate>Sun, 24 Dec 2023 14:28:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/python-%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%B0%8F-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4-%EB%B3%80%EC%88%98/</guid>
      <description></description>
    </item>
    <item>
      <title>python 모듈(module)</title>
      <link>http://localhost:1313/temp/python-%EB%AA%A8%EB%93%88module/</link>
      <pubDate>Sun, 24 Dec 2023 09:18:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/python-%EB%AA%A8%EB%93%88module/</guid>
      <description></description>
    </item>
    <item>
      <title>python 클래스(class)</title>
      <link>http://localhost:1313/temp/python-%ED%81%B4%EB%9E%98%EC%8A%A4class/</link>
      <pubDate>Sun, 24 Dec 2023 09:12:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/python-%ED%81%B4%EB%9E%98%EC%8A%A4class/</guid>
      <description></description>
    </item>
    <item>
      <title>익명 클래스(Anonymous Class)</title>
      <link>http://localhost:1313/temp/%EC%9D%B5%EB%AA%85-%ED%81%B4%EB%9E%98%EC%8A%A4anonymous-class/</link>
      <pubDate>Wed, 20 Dec 2023 07:12:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/%EC%9D%B5%EB%AA%85-%ED%81%B4%EB%9E%98%EC%8A%A4anonymous-class/</guid>
      <description>&lt;p&gt;내부 클래스의 일종으로 이름이 없는 클래스&lt;/p&gt;&#xA;&lt;h2 id=&#34;java&#34;&gt;java&lt;/h2&gt;&#xA;&lt;p&gt;인라인으로 한방에 사용&#xA;새로 정의한 메소드 사용 불가&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 부모 클래스&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Animal&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; String &lt;span style=&#34;color:#a6e22e&#34;&gt;bark&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;동물이 웁니다&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Main&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(String&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; args) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Animal dog &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Animal() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// @Override 메소드&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; String &lt;span style=&#34;color:#a6e22e&#34;&gt;bark&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;개가 짖습니다&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// 새로 정의한 메소드&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; String &lt;span style=&#34;color:#a6e22e&#34;&gt;run&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;달리기 ㄱㄱ싱&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        };&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        dog.&lt;span style=&#34;color:#a6e22e&#34;&gt;bark&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        dog.&lt;span style=&#34;color:#a6e22e&#34;&gt;run&lt;/span&gt;(); &lt;span style=&#34;color:#75715e&#34;&gt;// ! Error - 외부에서 호출 불가능&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;1-클래스-필드로-이용&#34;&gt;&lt;strong&gt;1. 클래스 필드로 이용&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;특정 클래스 내부에서 여러 메소드에서 이용될때 고려해볼 만 하다&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Animal&lt;/span&gt; { ... }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Creature&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 필드에 익명자식 객체를 생성 하여 이용&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Animal dog &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Animal() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; String &lt;span style=&#34;color:#a6e22e&#34;&gt;bark&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;멍멍&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    };&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;method&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        dog.&lt;span style=&#34;color:#a6e22e&#34;&gt;bark&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;method2&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        dog.&lt;span style=&#34;color:#a6e22e&#34;&gt;bark&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;2-지역-변수로서-이용&#34;&gt;&lt;strong&gt;2. 지역 변수로서 이용&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;메소드에서 일회용으로 사용하고 버려질 클래스라면 적당하다&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Animal&lt;/span&gt; { ... }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Creature&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;// ...&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;method&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &#x9;&lt;span style=&#34;color:#75715e&#34;&gt;// 지역 변수같이 클래스를 선언하여 일회용으로 사용&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Animal dog &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Animal() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; String &lt;span style=&#34;color:#a6e22e&#34;&gt;bark&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;멍멍&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        };&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        dog.&lt;span style=&#34;color:#a6e22e&#34;&gt;bark&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;3-메소드-아규먼트로-이용&#34;&gt;&lt;strong&gt;3. 메소드 아규먼트로 이용&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;만일 메소드 매개변수로서 클래스 자료형이 이용된다고 할때 일회성으로만 사용한다면 아규먼트로 익명 객체를 넘겨주면 된다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Animal&lt;/span&gt; { ... }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Creature&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;// ...&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;method&lt;/span&gt;(Animal dog) { &lt;span style=&#34;color:#75715e&#34;&gt;// 익명 객체 매개변수로 받아 사용&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        dog.&lt;span style=&#34;color:#a6e22e&#34;&gt;bark&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Main&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(String&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; args) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Creature monster &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Creature();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// 메소드 아규먼트에 익명 클래스 자체를 입력값으로 할당&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        monster.&lt;span style=&#34;color:#a6e22e&#34;&gt;method&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Animal() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; String &lt;span style=&#34;color:#a6e22e&#34;&gt;bark&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;멍멍&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        });&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/temp/101-%EB%AC%B8%EC%A0%9C/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/temp/101-%EB%AC%B8%EC%A0%9C/</guid>
      <description>&lt;p&gt;나의 경우 문장을 단어로 분할을 위해 인덱스를 잡고 vector 에 추가하여 임시로 저장&#xA;이후에 vector 를 나중에&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Given an input string s, reverse the order of the words.&#xA;&#xA;A word is defined as a sequence of non-space characters. The words in s will be separated by at least one space.&#xA;&#xA;Return a string of the words in reverse order concatenated by a single space.&#xA;&#xA;Note that s may contain leading or trailing spaces or multiple spaces between two words. The returned string should only have a single space separating the words. Do not include any extra spaces.&#xA;&#xA; &#xA;&#xA;Example 1:&#xA;&#xA;Input: s = &amp;#34;the sky is blue&amp;#34;&#xA;Output: &amp;#34;blue is sky the&amp;#34;&#xA;Example 2:&#xA;&#xA;Input: s = &amp;#34;  hello world  &amp;#34;&#xA;Output: &amp;#34;world hello&amp;#34;&#xA;Explanation: Your reversed string should not contain leading or trailing spaces.&#xA;Example 3:&#xA;&#xA;Input: s = &amp;#34;a good   example&amp;#34;&#xA;Output: &amp;#34;example good a&amp;#34;&#xA;Explanation: You need to reduce multiple spaces between two words to a single space in the reversed string.&#xA; &#xA;&#xA;Constraints:&#xA;&#xA;1 &amp;lt;= s.length &amp;lt;= 104&#xA;s contains English letters (upper-case and lower-case), digits, and spaces &amp;#39; &amp;#39;.&#xA;There is at least one word in s.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 처음에 문자가 나오는 인덱스 저장 , 문자가 끝나는 다음 인덱스 저장 배열&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 단어를 지우고 다시 쓴다&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Solution&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    string reverseWords(string s) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        vector&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;pair&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;,&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; vector_index;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; s.size(); i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (s[i] &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; start_index &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; i;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; (i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; s.size() &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; s[i] &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                vector_index.push_back(make_pair(start_index, i)); &lt;span style=&#34;color:#75715e&#34;&gt;// i는 다음 공백의 인덱스&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        string result;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; vector_index.size()&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; ; i&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; ; i&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; first_index &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; vector_index[i].first;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; second_index &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; vector_index[i].second;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            result &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; s.substr(first_index, second_index &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; first_index);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            result &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        result.pop_back();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; result;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;vector_index 를 만드는 반복분을&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/temp/arm-cpu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/temp/arm-cpu/</guid>
      <description>&lt;p&gt;CPU 설계에서 비순차 실행 및 슈퍼스칼라 아키텍처는 성능 향상을 위한 여러 기법들을 포함하고 있습니다. RISC(축소 명령 집합 컴퓨터) 진영에서 사용되는 주요 성능 향상 기법들은 다음과 같습니다:&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-비순차-실행-out-of-order-execution&#34;&gt;1. 비순차 실행 (Out-of-Order Execution)&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;개념&lt;/strong&gt;: 명령어가 프로그램의 순서와 관계없이 실행될 수 있도록 하는 기법입니다. 이는 데이터 종속성이나 자원 대기 시간으로 인해 발생하는 지연을 최소화합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;장점&lt;/strong&gt;: 실행 가능한 명령어가 있다면, 지연되는 명령어를 건너뛰고 다른 명령어를 실행하여 CPU의 자원을 효율적으로 사용할 수 있습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;2-슈퍼스칼라-아키텍처-superscalar-architecture&#34;&gt;2. 슈퍼스칼라 아키텍처 (Superscalar Architecture)&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;개념&lt;/strong&gt;: 한 사이클 내에 여러 개의 명령어를 동시에 실행할 수 있는 구조입니다. 여러 개의 실행 유닛을 통해 명령어의 병렬 처리를 가능하게 합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;장점&lt;/strong&gt;: 명령어 레벨 병렬성을 활용하여 성능을 극대화할 수 있습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;3-파이프라이닝-pipelining&#34;&gt;3. 파이프라이닝 (Pipelining)&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;개념&lt;/strong&gt;: 명령어를 여러 단계로 나누어 각 단계를 동시에 처리하는 기법입니다. 각 단계는 명령어의 서로 다른 부분을 처리합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;장점&lt;/strong&gt;: 명령어 처리 속도를 높이고 CPU 자원의 활용도를 증가시킬 수 있습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;4-명령어-예측-instruction-prediction&#34;&gt;4. 명령어 예측 (Instruction Prediction)&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;개념&lt;/strong&gt;: 분기 명령어의 결과를 예측하여 분기 예측을 통해 파이프라인의 중단을 최소화합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;장점&lt;/strong&gt;: 잘못된 예측을 줄이면 파이프라인의 비효율성을 줄이고 성능을 향상시킬 수 있습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;5-레지스터-재배치-register-renaming&#34;&gt;5. 레지스터 재배치 (Register Renaming)&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;개념&lt;/strong&gt;: 물리적 레지스터 수를 늘려서 명령어 간의 데이터 종속성을 해결하는 기법입니다. 가상의 레지스터를 사용해 실제 레지스터와의 매핑을 관리합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;장점&lt;/strong&gt;: 명령어 간의 충돌을 줄여 비순차 실행의 이점을 극대화합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;6-캐시-메모리-cache-memory&#34;&gt;6. 캐시 메모리 (Cache Memory)&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;개념&lt;/strong&gt;: CPU와 메모리 사이에 위치하여 자주 사용하는 데이터를 빠르게 접근할 수 있도록 하는 메모리입니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;장점&lt;/strong&gt;: 데이터 접근 시간을 줄여 CPU의 성능을 향상시킵니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;7-멀티스레딩-multithreading&#34;&gt;7. 멀티스레딩 (Multithreading)&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;개념&lt;/strong&gt;: 하나의 CPU 코어가 여러 스레드를 동시에 실행할 수 있도록 하는 기술입니다. 각 스레드는 독립적으로 실행되며, 자원을 공유합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;장점&lt;/strong&gt;: CPU의 자원 활용도를 높이고, 대기 시간 동안 다른 스레드를 실행하여 성능을 향상시킬 수 있습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;8-simd-single-instruction-multiple-data&#34;&gt;8. SIMD (Single Instruction, Multiple Data)&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;개념&lt;/strong&gt;: 하나의 명령어로 여러 데이터에 동시에 작업을 수행하는 방식입니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;장점&lt;/strong&gt;: 벡터 연산이나 이미지 처리와 같은 데이터 집약적인 작업에서 성능을 크게 향상시킬 수 있습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;이러한 기법들은 RISC 아키텍처에서 성능을 극대화하기 위해 사용되며, 현대 CPU 설계의 핵심 요소로 자리 잡고 있습니다. 추가적인 질문이 있다면 언제든지 말씀해 주세요!&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/temp/execute-run-code/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/temp/execute-run-code/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello world&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello, World!&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello world&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Main&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(String &lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt;args) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;System.&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello, World!&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/temp/mac-java-%EB%B2%84%EC%A0%84-%EB%B3%80%EA%B2%BD/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/temp/mac-java-%EB%B2%84%EC%A0%84-%EB%B3%80%EA%B2%BD/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;JDKS_DIR&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/Library/Java/JavaVirtualMachines&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;JDKS&lt;span style=&#34;color:#f92672&#34;&gt;=(&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;ls &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JDKS_DIR&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;JDKS_STATES&lt;span style=&#34;color:#f92672&#34;&gt;=()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;((&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0; i &amp;lt; &lt;span style=&#34;color:#e6db74&#34;&gt;${#&lt;/span&gt;JDKS[@]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;; i++ &lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -f &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JDKS_DIR&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JDKS[$i](%20-f%20&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JDKS_DIR&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JDKS[$i); then&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;JDKS_STATES[&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;i&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;]=enable&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;else&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;JDKS_STATES[&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;i&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;]=disable&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;fi&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;i&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JDKS[$i]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JDKS_STATES[$i]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;done&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;DEFAULT_JDK_DIR=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;DEFAULT_JDK=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;OPTION=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;while [](%20!%20&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$OPTION&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;%20=~%20^[0-9]+$%20||%20OPTION%20-ge%20&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${#&lt;/span&gt;JDKS[@]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;%20); do&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;read -p &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Enter Default JDK: &amp;#34;&lt;/span&gt;  OPTION&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;if [ ! &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$OPTION&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; =~ ^[0-9](%20!%20&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$OPTION&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;%20=~%20^[0-9); then&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Sorry integers only&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;fi&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;if [](%20OPTION%20-ge%20&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${#&lt;/span&gt;JDKS[@]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;%20); then&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Out of index&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;fi&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;done&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;DEFAULT_JDK_DIR=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JDKS_DIR&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JDKS[$OPTION]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;DEFAULT_JDK=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JDKS[$OPTION]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;for (( i = 0; i &amp;lt; &lt;span style=&#34;color:#e6db74&#34;&gt;${#&lt;/span&gt;JDKS[@]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;; i++ )); do&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;if [ -f &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JDKS_DIR&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JDKS[$i](%20-f%20&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JDKS_DIR&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JDKS[$i); then&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;sudo mv &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JDKS_DIR&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JDKS[$i]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/Contents/Info.plist&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JDKS_DIR&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JDKS[$i]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/Contents/Info.plist.disable&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;fi&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;done&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;if [ -f &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;DEFAULT_JDK_DIR&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/Contents/Info.plist.disable&amp;#34;&lt;/span&gt; ](%20-f%20&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;DEFAULT_JDK_DIR&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/Contents/Info.plist.disable&amp;#34;&lt;/span&gt;%20); then&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;sudo mv &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;DEFAULT_JDK_DIR&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/Contents/Info.plist.disable&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;DEFAULT_JDK_DIR&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/Contents/Info.plist&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Enable &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;DEFAULT_JDK&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; as default JDK&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fi&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/temp/python-login/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/temp/python-login/</guid>
      <description>&lt;p&gt;&lt;code&gt;refresh_token&lt;/code&gt;은 JWT 인증 시스템에서 중요한 역할을 합니다. 일반적으로 &lt;code&gt;access_token&lt;/code&gt;은 짧은 유효 기간을 가지며, 클라이언트가 보호된 리소스에 접근할 때 사용됩니다. 반면, &lt;code&gt;refresh_token&lt;/code&gt;은 긴 유효 기간을 가지며, 만료된 &lt;code&gt;access_token&lt;/code&gt;을 갱신하는 데 사용됩니다. 이를 통해 사용자는 매번 로그인하지 않고도 안전하게 세션을 유지할 수 있습니다.&lt;/p&gt;&#xA;&lt;p&gt;현재 코드에서는 &lt;code&gt;access_token&lt;/code&gt;만 발행하고 있으며, &lt;code&gt;refresh_token&lt;/code&gt;이 누락되어 있습니다. 이를 추가하여 완전한 JWT 인증 시스템을 구현해보겠습니다.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;1-refresh_token-추가를-위한-설정&#34;&gt;1. &lt;code&gt;refresh_token&lt;/code&gt; 추가를 위한 설정&lt;/h3&gt;&#xA;&lt;p&gt;Flask-JWT-Extended는 &lt;code&gt;create_refresh_token()&lt;/code&gt; 함수를 제공하며, 이를 사용하여 &lt;code&gt;refresh_token&lt;/code&gt;을 생성할 수 있습니다. 또한, &lt;code&gt;@jwt_required(refresh=True)&lt;/code&gt; 데코레이터를 사용하여 &lt;code&gt;refresh_token&lt;/code&gt;을 검증하고 새로운 &lt;code&gt;access_token&lt;/code&gt;을 발급할 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/temp/sizeof/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/temp/sizeof/</guid>
      <description>&lt;p&gt;&lt;code&gt;sizeof&lt;/code&gt; 연산자는 C 언어에서 객체나 데이터 타입의 크기를 바이트 단위로 반환하는 데 사용됩니다. &lt;code&gt;sizeof&lt;/code&gt;의 사용법과 규칙은 다음과 같습니다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-기본-사용법&#34;&gt;1. 기본 사용법&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;변수나 데이터 타입&lt;/strong&gt;의 크기를 알아낼 수 있습니다.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; a;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%zu&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;sizeof&lt;/span&gt;(a));        &lt;span style=&#34;color:#75715e&#34;&gt;// int의 크기 출력&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%zu&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;sizeof&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;));      &lt;span style=&#34;color:#75715e&#34;&gt;// int 타입의 크기 출력&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;2-배열의-크기&#34;&gt;2. 배열의 크기&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;배열&lt;/strong&gt;에 대해서는 전체 배열의 크기를 반환합니다.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; text[] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%zu&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;sizeof&lt;/span&gt;(text));     &lt;span style=&#34;color:#75715e&#34;&gt;// 6 (5 characters + 1 for &amp;#39;\0&amp;#39;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;그러나 &lt;strong&gt;포인터&lt;/strong&gt;에 대해서는 포인터의 크기만 반환합니다.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;ptr &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%zu&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;sizeof&lt;/span&gt;(ptr));      &lt;span style=&#34;color:#75715e&#34;&gt;// 보통 4 또는 8 (32비트 또는 64비트 시스템에서의 포인터 크기)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;3-구조체의-크기&#34;&gt;3. 구조체의 크기&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;구조체&lt;/strong&gt;의 크기는 그 안에 포함된 멤버들의 크기의 합과 메모리 정렬 패딩을 고려하여 계산됩니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/temp/spring-intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/temp/spring-intro/</guid>
      <description>&lt;h2 id=&#34;spring-boot-devtools-사용법&#34;&gt;&lt;a href=&#34;https://barbera.tistory.com/47&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;Spring Boot Devtools 사용법&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;controller란-무엇인가&#34;&gt;controller란 무엇인가?&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;사용자의 요청이 진입하는 지점(entry point)이며&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;요청에 따라 어떤 처리를 할지 결정해주며&lt;/p&gt;&#xA;&lt;p&gt;단, controller는 단지 결정만 해주고 실질적인 처리는 서비스(Layered Architecture)에서 담당한다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;사용자에게 View(또는 서버에서 처리된 데이터를 포함하는 View)를 응답으로 보내준다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;mvc&#34;&gt;mvc&lt;/h2&gt;&#xA;&lt;p&gt;model view controller&lt;/p&gt;&#xA;&lt;p&gt;model :&#xA;view :&#xA;controller :&lt;/p&gt;&#xA;&lt;h2 id=&#34;ss-명령어-유닉스&#34;&gt;ss 명령어 유닉스&lt;/h2&gt;&#xA;&lt;p&gt;ss -ltn 명령어를 통해 listen 되고 있는 포트를 본다&lt;/p&gt;&#xA;&lt;h2 id=&#34;netstat--ano--p-tcp-윈도우&#34;&gt;netstat -ano -p tcp 윈도우&lt;/h2&gt;&#xA;&lt;h2 id=&#34;jsp&#34;&gt;jsp&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-jsp&#34; data-lang=&#34;jsp&#34;&gt;&amp;lt;% 스크립틀릿 scriptlet java코드 작성영역 %&amp;gt; 서버 생성시 초기화 jspinit()&#xA;&amp;lt;%! 선언문 멤버필드 멤버 메서드 정의 %&amp;gt; 객체 생성시 초기화 &#xA;&amp;lt;%= 출력부 %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;http-프로토콜&#34;&gt;http 프로토콜&lt;/h2&gt;&#xA;&lt;p&gt;http + ssl =&amp;gt; https&#xA;http method&#xA;총 9개&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/temp/test/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/temp/test/</guid>
      <description>&lt;p&gt;파일 테이블&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;파일 포인터&lt;/li&gt;&#xA;&lt;li&gt;파일 상태 플래그&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;1-파일-file&#34;&gt;1. 파일 (File)&lt;/h2&gt;&#xA;&lt;p&gt;파일은 데이터를 저장하는 기본 단위로, 디스크와 같은 저장 매체에 존재하는 정보의 집합입니다. 파일은 텍스트, 이미지, 비디오 등 다양한 형태로 존재할 수 있으며, 파일 시스템에 의해 관리됩니다. 각 파일은 고유한 이름과 경로를 가지며, 파일의 내용과 메타데이터(예: 크기, 생성 날짜, 수정 날짜 등)가 포함됩니다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;2-파일-테이블-file-table&#34;&gt;2. 파일 테이블 (File Table)&lt;/h2&gt;&#xA;&lt;p&gt;파일 테이블은 운영체제가 시스템에서 열린 파일에 대한 정보를 관리하는 데이터 구조입니다. 시스템 전체에서 열린 파일에 대한 상태를 추적하며, 각 파일에 대한 메타 정보를 포함합니다. 파일 테이블은 모든 프로세스가 공유할 수 있으며, 파일의 참조 카운터와 접근 정보 등이 포함됩니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/temp/tmux-pane-window-%EC%B0%A8%EC%9D%B4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/temp/tmux-pane-window-%EC%B0%A8%EC%9D%B4/</guid>
      <description></description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/temp/unix-%EB%8F%84%EB%A9%94%EC%9D%B8-%EC%86%8C%EC%BC%93/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/temp/unix-%EB%8F%84%EB%A9%94%EC%9D%B8-%EC%86%8C%EC%BC%93/</guid>
      <description>&lt;p&gt;&lt;code&gt;PF_UNIX&lt;/code&gt; (또는 &lt;code&gt;AF_UNIX&lt;/code&gt;)는 로컬 시스템 내에서 프로세스 간 통신(IPC)을 위한 프로토콜로, 네트워크를 거치지 않고 소켓을 사용해 데이터를 교환합니다. 아래는 &lt;code&gt;PF_UNIX&lt;/code&gt;와 &lt;code&gt;datagram socket&lt;/code&gt;을 사용한 클라이언트와 서버 예제입니다.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;서버-코드-datagram-socket-with-pf_&#34;&gt;&lt;strong&gt;서버 코드 (Datagram Socket with PF_UNIX)&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; server_sock;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; sockaddr_un server_addr, client_addr;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; buffer[BUFFER_SIZE];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;socklen_t&lt;/span&gt; client_addr_len;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 1. 소켓 생성&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ((server_sock &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;socket&lt;/span&gt;(PF_UNIX, SOCK_DGRAM, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;perror&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;socket&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;exit&lt;/span&gt;(EXIT_FAILURE);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 2. 주소 구조체 초기화&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;memset&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;server_addr, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;sizeof&lt;/span&gt;(server_addr));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    server_addr.sun_family &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; AF_UNIX;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;strncpy&lt;/span&gt;(server_addr.sun_path, SOCKET_PATH, &lt;span style=&#34;color:#66d9ef&#34;&gt;sizeof&lt;/span&gt;(server_addr.sun_path) &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 3. 소켓 주소 바인딩&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;unlink&lt;/span&gt;(SOCKET_PATH); &lt;span style=&#34;color:#75715e&#34;&gt;// 기존 소켓 파일 삭제&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;bind&lt;/span&gt;(server_sock, (&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; sockaddr &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;server_addr, &lt;span style=&#34;color:#66d9ef&#34;&gt;sizeof&lt;/span&gt;(server_addr)) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;perror&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bind&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;(server_sock);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;exit&lt;/span&gt;(EXIT_FAILURE);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Server is running and waiting for messages...&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 4. 데이터 수신&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    client_addr_len &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;sizeof&lt;/span&gt;(client_addr);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;ssize_t&lt;/span&gt; received &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;recvfrom&lt;/span&gt;(server_sock, buffer, BUFFER_SIZE, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                    (&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; sockaddr &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;client_addr, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;client_addr_len);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (received &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;perror&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;recvfrom&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        buffer[received] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\0&amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Received: %s&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, buffer);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// 5. 클라이언트로 응답 전송&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;response &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Message received!&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;sendto&lt;/span&gt;(server_sock, response, &lt;span style=&#34;color:#a6e22e&#34;&gt;strlen&lt;/span&gt;(response), &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                   (&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; sockaddr &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;client_addr, client_addr_len) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;perror&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sendto&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 6. 소켓 종료&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;(server_sock);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;unlink&lt;/span&gt;(SOCKET_PATH); &lt;span style=&#34;color:#75715e&#34;&gt;// 소켓 파일 삭제&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;h2 id=&#34;클라이언트-코드-datagram-socket-with-pf_&#34;&gt;&lt;strong&gt;클라이언트 코드 (Datagram Socket with PF_UNIX)&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; client_sock;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; sockaddr_un server_addr, client_addr;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; buffer[BUFFER_SIZE];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 1. 소켓 생성&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ((client_sock &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;socket&lt;/span&gt;(PF_UNIX, SOCK_DGRAM, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;perror&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;socket&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;exit&lt;/span&gt;(EXIT_FAILURE);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 2. 클라이언트 주소 구조체 초기화&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;memset&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;client_addr, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;sizeof&lt;/span&gt;(client_addr));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    client_addr.sun_family &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; AF_UNIX;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;strncpy&lt;/span&gt;(client_addr.sun_path, CLIENT_SOCKET_PATH, &lt;span style=&#34;color:#66d9ef&#34;&gt;sizeof&lt;/span&gt;(client_addr.sun_path) &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 3. 소켓 주소 바인딩&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;unlink&lt;/span&gt;(CLIENT_SOCKET_PATH); &lt;span style=&#34;color:#75715e&#34;&gt;// 기존 소켓 파일 삭제&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;bind&lt;/span&gt;(client_sock, (&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; sockaddr &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;client_addr, &lt;span style=&#34;color:#66d9ef&#34;&gt;sizeof&lt;/span&gt;(client_addr)) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;perror&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bind&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;(client_sock);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;exit&lt;/span&gt;(EXIT_FAILURE);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 4. 서버 주소 구조체 초기화&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;memset&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;server_addr, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;sizeof&lt;/span&gt;(server_addr));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    server_addr.sun_family &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; AF_UNIX;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;strncpy&lt;/span&gt;(server_addr.sun_path, SERVER_SOCKET_PATH, &lt;span style=&#34;color:#66d9ef&#34;&gt;sizeof&lt;/span&gt;(server_addr.sun_path) &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 5. 서버로 메시지 전송&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;message &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello from client!&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;sendto&lt;/span&gt;(client_sock, message, &lt;span style=&#34;color:#a6e22e&#34;&gt;strlen&lt;/span&gt;(message), &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               (&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; sockaddr &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;server_addr, &lt;span style=&#34;color:#66d9ef&#34;&gt;sizeof&lt;/span&gt;(server_addr)) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;perror&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sendto&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;(client_sock);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;exit&lt;/span&gt;(EXIT_FAILURE);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Message sent to server.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 6. 서버로부터 응답 수신&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;ssize_t&lt;/span&gt; received &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;recvfrom&lt;/span&gt;(client_sock, buffer, BUFFER_SIZE, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, NULL, NULL);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (received &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;perror&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;recvfrom&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;(client_sock);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;exit&lt;/span&gt;(EXIT_FAILURE);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    buffer[received] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\0&amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Received from server: %s&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, buffer);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 7. 소켓 종료&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;(client_sock);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;unlink&lt;/span&gt;(CLIENT_SOCKET_PATH); &lt;span style=&#34;color:#75715e&#34;&gt;// 소켓 파일 삭제&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;h2 id=&#34;실행-방법&#34;&gt;&lt;strong&gt;실행 방법&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;서버를 먼저 실행:&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/temp/untitled-4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/temp/untitled-4/</guid>
      <description>&lt;p&gt;SQL 표준에서는&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;dirty read: commit 되지 않은 데이터를 읽었을 때 발생하며, 데이터를 읽은 이후에 이 데이터를 rollback하게 되는 경우 문제가 발생하는 현상&lt;/li&gt;&#xA;&lt;li&gt;non-repeatable read: 한 트랜잭션에서 같은 데이터를 두 번 읽었는데 두 데이터의 결과가 다른 현상&lt;/li&gt;&#xA;&lt;li&gt;phantom read: 한 트랜잭션에서 같은 조건으로 데이터를 두 번 읽었는데 두 데이터의 결과가 다른 현상&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;이렇게 세 가지 이상 현상 개념에 대해서 다루고 이에 대한 isolation level을 아래와 같이 정의했습니다.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;read uncommited: 세 가지 이상 현상을 다 허용&lt;/li&gt;&#xA;&lt;li&gt;read commited: dirty read가 발생하는 schedule은 허용 X&lt;/li&gt;&#xA;&lt;li&gt;repeatable read: non-repeatable read까지 발생하는 scehdule은 허용 X&lt;/li&gt;&#xA;&lt;li&gt;serializable: 가장 엄격한 isolation level로 모든 이상 현상이 발생하는 schedule 허용 X&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;하지만 1995년 이 SQL 표준을 비판하는 논문이 등장하였고 이 논문에서는 SQL 표준에서 언급한 이상 현상 외에 더 많은 이상 현상이 존재하며, 다룬 이상 현상도 더 넓은 개념에서 바라보아야 한다고 비판하였습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/temp/untitled-5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/temp/untitled-5/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/sql-createrole.html&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;https://www.postgresql.org/docs/current/sql-createrole.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;(&lt;code&gt;CREATE USER&lt;/code&gt; is the same as &lt;code&gt;CREATE ROLE&lt;/code&gt; except that it implies &lt;code&gt;LOGIN&lt;/code&gt;.)&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/temp/untitled-7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/temp/untitled-7/</guid>
      <description></description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/temp/untitled-8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/temp/untitled-8/</guid>
      <description>&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20241220070853.png&#34; alt=&#34; (Image resource not found)&#34; &gt;%20image%2020241220070853.png)&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/temp/untitled/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/temp/untitled/</guid>
      <description></description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/temp/wordpress-%EA%B3%BC%EC%A0%9C/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/temp/wordpress-%EA%B3%BC%EC%A0%9C/</guid>
      <description>&lt;p&gt;wordpress docker 이미지를 사용하되 컴포즈를 통해 내부 네트워크에서 db 컨테이너와 함께 사용하자&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs.docker.com/compose/install/&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;맥 +docker compose 조합 compose 문서&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;먼저 wordpress 폴더를 만들어서 들어가자 여기에 db 가 사용하는 data 폴더 docker compose yml 파일등이 들어간다&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir wordpress&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd wordpress&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;내부 네트워크에서 db와 wordpress 가 통신한다&#xA;오직 services.wordpress.port 가 현재 10202:80 으로 들어가 있는데 {접속포트}:80 이므로 접속할 포트(일반적으로 80) 로 설정한다&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;networks&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;wordpress&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;external&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;services&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# 데이터베이스&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;db&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# We use a mariadb image which supports both amd64 &amp;amp; arm64 architecture&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;image&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;mariadb:10.6.4-focal&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# If you really want to use MySQL, uncomment the following line&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;#image: mysql:8.0.27&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;container_name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;mariadb_for_wordpress&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;command&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;--default-authentication-plugin=mysql_native_password&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;environment&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;MYSQL_ROOT_PASSWORD=somewordpress&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;MYSQL_DATABASE=wordpress&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;MYSQL_USER=wordpress&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;MYSQL_PASSWORD=wordpress&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;restart&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;always&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;networks&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;wordpress&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;volumes&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;./db_data:/var/lib/mysql&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# 워드프레스&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;wordpress&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;image&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;wordpress:latest&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;container_name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;wordpress&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;ports&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;10202&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;restart&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;always&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;environment&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;WORDPRESS_DB_HOST=db&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;WORDPRESS_DB_USER=wordpress&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;WORDPRESS_DB_PASSWORD=wordpress&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;WORDPRESS_DB_NAME=wordpress&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;networks&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;wordpress&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;depends_on&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;db&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;컨테이너 실행&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/temp/%EB%8F%99%EC%9E%91%EC%9B%90%EB%A6%AC/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/temp/%EB%8F%99%EC%9E%91%EC%9B%90%EB%A6%AC/</guid>
      <description>&lt;p&gt;&lt;strong&gt;src/app.py:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Flask 애플리케이션 기본 및 oracle 드라이버 설정&#xA;&lt;strong&gt;src/views.py:&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;db 쿼리 및 사용자에게 보낼 html 을 정함&lt;/li&gt;&#xA;&lt;li&gt;여기서 기능을 추가하면 됩니다!!!&#xA;&lt;strong&gt;src/test_views.py:&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;예시 db 쿼리 입니다&#xA;src/templates/base.html&lt;/li&gt;&#xA;&lt;li&gt;기본적인 html 양식입니다 다른 html 에서 {% extends &amp;ldquo;base.html&amp;rdquo; %} 를 통해 가져와서 사용하게 됩니다&#xA;src/templates/home.html&lt;/li&gt;&#xA;&lt;li&gt;제일 처음에 보이는 양식입니다 로그인 화면을 생각중입니다&#xA;src/templates/test/html 들&lt;/li&gt;&#xA;&lt;li&gt;예시를 위해 만든 html 입니다 복사해서 기능 추가할 때 가져가면 됩니다&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;기능을 추가할 때 view.py 와 실제 사용자에게 전해줄 templates 폴더에 html 문서만 작성해주시면 됩니다&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/temp/%EC%84%A0%ED%98%95%EB%8C%80%EC%88%98%ED%95%99/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/temp/%EC%84%A0%ED%98%95%EB%8C%80%EC%88%98%ED%95%99/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;선형변환은 선형 결합을 보존하는, 두 벡터 공간 사이의 함수이다.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;선형결합&#xA;선형결합 = 좌표평면위의 (3,2) 백터를 정의한다면&#xA;실제로는 기저가 (1,0) , (0,1) 를 기저로 한다는 것을 정의한다&#xA;즉 좌표평면위의 (3,2) 백터는 (1,0) , (0,1) 과 (3,2) 의 선형 결합이다&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;두 벡터 공간 사이의 함수이다&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;$R_2 의\ 기저는 { u_1 = (1,3), u_2 = (2,2)}$ $이를\ 통해\ 직교기저 {v_1, v_2} 를\ 구하여라\  &amp;amp;\  정규직교기저 {p_1, p_2} 를 구하라$&lt;/p&gt;&#xA;&lt;p&gt;$문제\ 2\ 그램\ 슈미트\ 직교화\ 과정을\ 통해\ 직교기저가\ 아닌\ 기저에서\ 직교기저를\ 구한다$&#xA;$u_1 = v_1 = (1,3)$&#xA;$u_2 = (2,2)$&#xA;$v_2 = u_2 + \frac{u_2 \cdot v_1}{|v_1|^2} v_1$&#xA;$v_2 = (2,2) + \frac{4}{10}(1,-3)$&#xA;$v_2 = (\frac{12}{5}, \frac{4}{5})$&#xA;$즉\ 직교기저\ (v_1,v_2) = {(1,-3),(\frac{12}{5},\frac{4}{5})}$&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/temp/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EC%9D%98%EC%A1%B4%EC%84%B1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/temp/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EC%9D%98%EC%A1%B4%EC%84%B1/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://neetcode.io/roadmap&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;https://neetcode.io/roadmap&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240406092231.png&#34; alt=&#34; (Image resource not found)&#34; &gt;%20image%2020240406092231.png)&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/temp/%EC%9B%90%EA%B2%A9%EC%A7%80-%EC%84%9C%EB%B2%84-%EC%8B%9C%EA%B0%84-%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/temp/%EC%9B%90%EA%B2%A9%EC%A7%80-%EC%84%9C%EB%B2%84-%EC%8B%9C%EA%B0%84-%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0/</guid>
      <description>&lt;p&gt;NTP 와 같은 프로토콜을  통해 시간을 동기화 할 수 있지만 원격지 서버의 허용을 대부분 안해주기 때문에 웹서버의 요청시 http 응답의 Date 항목을 통해 원격지 서버의 시간을 예측해 본다&lt;/p&gt;&#xA;&lt;p&gt;현재 서버의 시간을 확인하는 예시&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; timespec ts;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// 현재 시간을 가져옵니다.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;clock_gettime&lt;/span&gt;(CLOCK_REALTIME, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;ts);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// 시간 출력&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%04ld-%02ld-%02ld %02ld:%02ld:%02ld.%09ld&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               ts.tv_sec &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;31557600&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1970&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;// 연도 계산&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;               (ts.tv_sec &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;31557600&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2629743&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;// 월 계산&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;               (ts.tv_sec &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2629743&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;86400&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;// 일 계산&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;               (ts.tv_sec &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;86400&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3600&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;// 시 계산&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;               (ts.tv_sec &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3600&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;// 분 계산&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;               ts.tv_sec &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;// 초 계산&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;               ts.tv_nsec); &lt;span style=&#34;color:#75715e&#34;&gt;// 나노초&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;fflush&lt;/span&gt;(stdout); &lt;span style=&#34;color:#75715e&#34;&gt;// 출력 버퍼를 플러시하여 즉시 출력&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;usleep&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;); &lt;span style=&#34;color:#75715e&#34;&gt;// 10,000 마이크로초 (1 밀리초) 대기&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;위와 같은 인터페이스로 구현하고자 한다&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/temp/%EC%9E%90%EC%82%B0-%EA%B4%80%EB%A6%AC/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/temp/%EC%9E%90%EC%82%B0-%EA%B4%80%EB%A6%AC/</guid>
      <description>&lt;h2 id=&#34;학자금-대출&#34;&gt;학자금 대출&lt;/h2&gt;&#xA;&lt;p&gt;3000 만원의 대출금의 경우 1.7% 기준 1년에 510,000 의 이자가 발생하고 한달 42500원의 이자금이 발생되게 된다&#xA;2000만원의 대출금의 경우 1.7% 기준 1년에 28,333 의 이자가 발생하고 한달 28333원의 이자금이 발생되게 된다&lt;/p&gt;&#xA;&lt;h2 id=&#34;세대주-관련&#34;&gt;세대주 관련&lt;/h2&gt;&#xA;&lt;p&gt;주민등록법상&#xA;세법상&#xA;주택청약시&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;주민등록법상과 관련되 세대주&lt;/strong&gt; 의 경우에는 단순히 전입신고를 통해 세대주가 인정되게 된다&#xA;&lt;strong&gt;세법상&lt;/strong&gt;의 경우에는 전입신고와 (30세 이상 또는 결혼 또는 중위소득 40 이상(2024 기준 891,378원)(지난 1년이상)) 을 받으면 인정되게 된다&#xA;&lt;strong&gt;주택청약시&lt;/strong&gt; 세대주 요건의 경우에는 위의 경우 세법상 경우를 따라가지만 무주택 기간산정에(보통은 만 30세 이상부터 카운트가 되고, 만 30세 전이라도 혼인시에는 혼인신고 시점부터 무주택 기간이 산정됩니다)&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/temp/%ED%81%B4%EB%9D%BC%EC%9A%B0%EB%93%9C-%EC%BB%B4%ED%93%A8%ED%8C%85-%EA%B3%BC%EC%A0%9C/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/temp/%ED%81%B4%EB%9D%BC%EC%9A%B0%EB%93%9C-%EC%BB%B4%ED%93%A8%ED%8C%85-%EA%B3%BC%EC%A0%9C/</guid>
      <description>&lt;h2 id=&#34;하둡-컨테이너를-구성하고자-하는-환경가상머신-리눅스-서버-등-설명&#34;&gt;하둡 컨테이너를 구성하고자 하는 환경(가상머신, 리눅스 서버 등) 설명&lt;/h2&gt;&#xA;&lt;p&gt;초기 arm 기반 mac 에서 실행되지 않아&#xA;홈서버를 사용하여 x86-64 cpu, linux ubuntu server 버전에서 ssh 로 접근하여 사용하였음&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-p 50070:50070 &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-p 50030:50030&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;등을 사용하여 실행시 적절하게 외부에서 hdfs mapreduce 웹 인터페이스 또한 접근가능&lt;/p&gt;&#xA;&lt;h2 id=&#34;wordcount-실행-결과&#34;&gt;WordCount 실행 결과&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20241105134407.png&#34; alt=&#34;Pasted image 20241105134407 (Image resource not found)&#34; &gt;&#xA;psql manual 파일을 사용하였다 &#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20241105132079.png&#34; alt=&#34; (Image resource not found)&#34; &gt;&#xA;psql_manual_file.txt 를 하둡파일시스템으로 input&lt;/p&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20241105134994.png&#34; alt=&#34;Pasted image 20241105134994 (Image resource not found)&#34; &gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20241105132250.png&#34; alt=&#34;Pasted image 20241105132250 (Image resource not found)&#34; &gt;&#xA;실행 및 웹 인터페이스로 접근한 완료된 word count 작업&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/temp/%ED%82%A4%EB%B3%B4%EB%93%9C%ED%95%98%EB%93%9C%EC%9B%A8%EC%96%B4-%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EC%9D%B8%EC%8B%9D-%EA%B3%BC%EC%A0%95/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/temp/%ED%82%A4%EB%B3%B4%EB%93%9C%ED%95%98%EB%93%9C%EC%9B%A8%EC%96%B4-%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EC%9D%B8%EC%8B%9D-%EA%B3%BC%EC%A0%95/</guid>
      <description>&lt;p&gt;리눅스에서 키보드를 인식하고 입력을 처리하는 과정은 여러 단계로 나뉘며, 하드웨어와 소프트웨어 간의 상호작용을 포함합니다. 아래는 리눅스 시스템에서 키보드가 인식되는 과정을 단계별로 설명한 것입니다.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;1-하드웨드-초기화-및-드라이버-로드&#34;&gt;1. &lt;strong&gt;하드웨드 초기화 및 드라이버 로드&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;키보드는 USB 또는 PS/2 포트를 통해 연결됩니다. 리눅스 커널은 부팅 과정에서 하드웨어 장치를 스캔하며, 연결된 키보드를 감지합니다.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;USB 키보드&lt;/strong&gt;: USB 장치는 &lt;code&gt;usbhid&lt;/code&gt; 드라이버에 의해 관리됩니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;PS/2 키보드&lt;/strong&gt;: PS/2 장치는 &lt;code&gt;atkbd&lt;/code&gt; 드라이버에 의해 관리됩니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;커널은 적절한 드라이버를 자동으로 로드하여 키보드와 통신할 수 있도록 준비합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/temp/%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EA%B8%88%EC%9A%94%EC%9D%BC-10-1-%EC%9D%B4%ED%9B%84-%EB%B3%80%EA%B2%BD%EC%A0%90/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/temp/%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EA%B8%88%EC%9A%94%EC%9D%BC-10-1-%EC%9D%B4%ED%9B%84-%EB%B3%80%EA%B2%BD%EC%A0%90/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/temp/%ED%99%98%EA%B2%BD%EB%B3%80%EC%88%98-%EB%AA%A9%EB%A1%9D/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/temp/%ED%99%98%EA%B2%BD%EB%B3%80%EC%88%98-%EB%AA%A9%EB%A1%9D/</guid>
      <description>&lt;p&gt;아래는 &lt;code&gt;env&lt;/code&gt; 명령어를 통해 출력된 환경 변수들에 대한 자세한 설명입니다. 각 변수는 시스템, 사용자, 프로그램 등에서 특정 정보를 저장하거나 설정하기 위해 사용됩니다.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;1-기본-시스템-및-셸-관련-변수&#34;&gt;&lt;strong&gt;1. 기본 시스템 및 셸 관련 변수&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;SHELL=/bin/bash&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;&#xA;현재 사용 중인 셸(Shell)의 경로를 나타냅니다. 여기서는 Bash가 사용 중임을 의미합니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;TERM=xterm-256color&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;&#xA;터미널 유형을 나타냅니다. &lt;code&gt;xterm-256color&lt;/code&gt;는 256색을 지원하는 터미널임을 의미합니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;USER=shinnk&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;&#xA;현재 로그인한 사용자의 이름입니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;HOME=/home/shinnk&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;&#xA;사용자의 홈 디렉토리 경로입니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;PWD=/home/shinnk&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;&#xA;현재 작업 디렉토리(Working Directory)의 경로입니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;LOGNAME=shinnk&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;&#xA;로그인한 사용자의 이름입니다. 일반적으로 &lt;code&gt;USER&lt;/code&gt;와 동일합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Rest Full API</title>
      <link>http://localhost:1313/temp/rest-full-api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/temp/rest-full-api/</guid>
      <description>&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250314030577.png&#34; alt=&#34; (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;RESTful API는 현대 웹 애플리케이션의 필수 요소로 자리잡았습니다. 그러나 RESTful API를 설계할 때는 몇 가지 원칙을 따르는 것이 중요합니다. 이번 글에서는 RESTful API 설계의 핵심 원칙과 그 원칙을 예시를 통해 자세히 살펴보겠습니다. 이 원칙들을 준수하면 API의 일관성과 확장성을 높이고, 개발자들에게 편의성을 제공할 수 있습니다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-자원리소스-기반-uri&#34;&gt;1. 자원(리소스) 기반 URI&lt;/h2&gt;&#xA;&lt;p&gt;자원(리소스) 기반 URI는 RESTful API의 핵심입니다. 각 자원은 고유한 URI(Uniform Resource Identifier)를 가지며, 이를 통해 자원을 식별합니다. 자원 기반 URI는 설계의 일관성을 유지하고 의미를 명확하게 전달하는 데 도움을 줍니다. 예를 들어, 다음과 같은 URI를 사용하여 각각의 리소스를 다룰 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>tmux</title>
      <link>http://localhost:1313/temp/tmux/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/temp/tmux/</guid>
      <description>&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250117105337.png&#34; alt=&#34;Pasted image 20250117105337 (Image resource not found)&#34; &gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250117105406.png&#34; alt=&#34;Pasted image 20250117105406 (Image resource not found)&#34; &gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250117105309.png&#34; alt=&#34;Pasted image 20250117105309 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;tmux&lt;/code&gt;는 터미널 멀티플렉서로, 하나의 터미널 창에서 여러 세션을 관리할 수 있게 해줍니다. 아래에 &lt;code&gt;tmux&lt;/code&gt;의 기본 사용법(생성, 접근, 종료 등)을 정리해 드릴게요.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-1-tmux-설치-확인-리눅스-기준&#34;&gt;🔹 1. tmux 설치 확인 (리눅스 기준)&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tmux -V  &lt;span style=&#34;color:#75715e&#34;&gt;# 버전 확인&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;설치가 필요하다면:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;우분투/데비안:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt install tmux&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;CentOS:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo yum install tmux&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;macOS (Homebrew):&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brew install tmux&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-2-세션-생성&#34;&gt;🔹 2. 세션 생성&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tmux new -s &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;세션이름&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;예시:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
