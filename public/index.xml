<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>My Test Site</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on My Test Site</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <lastBuildDate>Sun, 19 Oct 2025 23:19:10 +0900</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>signal 차이 unix(macos) vs linux</title>
      <link>http://localhost:1313/signal-%EC%B0%A8%EC%9D%B4-unixmacos-vs-linux/</link>
      <pubDate>Sun, 19 Oct 2025 23:19:10 +0900</pubDate>
      <guid>http://localhost:1313/signal-%EC%B0%A8%EC%9D%B4-unixmacos-vs-linux/</guid>
      <description>&lt;h2 id=&#34;macos와-linux의-신호signal-상세-분석&#34;&gt;macOS와 Linux의 신호(Signal) 상세 분석&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;시그널 이름&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;macOS 기본 동작&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;macOS 설명&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;Linux 기본 동작&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;Linux 설명 (Comment)&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;차이점 / 비고&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;SIGHUP&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;프로세스 종료&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;터미널 라인 끊김&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Term&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;제어 터미널에서 끊김 감지 또는 제어 프로세스 종료&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;설명은 유사하며, 둘 다 프로세스를 종료합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;SIGINT&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;프로세스 종료&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;프로그램 인터럽트&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Term&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;키보드로부터의 인터럽트&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;유사하며, 둘 다 프로세스를 종료하며, 주로 Ctrl+C로 발생합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;SIGQUIT&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;코어 이미지 생성&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;프로그램 종료&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Core&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;키보드로부터의 종료&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;둘 다 코어 덤프를 생성하고 종료합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;SIGILL&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;코어 이미지 생성&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;불법 명령어&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Core&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;불법 명령어 (Illegal Instruction)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;둘 다 코어 덤프를 생성합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;SIGTRAP&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;코어 이미지 생성&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;트레이스 트랩&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Core&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;트레이스/브레이크포인트 트랩&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;둘 다 코어 덤프를 생성합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;SIGABRT&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;코어 이미지 생성&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;프로그램 중단 (이전 SIGIOT)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Core&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;abort(3)로부터의 중단 시그널&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;둘 다 코어 덤프를 생성합니다. Linux는 &lt;code&gt;abort(3)&lt;/code&gt;로부터 발생한다고 명시합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;SIGEMT&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;코어 이미지 생성&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;명령어 에뮬레이트 실행&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Term&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;에뮬레이터 트랩&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;차이점:&lt;/strong&gt; macOS는 코어 이미지를 생성하지만, Linux는 프로세스를 종료합니다. 이는 &amp;ldquo;에뮬레이터 트랩&amp;rdquo; 조건에 대한 다른 처리를 나타낼 수 있습니다. Linux는 이 시그널에 대한 명시적인 코어 덤프 동작이 없습니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;SIGFPE&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;코어 이미지 생성&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;부동 소수점 예외&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Core&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;부동 소수점 예외&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;둘 다 코어 덤프를 생성합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;SIGKILL&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;프로세스 종료&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;프로그램 강제 종료&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Term&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;강제 종료 시그널&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;둘 다 프로세스를 종료하며, 포착하거나 무시할 수 없습니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;SIGBUS&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;코어 이미지 생성&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;버스 에러&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Core&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;버스 에러 (잘못된 메모리 접근)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;둘 다 코어 덤프를 생성합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;SIGSEGV&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;코어 이미지 생성&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;세그멘테이션 위반&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Core&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;유효하지 않은 메모리 참조&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;둘 다 코어 덤프를 생성합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;SIGSYS&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;코어 이미지 생성&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;존재하지 않는 시스템 콜 호출&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Core&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;잘못된 시스템 콜 (SVr4); seccomp(2) 참조&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;둘 다 코어 덤프를 생성합니다. Linux는 &lt;code&gt;seccomp(2)&lt;/code&gt;에 대한 추가 컨텍스트를 제공합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;SIGPIPE&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;프로세스 종료&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;리더 없는 파이프에 쓰기&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Term&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;파이프 깨짐: 리더 없는 파이프에 쓰기; pipe(7) 참조&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;둘 다 프로세스를 종료합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;SIGALRM&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;프로세스 종료&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;실시간 타이머 만료&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Term&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;alarm(2)로부터의 타이머 시그널&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;둘 다 프로세스를 종료합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;SIGTERM&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;프로세스 종료&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;소프트웨어 종료 시그널&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Term&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;종료 시그널&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;둘 다 프로세스를 종료합니다. 이것은 기본 종료 시그널입니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;SIGURG&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;시그널 무시&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;소켓에 긴급 조건 발생&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ign&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;소켓의 긴급 조건 (4.2BSD)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;둘 다 시그널을 무시합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;SIGSTOP&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;프로세스 중지&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;중지 (포착하거나 무시할 수 없음)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Stop&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;프로세스 중지&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;둘 다 프로세스를 중지하며 포착하거나 무시할 수 없습니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;SIGTSTP&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;프로세스 중지&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;키보드로부터 발생한 중지 시그널&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Stop&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;터미널에서 입력된 중지&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;둘 다 프로세스를 중지하며, 주로 Ctrl+Z로 발생합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;SIGCONT&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;시그널 무시&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;중지 후 계속 진행&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Cont&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;중지 후 계속 진행&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;둘 다 중지된 프로세스를 계속 진행합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;SIGCHLD&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;시그널 무시&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;자식 상태 변경됨&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ign&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;자식 프로세스 중지 또는 종료&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;둘 다 기본적으로 시그널을 무시합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;SIGTTIN&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;프로세스 중지&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;제어 터미널에서 백그라운드 읽기 시도&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Stop&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;백그라운드 프로세스를 위한 터미널 입력&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;둘 다 프로세스를 중지합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;SIGTTOU&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;프로세스 중지&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;제어 터미널에 백그라운드 쓰기 시도&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Stop&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;백그라운드 프로세스를 위한 터미널 출력&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;둘 다 프로세스를 중지합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;SIGIO&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;시그널 무시&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;디스크립터에서 I/O 가능 (fcntl(2) 참조)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Term&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;I/O 이제 가능 (4.2BSD)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;차이점:&lt;/strong&gt; macOS는 기본적으로 이 시그널을 무시하는 반면, Linux는 프로세스를 종료합니다. Linux는 또한 &lt;code&gt;SIGPOLL&lt;/code&gt;의 동의어라고 명시합니다. 이는 중요한 행동 차이입니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;SIGXCPU&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;프로세스 종료&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;CPU 시간 제한 초과 (setrlimit(2) 참조)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Core&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;CPU 시간 제한 초과 (4.2BSD); setrlimit(2) 참조&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;차이점:&lt;/strong&gt; macOS는 프로세스를 종료하는 반면, Linux는 코어 덤프를 생성합니다. 둘 다 &lt;code&gt;setrlimit(2)&lt;/code&gt;를 인정합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;SIGXFSZ&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;프로세스 종료&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;파일 크기 제한 초과 (setrlimit(2) 참조)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Core&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;파일 크기 제한 초과 (4.2BSD); setrlimit(2) 참조&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;차이점:&lt;/strong&gt; macOS는 프로세스를 종료하는 반면, Linux는 코어 덤프를 생성합니다. 둘 다 &lt;code&gt;setrlimit(2)&lt;/code&gt;를 인정합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;SIGVTALRM&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;프로세스 종료&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;가상 시간 알람 (setitimer(2) 참조)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Term&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;가상 알람 시계 (4.2BSD)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;둘 다 프로세스를 종료합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;SIGPROF&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;프로세스 종료&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;프로파일링 타이머 알람 (setitimer(2) 참조)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Term&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;프로파일링 타이머 만료&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;둘 다 프로세스를 종료합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;SIGWINCH&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;시그널 무시&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;윈도우 크기 변경&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ign&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;윈도우 크기 변경 시그널 (4.3BSD, Sun)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;둘 다 시그널을 무시합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;SIGINFO&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;시그널 무시&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;키보드로부터의 상태 요청&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;- (&lt;code&gt;SIGPWR&lt;/code&gt;의 동의어)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;SIGPWR&lt;/code&gt;의 동의어 (기본적으로 Term)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;차이점:&lt;/strong&gt; macOS는 &lt;code&gt;SIGINFO&lt;/code&gt;를 상태 요청(예: Ctrl+T)을 위한 별개의 무시 가능한 시그널로 처리합니다. Linux는 &lt;code&gt;SIGINFO&lt;/code&gt;를 &lt;code&gt;SIGPWR&lt;/code&gt;의 동의어로 나열하며, 이는 기본적으로 종료됩니다. 이름과 기본 동작 모두에서 중요한 차이가 있습니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;SIGUSR1&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;프로세스 종료&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;사용자 정의 시그널 1&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Term&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;사용자 정의 시그널 1&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;둘 다 프로세스를 종료합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;SIGUSR2&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;프로세스 종료&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;사용자 정의 시그널 2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Term&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;사용자 정의 시그널 2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;둘 다 프로세스를 종료합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;SIGCLD&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;(macOS에 없음)&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Ign&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;SIGCHLD&lt;/code&gt;의 동의어&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;Linux 전용:&lt;/strong&gt; &lt;code&gt;SIGCHLD&lt;/code&gt;의 동의어입니다. macOS에는 &lt;code&gt;SIGCLD&lt;/code&gt;가 별개의 시그널로 나열되지 않습니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;SIGIOT&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;(macOS에 없음)&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Core&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;IOT 트랩. &lt;code&gt;SIGABRT&lt;/code&gt;의 동의어&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;Linux 전용:&lt;/strong&gt; &lt;code&gt;SIGABRT&lt;/code&gt;의 동의어로 나열됩니다. macOS는 &lt;code&gt;SIGABRT&lt;/code&gt;가 &amp;ldquo;이전 SIGIOT&amp;quot;였다고 언급하지만, &lt;code&gt;SIGIOT&lt;/code&gt;를 별개의 시그널로 나열하지는 않습니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;SIGLOST&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;(macOS에 없음)&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Term&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;파일 잠금 손실 (사용되지 않음)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;Linux 전용:&lt;/strong&gt; 파일 잠금과 관련된 시그널이며 &amp;ldquo;사용되지 않음&amp;quot;으로 나열됩니다. macOS에는 없습니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;SIGPOLL&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;(macOS에 없음)&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Term&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;폴링 가능한 이벤트 (Sys V); &lt;code&gt;SIGIO&lt;/code&gt;의 동의어&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;Linux 전용:&lt;/strong&gt; &lt;code&gt;SIGIO&lt;/code&gt;의 동의어입니다. macOS에는 없습니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;SIGPWR&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;(macOS에 없음)&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Term&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;전원 장애 (System V)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;Linux 전용:&lt;/strong&gt; 전원 장애 이벤트에 대한 시그널입니다. Linux의 &lt;code&gt;SIGINFO&lt;/code&gt;는 이것의 동의어이며, 이는 macOS의 &lt;code&gt;SIGINFO&lt;/code&gt;와는 큰 차이입니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;SIGSTKFLT&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;(macOS에 없음)&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Term&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;보조 프로세서의 스택 오류 (사용되지 않음)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;Linux 전용:&lt;/strong&gt; 보조 프로세서의 스택 오류에 대한 시그널이며 &amp;ldquo;사용되지 않음&amp;quot;으로 나열됩니다. macOS에는 없습니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;SIGUNUSED&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;(macOS에 없음)&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Core&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;SIGSYS&lt;/code&gt;와 동의어&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;Linux 전용:&lt;/strong&gt; &lt;code&gt;SIGSYS&lt;/code&gt;의 동의어입니다. macOS에는 없습니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;주요-차이점-요약&#34;&gt;주요 차이점 요약:&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;특정 시그널의 기본 동작:&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Doxyzen 키워드</title>
      <link>http://localhost:1313/02.inbox/doxyzen-%ED%82%A4%EC%9B%8C%EB%93%9C/</link>
      <pubDate>Sun, 19 Oct 2025 22:15:15 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/doxyzen-%ED%82%A4%EC%9B%8C%EB%93%9C/</guid>
      <description>&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;키워드&lt;/th&gt;&#xA;          &lt;th&gt;용도&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;@brief&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;짧은 설명&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;@param&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;매개변수 설명&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;@return&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;반환값 설명&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;@pre&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;함수를 호출하기 전에 만족되어야 할 조건 (호출자 책임)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;@post&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;함수 실행 후 보장되는 상태 (구현자 책임)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;@throws&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;예외 명시&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;@note&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;부가 정보&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;@warning&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;경고&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;@see&lt;/code&gt;/&lt;code&gt;@ref&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;관련 항목 참조&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;@deprecated&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;사용 중단 알림&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;@todo&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;향후 작업&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;@invariant&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;불변 조건 (클래스용)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;@author&lt;/code&gt;,&lt;code&gt;@date&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;메타 정보&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;brief&#34;&gt;&lt;code&gt;@brief&lt;/code&gt;&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;용도&lt;/strong&gt;: 함수, 클래스, 변수 등의 간결한 요약 설명을 제공합니다. 자동 생성 문서에서 제목처럼 사용되며, 첫 문장으로 쓰는 것이 일반적입니다. 길이 제한은 없지만 한 문장이 이상적입니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>백엔드 구조 변화 역사</title>
      <link>http://localhost:1313/02.inbox/%EB%B0%B1%EC%97%94%EB%93%9C-%EA%B5%AC%EC%A1%B0-%EB%B3%80%ED%99%94-%EC%97%AD%EC%82%AC/</link>
      <pubDate>Sun, 19 Oct 2025 18:28:32 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EB%B0%B1%EC%97%94%EB%93%9C-%EA%B5%AC%EC%A1%B0-%EB%B3%80%ED%99%94-%EC%97%AD%EC%82%AC/</guid>
      <description>&lt;h2 id=&#34;모델-1에서-모델-2로의-진화-웹-개발-아키텍처-심층-분석&#34;&gt;모델 1에서 모델 2로의 진화: 웹 개발 아키텍처 심층 분석&lt;/h2&gt;&#xA;&lt;p&gt;현대 백엔드 개발의 핵심 철학&lt;/p&gt;&#xA;&lt;h3 id=&#34;서론-왜-아키텍처는-중요한가&#34;&gt;서론: 왜 아키텍처는 중요한가?&lt;/h3&gt;&#xA;&lt;p&gt;소프트웨어 개발은 단순히 &amp;lsquo;동작하는 코드&amp;rsquo;를 만드는 행위에서 그치지 않습니다. 시간이 지나면서 요구사항은 끊임없이 변화하고, 새로운 기술이 등장하며, 비즈니스는 확장됩니다. 이러한 변화의 파도 속에서 흔들리지 않는 견고하고 유연한 시스템을 구축하는 것, 이것이 바로 &amp;lsquo;아키텍처&amp;rsquo;의 역할입니다. 제공된 텍스트는 웹 애플리케이션 개발 아키텍처의 중요한 변곡점인 &lt;strong&gt;모델 1&lt;/strong&gt;과 &lt;strong&gt;모델 2&lt;/strong&gt;의 차이를 통해, 좋은 아키텍처가 무엇이며 어떻게 발전해 왔는지를 심도 있게 이야기하고 있습니다. 이는 단순히 기술의 변화가 아닌, &amp;lsquo;문제 해결 방식&amp;rsquo;에 대한 패러다임의 전환을 의미합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>코어 덤프(Core Dump)</title>
      <link>http://localhost:1313/%EC%BD%94%EC%96%B4-%EB%8D%A4%ED%94%84core-dump/</link>
      <pubDate>Sun, 19 Oct 2025 16:12:19 +0900</pubDate>
      <guid>http://localhost:1313/%EC%BD%94%EC%96%B4-%EB%8D%A4%ED%94%84core-dump/</guid>
      <description>&lt;h2 id=&#34;코어-덤프core-dump란-무엇인가---프로세스의-마지막-순간을-담은-사진&#34;&gt;코어 덤프(Core Dump)란 무엇인가? - &amp;ldquo;프로세스의 마지막 순간을 담은 사진&amp;rdquo;&lt;/h2&gt;&#xA;&lt;p&gt;코어 덤프(Core Dump)는 프로그래밍과 시스템 관리에서 매우 중요한 개념입니다. 가장 쉽게 비유하자면, **코어 덤프는 특정 프로그램(프로세스)이 비정상적으로 종료되는 바로 그 순간의 메모리 상태를 그대로 찍어 저장한 &amp;ldquo;스냅샷 파일&amp;rdquo;**입니다. 마치 비행기 사고 시 원인 분석을 위해 블랙박스를 회수하는 것과 같습니다.&lt;/p&gt;&#xA;&lt;h3 id=&#34;1-코어core-라는-이름의-유래&#34;&gt;1. &amp;ldquo;코어(Core)&amp;rdquo; 라는 이름의 유래&lt;/h3&gt;&#xA;&lt;p&gt;이름이 조금 생소할 수 있습니다. &amp;ldquo;코어&amp;quot;라는 단어는 현대의 CPU 코어를 의미하는 것이 아닙니다. 이는 아주 오래전, 컴퓨터의 주기억장치로 **자기 코어 메모리(Magnetic Core Memory)**를 사용하던 시절에서 유래했습니다. 당시 메모리의 내용을 파일로 &amp;lsquo;쏟아낸다(dump)&amp;lsquo;는 의미에서 &amp;lsquo;코어 덤프&amp;rsquo;라는 용어가 탄생했고, 메모리 기술이 반도체로 바뀐 지금까지도 그 이름이 그대로 사용되고 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Translate to Chinese</title>
      <link>http://localhost:1313/copilot/copilot-custom-prompts/translate-to-chinese/</link>
      <pubDate>Sun, 19 Oct 2025 16:12:05 +0900</pubDate>
      <guid>http://localhost:1313/copilot/copilot-custom-prompts/translate-to-chinese/</guid>
      <description>&lt;p&gt;Translate {} into Chinese:&#xA;1. Preserve the meaning and tone&#xA;2. Maintain appropriate cultural context&#xA;3. Keep formatting and structure&#xA;Return only the translated text.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Summarize</title>
      <link>http://localhost:1313/copilot/copilot-custom-prompts/summarize/</link>
      <pubDate>Fri, 17 Oct 2025 22:46:43 +0900</pubDate>
      <guid>http://localhost:1313/copilot/copilot-custom-prompts/summarize/</guid>
      <description>&lt;p&gt;Create a bullet-point summary of {}. Each bullet point should capture a key point. Return only the bullet-point summary.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Rewrite as tweet thread</title>
      <link>http://localhost:1313/copilot/copilot-custom-prompts/rewrite-as-tweet-thread/</link>
      <pubDate>Fri, 17 Oct 2025 22:46:42 +0900</pubDate>
      <guid>http://localhost:1313/copilot/copilot-custom-prompts/rewrite-as-tweet-thread/</guid>
      <description>&lt;p&gt;Convert {} into a Twitter thread following these rules:&#xA;1. Each tweet must be under 240 characters&#xA;2. Start with &amp;ldquo;THREAD START&amp;rdquo; on its own line&#xA;3. Separate tweets with &amp;quot;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;&amp;quot;&#xA;4. End with &amp;ldquo;THREAD END&amp;rdquo; on its own line&#xA;5. Make content engaging and clear&#xA;Return only the formatted thread.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Simplify</title>
      <link>http://localhost:1313/copilot/copilot-custom-prompts/simplify/</link>
      <pubDate>Fri, 17 Oct 2025 22:46:42 +0900</pubDate>
      <guid>http://localhost:1313/copilot/copilot-custom-prompts/simplify/</guid>
      <description>&lt;p&gt;Simplify {} to a 6th-grade reading level (ages 11-12). Use simple sentences, common words, and clear explanations. Maintain the original key concepts. Return only the simplified text.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Rewrite as tweet</title>
      <link>http://localhost:1313/copilot/copilot-custom-prompts/rewrite-as-tweet/</link>
      <pubDate>Fri, 17 Oct 2025 22:46:40 +0900</pubDate>
      <guid>http://localhost:1313/copilot/copilot-custom-prompts/rewrite-as-tweet/</guid>
      <description>&lt;p&gt;Rewrite {} as a single tweet with these requirements:&#xA;1. Maximum 280 characters&#xA;2. Use concise, impactful language&#xA;3. Maintain the core message&#xA;Return only the tweet text.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Remove URLs</title>
      <link>http://localhost:1313/copilot/copilot-custom-prompts/remove-urls/</link>
      <pubDate>Fri, 17 Oct 2025 22:46:39 +0900</pubDate>
      <guid>http://localhost:1313/copilot/copilot-custom-prompts/remove-urls/</guid>
      <description>&lt;p&gt;Remove all URLs from {}. Preserve all other content and formatting. URLs may be in various formats (http, https, www). Return only the text with URLs removed.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Make longer</title>
      <link>http://localhost:1313/copilot/copilot-custom-prompts/make-longer/</link>
      <pubDate>Fri, 17 Oct 2025 22:46:38 +0900</pubDate>
      <guid>http://localhost:1313/copilot/copilot-custom-prompts/make-longer/</guid>
      <description>&lt;p&gt;Expand {} to twice its length by:&#xA;1. Adding relevant details and examples&#xA;2. Elaborating on key points&#xA;3. Maintaining the original tone and style&#xA;Return only the expanded text.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Generate table of contents</title>
      <link>http://localhost:1313/copilot/copilot-custom-prompts/generate-table-of-contents/</link>
      <pubDate>Fri, 17 Oct 2025 22:46:37 +0900</pubDate>
      <guid>http://localhost:1313/copilot/copilot-custom-prompts/generate-table-of-contents/</guid>
      <description>&lt;p&gt;Generate a hierarchical table of contents for {}. Use appropriate heading levels (H1, H2, H3, etc.). Include page numbers if present. Return only the table of contents.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Generate glossary</title>
      <link>http://localhost:1313/copilot/copilot-custom-prompts/generate-glossary/</link>
      <pubDate>Fri, 17 Oct 2025 22:46:36 +0900</pubDate>
      <guid>http://localhost:1313/copilot/copilot-custom-prompts/generate-glossary/</guid>
      <description>&lt;p&gt;Create a glossary of important terms, concepts, and phrases from {}. Format each entry as &amp;ldquo;Term: Definition&amp;rdquo;. Sort entries alphabetically. Return only the glossary.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Explain like I am 5</title>
      <link>http://localhost:1313/copilot/copilot-custom-prompts/explain-like-i-am-5/</link>
      <pubDate>Fri, 17 Oct 2025 22:46:29 +0900</pubDate>
      <guid>http://localhost:1313/copilot/copilot-custom-prompts/explain-like-i-am-5/</guid>
      <description>&lt;p&gt;Explain {} in simple terms that a 5-year-old would understand:&#xA;1. Use basic vocabulary&#xA;2. Include simple analogies&#xA;3. Break down complex concepts&#xA;Return only the simplified explanation.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Fix grammar and spelling</title>
      <link>http://localhost:1313/copilot/copilot-custom-prompts/fix-grammar-and-spelling/</link>
      <pubDate>Fri, 17 Oct 2025 22:46:29 +0900</pubDate>
      <guid>http://localhost:1313/copilot/copilot-custom-prompts/fix-grammar-and-spelling/</guid>
      <description>&lt;p&gt;Fix the grammar and spelling of {}. Preserve all formatting, line breaks, and special characters. Do not add or remove any content. Return only the corrected text.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Emojify</title>
      <link>http://localhost:1313/copilot/copilot-custom-prompts/emojify/</link>
      <pubDate>Fri, 17 Oct 2025 22:46:26 +0900</pubDate>
      <guid>http://localhost:1313/copilot/copilot-custom-prompts/emojify/</guid>
      <description>&lt;p&gt;Add relevant emojis to enhance {}. Follow these rules:&#xA;1. Insert emojis at natural breaks in the text&#xA;2. Never place two emojis next to each other&#xA;3. Keep all original text unchanged&#xA;4. Choose emojis that match the context and tone&#xA;Return only the emojified text.&lt;/p&gt;</description>
    </item>
    <item>
      <title>그래서 컴퓨터는 어떻게 동작하나요 1</title>
      <link>http://localhost:1313/02.inbox/%EA%B7%B8%EB%9E%98%EC%84%9C-%EC%BB%B4%ED%93%A8%ED%84%B0%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8F%99%EC%9E%91%ED%95%98%EB%82%98%EC%9A%94/%EA%B7%B8%EB%9E%98%EC%84%9C-%EC%BB%B4%ED%93%A8%ED%84%B0%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8F%99%EC%9E%91%ED%95%98%EB%82%98%EC%9A%94-1/</link>
      <pubDate>Sun, 12 Oct 2025 15:43:22 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EA%B7%B8%EB%9E%98%EC%84%9C-%EC%BB%B4%ED%93%A8%ED%84%B0%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8F%99%EC%9E%91%ED%95%98%EB%82%98%EC%9A%94/%EA%B7%B8%EB%9E%98%EC%84%9C-%EC%BB%B4%ED%93%A8%ED%84%B0%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8F%99%EC%9E%91%ED%95%98%EB%82%98%EC%9A%94-1/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;WORD : CPU 에 의해 한번에 처리될 수 있는 비트 수&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;sr-latch&#34;&gt;SR latch&lt;/h2&gt;&#xA;&lt;p&gt;NOR 게이트를 사용한 SR 래치는 기본적인 SR 래치로, 아래와 같이 작동합니다.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;두 개의 NOR 게이트를 교차 연결합니다.&lt;/li&gt;&#xA;&lt;li&gt;입력은 S(Set)와 R(Reset)입니다&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;S&lt;/th&gt;&#xA;          &lt;th&gt;R&lt;/th&gt;&#xA;          &lt;th&gt;Q (다음 상태)&lt;/th&gt;&#xA;          &lt;th&gt;¬Q (다음 상태)&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0&lt;/td&gt;&#xA;          &lt;td&gt;0&lt;/td&gt;&#xA;          &lt;td&gt;Q (이전 상태)&lt;/td&gt;&#xA;          &lt;td&gt;¬Q (이전 상태)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0&lt;/td&gt;&#xA;          &lt;td&gt;1&lt;/td&gt;&#xA;          &lt;td&gt;0&lt;/td&gt;&#xA;          &lt;td&gt;1&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;1&lt;/td&gt;&#xA;          &lt;td&gt;0&lt;/td&gt;&#xA;          &lt;td&gt;1&lt;/td&gt;&#xA;          &lt;td&gt;0&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;1&lt;/td&gt;&#xA;          &lt;td&gt;1&lt;/td&gt;&#xA;          &lt;td&gt;불안정&lt;/td&gt;&#xA;          &lt;td&gt;불안정&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;NAND 게이트를 사용한 SR 래치는 약간 다르게 동작합니다. 이 경우에는 입력을 보통 S&amp;rsquo;와 R&amp;rsquo;으로 표기합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>디버거 cli 명령어 모음</title>
      <link>http://localhost:1313/02.inbox/%EB%94%94%EB%B2%84%EA%B1%B0-cli-%EB%AA%85%EB%A0%B9%EC%96%B4-%EB%AA%A8%EC%9D%8C/</link>
      <pubDate>Sat, 11 Oct 2025 13:27:52 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EB%94%94%EB%B2%84%EA%B1%B0-cli-%EB%AA%85%EB%A0%B9%EC%96%B4-%EB%AA%A8%EC%9D%8C/</guid>
      <description>&lt;h2 id=&#34;gdb&#34;&gt;GDB&lt;/h2&gt;&#xA;&lt;h3 id=&#34;-기본-실행-및-종료&#34;&gt;🔹 &lt;strong&gt;기본 실행 및 종료&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;명령어&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;gdb &amp;lt;executable&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;실행 파일로 GDB 시작&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;run&lt;/code&gt; 또는 &lt;code&gt;r&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;프로그램 실행 (인자: &lt;code&gt;run arg1 arg2&lt;/code&gt;)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;quit&lt;/code&gt; 또는 &lt;code&gt;q&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;GDB 종료&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-중단점-breakpoint&#34;&gt;🔹 &lt;strong&gt;중단점 (Breakpoint)&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;명령어&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;break main.cpp:10&lt;/code&gt; 또는 &lt;code&gt;b main.cpp:10&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;파일의 특정 라인에 중단점 설정&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;break main&lt;/code&gt; 또는 &lt;code&gt;b main&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;함수 이름에 중단점 설정&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;info breakpoints&lt;/code&gt; 또는 &lt;code&gt;i b&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;현재 중단점 목록 보기&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;delete 1&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;ID가 1인 중단점 삭제&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;disable 1&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;중단점 비활성화&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;enable 1&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;중단점 활성화&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;clear main.cpp:10&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;특정 위치의 중단점 제거&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-스텝-실행-stepping&#34;&gt;🔹 &lt;strong&gt;스텝 실행 (Stepping)&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;명령어&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;step&lt;/code&gt; 또는 &lt;code&gt;s&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;한 줄 실행 (함수 내부로 들어감)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;next&lt;/code&gt; 또는 &lt;code&gt;n&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;한 줄 실행 (함수 내부로 안 들어감)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;finish&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;현재 함수 끝까지 실행 후 반환&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;continue&lt;/code&gt; 또는 &lt;code&gt;c&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;다음 중단점까지 실행&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-변수-및-메모리-보기&#34;&gt;🔹 &lt;strong&gt;변수 및 메모리 보기&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;명령어&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;print &amp;lt;var&amp;gt;&lt;/code&gt; 또는 &lt;code&gt;p &amp;lt;var&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;변수 값 출력 (식 평가 가능)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;display &amp;lt;var&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;매 스텝마다 자동으로 변수 출력&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;undisplay 1&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;display 목록에서 제거&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;x/16xb 0x12345678&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;메모리 덤프 (&lt;code&gt;x/[count][format][size] address&lt;/code&gt;)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;set variable x = 10&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;변수 값 변경&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-스택-및-프레임&#34;&gt;🔹 &lt;strong&gt;스택 및 프레임&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;명령어&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;backtrace&lt;/code&gt; 또는 &lt;code&gt;bt&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;콜 스택 출력&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;frame 2&lt;/code&gt; 또는 &lt;code&gt;f 2&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;특정 프레임으로 이동&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;up&lt;/code&gt; / &lt;code&gt;down&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;스택 프레임 위/아래로 이동&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-프로세스-및-스레드&#34;&gt;🔹 &lt;strong&gt;프로세스 및 스레드&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;명령어&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;info threads&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;현재 스레드 목록&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;thread 2&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;특정 스레드로 전환&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;kill&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;디버그 중인 프로세스 강제 종료&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-도움말-및-설정&#34;&gt;🔹 &lt;strong&gt;도움말 및 설정&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;명령어&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;help&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;전체 도움말&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;help &amp;lt;command&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;특정 명령어에 대한 도움말&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;set args arg1 arg2&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;실행 인자 설정&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;run &amp;lt; input.txt&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;표준 입력 리다이렉션 (쉘 수준에서 처리)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;set environment VAR=value&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;환경 변수 설정&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-lldb--gdb-명령어-비교-참고&#34;&gt;🔹 &lt;strong&gt;LLDB ↔ GDB 명령어 비교 (참고)&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;LLDB&lt;/th&gt;&#xA;          &lt;th&gt;GDB&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;b main&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;b main&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;br list&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;info breakpoints&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;v&lt;/code&gt; 또는 &lt;code&gt;frame variable&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;info locals&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;expr x = 5&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;set variable x = 5&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;process launch&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;run&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;memory read&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;x/...&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;settings set target.run-args ...&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;set args ...&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-팁&#34;&gt;💡 팁&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;GDB는 &lt;code&gt;.gdbinit&lt;/code&gt; 파일을 통해 시작 시 자동으로 명령어를 실행할 수 있습니다.&lt;/li&gt;&#xA;&lt;li&gt;최신 GDB(8.0+)는 Python 스크립팅을 지원하여 고급 디버깅이 가능합니다.&lt;/li&gt;&#xA;&lt;li&gt;ARM64 환경에서도 잘 작동하지만, 크로스 디버깅 시 &lt;code&gt;gdb-multiarch&lt;/code&gt;나 대상 아키텍처 전용 GDB를 사용해야 할 수 있습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;lldb&#34;&gt;LLDB&lt;/h2&gt;&#xA;&lt;h3 id=&#34;-기본-실행-및-종료-1&#34;&gt;🔹 &lt;strong&gt;기본 실행 및 종료&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;명령어&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;lldb &amp;lt;executable&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;실행 파일로 LLDB 시작&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;run&lt;/code&gt; 또는 &lt;code&gt;r&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;프로그램 실행&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;process launch&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;프로그램 실행 (옵션 사용 가능)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;quit&lt;/code&gt; 또는 &lt;code&gt;q&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;LLDB 종료&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-중단점-breakpoint-1&#34;&gt;🔹 &lt;strong&gt;중단점 (Breakpoint)&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;명령어&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;breakpoint set --file main.cpp --line 10&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;파일의 특정 라인에 중단점 설정&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;b main.cpp:10&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;위와 동일 (간단한 형태)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;breakpoint set --name main&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;함수 이름에 중단점 설정&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;b main&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;위와 동일&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;breakpoint list&lt;/code&gt; 또는 &lt;code&gt;br list&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;현재 중단점 목록 보기&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;breakpoint delete 1&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;ID가 1인 중단점 삭제&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;breakpoint disable 1&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;중단점 비활성화&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;breakpoint enable 1&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;중단점 활성화&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-스텝-실행-stepping-1&#34;&gt;🔹 &lt;strong&gt;스텝 실행 (Stepping)&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;명령어&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;step&lt;/code&gt; 또는 &lt;code&gt;s&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;한 줄 실행 (함수 내부로 들어감)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;next&lt;/code&gt; 또는 &lt;code&gt;n&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;한 줄 실행 (함수 내부로 안 들어감)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;finish&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;현재 함수 끝까지 실행 후 반환&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;continue&lt;/code&gt; 또는 &lt;code&gt;c&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;다음 중단점까지 실행&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-변수-및-메모리-보기-1&#34;&gt;🔹 &lt;strong&gt;변수 및 메모리 보기&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;명령어&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;frame variable&lt;/code&gt; 또는 &lt;code&gt;v&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;현재 프레임의 지역 변수 출력&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;print &amp;lt;var&amp;gt;&lt;/code&gt; 또는 &lt;code&gt;p &amp;lt;var&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;변수 값 출력 (식 평가 가능)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;expr &amp;lt;expression&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;표현식 평가 및 실행 (변수 수정도 가능)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;memory read --size 1 --count 16 0x12345678&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;메모리 덤프&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-스택-및-프레임-1&#34;&gt;🔹 &lt;strong&gt;스택 및 프레임&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;명령어&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;bt&lt;/code&gt; 또는 &lt;code&gt;thread backtrace&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;콜 스택 출력&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;frame select 2&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;특정 프레임으로 이동&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;up&lt;/code&gt; / &lt;code&gt;down&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;스택 프레임 위/아래로 이동&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-프로세스-및-스레드-1&#34;&gt;🔹 &lt;strong&gt;프로세스 및 스레드&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;명령어&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;thread list&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;현재 스레드 목록&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;process status&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;현재 프로세스 상태 확인&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;process kill&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;디버그 중인 프로세스 강제 종료&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-도움말-및-설정-1&#34;&gt;🔹 &lt;strong&gt;도움말 및 설정&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;명령어&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;help&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;전체 도움말&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;help &amp;lt;command&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;특정 명령어에 대한 도움말&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;settings set target.run-args arg1 arg2&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;실행 인자 설정&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;settings set target.input-path input.txt&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;표준 입력 리다이렉션&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-gdb--lldb-명령어-비교-참고&#34;&gt;🔹 &lt;strong&gt;GDB ↔ LLDB 명령어 비교 (참고)&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;GDB&lt;/th&gt;&#xA;          &lt;th&gt;LLDB&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;run&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;run&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;break main&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;b main&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;step&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;step&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;next&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;next&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;print x&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;p x&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;info breakpoints&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;br list&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;bt&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;bt&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;</description>
    </item>
    <item>
      <title>c,c&#43;&#43; vs code</title>
      <link>http://localhost:1313/02.inbox/cc&#43;&#43;-vs-code/</link>
      <pubDate>Sat, 11 Oct 2025 07:35:42 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/cc&#43;&#43;-vs-code/</guid>
      <description>&lt;p&gt;컴파일 시에 다음과 같은 3가지 환경 설정이 필요하다(project 내부에서만 작동)&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;==c_cpp_properties.json== (compiler path and IntelliSense settings)&lt;/li&gt;&#xA;&lt;li&gt;==tasks.json== ==(build instructions)&lt;/li&gt;&#xA;&lt;li&gt;==launch.json== ==(debugger settings)==&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;mac-기준&#34;&gt;mac 기준&lt;/h2&gt;&#xA;&lt;p&gt;task.json&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;tasks&amp;#34;&lt;/span&gt;: [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;//c++ 컴파일러&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;shell&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;clang++ 빌드 및 터미널 실행&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;command&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/usr/bin/clang++&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;args&amp;#34;&lt;/span&gt;: [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-std=c++17&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-fcolor-diagnostics&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-fansi-escape-codes&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-g&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;${file}&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-o&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;${fileDirname}/${fileBasenameNoExtension}&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#75715e&#34;&gt;// 파일 실행부&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;amp;&amp;amp;&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;${fileDirname}/${fileBasenameNoExtension}&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            ],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;options&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;cwd&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;${fileDirname}&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;problemMatcher&amp;#34;&lt;/span&gt;: [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$gcc&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            ],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;group&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;kind&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;build&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;isDefault&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;detail&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;직접 실행 task&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;//c 컴파일러&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;shell&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;clang 빌드 및 터미널 실행&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;command&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/usr/bin/clang&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;args&amp;#34;&lt;/span&gt;: [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-std=c11&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-fcolor-diagnostics&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-fansi-escape-codes&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-g&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;${file}&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-o&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;${fileDirname}/${fileBasenameNoExtension}&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#75715e&#34;&gt;// 파일 실행부&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;amp;&amp;amp;&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;${fileDirname}/${fileBasenameNoExtension}&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            ],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;options&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;cwd&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;${fileDirname}&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;problemMatcher&amp;#34;&lt;/span&gt;: [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$gcc&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            ],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;group&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;kind&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;build&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;isDefault&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;detail&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;직접 실행 task&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;//디버깅시에 사용되는 cpp 빌드 설정&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cppbuild&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C/C++: clang++ 활성 파일 빌드&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;command&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/usr/bin/clang++&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;args&amp;#34;&lt;/span&gt;: [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-std=c++17&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-fcolor-diagnostics&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-fansi-escape-codes&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-g&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;${file}&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-o&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;${fileDirname}/${fileBasenameNoExtension}&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            ],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;options&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;cwd&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;${fileDirname}&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;problemMatcher&amp;#34;&lt;/span&gt;: [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$gcc&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            ],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;group&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;kind&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;build&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;isDefault&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;detail&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;디버거에서 생성된 작업입니다.&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;//디버깅시에 사용되는 c 빌드 설정&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cppbuild&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C/C++: clang 활성 파일 빌드&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;command&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/usr/bin/clang&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;args&amp;#34;&lt;/span&gt;: [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-std=c11&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-fcolor-diagnostics&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-fansi-escape-codes&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-g&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;${file}&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-o&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;${fileDirname}/${fileBasenameNoExtension}&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            ],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;options&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;cwd&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;${fileDirname}&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;problemMatcher&amp;#34;&lt;/span&gt;: [&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$gcc&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            ],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;group&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;kind&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;build&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;isDefault&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;detail&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;디버거에서 생성된 작업입니다.&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;//실행용&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;exec&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;shell&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;command&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;${fileDirname}/${fileBasenameNoExtension}&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;group&amp;#34;&lt;/span&gt;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;kind&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;build&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;isDefault&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;version&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2.0.0&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;launch.json&lt;/p&gt;</description>
    </item>
    <item>
      <title>그래프(graph)</title>
      <link>http://localhost:1313/02.inbox/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8B%A4-with-python/%EA%B7%B8%EB%9E%98%ED%94%84graph/</link>
      <pubDate>Sat, 11 Oct 2025 05:12:07 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8B%A4-with-python/%EA%B7%B8%EB%9E%98%ED%94%84graph/</guid>
      <description>&lt;h2 id=&#34;-그래프의-종류와-개념&#34;&gt;📖 그래프의 종류와 개념&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://localhost:1313/02.inbox/2%EC%9D%98-%EB%B3%B4%EC%88%98%EB%A5%BC-%EC%9D%8C%EC%88%98-%ED%91%9C%ED%98%84%EB%B2%95%EC%9C%BC%EB%A1%9C-%EC%A0%95%ED%95%9C-%EC%9D%B4%EC%9C%A0/&#34; class=&#34;internal-link&#34;&gt;hello&lt;/a&gt;&#xA;&lt;a href=&#34;http://localhost:1313/08.media/Bootloader%20Boot%20Procedure.pdf&#34; class=&#34;internal-file-link&#34;&gt;pdf 테스트&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;그래프는 여러 개의 점(노드 또는 정점)들이 선으로 연결된 구조를 나타내는 &lt;strong&gt;수학적인 개념&lt;/strong&gt;입니다. 그래프는 다양한 현실 세계의 문제를 모델링하고 분석하는 데 사용됩니다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;그래프의-용어&#34;&gt;그래프의 용어&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240428022601.png&#34; alt=&#34;Pasted image 20240428022601 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;dl&gt;&#xA;&lt;dt&gt;&lt;code&gt;노드(Node) 또는 정점(Vertex)&lt;/code&gt; N or V&lt;/dt&gt;&#xA;&lt;dd&gt;그래프에서 하나의 점을 나타냅니다. 노드는 데이터를 저장하는데 사용될 수 있습니다.&lt;br&gt;&#xA;&lt;code&gt;간선(Edge)&lt;/code&gt;  E&lt;/dd&gt;&#xA;&lt;dd&gt;그래프에서 노드와 노드를 연결하는 선을 나타냅니다. 간선은 노드 쌍 사이의 관계를 나타냅니다.&lt;br&gt;&#xA;&lt;code&gt;인접(Adjacent)&lt;/code&gt;&lt;/dd&gt;&#xA;&lt;dd&gt;두 개의 노드가 간선으로 직접 연결되어 있는 상태를 말합니다. 인접한 노드는 서로 이웃이라고도 합니다.&lt;br&gt;&#xA;&lt;code&gt;차수(Degree)&lt;/code&gt;&lt;/dd&gt;&#xA;&lt;dd&gt;&lt;strong&gt;노드에 연결된 간선의 수&lt;/strong&gt;를 나타냅니다. 무방향 그래프에서는 노드의 차수는 해당 노드와 인접한 노드의 수입니다.&lt;br&gt;&#xA;&lt;code&gt;경로(Path)&lt;/code&gt;&lt;/dd&gt;&#xA;&lt;dd&gt;그래프에서 노드들을 연결하는 간선의 순서를 나타내는 순서쌍입니다. 경로의 길이는 경로에 속한 간선의 수입니다.&lt;br&gt;&#xA;&lt;code&gt;사이클(Cycle)&lt;/code&gt;&lt;/dd&gt;&#xA;&lt;dd&gt;그래프에서 동일한 노드로 되돌아오는 경로를 말합니다. 즉, 경로의 시작 노드와 끝 노드가 동일한 경우를 말합니다.&lt;br&gt;&#xA;&lt;code&gt;가중치(Weight)&lt;/code&gt;&lt;/dd&gt;&#xA;&lt;dd&gt;가중치 그래프에서 간선에 할당된 값 또는 비용을 나타냅니다. 가중치는 간선의 특성을 나타내는데 사용됩니다.&lt;/dd&gt;&#xA;&lt;/dl&gt;&#xA;&lt;h2 id=&#34;그래프의-종류&#34;&gt;그래프의 종류&lt;/h2&gt;&#xA;&lt;dl&gt;&#xA;&lt;dt&gt;&lt;code&gt;무방향 그래프&lt;/code&gt; &amp;amp; &lt;code&gt;방향 그래프&lt;/code&gt;&lt;/dt&gt;&#xA;&lt;dd&gt;간선의 방향의 유무에 따라 구분되는 그래프&lt;br&gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240428022606.png&#34; alt=&#34;Pasted image 20240428022606 (Image resource not found)&#34; &gt;&lt;br&gt;&#xA;&lt;code&gt;가중치 그래프&lt;/code&gt;&lt;/dd&gt;&#xA;&lt;dd&gt;그래프에 가중치 또는 비용이 할당된 그래프(네트워크 이론이나 신경망 이론에 활용되는 개념)&lt;br&gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240428022605.png&#34; alt=&#34;Pasted image 20240428022605 (Image resource not found)&#34; &gt;&lt;br&gt;&#xA;&lt;code&gt;연결 그래프&lt;/code&gt; &amp;amp; &lt;code&gt;비연결 그래프&lt;/code&gt;&lt;/dd&gt;&#xA;&lt;dd&gt;모든 노드에 대해 경로가 존재하면 &lt;strong&gt;연결 그래프&lt;/strong&gt;, 특정 노드에 대한 경로가 하나라도 존재하지 않을 경우 &lt;strong&gt;비연결 그래프&lt;/strong&gt;&lt;br&gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240428022602.png&#34; alt=&#34;Pasted image 20240428022602 (Image resource not found)&#34; &gt;&lt;br&gt;&#xA;&lt;code&gt;사이클 그래프&lt;/code&gt; &amp;amp; &lt;code&gt;비순환 그래프&lt;/code&gt;&lt;br&gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240428022603.png&#34; alt=&#34;Pasted image 20240428022603 (Image resource not found)&#34; &gt;&lt;br&gt;&#xA;&lt;code&gt;완전 그래프&lt;/code&gt;&lt;/dd&gt;&#xA;&lt;dd&gt;그래프의 모든 노드가 연결되어 있는 그래프&lt;br&gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240428022604.png&#34; alt=&#34;Pasted image 20240428022604 (Image resource not found)&#34; &gt;&lt;/dd&gt;&#xA;&lt;/dl&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;그래프의-한-종류인-트리에-대해&#34;&gt;그래프의 한 종류인 트리에 대해🧐&lt;/h2&gt;&#xA;&lt;p&gt;트리(Tree)는 그래프(Graph)의 한 종류로, &lt;strong&gt;계층적인 구조&lt;/strong&gt;를 나타내는 &lt;strong&gt;비순환적인 연결 그래프&lt;/strong&gt;입니다. 트리는 하나의 루트(Root) 노드에서 시작하여 다양한 자식(Child) 노드들로 확장되는 구조를 가지며, 각 노드는 하나의 부모(Parent) 노드와 연결되어 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>markdown systex</title>
      <link>http://localhost:1313/markdown-test/markdown-systex/</link>
      <pubDate>Tue, 07 Oct 2025 23:35:38 +0900</pubDate>
      <guid>http://localhost:1313/markdown-test/markdown-systex/</guid>
      <description>&lt;p&gt;아래는 &lt;strong&gt;Markdown 기본 구문&lt;/strong&gt;(Basic Syntax)과 &lt;strong&gt;확장 구문&lt;/strong&gt;(Extended Syntax)을 모두 포함한 테스트용 Markdown 파일입니다. 이 파일을 &lt;code&gt;.md&lt;/code&gt; 확장자로 저장한 후, 다양한 Markdown 렌더러(예: VS Code, Obsidian, Typora, GitHub 등)에서 열어 각 기능이 제대로 작동하는지 확인할 수 있습니다.&lt;/p&gt;&#xA;&lt;h1 id=&#34;markdown-전체-구문-테스트-문서&#34;&gt;Markdown 전체 구문 테스트 문서&lt;/h1&gt;&#xA;&lt;p&gt;이 문서는 &lt;a href=&#34;https://www.markdownguide.org/basic-syntax/&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;Markdown 기본 구문&lt;/a&gt;과 &lt;a href=&#34;https://www.markdownguide.org/extended-syntax/&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;확장 구문&lt;/a&gt;을 모두 포함합니다.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;1-제목-headings&#34;&gt;1. 제목 (Headings)&lt;/h2&gt;&#xA;&lt;h1 id=&#34;heading-level-1&#34;&gt;Heading level 1&lt;/h1&gt;&#xA;&lt;h2 id=&#34;heading-level-2&#34;&gt;Heading level 2&lt;/h2&gt;&#xA;&lt;h3 id=&#34;heading-level-3&#34;&gt;Heading level 3&lt;/h3&gt;&#xA;&lt;h4 id=&#34;heading-level-4&#34;&gt;Heading level 4&lt;/h4&gt;&#xA;&lt;h5 id=&#34;heading-level-5&#34;&gt;Heading level 5&lt;/h5&gt;&#xA;&lt;h6 id=&#34;heading-level-6&#34;&gt;Heading level 6&lt;/h6&gt;&#xA;&lt;p&gt;또는 대체 문법:&lt;/p&gt;</description>
    </item>
    <item>
      <title>간단한 수식 테스트</title>
      <link>http://localhost:1313/markdown-test/%EA%B0%84%EB%8B%A8%ED%95%9C-%EC%88%98%EC%8B%9D-%ED%85%8C%EC%8A%A4%ED%8A%B8/</link>
      <pubDate>Tue, 07 Oct 2025 23:35:06 +0900</pubDate>
      <guid>http://localhost:1313/markdown-test/%EA%B0%84%EB%8B%A8%ED%95%9C-%EC%88%98%EC%8B%9D-%ED%85%8C%EC%8A%A4%ED%8A%B8/</guid>
      <description>&lt;h1 id=&#34;간단한-수식-테스트&#34;&gt;간단한 수식 테스트&lt;/h1&gt;&#xA;&lt;p&gt;인라인 수식: $E = mc^2$&lt;/p&gt;&#xA;&lt;p&gt;블록 수식:&lt;/p&gt;&#xA;&lt;p&gt;$$&#xA;E = mc^2&#xA;$$&lt;/p&gt;&#xA;&lt;p&gt;끝.&lt;/p&gt;</description>
    </item>
    <item>
      <title>c 선언부 문법 읽기</title>
      <link>http://localhost:1313/01.publish/c-%EC%84%A0%EC%96%B8%EB%B6%80-%EB%AC%B8%EB%B2%95-%EC%9D%BD%EA%B8%B0/</link>
      <pubDate>Mon, 06 Oct 2025 04:30:41 +0900</pubDate>
      <guid>http://localhost:1313/01.publish/c-%EC%84%A0%EC%96%B8%EB%B6%80-%EB%AC%B8%EB%B2%95-%EC%9D%BD%EA%B8%B0/</guid>
      <description>&lt;p&gt;쉬운 선언&lt;br&gt;&#xA;&lt;code&gt;int foo[5];&lt;/code&gt;    // &lt;em&gt;foo는 5개의 정수로 구성된 배열입니다.&lt;/em&gt;&lt;br&gt;&#xA;&lt;code&gt;char *foo;&lt;/code&gt;        // &lt;em&gt;foo는 char에 대한 포인터입니다.&lt;/em&gt;&lt;br&gt;&#xA;&lt;code&gt;double foo();&lt;/code&gt;      // &lt;em&gt;foo는 double을 반환하는 함수입니다.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;그러나 선언이 좀 더 복잡해지면 보고 있는 내용을 정확히 아는 것이 더 어려워진다&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;**&lt;/span&gt;foo[][&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;])())[]; &lt;span style=&#34;color:#75715e&#34;&gt;//???&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;위의 구문처럼 코딩을 하는 경우는 잘 없지만 하나하나 해석하면서 선언부 문법을 완벽하게 이해해 보자&lt;/p&gt;&#xA;&lt;h2 id=&#34;규칙&#34;&gt;규칙&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;long&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;**&lt;/span&gt;foo[&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;어떤 영문 자료에서 확인한 자료이다&lt;br&gt;&#xA;언제나 먼저 변수 이름으로 시작합니다 =&amp;gt; foo 는 &amp;hellip;&lt;br&gt;&#xA;언제나 마지막은 type 입니다 =&amp;gt; foo 는 char 입니다&lt;br&gt;&#xA;가운데는 &amp;ldquo;go right when you can, go left when you must&amp;rdquo;&lt;br&gt;&#xA;갈 수 있다면 오른쪽으로 왼쪽으로는 가야할때만!!&lt;/p&gt;</description>
    </item>
    <item>
      <title>프로그램 메모리 구조 파악하기</title>
      <link>http://localhost:1313/%EC%8B%A4%EC%8A%B5%EC%9C%BC%EB%A1%9C-%EB%B0%B0%EC%9A%B0%EB%8A%94-%EB%A6%AC%EB%88%85%EC%8A%A4-%EA%B5%AC%EC%A1%B0/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EA%B5%AC%EC%A1%B0-%ED%8C%8C%EC%95%85%ED%95%98%EA%B8%B0/</link>
      <pubDate>Wed, 01 Oct 2025 19:15:19 +0900</pubDate>
      <guid>http://localhost:1313/%EC%8B%A4%EC%8A%B5%EC%9C%BC%EB%A1%9C-%EB%B0%B0%EC%9A%B0%EB%8A%94-%EB%A6%AC%EB%88%85%EC%8A%A4-%EA%B5%AC%EC%A1%B0/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EA%B5%AC%EC%A1%B0-%ED%8C%8C%EC%95%85%ED%95%98%EA%B8%B0/</guid>
      <description>&lt;p&gt;프로그램의 실행파일로 프로세스를 생성해 프로그램을 돌리는 과정에서 각 과정에서 메모리 구조를 확인할 수 있다&lt;/p&gt;&#xA;&lt;h2 id=&#34;실행파일&#34;&gt;실행파일&lt;/h2&gt;&#xA;&lt;p&gt;먼저 실행파일이다 실행 파일은 운영체제별 포메멧 별로 다르게 사용되는데 이때 code section 과 data section 은 동일하다 이를 확인하기 위한 방법이 size 명령어이다&#xA;하지만  실행 파일의 헤더 및 기타 섹션을 확인하기 위한 방법은 운영 체제와 해당 실행 파일의 포맷(예: ELF, PE, Mach-O 등)에 따라 달라진다 리눅스, 유닉스 계열 시스템에서는 주로 ELF(Executable and Linkable Format) 포맷이 사용되며, Windows에서는 PE(Portable Executable) 포맷, macOS에서는 Mach-O 포맷이 사용된다&lt;/p&gt;</description>
    </item>
    <item>
      <title>cpp 초기화 방식</title>
      <link>http://localhost:1313/leetcode75/cpp-%EC%B4%88%EA%B8%B0%ED%99%94-%EB%B0%A9%EC%8B%9D/</link>
      <pubDate>Mon, 29 Sep 2025 12:44:58 +0900</pubDate>
      <guid>http://localhost:1313/leetcode75/cpp-%EC%B4%88%EA%B8%B0%ED%99%94-%EB%B0%A9%EC%8B%9D/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Widget&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Widget() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;default&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;endl;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Widget(std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;initializer_list&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; il) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;init&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;endl;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Widget w1; &lt;span style=&#34;color:#75715e&#34;&gt;//기본 생성자 호출&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;Widget w2(); &lt;span style=&#34;color:#75715e&#34;&gt;//함수! 호출 x&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;Widget w3{}; &lt;span style=&#34;color:#75715e&#34;&gt;//기본 생성자 호출&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;Widget w4({});&lt;span style=&#34;color:#75715e&#34;&gt;//std::initializer_list 이용해 호출&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;Widget w5{ {} };&lt;span style=&#34;color:#75715e&#34;&gt;//std::initializer_list 이용해 호출&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;Widget w6 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {}; &lt;span style=&#34;color:#75715e&#34;&gt;// 기본 생성자 호출&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;Widget w7 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; { {} }; &lt;span style=&#34;color:#75715e&#34;&gt;//std::initializer_list 이용해 호출&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;모두의 코드 해당 자료&#xA;&lt;a href=&#34;https://modoocode.com/286&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;https://modoocode.com/286&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-초기화initialization란&#34;&gt;1. 초기화(Initialization)란?&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;정의&lt;/strong&gt;:&lt;br&gt;&#xA;변수를 선언할 때 그 변수에 최초의 값을 제공하는 과정을 &lt;strong&gt;초기화&lt;/strong&gt;라고 합니다.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;객체나 변수의 메모리 공간이 할당되면서 동시에 정해진 초기 값이 부여됩니다.&lt;/li&gt;&#xA;&lt;li&gt;이는 선언문의 초기화 부분이나, &lt;code&gt;new&lt;/code&gt; 표현식, 함수 호출 시(함수 인자 및 리턴값 초기화) 등에서 이루어집니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;2-초기화-구문initializers-형태&#34;&gt;2. 초기화 구문(Initializers) 형태&lt;/h2&gt;&#xA;&lt;p&gt;각 선언자(declarator)에 대해 초기화자가 있을 경우 사용할 수 있는 구문은 다음과 같습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>cpp 모음 찾기</title>
      <link>http://localhost:1313/leetcode75/cpp-%EB%AA%A8%EC%9D%8C-%EC%B0%BE%EA%B8%B0/</link>
      <pubDate>Mon, 29 Sep 2025 12:44:56 +0900</pubDate>
      <guid>http://localhost:1313/leetcode75/cpp-%EB%AA%A8%EC%9D%8C-%EC%B0%BE%EA%B8%B0/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;string vowels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;aeiouAEIOU&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;bool&lt;/span&gt; isVowels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; vowels.find(word[index]) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; string&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;npos&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>2095. Delete the Middle Node of a Linked List</title>
      <link>http://localhost:1313/leetcode75/2095.-delete-the-middle-node-of-a-linked-list/</link>
      <pubDate>Mon, 29 Sep 2025 12:44:55 +0900</pubDate>
      <guid>http://localhost:1313/leetcode75/2095.-delete-the-middle-node-of-a-linked-list/</guid>
      <description>&lt;h2 id=&#34;문제&#34;&gt;문제&lt;/h2&gt;&#xA;&lt;p&gt;주어진 연결 리스트의 헤드가 주어졌을 때, 중간 노드를 삭제하고 수정된 연결 리스트의 헤드를 반환하세요.&lt;/p&gt;&#xA;&lt;p&gt;크기가 $n$인 연결 리스트의 중간 노드는 0-based 인덱스를 사용하여 $\lfloor n / 2 \rfloor$번째 노드입니다. 여기서 $\lfloor x \rfloor$는 $x$보다 작거나 같은 가장 큰 정수를 나타냅니다.&lt;/p&gt;&#xA;&lt;p&gt;예를 들어, $n = 1, 2, 3, 4, 5$일 때 중간 노드의 인덱스는 각각 $0, 1, 1, 2, 2$입니다.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;예제&#34;&gt;&lt;strong&gt;예제&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;예제-1&#34;&gt;예제 1:&lt;/h4&gt;&#xA;&lt;p&gt;입력:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;head &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;출력:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;설명:&#xA;위 그림은 주어진 연결 리스트를 나타냅니다. 노드의 인덱스는 아래에 표시되어 있습니다.&lt;br&gt;&#xA;$ n = 7 $이므로, 값이 $ 7 $인 3번째 노드(0-based 인덱스)가 중간 노드입니다. 이 노드는 빨간색으로 표시되어 있습니다.&lt;br&gt;&#xA;우리는 이 노드를 제거한 후 새로운 리스트를 반환합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>443. String Compression</title>
      <link>http://localhost:1313/leetcode75/443.-string-compression/</link>
      <pubDate>Mon, 29 Sep 2025 12:44:39 +0900</pubDate>
      <guid>http://localhost:1313/leetcode75/443.-string-compression/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;주어진 문자 배열 chars를 다음 알고리즘을 사용하여 압축하세요:&#xA;&#xA;빈 문자열 s로 시작합니다. chars에서 연속으로 반복되는 문자의 그룹마다:&#xA;&#xA;그룹의 길이가 1인 경우, 문자를 s에 추가합니다.&#xA;그렇지 않으면, 문자를 그룹의 길이와 함께 s에 추가합니다.&#xA;압축된 문자열 s는 별도로 반환하지 않고, 입력 문자 배열 chars에 저장해야 합니다. 그룹의 길이가 10 이상인 경우, chars에 여러 문자로 나누어 저장해야 합니다.&#xA;&#xA;수정이 완료된 후, 배열의 새 길이를 반환합니다.&#xA;&#xA;상수 추가 공간만 사용하는 알고리즘을 작성해야 합니다.&#xA;&#xA;예시&#xA;예시 1:&#xA;&#xA;입력: chars = [&amp;#34;a&amp;#34;, &amp;#34;a&amp;#34;, &amp;#34;b&amp;#34;, &amp;#34;b&amp;#34;, &amp;#34;c&amp;#34;, &amp;#34;c&amp;#34;, &amp;#34;c&amp;#34;]&#xA;출력: 6을 반환하며, 입력 배열의 처음 6개의 문자: [&amp;#34;a&amp;#34;, &amp;#34;2&amp;#34;, &amp;#34;b&amp;#34;, &amp;#34;2&amp;#34;, &amp;#34;c&amp;#34;, &amp;#34;3&amp;#34;]&#xA;설명: 그룹은 &amp;#34;aa&amp;#34;, &amp;#34;bb&amp;#34;, &amp;#34;ccc&amp;#34;이며, &amp;#34;a2b2c3&amp;#34;으로 압축됩니다.&#xA;예시 2:&#xA;&#xA;입력: chars = [&amp;#34;a&amp;#34;]&#xA;출력: 1을 반환하며, 입력 배열의 첫 번째 문자는: [&amp;#34;a&amp;#34;]&#xA;설명: 유일한 그룹은 &amp;#34;a&amp;#34;이며, 단일 문자이므로 압축되지 않습니다.&#xA;예시 3:&#xA;&#xA;입력: chars = [&amp;#34;a&amp;#34;, &amp;#34;b&amp;#34;, &amp;#34;b&amp;#34;, &amp;#34;b&amp;#34;, &amp;#34;b&amp;#34;, &amp;#34;b&amp;#34;, &amp;#34;b&amp;#34;, &amp;#34;b&amp;#34;, &amp;#34;b&amp;#34;, &amp;#34;b&amp;#34;, &amp;#34;b&amp;#34;, &amp;#34;b&amp;#34;, &amp;#34;b&amp;#34;]&#xA;출력: 4를 반환하며, 입력 배열의 처음 4개의 문자는: [&amp;#34;a&amp;#34;, &amp;#34;b&amp;#34;, &amp;#34;1&amp;#34;, &amp;#34;2&amp;#34;]&#xA;설명: 그룹은 &amp;#34;a&amp;#34;와 &amp;#34;bbbbbbbbbbbb&amp;#34;이며, &amp;#34;ab12&amp;#34;로 압축됩니다.&#xA;제약 조건&#xA;1 &amp;lt;= chars.length &amp;lt;= 2000&#xA;chars[i]는 소문자 영어 문자, 대문자 영어 문자, 숫자 또는 기호입니다.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;vector 로 조작하면&lt;/p&gt;</description>
    </item>
    <item>
      <title>1493. Longest Subarray of 1&#39;s After Deleting One Element</title>
      <link>http://localhost:1313/leetcode75/1493.-longest-subarray-of-1s-after-deleting-one-element/</link>
      <pubDate>Mon, 29 Sep 2025 12:44:38 +0900</pubDate>
      <guid>http://localhost:1313/leetcode75/1493.-longest-subarray-of-1s-after-deleting-one-element/</guid>
      <description>&lt;h2 id=&#34;문제&#34;&gt;문제&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;주어진 문제는 이진 배열 nums에서 하나의 요소를 삭제한 후, 결과 배열에서 1로만 이루어진 가장 긴 비어 있지 않은 부분 배열의 크기를 반환하는 것입니다. 만약 그런 부분 배열이 존재하지 않으면 0을 반환합니다.&#xA;&#xA;### 예시:&#xA;1. **입력**: nums = [1, 1, 0, 1]  &#xA;   **출력**: 3  &#xA;   **설명**: 인덱스 2의 숫자를 삭제하면 [1, 1, 1]이 되어 1의 개수가 3입니다.&#xA;&#xA;2. **입력**: nums = [0, 1, 1, 1, 0, 1, 1, 0, 1]&#xA;   **출력**: 5&#xA;   **설명**: 인덱스 4의 숫자를 삭제하면 [0, 1, 1, 1, 1, 1, 0, 1]이 되어 1의 개수가 5입니다.&#xA;&#xA;3. **입력**: nums = [1, 1, 1] &#xA;   **출력**: 2  &#xA;   **설명**: 하나의 요소를 삭제해야 하므로, 최대 1의 개수는 2입니다.&#xA;&#xA;### 제약 조건:&#xA;- 1 &amp;lt;= nums.length &amp;lt;= 10^5&#xA;- nums[i]는 0 또는 1입니다. &#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;on3&#34;&gt;O(n^3)&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Solution&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; longestSubarray(vector&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; nums) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; ret &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; start &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; start &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; nums.size(); start&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; end &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; start; end &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; nums.size(); end&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; zero_count &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#75715e&#34;&gt;// 부분 배열의 0 개수 찾기&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; start ; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; end ; i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(nums[i] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        zero_count&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(zero_count &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; zero_count &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;                ret &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; max(ret, end &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; start);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; ret;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;on2&#34;&gt;O(n^2)&lt;/h2&gt;&#xA;&lt;p&gt;zero_count 를 각 부분배열에서 다시 계산해야 할까??&#xA;부분배열의 시작 인덱스에서 반복이 실행되므로&#xA;끝 인덱스의 값만 확인하면서 0 개수를 저장해도 되지 않을까?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Transaction 의 ACID</title>
      <link>http://localhost:1313/temp/transaction-%EC%9D%98-acid/</link>
      <pubDate>Sat, 27 Sep 2025 15:04:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/transaction-%EC%9D%98-acid/</guid>
      <description>&lt;p&gt;ACID는 데이터베이스 트랜잭션의 신뢰성을 보장하는 네 가지 주요 속성입니다. 각각의 속성을 한 문장으로 요약하고 예시를 들어 설명하겠습니다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-원자성-atomicity&#34;&gt;1. 원자성 (Atomicity)&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;요약&lt;/strong&gt;: 트랜잭션 내의 모든 작업이 성공적으로 완료되거나, 전혀 수행되지 않아야 한다.&lt;br&gt;&#xA;&lt;strong&gt;예시&lt;/strong&gt;: 은행에서 10,000원을 A 계좌에서 B 계좌로 이체하는 경우, 두 계좌의 잔액이 모두 변경되거나, 하나라도 실패하면 모든 변경이 취소된다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;2-일관성-consistency&#34;&gt;2. 일관성 (Consistency)&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;요약&lt;/strong&gt;: 트랜잭션이 완료되면 데이터베이스는 항상 일관된 상태를 유지해야 한다.&lt;br&gt;&#xA;&lt;strong&gt;예시&lt;/strong&gt;: 학생 등록 시스템에서 학생의 성적을 업데이트할 때, 성적이 0 이상 100 이하의 범위를 벗어나지 않도록 보장해야 한다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>css hidden 대신 transition</title>
      <link>http://localhost:1313/temp/css-hidden-%EB%8C%80%EC%8B%A0-transition/</link>
      <pubDate>Sat, 27 Sep 2025 06:18:29 +0900</pubDate>
      <guid>http://localhost:1313/temp/css-hidden-%EB%8C%80%EC%8B%A0-transition/</guid>
      <description>&lt;p&gt;Tailwind CSS를 사용한다고 가정하고, 좌우 사이드바(왼쪽 사이드바와 오른쪽 사이드바)가 각각 화면 왼쪽/오른쪽 밖에 숨어 있다가, 필요할 때 애니메이션과 함께 나타나도록 설정하는 과정입니다.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-요구사항-요약&#34;&gt;🔧 요구사항 요약&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;좌우 사이드바에&lt;/strong&gt; 다음 클래스를 추가:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;transition-transform&lt;/code&gt;: &lt;code&gt;transform&lt;/code&gt; 속성에 대한 트랜지션(애니메이션)을 활성화&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;duration-300&lt;/code&gt;: 트랜지션 지속 시간을 300ms로 설정&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;초기 상태에서&lt;/strong&gt;:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;왼쪽 사이드바는 화면 &lt;strong&gt;왼쪽 밖&lt;/strong&gt;에 위치 → &lt;code&gt; -translate-x-full&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;오른쪽 사이드바는 화면 &lt;strong&gt;오른쪽 밖&lt;/strong&gt;에 위치 → &lt;code&gt; translate-x-full&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;기존의 &lt;code&gt;hidden&lt;/code&gt; 클래스는 제거&lt;/strong&gt;&lt;br&gt;&#xA;→ &lt;code&gt;hidden&lt;/code&gt;은 &lt;code&gt;display: none&lt;/code&gt;을 적용하므로, 애니메이션이 작동하지 않음&lt;/p&gt;</description>
    </item>
    <item>
      <title>메모리 최대 크기</title>
      <link>http://localhost:1313/02.inbox/%EB%A9%94%EB%AA%A8%EB%A6%AC-%EC%B5%9C%EB%8C%80-%ED%81%AC%EA%B8%B0/</link>
      <pubDate>Mon, 22 Sep 2025 13:58:18 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EB%A9%94%EB%AA%A8%EB%A6%AC-%EC%B5%9C%EB%8C%80-%ED%81%AC%EA%B8%B0/</guid>
      <description>&lt;h2 id=&#34;문제-발생-이전&#34;&gt;문제 발생 이전&lt;/h2&gt;&#xA;&lt;p&gt;메모리의 최대 크기는 RAM 에 저장할 수 있는 bit 최대 개수를 의미한다&#xA;word 는 bus 의 크기를 이야기 한다&#xA;하지만 직접 CPU 를 만들다 보니(logisim) (&lt;a href=&#34;http://localhost:1313/02.inbox/%EA%B7%B8%EB%9E%98%EC%84%9C-%EC%BB%B4%ED%93%A8%ED%84%B0%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8F%99%EC%9E%91%ED%95%98%EB%82%98%EC%9A%94/%EA%B7%B8%EB%9E%98%EC%84%9C-%EC%BB%B4%ED%93%A8%ED%84%B0%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8F%99%EC%9E%91%ED%95%98%EB%82%98%EC%9A%94-1/&#34; class=&#34;internal-link&#34;&gt;그래서 컴퓨터는 어떻게 동작하나요 1&lt;/a&gt;) 지금까지 나는 byte 단위로 메모리에 접근한 것이 아닌 word 단위로 접근 했었고 이것이 8비트 cpu 에서는 word 와 byte 가 운 좋게 8bit 로 일치되어 메모리 최대 크기를 계산 할 때 주소폭 크기 (data bit width = word) * 2^(address bit width) 즉 8 * 2^8 즉 2048b ~= 256B 라고 계산 했었다 답은 맞지만 16비트 32 비트로 cpu 를 개선해나가는 과정에서 문제가 발생했다&lt;/p&gt;</description>
    </item>
    <item>
      <title>nextInt vs nextLine</title>
      <link>http://localhost:1313/temp/nextint-vs-nextline/</link>
      <pubDate>Fri, 19 Sep 2025 16:09:18 +0900</pubDate>
      <guid>http://localhost:1313/temp/nextint-vs-nextline/</guid>
      <description>&lt;p&gt;완벽히 이해했습니다.&lt;br&gt;&#xA;아래는 &lt;strong&gt;기존의 틀과 구조를 100% 유지하면서&lt;/strong&gt;,&lt;br&gt;&#xA;&lt;strong&gt;각 단계에서 &lt;code&gt;nextInt()&lt;/code&gt;와 &lt;code&gt;nextLine()&lt;/code&gt;의 동작 차이를 병렬로 설명&lt;/strong&gt;한 버전입니다.&lt;br&gt;&#xA;→ &lt;strong&gt;동일한 입력(&lt;code&gt;25\n&lt;/code&gt;)이 주어졌을 때, 두 메서드가 어떻게 다른 방식으로 버퍼를 소비하고 커서를 이동시키는지&lt;/strong&gt;를 &lt;strong&gt;계층별로 명확히 대조&lt;/strong&gt;합니다.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-완전한-데이터-흐름-사용자-입력--scanner-내부-버퍼&#34;&gt;🧩 완전한 데이터 흐름: 사용자 입력 → Scanner 내부 버퍼&lt;/h2&gt;&#xA;&lt;h3 id=&#34;시스템-프로그래밍--터미널-관점--nextint-vs-nextline-비교-포함&#34;&gt;(시스템 프로그래밍 + 터미널 관점 — &lt;code&gt;nextInt()&lt;/code&gt; vs &lt;code&gt;nextLine()&lt;/code&gt; 비교 포함)&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;✍️ &lt;strong&gt;목표&lt;/strong&gt;: 사용자가 키보드로 &lt;code&gt;25&lt;/code&gt;를 치고 &lt;code&gt;Enter&lt;/code&gt;를 누른 순간부터,&lt;br&gt;&#xA;Java의 &lt;code&gt;Scanner.nextInt()&lt;/code&gt; 또는 &lt;code&gt;Scanner.nextLine()&lt;/code&gt;이 어떻게 다른 방식으로 &lt;code&gt;25\n&lt;/code&gt;을 처리하는지&lt;br&gt;&#xA;&lt;strong&gt;모든 계층을 투명하게 추적 + 비교&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>test-code-highlight</title>
      <link>http://localhost:1313/markdown-test/test-code-highlight/</link>
      <pubDate>Thu, 11 Sep 2025 07:14:15 +0900</pubDate>
      <guid>http://localhost:1313/markdown-test/test-code-highlight/</guid>
      <description>&lt;h1 id=&#34;코드-구문-강조-테스트&#34;&gt;코드 구문 강조 테스트&lt;/h1&gt;&#xA;&lt;h2 id=&#34;javascript-코드&#34;&gt;JavaScript 코드&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;hello&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;`Hello, &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;!`&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;users&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Alice&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Bob&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Charlie&amp;#39;&lt;/span&gt;];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;users&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;forEach&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;user&lt;/span&gt; =&amp;gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;hello&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;user&lt;/span&gt;));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;python-코드&#34;&gt;Python 코드&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fibonacci&lt;/span&gt;(n):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; n &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; n&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; fibonacci(n&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; fibonacci(n&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 리스트 컴프리헨션 예제&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;squares &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [x&lt;span style=&#34;color:#f92672&#34;&gt;**&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(squares)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;sql-코드&#34;&gt;SQL 코드&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; u.name, &lt;span style=&#34;color:#66d9ef&#34;&gt;COUNT&lt;/span&gt;(o.id) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; order_count&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; users u&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;LEFT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;JOIN&lt;/span&gt; orders o &lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt; u.id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; o.user_id&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; u.created_at &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2023-01-01&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;GROUP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; u.id, u.name&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; order_count &lt;span style=&#34;color:#66d9ef&#34;&gt;DESC&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;bash-스크립트&#34;&gt;Bash 스크립트&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 환경 변수 설정&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export NODE_ENV&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;production&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 패키지 설치 및 빌드&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;npm install&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;npm run build&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;배포 완료!&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;인라인-코드&#34;&gt;인라인 코드&lt;/h2&gt;&#xA;&lt;p&gt;일반 텍스트 중에 &lt;code&gt;console.log(&amp;quot;inline code&amp;quot;)&lt;/code&gt; 같은 인라인 코드도 포함할 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>수식 테스트</title>
      <link>http://localhost:1313/%EC%88%98%EC%8B%9D-%ED%85%8C%EC%8A%A4%ED%8A%B8/</link>
      <pubDate>Thu, 11 Sep 2025 06:53:53 +0900</pubDate>
      <guid>http://localhost:1313/%EC%88%98%EC%8B%9D-%ED%85%8C%EC%8A%A4%ED%8A%B8/</guid>
      <description>&lt;h1 id=&#34;수식-테스트-문서&#34;&gt;수식 테스트 문서&lt;/h1&gt;&#xA;&lt;p&gt;이 문서는 KaTeX 수식 렌더링을 테스트하기 위한 문서입니다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;인라인-수식&#34;&gt;인라인 수식&lt;/h2&gt;&#xA;&lt;p&gt;여기서 $x = 2$ 는 간단한 인라인 수식입니다.&lt;/p&gt;&#xA;&lt;p&gt;피타고라스 정리: $a^2 + b^2 = c^2$&lt;/p&gt;&#xA;&lt;p&gt;제곱근: $\sqrt{x + y}$&lt;/p&gt;&#xA;&lt;p&gt;분수: $\frac{x}{y}$&lt;/p&gt;&#xA;&lt;h2 id=&#34;블록-수식&#34;&gt;블록 수식&lt;/h2&gt;&#xA;&lt;p&gt;가우스 정규분포:&lt;/p&gt;&#xA;&lt;p&gt;$$&#xA;f(x) = \frac{1}{\sigma\sqrt{2\pi}} e^{-\frac{1}{2}\left(\frac{x-\mu}{\sigma}\right)^2}&#xA;$$&lt;/p&gt;&#xA;&lt;p&gt;적분:&lt;/p&gt;&#xA;&lt;p&gt;$$&#xA;\int_{-\infty}^{\infty} e^{-x^2} dx = \sqrt{\pi}&#xA;$$&lt;/p&gt;&#xA;&lt;p&gt;행렬:&lt;/p&gt;&#xA;&lt;p&gt;$$&#xA;\begin{pmatrix}&#xA;a &amp;amp; b \&#xA;c &amp;amp; d&#xA;\end{pmatrix}&#xA;$$&lt;/p&gt;&#xA;&lt;h2 id=&#34;복잡한-수식&#34;&gt;복잡한 수식&lt;/h2&gt;&#xA;&lt;p&gt;오일러의 공식:&lt;/p&gt;&#xA;&lt;p&gt;$$&#xA;e^{i\pi} + 1 = 0&#xA;$$&lt;/p&gt;</description>
    </item>
    <item>
      <title>dockerpty pty</title>
      <link>http://localhost:1313/06.university/mju_ecs-project/dockerpty-document/dockerpty-pty/</link>
      <pubDate>Tue, 09 Sep 2025 23:10:58 +0900</pubDate>
      <guid>http://localhost:1313/06.university/mju_ecs-project/dockerpty-document/dockerpty-pty/</guid>
      <description>&lt;h3 id=&#34;문서-dockerpty-모듈-개요&#34;&gt;문서: &lt;code&gt;dockerpty&lt;/code&gt; 모듈 개요&lt;/h3&gt;&#xA;&lt;p&gt;제공된 코드는 &lt;code&gt;dockerpty&lt;/code&gt;라는 Python 모듈을 나타내며, 특히 &lt;code&gt;pty.py&lt;/code&gt; 파일에 초점을 맞추고 있습니다. 이 문서에서는 모듈의 주요 구성 요소와 기능을 설명합니다.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;소개&#34;&gt;&lt;strong&gt;소개&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;&lt;code&gt;dockerpty&lt;/code&gt; 모듈은 Docker 컨테이너와 의사 터미널(PTY) 인터페이스를 통해 상호작용하는 것을 용이하게 설계되었습니다. 사용자가 로컬 터미널 세션과 유사한 방식으로 Docker 컨테이너 터미널에 연결하고 제어할 수 있도록 합니다.&lt;/p&gt;&#xA;&lt;p&gt;이 모듈의 주요 목적은 PTY의 라이프사이클을 관리하는 것인데, 호스트와 컨테이너 간의 입력/출력 스트림을 처리하며 터미널 창 크기를 조정하는 작업을 포함합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>terminal auto logging</title>
      <link>http://localhost:1313/02.inbox/terminal-auto-logging/</link>
      <pubDate>Tue, 09 Sep 2025 17:17:45 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/terminal-auto-logging/</guid>
      <description>&lt;h2 id=&#34;terminal-auto-logger&#34;&gt;Terminal Auto Logger&lt;/h2&gt;&#xA;&lt;h3 id=&#34;프로젝트-개요&#34;&gt;프로젝트 개요&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;프로젝트 이름&lt;/strong&gt;: &lt;code&gt;terminal auto logger&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;로그 디렉토리&lt;/strong&gt;: &lt;code&gt;~/.local/log/terminal_auto_log&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;핵심 동작&lt;/strong&gt;:&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;code&gt;terminal_auto_logger.sh&lt;/code&gt;: 쉘 시작 시 실행되어 로깅 환경을 설정하고, 실제 로깅을 담당하는 Executor 스크립트를 호출합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;_tal_executor.sh&lt;/code&gt;: &lt;code&gt;script&lt;/code&gt; 명령을 직접 실행하고, 세션이 종료된 후 로그 파일의 이름을 최종적으로 결정합니다. (내부 헬퍼 스크립트)&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;1-executor-스크립트-생성&#34;&gt;1. &lt;strong&gt;Executor 스크립트 생성: &lt;code&gt;_tal_executor.sh&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;이 스크립트는 실제 로깅을 실행하고 세션 종료 후 파일명 변경을 담당하는 핵심 로직입니다. 사용자가 직접 실행하는 것이 아닌, 메인 스크립트에 의해 호출됩니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>CDN 링크 찾기</title>
      <link>http://localhost:1313/02.inbox/cdn-%EB%A7%81%ED%81%AC-%EC%B0%BE%EA%B8%B0/</link>
      <pubDate>Tue, 09 Sep 2025 17:16:27 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/cdn-%EB%A7%81%ED%81%AC-%EC%B0%BE%EA%B8%B0/</guid>
      <description>&lt;h4 id=&#34;-jsdelivr&#34;&gt;🔹 &lt;a href=&#34;https://www.jsdelivr.com/&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;jsDelivr&lt;/a&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;GitHub, npm 패키지를 CDN으로 제공&lt;/li&gt;&#xA;&lt;li&gt;검색창에 라이브러리 이름 입력 → 버전 선택 → 자동 생성된 링크 복사&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;예: &lt;code&gt;https://cdn.jsdelivr.net/npm/jquery@3.7.1/dist/jquery.min.js&lt;/code&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h4 id=&#34;-cdnjs&#34;&gt;🔹 &lt;a href=&#34;https://cdnjs.com/&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;cdnjs&lt;/a&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;수천 개의 오픈소스 라이브러리 제공&lt;/li&gt;&#xA;&lt;li&gt;검색 → 원하는 버전 클릭 → Copy 버튼으로 링크 복사&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;예: &lt;code&gt;https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js&lt;/code&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h4 id=&#34;-unpkg&#34;&gt;🔹 &lt;a href=&#34;https://unpkg.com/&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;UNPKG&lt;/a&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;npm 패키지를 CDN으로 제공&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;https://unpkg.com/[패키지명]@[버전]/[파일경로]&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;예: &lt;code&gt;https://unpkg.com/react@18/umd/react.production.min.js&lt;/code&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>android sdk tool list</title>
      <link>http://localhost:1313/02.inbox/android-sdk-tool-list/</link>
      <pubDate>Mon, 08 Sep 2025 14:56:26 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/android-sdk-tool-list/</guid>
      <description>&lt;h3 id=&#34;sdk-locationplatform-tools&#34;&gt;&lt;code&gt;{sdk location}/platform-tools&lt;/code&gt;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;-핵심-도구-가장-중요하고-자주-사용&#34;&gt;⭐ 핵심 도구 (가장 중요하고 자주 사용)&lt;/h4&gt;&#xA;&lt;h5 id=&#34;1-adb-android-debug-bridge&#34;&gt;1. &lt;code&gt;adb&lt;/code&gt; (Android Debug Bridge)&lt;/h5&gt;&#xA;&lt;p&gt;&lt;strong&gt;가장 중요하고 다재다능한 도구&lt;/strong&gt;입니다. 실행 중인 안드로이드 기기(에뮬레이터 포함)와 통신하기 위한 클라이언트-서버 프로그램입니다. PC에서 실행하는 &lt;code&gt;adb&lt;/code&gt;는 클라이언트, 기기에서 실행되는 &lt;code&gt;adbd&lt;/code&gt;는 데몬(서버) 역할을 합니다. USB 케이블이나 Wi-Fi를 통해 연결됩니다.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;주요 기능 및 사용 사례:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;기기 연결 확인:&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;adb devices&lt;/code&gt;: 현재 PC에 연결된 기기 목록을 확인합니다. 기기가 정상적으로 인식되었는지 확인할 때 가장 먼저 사용하는 명령어입니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;앱 설치 및 삭제:&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;adb install [앱이름].apk&lt;/code&gt;: PC에 있는 APK 파일을 기기에 설치합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;adb uninstall [패키지이름]&lt;/code&gt;: 기기에 설치된 앱을 삭제합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;파일 전송:&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;adb push [PC 경로] [기기 경로]&lt;/code&gt;: PC의 파일을 기기로 복사합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;adb pull [기기 경로] [PC 경로]&lt;/code&gt;: 기기의 파일을 PC로 복사합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;쉘(Shell) 접근:&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;adb shell&lt;/code&gt;: 기기의 리눅스 쉘에 원격으로 접속합니다. 이를 통해 기기 내부의 파일 시스템을 탐색하거나, 각종 시스템 명령어를 실행할 수 있습니다. (예: &lt;code&gt;adb shell ls /sdcard/&lt;/code&gt;)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;로그 확인 (디버깅):&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;adb logcat&lt;/code&gt;: 기기에서 실시간으로 발생하는 시스템 로그를 출력합니다. 앱 개발 시 에러나 동작을 추적하는 데 필수적입니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;기기 제어:&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;adb reboot&lt;/code&gt;: 기기를 재부팅합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;adb reboot recovery&lt;/code&gt;: 리커버리 모드로 재부팅합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;adb reboot bootloader&lt;/code&gt;: 부트로더(패스트붓) 모드로 재부팅합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;기타 고급 기능:&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;포트 포워딩:&lt;/strong&gt; &lt;code&gt;adb forward tcp:[PC 포트] tcp:[기기 포트]&lt;/code&gt; - PC의 특정 포트로 들어오는 요청을 기기의 포트로 전달합니다. 디버깅 시 유용합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;스크린샷/녹화:&lt;/strong&gt; &lt;code&gt;adb shell screencap&lt;/code&gt; (스크린샷), &lt;code&gt;adb shell screenrecord&lt;/code&gt; (화면 녹화).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h5 id=&#34;2-fastboot-fastboot-protocol-tool&#34;&gt;2. &lt;code&gt;fastboot&lt;/code&gt; (Fastboot Protocol Tool)&lt;/h5&gt;&#xA;&lt;p&gt;&lt;strong&gt;부트로더(Bootloader) 상태의 기기와 통신&lt;/strong&gt;하는 도구입니다. 운영체제(OS)가 부팅되기 전의 단계에서 기기의 파티션을 수정하거나 펌웨어(ROM)를 설치(플래싱)할 때 사용됩니다. &lt;code&gt;adb&lt;/code&gt;가 OS가 켜진 상태에서 통신하는 것과 달리, &lt;code&gt;fastboot&lt;/code&gt;는 더 낮은 수준(low-level)에서 기기를 제어합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>순수 UI 디자인 용어</title>
      <link>http://localhost:1313/02.inbox/%EC%88%9C%EC%88%98-ui-%EB%94%94%EC%9E%90%EC%9D%B8-%EC%9A%A9%EC%96%B4/</link>
      <pubDate>Mon, 08 Sep 2025 01:49:58 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EC%88%9C%EC%88%98-ui-%EB%94%94%EC%9E%90%EC%9D%B8-%EC%9A%A9%EC%96%B4/</guid>
      <description>&lt;h3 id=&#34;-순수-디자인-관련-용어-30가지-visualui-design-중심&#34;&gt;🖌️ 순수 디자인 관련 용어 30가지 (Visual/UI Design 중심)&lt;/h3&gt;&#xA;&lt;h4 id=&#34;1-스케어모피즘-skeuomorphism&#34;&gt;1. &lt;strong&gt;스케어모피즘 (Skeuomorphism)&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;실제 물체의 질감, 그림자, 입체감을 디지털에 그대로 구현한 디자인 스타일.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h4 id=&#34;2-플랫-디자인-flat-design&#34;&gt;2. &lt;strong&gt;플랫 디자인 (Flat Design)&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;그림자, 텍스처, 그라데이션을 배제하고 단순한 색상과 형태로 구성된 디자인.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h4 id=&#34;3-세미-플랫-디자인-semi-flat-design&#34;&gt;3. &lt;strong&gt;세미 플랫 디자인 (Semi-Flat Design)&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;플랫 디자인에 약간의 그림자나 입체감을 더해 깊이감을 준 디자인.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h4 id=&#34;4-머티리얼-디자인-material-design&#34;&gt;4. &lt;strong&gt;머티리얼 디자인 (Material Design)&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;구글의 디자인 언어. “종이처럼 쌓인 레이어” 컨셉으로 그림자와 모션을 활용.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h4 id=&#34;5-네오모피즘-neumorphism&#34;&gt;5. &lt;strong&gt;네오모피즘 (Neumorphism)&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;소프트한 입체감과 음영을 사용해 “눌린 버튼” 또는 “튀어나온 요소”처럼 보이게 하는 디자인 트렌드.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2024-10-25</title>
      <link>http://localhost:1313/temp/2024-10-25/</link>
      <pubDate>Fri, 05 Sep 2025 22:04:13 +0900</pubDate>
      <guid>http://localhost:1313/temp/2024-10-25/</guid>
      <description>&lt;p&gt;2024/10/25자 생성&lt;/p&gt;&#xA;&lt;h2 id=&#34;영어-pdf-문서-통번역정확도-순위별-정렬하이퍼-링크&#34;&gt;영어 pdf 문서 통번역(정확도 순위별 정렬)(하이퍼 링크)&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.deepl.com/ko/translator/files&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;DeepL&lt;/a&gt; =&amp;gt; 5,000자까지, 로그인(회원가입) 필요&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://papago.naver.com/docs/&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;papago&lt;/a&gt; =&amp;gt; 10MB 이하 1만자 이하, 로그인(회원가입) 필요&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://translate.google.com/?hl=ko&amp;amp;tab=wT&amp;amp;sl=en&amp;amp;tl=ko&amp;amp;op=translate&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;google translate&lt;/a&gt; =&amp;gt; 클릭 이후 상단 문서로 이동&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20241025225279.png&#34; alt=&#34; (Image resource not found)&#34; &gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;llm-사용-ai&#34;&gt;LLM 사용 (AI)&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://wrtn.ai/&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;뤼튼&lt;/a&gt; =&amp;gt; 무제한, 로그인 필요&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20241025230788.png&#34; alt=&#34;Pasted image 20241025230788 (Image resource not found)&#34; &gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://chatgpt.com/&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;chatGPT&lt;/a&gt; =&amp;gt; 거이 무제한, 로그인 필요&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://claude.ai/&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;Claude&lt;/a&gt; =&amp;gt; 가장 똑똑하지만 제한량이 있음, 로그인 필요&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://copilot.microsoft.com/&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;Microsoft AI Copliot&lt;/a&gt; =&amp;gt; microsoft AI&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://gemini.google.com/app&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;Google AI gemini&lt;/a&gt; =&amp;gt; 구글이 만ems AI&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>네트워크 7계층</title>
      <link>http://localhost:1313/02.inbox/%EB%94%B0%EB%9D%BCit/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-7%EA%B3%84%EC%B8%B5/</link>
      <pubDate>Fri, 05 Sep 2025 21:01:24 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EB%94%B0%EB%9D%BCit/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-7%EA%B3%84%EC%B8%B5/</guid>
      <description>&lt;p&gt;5계층 부터 7계층 까지 한번에 관리 {세션 표현 응용}&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;http 1.0 에서 1.1 변경&lt;/li&gt;&#xA;&lt;li&gt;http 요청 프로토콜&lt;/li&gt;&#xA;&lt;li&gt;http 응답 프로토콜&lt;/li&gt;&#xA;&lt;li&gt;http 헤더 포멧&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;http 버전&#xA;RFC2068(1997)&#xA;RFC2616(1999)&#xA;RFC7230~7235(2014)&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;http-10-에서-11-변경&#34;&gt;http 1.0 에서 1.1 변경&lt;/h3&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240207193831.png&#34; alt=&#34;Pasted image 20240207193831 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;매우 비요율적 모든 요청 응답 하나하나 3wh를 해야한다&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240207194010.png&#34; alt=&#34;Pasted image 20240207194010 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;http-요청--응답-프로토콜&#34;&gt;http 요청 &amp;amp; 응답 프로토콜&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240212034842.png&#34; alt=&#34;Pasted image 20240212034842 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;request-line&#34;&gt;request Line&lt;/h3&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240207195646.png&#34; alt=&#34;Pasted image 20240207195646 (Image resource not found)&#34; &gt;&#xA;ex) GET / HTTP/1.1&lt;/p&gt;</description>
    </item>
    <item>
      <title>05.메모리 관리</title>
      <link>http://localhost:1313/%EC%8B%A4%EC%8A%B5%EC%9C%BC%EB%A1%9C-%EB%B0%B0%EC%9A%B0%EB%8A%94-%EB%A6%AC%EB%88%85%EC%8A%A4-%EA%B5%AC%EC%A1%B0/05.%EB%A9%94%EB%AA%A8%EB%A6%AC-%EA%B4%80%EB%A6%AC/</link>
      <pubDate>Fri, 05 Sep 2025 21:00:05 +0900</pubDate>
      <guid>http://localhost:1313/%EC%8B%A4%EC%8A%B5%EC%9C%BC%EB%A1%9C-%EB%B0%B0%EC%9A%B0%EB%8A%94-%EB%A6%AC%EB%88%85%EC%8A%A4-%EA%B5%AC%EC%A1%B0/05.%EB%A9%94%EB%AA%A8%EB%A6%AC-%EA%B4%80%EB%A6%AC/</guid>
      <description>&lt;h2 id=&#34;free&#34;&gt;free&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240919163385.png&#34; alt=&#34; (Image resource not found)&#34; &gt;%20image%2020240919163385.png)&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240921030745.png&#34; alt=&#34;Pasted image 20240921030745 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;강제로 프로세스를 종료하여 메모리를 확보하는 OOM-Killer 라는 기능이 있다&#xA;서버에는 위의 일이 일어나지 않도록 sysctl 의 vm.panic_on_oom 파라미터의 기본값을 변경하여 메모리 부족시 시스템을 종료하게 하는 방법이 있다&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>데이터베이스 용어 정의 및 relation algebra</title>
      <link>http://localhost:1313/06.university/databaseuniversity/%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4-%EC%9A%A9%EC%96%B4-%EC%A0%95%EC%9D%98-%EB%B0%8F-relation-algebra/</link>
      <pubDate>Fri, 05 Sep 2025 21:00:03 +0900</pubDate>
      <guid>http://localhost:1313/06.university/databaseuniversity/%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4-%EC%9A%A9%EC%96%B4-%EC%A0%95%EC%9D%98-%EB%B0%8F-relation-algebra/</guid>
      <description>&lt;h2 id=&#34;기본-용어-정의&#34;&gt;기본 용어 정의&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;attribute : culume(열)의 이름 rable(레이블)&lt;/li&gt;&#xA;&lt;li&gt;domain(도메인) : attribute가 가질수 있는 값(value)들의 집합(null 은 모든 domain 의 원소이다)&lt;/li&gt;&#xA;&lt;li&gt;row == record == tuple : 가로 value 의 집합&lt;/li&gt;&#xA;&lt;li&gt;entity :  하나의 tuple 을 통해 표현하고 싶은 객체&lt;/li&gt;&#xA;&lt;li&gt;arity : attribute 의 개수&lt;/li&gt;&#xA;&lt;li&gt;relation(table) : tuple 의 집합&#xA;( table 을 통해 표현하는 것은 entity 간의 차이를 나타내므로 관계 라고 명칭 )&lt;/li&gt;&#xA;&lt;li&gt;database : table 의 집합&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;NULL 은 0 이나 &amp;quot;&amp;quot; 이 아님 nonvalue 임&#xA;모든 domain 은 명시하지 않는 한 NULL 을 포함&lt;/p&gt;</description>
    </item>
    <item>
      <title>spring bean 조회</title>
      <link>http://localhost:1313/temp/spring-bean-%EC%A1%B0%ED%9A%8C/</link>
      <pubDate>Fri, 05 Sep 2025 17:38:41 +0900</pubDate>
      <guid>http://localhost:1313/temp/spring-bean-%EC%A1%B0%ED%9A%8C/</guid>
      <description>&lt;p&gt;![](../08.media/20240202105604.png|spring bean 조회-20240202105604)&lt;/p&gt;&#xA;&lt;p&gt;최상위 BeanFactory 인터페이스를 구현한 모든 클래스들은&#xA;bean 들을 관리하는 컨테이너이다&#xA;HierarchicalBeanFactory: 빈 계층구조 관리&#xA;ListableBeanFactory : 빈 여러개 조회 가능&#xA;ApplicationContext : 컨테이너 + 기능추가&#xA;AnnotationConfigApplicationContext : 어노테이션을 설정 정보로 하는 컨테이너&lt;/p&gt;&#xA;&lt;p&gt;이때 컨테이너에 존재하는 bean 들을 조회하는 방법이다&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;BeanFactory&lt;/span&gt;: &lt;span style=&#34;color:#75715e&#34;&gt;//최상위 컨테이너&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;T &lt;span style=&#34;color:#a6e22e&#34;&gt;getBean&lt;/span&gt;(Class&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; requiredType); &lt;span style=&#34;color:#75715e&#34;&gt;// 타입으로 조회&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Object &lt;span style=&#34;color:#a6e22e&#34;&gt;getBean&lt;/span&gt;(String name); &lt;span style=&#34;color:#75715e&#34;&gt;// 이름으로 조회&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;T &lt;span style=&#34;color:#a6e22e&#34;&gt;getBean&lt;/span&gt;(Class&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; requiredType, Object... args); &lt;span style=&#34;color:#75715e&#34;&gt;//이름과 타입으로 조회&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=============&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ListableBeanFactory&lt;/span&gt;: &lt;span style=&#34;color:#75715e&#34;&gt;// 여러개 조회가능 컨테이너&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getBeanDefinitionCount&lt;/span&gt;() &lt;span style=&#34;color:#75715e&#34;&gt;//팩토리에 정의된 빈 개수를 반환합니다.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;String &lt;span style=&#34;color:#a6e22e&#34;&gt;getBeanDefinitionNames&lt;/span&gt;() &lt;span style=&#34;color:#75715e&#34;&gt;//이 팩토리에 정의된 모든 Bean의 이름을 반환합니다.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; Map&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;String,T&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getBeansOfType&lt;/span&gt;(Class &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; type) &lt;span style=&#34;color:#75715e&#34;&gt;//타입으로 모든 Bean 조회&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;추가적으로 bean들의 설정 정보를 담고 있는 BeanDefinition 클래스가 있다&#xA;getRole(), 등등의 설정 정보를 담고 있는 클래스이다 getBeanDefinition()  메서드를 통해 얻을 수 있다&lt;/p&gt;</description>
    </item>
    <item>
      <title>334. Increasing Triplet Subsequence</title>
      <link>http://localhost:1313/leetcode75/334.-increasing-triplet-subsequence/</link>
      <pubDate>Fri, 05 Sep 2025 03:56:21 +0900</pubDate>
      <guid>http://localhost:1313/leetcode75/334.-increasing-triplet-subsequence/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;주어진 정수 배열 nums에 대해, 인덱스 (i, j, k)가 존재하여 i &amp;lt; j &amp;lt; k이고 nums[i] &amp;lt; nums[j] &amp;lt; nums[k]를 만족하는지 확인하여, 존재하면 true를 반환하고, 그렇지 않으면 false를 반환하는 문제입니다.&#xA;&#xA;예시)&#xA;입력: nums = [1,2,3,4,5]&#xA;출력: true&#xA;설명: i &amp;lt; j &amp;lt; k인 모든 조합이 유효합니다.&#xA;&#xA;입력: nums = [5,4,3,2,1]&#xA;출력: false&#xA;설명: 유효한 조합이 존재하지 않습니다.&#xA;&#xA;입력: nums = [2,1,5,0,4,6]&#xA;출력: true&#xA;설명: (3, 4, 5) 조합이 유효합니다. nums[3] == 0 &amp;lt; nums[4] == 4 &amp;lt; nums[5] == 6입니다.&#xA;&#xA;제약 조건&#xA;1 &amp;lt;= nums.length &amp;lt;= 5 * 10^5&#xA;-2^31 &amp;lt;= nums[i] &amp;lt;= 2^31 - 1&#xA;후속 질문&#xA;O(n) 시간 복잡도와 O(1) 공간 복잡도로 구현할 수 있는 방법이 있는지 확인해 보세요.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;greedy 알고리즘으로 풀 수 있는 문제이다&lt;/p&gt;</description>
    </item>
    <item>
      <title>탐욕법(greedy)</title>
      <link>http://localhost:1313/02.inbox/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8B%A4-with-python/%ED%83%90%EC%9A%95%EB%B2%95greedy/</link>
      <pubDate>Fri, 05 Sep 2025 03:50:44 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8B%A4-with-python/%ED%83%90%EC%9A%95%EB%B2%95greedy/</guid>
      <description>&lt;p&gt;현재 상황에서 지금 당장 가장 좋은 것만 고르는 방법&lt;/p&gt;&#xA;&lt;p&gt;지금 당장 가장 좋은 것을 고르는 방식이 답이 되는 것을 보장하는가?&#xA;=&amp;gt; 정당성&lt;/p&gt;&#xA;&lt;p&gt;그리디의 경우 &lt;span style=&#34;background:rgba(240, 200, 0, 0.2)&#34;&gt;정당성 분석&lt;/span&gt;이 가장 중요&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20231220052551.png&#34; alt=&#34;Pasted image 20231220052551 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;단순히 매 상황에서 가장 큰 값만 고르는 경우(그리디)의 경우 5 -&amp;gt; 10 -&amp;gt; 4 를 고르게 되어 틀리게 된다&lt;/p&gt;&#xA;&lt;p&gt;[!]&#xA;탐욕법으로 얻은 해가 최적의 해가 되는 상황에서 이를 추론 할 수 있어야 풀리는 문제 출제&lt;/p&gt;</description>
    </item>
    <item>
      <title>11. Container With Most Water</title>
      <link>http://localhost:1313/leetcode75/11.-container-with-most-water/</link>
      <pubDate>Thu, 04 Sep 2025 20:52:24 +0900</pubDate>
      <guid>http://localhost:1313/leetcode75/11.-container-with-most-water/</guid>
      <description>&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250107074110.png&#34; alt=&#34; (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;완전 탐색의 $O(n^2)$ 시간 탐색을&#xA;선형시간 $O(n)$ 으로 변경&lt;/p&gt;&#xA;&lt;p&gt;완전 탐색 풀이&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Solution&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; maxArea(vector&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; height) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; ret &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; ; i&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; height.size()&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; ; i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; j &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; j &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; height.size() ; j&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; width &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; j &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; i;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; length &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; min(height[i], height[j]);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; area &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; width &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; length;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(ret &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; area) ret &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; area;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; ret;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;이 문제를 선형시간으로 풀 수 있는 이유&#xA;2개의 포인터를 양쪽 끝으로 지정하고 포인터(넓은 의미의)를 이동 시킬 때(width 크기가 큰것 부터 작은 순으로 탐색), 만약 left 위치의 높이가 작다고 가정할 때 right 위치를 줄이면 width 가 줄어들기 때문에 총 넓이가 무조건 작다고 할 수 있다 만약 &lt;code&gt;height[right]&lt;/code&gt; 가 &lt;code&gt;height[left]&lt;/code&gt; 보다 작더라 하더라도 더 작아진다고 할 수 있으므로 넓이가 작아지는 것은 확실 그러므로 가짓수를 확실 하게 쳐 낼 수 있다&lt;/p&gt;</description>
    </item>
    <item>
      <title>leetcode sql 문제</title>
      <link>http://localhost:1313/leetcode-sql-%EB%AC%B8%EC%A0%9C-%ED%92%80%EA%B8%B0/leetcode-sql-%EB%AC%B8%EC%A0%9C/</link>
      <pubDate>Thu, 04 Sep 2025 20:49:28 +0900</pubDate>
      <guid>http://localhost:1313/leetcode-sql-%EB%AC%B8%EC%A0%9C-%ED%92%80%EA%B8%B0/leetcode-sql-%EB%AC%B8%EC%A0%9C/</guid>
      <description>&lt;h2 id=&#34;1581-문제&#34;&gt;1581 문제&lt;/h2&gt;&#xA;&lt;p&gt;not in 으로 풀기&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; customer_id, &lt;span style=&#34;color:#66d9ef&#34;&gt;count&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;count_no_trans&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; visits &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; vi&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; visit_id &lt;span style=&#34;color:#66d9ef&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; ( &lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; visit_id&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Transactions&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;group&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; customer_id&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;left join 으로 풀기&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Visits &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; vi &lt;span style=&#34;color:#66d9ef&#34;&gt;left&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;join&lt;/span&gt; Transactions &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; tr &lt;span style=&#34;color:#66d9ef&#34;&gt;on&lt;/span&gt; vi.visit_id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; tr.visit_id&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; tr.visit_id &lt;span style=&#34;color:#66d9ef&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;--거래기록이 없는 사람 제외&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;group&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; customer_id&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;1280&#34;&gt;1280&lt;/h2&gt;&#xA;&lt;p&gt;참여한 시험이 0개를 어떻게 표현하지&#xA;join 풀이&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    st.student_id,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    st.student_name,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    su.subject_name,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;COUNT&lt;/span&gt;(e.subject_name) &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; attended_exams&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Students &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; st&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;CROSS&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;JOIN&lt;/span&gt; Subjects &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; su&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;left&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;JOIN&lt;/span&gt; Examinations &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; e &lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt; st.student_id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; e.student_id &lt;span style=&#34;color:#66d9ef&#34;&gt;and&lt;/span&gt; su.subject_name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; e.subject_name&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;group&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    st.student_name,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    su.subject_name&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;order&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    st.student_id,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    su.subject_name&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Coalese 함수 사용&#xA;속도와 null 의 적절한 처리를 위해 미리 exam 테이블의 개수를 세서 조인한다&#xA;또한 Coalese 함수 또는 NVL 사용해서 적절한 null 값 처리를 한다&lt;/p&gt;</description>
    </item>
    <item>
      <title>대장균 자식 수 구하기</title>
      <link>http://localhost:1313/leetcode-sql-%EB%AC%B8%EC%A0%9C-%ED%92%80%EA%B8%B0/%EB%8C%80%EC%9E%A5%EA%B7%A0-%EC%9E%90%EC%8B%9D-%EC%88%98-%EA%B5%AC%ED%95%98%EA%B8%B0/</link>
      <pubDate>Thu, 04 Sep 2025 20:49:08 +0900</pubDate>
      <guid>http://localhost:1313/leetcode-sql-%EB%AC%B8%EC%A0%9C-%ED%92%80%EA%B8%B0/%EB%8C%80%EC%9E%A5%EA%B7%A0-%EC%9E%90%EC%8B%9D-%EC%88%98-%EA%B5%AC%ED%95%98%EA%B8%B0/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://school.programmers.co.kr/learn/courses/30/lessons/299305&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;https://school.programmers.co.kr/learn/courses/30/lessons/299305&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;join 방식으로 풀기&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; a.id, &lt;span style=&#34;color:#66d9ef&#34;&gt;COUNT&lt;/span&gt;(b.parent_id) &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; child_count&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; ecoli_data a &lt;span style=&#34;color:#66d9ef&#34;&gt;LEFT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;JOIN&lt;/span&gt; ecoli_data b &lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt; a.ID &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; b.parent_id&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;GROUP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; a.ID&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; a.id&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;subquery&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    E.ID,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;COUNT&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; ECOLI_DATA &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; ED&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; ED.PARENT_ID &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; E.ID&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ) &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; CHILD_COUNT&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ECOLI_DATA E&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    E.ID;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;CTE&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>알르레기 반응 중 건강검진 (피검사)</title>
      <link>http://localhost:1313/temp/%EC%95%8C%EB%A5%B4%EB%A0%88%EA%B8%B0-%EB%B0%98%EC%9D%91-%EC%A4%91-%EA%B1%B4%EA%B0%95%EA%B2%80%EC%A7%84-%ED%94%BC%EA%B2%80%EC%82%AC/</link>
      <pubDate>Wed, 27 Aug 2025 22:04:33 +0900</pubDate>
      <guid>http://localhost:1313/temp/%EC%95%8C%EB%A5%B4%EB%A0%88%EA%B8%B0-%EB%B0%98%EC%9D%91-%EC%A4%91-%EA%B1%B4%EA%B0%95%EA%B2%80%EC%A7%84-%ED%94%BC%EA%B2%80%EC%82%AC/</guid>
      <description>&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;의뢰기관명&lt;/strong&gt; 2222&lt;/td&gt;&#xA;          &lt;td&gt;미금성모의원 3333&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;의뢰기관코드&lt;/strong&gt; 4&lt;/td&gt;&#xA;          &lt;td&gt;66006 5&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;수진자명&lt;/strong&gt; 6&lt;/td&gt;&#xA;          &lt;td&gt;신년기 7777&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;접수번호&lt;/strong&gt; 8&lt;/td&gt;&#xA;          &lt;td&gt;20250826-01865 999&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Chart No.&lt;/strong&gt; 10101010&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;접수일자&lt;/strong&gt; 11&lt;/td&gt;&#xA;          &lt;td&gt;2025/08/26 18:47 121212&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;성별/나이&lt;/strong&gt; 13131313&lt;/td&gt;&#xA;          &lt;td&gt;M/24 14141414&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;검체종류&lt;/strong&gt; 15&lt;/td&gt;&#xA;          &lt;td&gt;NaF, Serum, Urine, WB 161616&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;채취일자&lt;/strong&gt; 17171717&lt;/td&gt;&#xA;          &lt;td&gt;2025-08-26 18181818&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;검사일자&lt;/strong&gt; 19&lt;/td&gt;&#xA;          &lt;td&gt;2025/08/26 20:03 202020&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;담당의사&lt;/strong&gt; 21212121&lt;/td&gt;&#xA;          &lt;td&gt;김중연 22222222&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;보고일자&lt;/strong&gt; 23&lt;/td&gt;&#xA;          &lt;td&gt;2025/08/27 03:50 242424&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;진료과/병동&lt;/strong&gt; 25252525&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;담당자&lt;/strong&gt; 26&lt;/td&gt;&#xA;          &lt;td&gt;609 27&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;주민번호&lt;/strong&gt; 28282828&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;기타&lt;/strong&gt; 29&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;보험코드 3030&lt;/th&gt;&#xA;          &lt;th&gt;검사명 3131&lt;/th&gt;&#xA;          &lt;th&gt;결과 3232&lt;/th&gt;&#xA;          &lt;th&gt;판정 3333&lt;/th&gt;&#xA;          &lt;th&gt;임상참고치/단위 3434&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;■ 간담도, 췌장질환 검사&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;D186000HZ 35&lt;/td&gt;&#xA;          &lt;td&gt;AST(GOT) 36&lt;/td&gt;&#xA;          &lt;td&gt;19 37&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;M: 0-40 U/L&lt;br&gt;F: 0-35 38&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;D185000HZ 39&lt;/td&gt;&#xA;          &lt;td&gt;ALT(GPT) 40&lt;/td&gt;&#xA;          &lt;td&gt;9 41&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;M: 0-45 U/L&lt;br&gt;F: 0-35 42&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;D189000HZ 43&lt;/td&gt;&#xA;          &lt;td&gt;r-GTP 44&lt;/td&gt;&#xA;          &lt;td&gt;11 45&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;M: 11-60 U/L&lt;br&gt;F: 8-39 46&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;■ 신장질환 검사&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;D230000HZ 47&lt;/td&gt;&#xA;          &lt;td&gt;BUN 48&lt;/td&gt;&#xA;          &lt;td&gt;15.8 49&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;8.00-20.00 mg/dL 50&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;D228000HZ 51&lt;/td&gt;&#xA;          &lt;td&gt;Creatinine 52&lt;/td&gt;&#xA;          &lt;td&gt;1.06 53&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;M: 0.67-1.17 mg/dL&lt;br&gt;F: 0.51-0.95 54&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;eGFR(CKD-EPI) 55&lt;/td&gt;&#xA;          &lt;td&gt;97.74 56&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&amp;gt; 60 mL/min/1.73m² 57&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;■ 당뇨관련 검사&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;D302200HZ 58&lt;/td&gt;&#xA;          &lt;td&gt;Glucose(AC) 59&lt;/td&gt;&#xA;          &lt;td&gt;80 60&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;60.00-100.00 mg/dL 61&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;■ 전해질 및 대사관련 검사&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;D231000HZ 62&lt;/td&gt;&#xA;          &lt;td&gt;Uric acid 63&lt;/td&gt;&#xA;          &lt;td&gt;4.5 64&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;M: 3.5-7.2 mg/dL&lt;br&gt;F: 2.6-6.0 65&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;D280002HZ 66&lt;/td&gt;&#xA;          &lt;td&gt;Sodium(Na) 67&lt;/td&gt;&#xA;          &lt;td&gt;136 68&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;135.00-146.00 mmol/L 69&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;D280006HZ 70&lt;/td&gt;&#xA;          &lt;td&gt;Potassium(K) 71&lt;/td&gt;&#xA;          &lt;td&gt;4.6 72&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;3.50- 5.50 mmol/L 73&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;■ 혈액 검사&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;D000201HZ 74&lt;/td&gt;&#xA;          &lt;td&gt;WBC(백혈구) 75&lt;/td&gt;&#xA;          &lt;td&gt;10.9 76&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;3.50-11.00 K/uL 77&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;D000203HZ 78&lt;/td&gt;&#xA;          &lt;td&gt;RBC(적혈구) 79&lt;/td&gt;&#xA;          &lt;td&gt;4.79 80&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;M: 4.30-5.80 M/uL&lt;br&gt;F: 3.68-4.88 81&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;D000205HZ 82&lt;/td&gt;&#xA;          &lt;td&gt;Hemoglobin(혈색소) 83&lt;/td&gt;&#xA;          &lt;td&gt;14.7 84&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;M: 12.4-17.1 g/dL&lt;br&gt;F: 11.5-15.0 85&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;D000204HZ 86&lt;/td&gt;&#xA;          &lt;td&gt;Hematocrit 87&lt;/td&gt;&#xA;          &lt;td&gt;43.1 88&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;M: 38-52 %&lt;br&gt;F: 35-45 89&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;MCV 90&lt;/td&gt;&#xA;          &lt;td&gt;89.9 91&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;80.00-105.00 fL 92&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;MCH 93&lt;/td&gt;&#xA;          &lt;td&gt;30.6 94&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;27.00- 33.00 pg 95&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;MCHC 96&lt;/td&gt;&#xA;          &lt;td&gt;34.1 97&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;31.00- 36.00 g/dL 98&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;D000202HZ 99&lt;/td&gt;&#xA;          &lt;td&gt;RDW 100&lt;/td&gt;&#xA;          &lt;td&gt;12.4 101&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;10.50-14.50 % 102&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;D000206HZ 103&lt;/td&gt;&#xA;          &lt;td&gt;PDW 104&lt;/td&gt;&#xA;          &lt;td&gt;15.9 105&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;10.50- 23.50 fL 106&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;D000207HZ 107&lt;/td&gt;&#xA;          &lt;td&gt;Platelets(혈소판) 108&lt;/td&gt;&#xA;          &lt;td&gt;262 109&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;150.00-440.00 K/uL 110&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;D001300HZ 111&lt;/td&gt;&#xA;          &lt;td&gt;N.Segment 112&lt;/td&gt;&#xA;          &lt;td&gt;76 113&lt;/td&gt;&#xA;          &lt;td&gt;H 114&lt;/td&gt;&#xA;          &lt;td&gt;35.00-70.00 % 115&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;N.Band 116&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;0.00-7.00 % 117&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Lymphocyte 118&lt;/td&gt;&#xA;          &lt;td&gt;18 119&lt;/td&gt;&#xA;          &lt;td&gt;L 120&lt;/td&gt;&#xA;          &lt;td&gt;25.00-55.00 % 121&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Monocyte 122&lt;/td&gt;&#xA;          &lt;td&gt;6 123&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;0.00-11.00 % 124&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Eosinophil 125&lt;/td&gt;&#xA;          &lt;td&gt;0 126&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;0.00-7.00 % 127&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Basophil 128&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;0.00-1.00 % 129&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;■ 소변 검사&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;D225300HZ 130&lt;/td&gt;&#xA;          &lt;td&gt;U-Occult blood 131&lt;/td&gt;&#xA;          &lt;td&gt;음성 132&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Negative 133&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;U-Leukocyte 134&lt;/td&gt;&#xA;          &lt;td&gt;음성 135&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Negative 136&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;U-Bilirubin 137&lt;/td&gt;&#xA;          &lt;td&gt;음성 138&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Negative 139&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;U-Urobilinogen 140&lt;/td&gt;&#xA;          &lt;td&gt;+/- 141&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;+/- 142&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;U-Ketone 143&lt;/td&gt;&#xA;          &lt;td&gt;음성 144&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Negative 145&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;U-Protein 146&lt;/td&gt;&#xA;          &lt;td&gt;음성 147&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Negative 148&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;U-Nitrite 149&lt;/td&gt;&#xA;          &lt;td&gt;음성 150&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Negative 151&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;U-Glucose 152&lt;/td&gt;&#xA;          &lt;td&gt;음성 153&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Negative 154&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;U-pH 155&lt;/td&gt;&#xA;          &lt;td&gt;6.0 156&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;5.00- 8.00 157&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;U-S.G. 158&lt;/td&gt;&#xA;          &lt;td&gt;1.005 159&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;1.005-1.030 160&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;D220101HZ 161&lt;/td&gt;&#xA;          &lt;td&gt;U-WBC 162&lt;/td&gt;&#xA;          &lt;td&gt;0-3 163&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;0-3/HPF 164&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;U-RBC 165&lt;/td&gt;&#xA;          &lt;td&gt;Not Found 166&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;0-2/HPF 167&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;■ 갑상선질환 검사&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;D323006HZ 168&lt;/td&gt;&#xA;          &lt;td&gt;T3 (Triiodothyronine) 169&lt;/td&gt;&#xA;          &lt;td&gt;0.71 170&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;0.60- 1.81 ng/mL 171&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;D323005HZ 172&lt;/td&gt;&#xA;          &lt;td&gt;Free T4 173&lt;/td&gt;&#xA;          &lt;td&gt;1.11 174&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;0.89- 1.76 ng/dL 175&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;D325001HZ 176&lt;/td&gt;&#xA;          &lt;td&gt;TSH 177&lt;/td&gt;&#xA;          &lt;td&gt;1.18 178&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;0.55- 4.78 µIU/mL 179&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;&lt;strong&gt;검사자&lt;/strong&gt;: 전미순 17005 180180180180&lt;/p&gt;</description>
    </item>
    <item>
      <title>계층 기반 폴더 구조 vs 서비스 단위 기반 폴더 구조</title>
      <link>http://localhost:1313/02.inbox/%EA%B3%84%EC%B8%B5-%EA%B8%B0%EB%B0%98-%ED%8F%B4%EB%8D%94-%EA%B5%AC%EC%A1%B0-vs-%EC%84%9C%EB%B9%84%EC%8A%A4-%EB%8B%A8%EC%9C%84-%EA%B8%B0%EB%B0%98-%ED%8F%B4%EB%8D%94-%EA%B5%AC%EC%A1%B0/</link>
      <pubDate>Wed, 20 Aug 2025 16:00:56 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EA%B3%84%EC%B8%B5-%EA%B8%B0%EB%B0%98-%ED%8F%B4%EB%8D%94-%EA%B5%AC%EC%A1%B0-vs-%EC%84%9C%EB%B9%84%EC%8A%A4-%EB%8B%A8%EC%9C%84-%EA%B8%B0%EB%B0%98-%ED%8F%B4%EB%8D%94-%EA%B5%AC%EC%A1%B0/</guid>
      <description>&lt;p&gt;좋은 질문입니다. &lt;strong&gt;DTO, Repository, Domain, Service&lt;/strong&gt; 와 같은 &lt;strong&gt;계층 기반 폴더 구조&lt;/strong&gt;(Layered Architecture)와 &lt;strong&gt;서비스 단위 기반 폴더 구조&lt;/strong&gt;(Vertical Slice / Feature-based Architecture) 중 어느 것이 더 나은지는 &lt;strong&gt;프로젝트의 규모, 팀 구조, 유지보수성, 확장성&lt;/strong&gt; 등에 따라 달라집니다.&lt;/p&gt;&#xA;&lt;p&gt;아래에서 두 방식의 특징과 장단점을 비교하고, 어떤 상황에서 어떤 방식이 적합한지 정리해 드릴게요.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-1-계층-기반-구조-layered--horizontal-architecture&#34;&gt;✅ 1. &lt;strong&gt;계층 기반 구조 (Layered / Horizontal Architecture)&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;src/&#xA;├── dto/&#xA;│   ├── UserRequestDto.java&#xA;│   └── UserResponseDto.java&#xA;├── domain/&#xA;│   ├── User.java&#xA;│   └── UserStatus.java&#xA;├── repository/&#xA;│   └── UserRepository.java&#xA;├── service/&#xA;│   └── UserService.java&#xA;├── controller/&#xA;│   └── UserController.java&#xA;└── config/&#xA;    └── DatabaseConfig.java&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;-장점&#34;&gt;✅ 장점&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;일관성 있는 구조&lt;/strong&gt;: 모든 개발자가 동일한 위치에서 동일한 타입의 클래스를 찾을 수 있음.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;초기 개발이 쉬움&lt;/strong&gt;: 특히 작은 프로젝트나 학습용 프로젝트에 적합.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Spring Boot 등의 프레임워크와 자연스럽게 맞음&lt;/strong&gt;: MVC 패턴과 잘 어울림.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;-단점&#34;&gt;❌ 단점&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;변경이 어렵다&lt;/strong&gt;: 하나의 기능을 수정할 때 여러 패키지를 왔다갔다 해야 함 (예: 유저 생성 기능 수정 시 controller → service → repository → dto 모두 확인).&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;결합도 증가&lt;/strong&gt;: 모든 기능이 동일한 계층에 몰려 있어, 관련 없는 기능들끼리 묶임.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;대규모 프로젝트에서 관리 어려움&lt;/strong&gt;: 기능이 많아질수록 파일 수가 많아지고, 관련 코드를 찾기 어려워짐.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-2-서비스기능-단위-구조-vertical-slice--feature-based-architecture&#34;&gt;✅ 2. &lt;strong&gt;서비스(기능) 단위 구조 (Vertical Slice / Feature-based Architecture)&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;src/&#xA;├── user/&#xA;│   ├── User.java&#xA;│   ├── UserRepository.java&#xA;│   ├── UserService.java&#xA;│   ├── UserController.java&#xA;│   ├── UserRequestDto.java&#xA;│   └── UserResponseDto.java&#xA;├── order/&#xA;│   ├── Order.java&#xA;│   ├── OrderService.java&#xA;│   └── OrderController.java&#xA;└── common/&#xA;    ├── config/&#xA;    └── exception/&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;-장점-1&#34;&gt;✅ 장점&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;기능 단위로 코드가 묶여 있어 유지보수 용이&lt;/strong&gt;: 유저 관련 기능은 &lt;code&gt;user/&lt;/code&gt; 폴더 안에 모두 있음.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;변경이 쉬움&lt;/strong&gt;: 기능 하나를 수정할 때 관련된 모든 코드를 한 폴더에서 찾을 수 있음.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;팀 기반 개발에 유리&lt;/strong&gt;: 팀이 기능 단위로 분업하기 쉬움 (예: A팀은 user, B팀은 order 담당).&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;확장성 좋음&lt;/strong&gt;: 새 기능 추가 시 폴더 하나 생성하면 됨.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;-단점-1&#34;&gt;❌ 단점&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;중복 가능성&lt;/strong&gt;: 공통 로직(예: DTO, 유틸)이 각 폴더에 중복될 수 있음 → &lt;code&gt;common&lt;/code&gt; 또는 &lt;code&gt;shared&lt;/code&gt; 패키지로 해결 필요.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;초기 설계가 중요&lt;/strong&gt;: 공통 모듈과 기능 모듈의 경계를 잘 설정해야 함.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;익숙하지 않은 구조&lt;/strong&gt;: 전통적인 계층 구조에 익숙한 개발자에게는 어색할 수 있음.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-결론-어떤-걸-선택해야-할까&#34;&gt;✅ 결론: 어떤 걸 선택해야 할까?&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;프로젝트 유형&lt;/th&gt;&#xA;          &lt;th&gt;추천 구조&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;작은 프로젝트, 학습용, MVP&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;✅ 계층 기반 구조 (간단하고 직관적)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;중대형 프로젝트, 장기 운영, 팀 개발&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;✅ &lt;strong&gt;서비스/기능 단위 구조&lt;/strong&gt; (유지보수성 ↑)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;도메인 중심 설계(DDD) 적용&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;✅ 기능 단위 + bounded context 기반 구성&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;마이크로서비스 아키텍처&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;✅ 각 서비스 내부는 기능 단위 구조 권장&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-보완-전략-하이브리드-접근&#34;&gt;🔁 보완 전략 (하이브리드 접근)&lt;/h3&gt;&#xA;&lt;p&gt;실제로는 &lt;strong&gt;하이브리드&lt;/strong&gt;로 구성하는 경우도 많습니다:&lt;/p&gt;</description>
    </item>
    <item>
      <title>spring RequestMapping 구현체</title>
      <link>http://localhost:1313/02.inbox/spring-requestmapping-%EA%B5%AC%ED%98%84%EC%B2%B4/</link>
      <pubDate>Tue, 19 Aug 2025 22:16:22 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/spring-requestmapping-%EA%B5%AC%ED%98%84%EC%B2%B4/</guid>
      <description>&lt;p&gt;스프링 MVC의 &lt;strong&gt;&lt;code&gt;HandlerMapping&lt;/code&gt; 구현체&lt;/strong&gt;는 다양한 방식으로 요청을 핸들러(컨트롤러)에 매핑합니다. 각 클래스의 역할과 특징을 체계적으로 정리했습니다:&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;1-abstracthandlermapping&#34;&gt;1. &lt;strong&gt;&lt;code&gt;AbstractHandlerMapping&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: 모든 &lt;code&gt;HandlerMapping&lt;/code&gt;의 &lt;strong&gt;기반 추상 클래스&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;인터셉터(&lt;code&gt;HandlerInterceptor&lt;/code&gt;) 관리 및 실행 로직을 제공합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;getHandler()&lt;/code&gt; 메서드를 구현해 실제 핸들러를 찾는 로직을 정의합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;사용 예시&lt;/strong&gt;:&lt;br&gt;&#xA;다른 구체적인 &lt;code&gt;HandlerMapping&lt;/code&gt; 클래스들이 이 클래스를 상속받아 확장합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;2-abstracturlhandlermapping&#34;&gt;2. &lt;strong&gt;&lt;code&gt;AbstractUrlHandlerMapping&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;URL 기반 매핑&lt;/strong&gt;을 위한 추상 클래스.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;URL 패턴과 핸들러를 연결하는 공통 로직을 제공합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;urlMap&lt;/code&gt; 또는 &lt;code&gt;handlerMap&lt;/code&gt;을 사용해 URL-핸들러 매핑 정보를 저장합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;하위 클래스&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;BeanNameUrlHandlerMapping&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;SimpleUrlHandlerMapping&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;AbstractDetectingUrlHandlerMapping&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;3-beannameurlhandlermapping&#34;&gt;3. &lt;strong&gt;&lt;code&gt;BeanNameUrlHandlerMapping&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;스프링 빈 이름을 URL로 매핑&lt;/strong&gt;합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>의존관계 주입(dependency injection)</title>
      <link>http://localhost:1313/temp/%EC%9D%98%EC%A1%B4%EA%B4%80%EA%B3%84-%EC%A3%BC%EC%9E%85dependency-injection/</link>
      <pubDate>Tue, 19 Aug 2025 22:14:39 +0900</pubDate>
      <guid>http://localhost:1313/temp/%EC%9D%98%EC%A1%B4%EA%B4%80%EA%B3%84-%EC%A3%BC%EC%9E%85dependency-injection/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;생성자 주입&lt;/li&gt;&#xA;&lt;li&gt;설정자 수정자 주입(setter)&lt;/li&gt;&#xA;&lt;li&gt;필드 주입&lt;/li&gt;&#xA;&lt;li&gt;일반 메서드 주입&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;생성자-주입&#34;&gt;생성자 주입&lt;/h2&gt;&#xA;&lt;p&gt;생성자 주입(Constructor Injection) 이 방법 객체 생성 시점 의존성 부여&#xA;불변,필수&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ExampleClass&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; SomeDependency dependency;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ExampleClass&lt;/span&gt;(SomeDependency dependency) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;dependency&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dependency;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;spring 에서는 @Autowired 를 통해 의존성을 주입하는데&#xA;생성자가 1개 라면 생략 가능하다&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;설정자-주입&#34;&gt;설정자 주입&lt;/h2&gt;&#xA;&lt;p&gt;설정자 주입(Setter Injection) 이 방법은 객체 생성 이후에도 의존성 변경 가능&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ExampleClass&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; SomeDependency dependency;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setDependency&lt;/span&gt;(SomeDependency dependency) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;dependency&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dependency;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;h2 id=&#34;필드-주입&#34;&gt;필드 주입&lt;/h2&gt;&#xA;&lt;p&gt;필드 주입(Field Injection)&lt;/p&gt;</description>
    </item>
    <item>
      <title>싱글톤 내부 의존관계로 프로토타입 스코프의 bean 을 가질때</title>
      <link>http://localhost:1313/02.inbox/%EC%8B%B1%EA%B8%80%ED%86%A4-%EB%82%B4%EB%B6%80-%EC%9D%98%EC%A1%B4%EA%B4%80%EA%B3%84%EB%A1%9C-%ED%94%84%EB%A1%9C%ED%86%A0%ED%83%80%EC%9E%85-%EC%8A%A4%EC%BD%94%ED%94%84%EC%9D%98-bean-%EC%9D%84-%EA%B0%80%EC%A7%88%EB%95%8C/</link>
      <pubDate>Tue, 19 Aug 2025 22:14:19 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EC%8B%B1%EA%B8%80%ED%86%A4-%EB%82%B4%EB%B6%80-%EC%9D%98%EC%A1%B4%EA%B4%80%EA%B3%84%EB%A1%9C-%ED%94%84%EB%A1%9C%ED%86%A0%ED%83%80%EC%9E%85-%EC%8A%A4%EC%BD%94%ED%94%84%EC%9D%98-bean-%EC%9D%84-%EA%B0%80%EC%A7%88%EB%95%8C/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Scope&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;singleton&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ClientBean&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;@Autowired&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; ObjectProvider&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;PrototypeBean&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; prototypeBeanProvider; &lt;span style=&#34;color:#75715e&#34;&gt;// 객체를 필요한 시점에 찾아서 주입받는 경우에 사용&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// private final PrototypeBean prototypeBean;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// @Autowired&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// public ClientBean(PrototypeBean prototypeBean){ // 생성시점에 주입&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;//     this.prototypeBean = prototypeBean;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// }&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;logic&lt;/span&gt;(){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        PrototypeBean prototypeBean &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; prototypeBeanProvider.&lt;span style=&#34;color:#a6e22e&#34;&gt;getObject&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;    &lt;span style=&#34;color:#75715e&#34;&gt;//ApplicationContext ac = &lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;    &lt;span style=&#34;color:#75715e&#34;&gt;//new AnnotationConfigApplicationContext();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;//ac.getBean(PrototypeBean.class);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Scope&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;prototype&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;PrototypeBean&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; count &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;addCount&lt;/span&gt;(){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;count;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getCount&lt;/span&gt;(){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; count;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;Prototype 타입의 객체는 지속적으로 객체를 새로 생성하고자 하는 목적으로 만들었으나 @Autowired 속성, ClientBean 의 singleton scope 속성으로 인해 bean 의존관계 단계에서 미리 생성되어 버림 그리고 다시 생성되지 않음&lt;/p&gt;</description>
    </item>
    <item>
      <title>서블릿 객체들</title>
      <link>http://localhost:1313/younghan-mvc1/%EC%84%9C%EB%B8%94%EB%A6%BF-%EA%B0%9D%EC%B2%B4%EB%93%A4/</link>
      <pubDate>Tue, 19 Aug 2025 22:14:18 +0900</pubDate>
      <guid>http://localhost:1313/younghan-mvc1/%EC%84%9C%EB%B8%94%EB%A6%BF-%EA%B0%9D%EC%B2%B4%EB%93%A4/</guid>
      <description>&lt;h3 id=&#34;1-각-객체의-정의-및-내부-구조&#34;&gt;1. &lt;strong&gt;각 객체의 정의 및 내부 구조&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;11-page-pagecontext-jsp-의존적&#34;&gt;&lt;strong&gt;1.1 page (PageContext)&lt;/strong&gt; jsp 의존적&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;범위&lt;/strong&gt;: 현재 JSP 페이지 내에서만 유효합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;수명&lt;/strong&gt;: 페이지가 렌더링되는 동안에만 유지됩니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;내부 구조&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;PageContext&lt;/code&gt; 클래스에 의해 구현되며, 페이지 단위로 속성을 저장합니다.&lt;/li&gt;&#xA;&lt;li&gt;내부적으로 &lt;strong&gt;&lt;code&gt;Map&amp;lt;String, Object&amp;gt;&lt;/code&gt;&lt;/strong&gt; 를 사용하지만, &lt;code&gt;getAttributeNames()&lt;/code&gt; 메서드를 지원하지 않습니다.&lt;/li&gt;&#xA;&lt;li&gt;JSP의 다른 기본 객체(request, session, application)에 대한 접근을 제공합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;JSP 의존성&lt;/strong&gt;: &lt;strong&gt;O&lt;/strong&gt; (JSP 전용 객체이며, Servlet에서는 사용 불가능합니다.)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;12-request-httpservletrequest&#34;&gt;&lt;strong&gt;1.2 request (HttpServletRequest)&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;범위&lt;/strong&gt;: 같은 요청(request) 내에서 유효합니다 (예: 클라이언트에서 서버로의 한 번의 HTTP 요청).&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;수명&lt;/strong&gt;: 요청이 처리되는 동안에만 유지됩니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;내부 구조&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;HttpServletRequest&lt;/code&gt;의 &lt;code&gt;setAttribute()&lt;/code&gt;/&lt;code&gt;getAttribute()&lt;/code&gt; 메서드를 사용합니다.&lt;/li&gt;&#xA;&lt;li&gt;컨테이너(예: Tomcat)는 내부적으로 &lt;strong&gt;&lt;code&gt;Map&amp;lt;String, Object&amp;gt;&lt;/code&gt;&lt;/strong&gt; 구조로 속성을 관리합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;JSP 의존성&lt;/strong&gt;: &lt;strong&gt;X&lt;/strong&gt; (Servlet에서도 사용 가능하며, JSP와 독립적입니다.)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;13-session-httpsession&#34;&gt;&lt;strong&gt;1.3 session (HttpSession)&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;범위&lt;/strong&gt;: 동일한 사용자의 세션(Session) 내에서 유효합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;수명&lt;/strong&gt;: 세션이 종료될 때까지 유지됩니다 (기본적으로 30분).&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;내부 구조&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;HttpSession&lt;/code&gt; 객체에 속성을 저장하며, 컨테이너는 &lt;strong&gt;&lt;code&gt;ConcurrentHashMap&amp;lt;String, Object&amp;gt;&lt;/code&gt;&lt;/strong&gt; 를 사용하여 동시성 문제를 해결합니다.&lt;/li&gt;&#xA;&lt;li&gt;세션 ID를 기반으로 사용자를 식별합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;JSP 의존성&lt;/strong&gt;: &lt;strong&gt;X&lt;/strong&gt; (Servlet에서도 사용 가능하며, JSP와 독립적입니다.)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;14-application-servletcontext&#34;&gt;&lt;strong&gt;1.4 application (ServletContext)&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;범위&lt;/strong&gt;: 애플리케이션 전체(모든 사용자 및 세션)에서 유효합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;수명&lt;/strong&gt;: 애플리케이션이 종료될 때까지 유지됩니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;내부 구조&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;ServletContext&lt;/code&gt; 객체에 속성을 저장하며, 컨테이너는 &lt;strong&gt;&lt;code&gt;ConcurrentHashMap&amp;lt;String, Object&amp;gt;&lt;/code&gt;&lt;/strong&gt; 를 사용합니다.&lt;/li&gt;&#xA;&lt;li&gt;모든 사용자와 세션에서 공유되는 전역 데이터를 관리합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;JSP 의존성&lt;/strong&gt;: &lt;strong&gt;X&lt;/strong&gt; (Servlet에서도 사용 가능하며, JSP와 독립적입니다.)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;2-속성-처리-메서드-비교&#34;&gt;2. &lt;strong&gt;속성 처리 메서드 비교&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;메서드&lt;/th&gt;&#xA;          &lt;th&gt;page (PageContext)&lt;/th&gt;&#xA;          &lt;th&gt;request (HttpServletRequest)&lt;/th&gt;&#xA;          &lt;th&gt;session (HttpSession)&lt;/th&gt;&#xA;          &lt;th&gt;application (ServletContext)&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;setAttribute()&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;O&lt;/td&gt;&#xA;          &lt;td&gt;O&lt;/td&gt;&#xA;          &lt;td&gt;O&lt;/td&gt;&#xA;          &lt;td&gt;O&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;getAttribute()&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;O&lt;/td&gt;&#xA;          &lt;td&gt;O&lt;/td&gt;&#xA;          &lt;td&gt;O&lt;/td&gt;&#xA;          &lt;td&gt;O&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;removeAttribute()&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;O&lt;/td&gt;&#xA;          &lt;td&gt;O&lt;/td&gt;&#xA;          &lt;td&gt;O&lt;/td&gt;&#xA;          &lt;td&gt;O&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;getAttributeNames()&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;X&lt;/td&gt;&#xA;          &lt;td&gt;O&lt;/td&gt;&#xA;          &lt;td&gt;O&lt;/td&gt;&#xA;          &lt;td&gt;O&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;page 객체&lt;/strong&gt;는 &lt;code&gt;getAttributeNames()&lt;/code&gt;를 지원하지 않습니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;request, session, application&lt;/strong&gt;은 &lt;code&gt;getAttributeNames()&lt;/code&gt;로 속성 목록을 조회할 수 있습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;3-jsp-의존성-분석&#34;&gt;3. &lt;strong&gt;JSP 의존성 분석&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;page 객체&lt;/strong&gt;:&lt;br&gt;&#xA;JSP 전용 객체이며, &lt;code&gt;PageContext&lt;/code&gt; 클래스에 종속적입니다. Servlet에서는 사용할 수 없습니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;request, session, application 객체&lt;/strong&gt;:&lt;br&gt;&#xA;Servlet API(&lt;code&gt;HttpServletRequest&lt;/code&gt;, &lt;code&gt;HttpSession&lt;/code&gt;, &lt;code&gt;ServletContext&lt;/code&gt;)에 정의된 표준 객체입니다. 따라서 &lt;strong&gt;JSP와 독립적&lt;/strong&gt;이며, Servlet이나 다른 웹 프레임워크에서 동일하게 사용됩니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;4-사용-예시&#34;&gt;4. &lt;strong&gt;사용 예시&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;1-request-범위&#34;&gt;1. &lt;strong&gt;request 범위&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-jsp&#34; data-lang=&#34;jsp&#34;&gt;&amp;lt;!-- JSP 페이지에서 request 속성 설정 --&amp;gt;&#xA;&amp;lt;%&#xA;  request.setAttribute(&amp;#34;userName&amp;#34;, &amp;#34;Alice&amp;#34;);&#xA;%&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Servlet에서 request 속성 사용&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;protected&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;doGet&lt;/span&gt;(HttpServletRequest request, HttpServletResponse response) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  String name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (String) request.&lt;span style=&#34;color:#a6e22e&#34;&gt;getAttribute&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;userName&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;2-session-범위&#34;&gt;2. &lt;strong&gt;session 범위&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-jsp&#34; data-lang=&#34;jsp&#34;&gt;&amp;lt;!-- JSP에서 세션 속성 설정 --&amp;gt;&#xA;&amp;lt;%&#xA;  session.setAttribute(&amp;#34;userRole&amp;#34;, &amp;#34;ADMIN&amp;#34;);&#xA;%&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;3-application-범위&#34;&gt;3. &lt;strong&gt;application 범위&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-jsp&#34; data-lang=&#34;jsp&#34;&gt;&amp;lt;!-- JSP에서 애플리케이션 속성 설정 --&amp;gt;&#xA;&amp;lt;%&#xA;  application.setAttribute(&amp;#34;appVersion&amp;#34;, &amp;#34;1.0.0&amp;#34;);&#xA;%&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;&#xA;&lt;h3 id=&#34;5-중요-고려-사항&#34;&gt;5. &lt;strong&gt;중요 고려 사항&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;범위 선택&lt;/strong&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>브라우저 기반 수강신청 알림 시스템 설계서</title>
      <link>http://localhost:1313/02.inbox/%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80-%EA%B8%B0%EB%B0%98-%EC%88%98%EA%B0%95%EC%8B%A0%EC%B2%AD-%EC%95%8C%EB%A6%BC-%EC%8B%9C%EC%8A%A4%ED%85%9C-%EC%84%A4%EA%B3%84%EC%84%9C/</link>
      <pubDate>Tue, 19 Aug 2025 01:08:32 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80-%EA%B8%B0%EB%B0%98-%EC%88%98%EA%B0%95%EC%8B%A0%EC%B2%AD-%EC%95%8C%EB%A6%BC-%EC%8B%9C%EC%8A%A4%ED%85%9C-%EC%84%A4%EA%B3%84%EC%84%9C/</guid>
      <description>&lt;h2 id=&#34;명지대학교-수강신청-빈자리-알림-크롬-확장프로그램-프로젝트-설계서&#34;&gt;명지대학교 수강신청 빈자리 알림 크롬 확장프로그램 프로젝트 설계서&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-프로젝트-개요&#34;&gt;1. 프로젝트 개요&lt;/h3&gt;&#xA;&lt;p&gt;명지대학교 수강신청 시스템의 &amp;lsquo;미리담기 내역&amp;rsquo; 페이지(&lt;code&gt;https://class.mju.ac.kr/main/bag&lt;/code&gt;)에서 &amp;lsquo;인원초과&amp;rsquo; 상태인 강의에 빈자리가 발생했을 때, 사용자에게 데스크탑 알림을 보내주는 크롬 확장 프로그램을 개발한다. 이 프로그램은 사용자가 수동으로 새로고침하며 자리를 확인하는 불편함을 해소하는 것을 목표로 한다.&lt;/p&gt;&#xA;&lt;h3 id=&#34;2-목표&#34;&gt;2. 목표&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;특정 페이지에서만 동작:&lt;/strong&gt; &lt;code&gt;https://class.mju.ac.kr/main/bag&lt;/code&gt; URL에서만 확장 프로그램의 기능이 활성화된다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;UI 요소 삽입:&lt;/strong&gt; &amp;lsquo;인원초과&amp;rsquo;가 표시된 강의 항목에 &amp;lsquo;알림 대기&amp;rsquo; 버튼을 동적으로 추가한다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;백그라운드 모니터링:&lt;/strong&gt; 사용자가 &amp;lsquo;알림 대기&amp;rsquo; 버튼을 클릭하면, 해당 강의를 백그라운드에서 주기적으로 확인한다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;실시간 알림:&lt;/strong&gt; 모니터링 중인 강의에 빈자리(&lt;code&gt;[인원초과]&lt;/code&gt; 문자열 제거)가 확인되면 즉시 사용자에게 크롬 데스크탑 알림을 보낸다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;메모리 기반 데이터 관리:&lt;/strong&gt; 알림 대기 중인 강의 목록, CSRF 토큰 등 모든 상태 정보는 &lt;code&gt;chrome.storage&lt;/code&gt;를 사용하지 않고, 확장 프로그램의 실행 시간 동안 메모리(JavaScript 변수)에만 저장한다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;비-간섭적 작동:&lt;/strong&gt; 백그라운드 확인 작업은 현재 사용자가 보고 있는 페이지를 새로고침하거나 UI를 변경하지 않는다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;3-아키텍처-및-구성-요소&#34;&gt;3. 아키텍처 및 구성 요소&lt;/h3&gt;&#xA;&lt;p&gt;확장 프로그램은 다음과 같은 세 가지 주요 파일로 구성된다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>브라우저 기반 수강신청 알림</title>
      <link>http://localhost:1313/02.inbox/%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80-%EA%B8%B0%EB%B0%98-%EC%88%98%EA%B0%95%EC%8B%A0%EC%B2%AD-%EC%95%8C%EB%A6%BC/</link>
      <pubDate>Thu, 14 Aug 2025 11:58:34 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80-%EA%B8%B0%EB%B0%98-%EC%88%98%EA%B0%95%EC%8B%A0%EC%B2%AD-%EC%95%8C%EB%A6%BC/</guid>
      <description>&lt;p&gt;이 사이트를 기준으로 알림 확장 프로그램을 만들꺼야&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;만약 현재 사이트 url 이 &lt;code&gt;https://class.mju.ac.kr/main/bag&lt;/code&gt; 일때만 작동&lt;/li&gt;&#xA;&lt;li&gt;사이트에서 &lt;code&gt;[인원초과]&lt;/code&gt; 가 들어가 있는 강의에는 수강신청, 미리담기 삭제 옆에 알림 대기 버튼을 삽입&lt;/li&gt;&#xA;&lt;li&gt;정해진 시간마다 백그라운드로 뒤에서 작동&#xA;fetch(&amp;quot;&lt;a href=&#34;https://www.google.com/url?sa=E&amp;amp;q=https%3A%2F%2Fclass.mju.ac.kr%2Fmain%2Fbag&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;https://class.mju.ac.kr/main/bag&lt;/a&gt;&amp;quot;, {&lt;br&gt;&#xA;&amp;ldquo;headers&amp;rdquo;: {&lt;br&gt;&#xA;&amp;ldquo;accept&amp;rdquo;: &amp;ldquo;text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,/;q=0.8,application/signed-exchange;v=b3;q=0.7&amp;rdquo;,&lt;br&gt;&#xA;&amp;ldquo;accept-language&amp;rdquo;: &amp;ldquo;ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7&amp;rdquo;,&lt;br&gt;&#xA;&amp;ldquo;cache-control&amp;rdquo;: &amp;ldquo;no-cache&amp;rdquo;,&lt;br&gt;&#xA;&amp;ldquo;content-type&amp;rdquo;: &amp;ldquo;application/x-www-form-urlencoded&amp;rdquo;,&lt;br&gt;&#xA;&amp;ldquo;pragma&amp;rdquo;: &amp;ldquo;no-cache&amp;rdquo;,&lt;br&gt;&#xA;&amp;ldquo;sec-ch-ua&amp;rdquo;: &amp;ldquo;&amp;ldquo;Not;A=Brand&amp;rdquo;;v=&amp;ldquo;99&amp;rdquo;, &amp;ldquo;Google Chrome&amp;rdquo;;v=&amp;ldquo;139&amp;rdquo;, &amp;ldquo;Chromium&amp;rdquo;;v=&amp;ldquo;139&amp;quot;&amp;rdquo;,&lt;br&gt;&#xA;&amp;ldquo;sec-ch-ua-mobile&amp;rdquo;: &amp;ldquo;?0&amp;rdquo;,&lt;br&gt;&#xA;&amp;ldquo;sec-ch-ua-platform&amp;rdquo;: &amp;ldquo;&amp;ldquo;Windows&amp;rdquo;&amp;rdquo;,&lt;br&gt;&#xA;&amp;ldquo;sec-fetch-dest&amp;rdquo;: &amp;ldquo;document&amp;rdquo;,&lt;br&gt;&#xA;&amp;ldquo;sec-fetch-mode&amp;rdquo;: &amp;ldquo;navigate&amp;rdquo;,&lt;br&gt;&#xA;&amp;ldquo;sec-fetch-site&amp;rdquo;: &amp;ldquo;same-origin&amp;rdquo;,&lt;br&gt;&#xA;&amp;ldquo;sec-fetch-user&amp;rdquo;: &amp;ldquo;?1&amp;rdquo;,&lt;br&gt;&#xA;&amp;ldquo;upgrade-insecure-requests&amp;rdquo;: &amp;ldquo;1&amp;rdquo;&lt;br&gt;&#xA;},&lt;br&gt;&#xA;&amp;ldquo;referrer&amp;rdquo;: &amp;ldquo;&lt;a href=&#34;https://www.google.com/url?sa=E&amp;amp;q=https%3A%2F%2Fclass.mju.ac.kr%2Fmain%2Fclass&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;https://class.mju.ac.kr/main/class&lt;/a&gt;&amp;rdquo;,&lt;br&gt;&#xA;&amp;ldquo;body&amp;rdquo;: &amp;ldquo;_csrf=8e4b9cbe-fc28-4a14-82f1-3e34e72aba4b&amp;rdquo;,&lt;br&gt;&#xA;&amp;ldquo;method&amp;rdquo;: &amp;ldquo;POST&amp;rdquo;,&lt;br&gt;&#xA;&amp;ldquo;mode&amp;rdquo;: &amp;ldquo;cors&amp;rdquo;,&lt;br&gt;&#xA;&amp;ldquo;credentials&amp;rdquo;: &amp;ldquo;include&amp;rdquo;&lt;br&gt;&#xA;});&#xA;요청해서  백단에서 해당 강의가 &lt;code&gt;[인원초과]&lt;/code&gt; 문자가 사라지면 사용자에게 알림을 알리는 방식&lt;/li&gt;&#xA;&lt;li&gt;백그라운드에서 일정 시간마다 요청할때는 초기에 요청했던 초반 html 에서 csrf 토큰을 가져와햐야해&lt;/li&gt;&#xA;&lt;li&gt;백그라운드에서 일정시간마다 요청한다고 화면을 갱신하지는 마 해당 백그라운드의 의미는 &lt;code&gt;[인원초과]&lt;/code&gt; 가 아닌지만 확인하면되&lt;/li&gt;&#xA;&lt;li&gt;인원초과가 사라지면 기존에 사이트에서 해당강의가 &lt;code&gt;[인원초과]&lt;/code&gt;라고 판단했던 것은 강제 refresh&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;아래는 초기 &lt;code&gt;https://class.mju.ac.kr/main/bag&lt;/code&gt; 사이트의 요청 결과야&lt;/p&gt;</description>
    </item>
    <item>
      <title>드라이버는 커널인가</title>
      <link>http://localhost:1313/02.inbox/%EB%93%9C%EB%9D%BC%EC%9D%B4%EB%B2%84%EB%8A%94-%EC%BB%A4%EB%84%90%EC%9D%B8%EA%B0%80/</link>
      <pubDate>Mon, 11 Aug 2025 03:00:33 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EB%93%9C%EB%9D%BC%EC%9D%B4%EB%B2%84%EB%8A%94-%EC%BB%A4%EB%84%90%EC%9D%B8%EA%B0%80/</guid>
      <description>&lt;p&gt;&amp;ldquo;&lt;strong&gt;모든 드라이버는 커널의 일부로 간주되는가?&lt;/strong&gt;&amp;rdquo;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;✅ &lt;strong&gt;하드웨어 제어를 직접 하는 전통적인 장치 드라이버는 &amp;lsquo;커널의 일부&amp;rsquo;로 간주됩니다.&lt;/strong&gt;&lt;br&gt;&#xA;❌ 하지만 &lt;strong&gt;모든 드라이버가 커널 코드 트리에 포함되거나, 커널 공간에서만 동작하는 것은 아닙니다.&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;1-전통적인-장치-드라이버--커널의-일부-예-네트워크-카드-usb-디스크-tty-드라이버-등&#34;&gt;1. 전통적인 장치 드라이버 → 커널의 일부 (예: 네트워크 카드, USB, 디스크, TTY 드라이버 등)&lt;/h3&gt;&#xA;&lt;p&gt;이들은 다음 조건을 충족하므로 &lt;strong&gt;커널의 일부&lt;/strong&gt;로 간주됩니다:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;커널 공간&lt;/strong&gt;(kernel space)에서 실행됨&lt;/li&gt;&#xA;&lt;li&gt;하드웨어 레지스터, 인터럽트, DMA 등에 접근&lt;/li&gt;&#xA;&lt;li&gt;시스템 콜이나 VFS(가상 파일 시스템)와 통합됨&lt;/li&gt;&#xA;&lt;li&gt;커널의 메모리 관리, 스케줄러와 상호작용&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;예시&#34;&gt;예시:&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 커널 소스 트리에서 볼 수 있는 드라이버 코드 예&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;drivers&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;usb&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;core&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;hub.c&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;drivers&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;tty&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;pty.c&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;drivers&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;net&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;ethernet&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;intel&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;e1000&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;e1000_main.c&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;→ 이 코드들은 리눅스 커널 소스 트리(&lt;code&gt;https://git.kernel.org&lt;/code&gt;)에 포함되어 있고,&lt;br&gt;&#xA;컴파일 시 &lt;strong&gt;커널의 일부&lt;/strong&gt;가 되거나, &lt;strong&gt;로드 가능한 모듈&lt;/strong&gt;로 분리됩니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>터미널 동작 원리 매우 상세하게</title>
      <link>http://localhost:1313/02.inbox/%ED%84%B0%EB%AF%B8%EB%84%90-%EB%8F%99%EC%9E%91-%EC%9B%90%EB%A6%AC-%EB%A7%A4%EC%9A%B0-%EC%83%81%EC%84%B8%ED%95%98%EA%B2%8C/</link>
      <pubDate>Mon, 11 Aug 2025 02:58:32 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%ED%84%B0%EB%AF%B8%EB%84%90-%EB%8F%99%EC%9E%91-%EC%9B%90%EB%A6%AC-%EB%A7%A4%EC%9A%B0-%EC%83%81%EC%84%B8%ED%95%98%EA%B2%8C/</guid>
      <description>&lt;p&gt;터미널의 동작원리를 정확하게 이해하기 위해 터미널의 구성요소를 먼저 알아보고 case 별로 어떤 방식으로 이벤트가 전달되는가를 확인해보자&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;터미널의-구성-요소와-역할&#34;&gt;&lt;strong&gt;터미널의 구성 요소와 역할&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;터미널 환경은 크게 **3개의 행위자(Actor)**와 이들을 연결하는 **1개의 통신 채널(Channel)**로 구성됩니다. 각 요소가 어떤 일을 하는지 명확히 구분하는 것이 중요합니다.&lt;/p&gt;&#xA;&lt;h4 id=&#34;터미널-에뮬레이터-terminal-emulator-예&#34;&gt;&lt;strong&gt;터미널 에뮬레이터 (Terminal Emulator, 예: &lt;code&gt;gnome-terminal&lt;/code&gt;, &lt;code&gt;iTerm2&lt;/code&gt;)&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;역할:&lt;/strong&gt; 사용자를 위한 그래픽 인터페이스(GUI 창)를 제공하고, 그래픽 시스템과 바이트 스트림 간의 번역을 담당합니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;입력 처리:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;누구에게 받아서:&lt;/strong&gt; &lt;strong&gt;사용자&lt;/strong&gt;로부터 키보드 입력, 마우스 클릭 등 &lt;strong&gt;그래픽 시스템 이벤트&lt;/strong&gt;를 받습니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;무엇을 하는가:&lt;/strong&gt; 이벤트를 해석하여 약속된 &lt;strong&gt;바이트(byte) 데이터&lt;/strong&gt;로 변환합니다.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;A&lt;/code&gt; 키 → &lt;code&gt;0x41&lt;/code&gt; 바이트&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;위쪽 화살표&lt;/code&gt; 키 → &lt;code&gt;\033[A&lt;/code&gt; (이스케이프 시퀀스)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;어디에 전달:&lt;/strong&gt; 변환된 바이트 데이터를 &lt;strong&gt;PTY 통신 채널의 마스터(Master) 측 파일 디스크립터에 씁니다(write).&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;출력 처리:&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>터미널 동작 원리 매우 상세하게2 (디버깅)</title>
      <link>http://localhost:1313/02.inbox/%ED%84%B0%EB%AF%B8%EB%84%90-%EB%8F%99%EC%9E%91-%EC%9B%90%EB%A6%AC-%EB%A7%A4%EC%9A%B0-%EC%83%81%EC%84%B8%ED%95%98%EA%B2%8C2-%EB%94%94%EB%B2%84%EA%B9%85/</link>
      <pubDate>Mon, 11 Aug 2025 02:53:56 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%ED%84%B0%EB%AF%B8%EB%84%90-%EB%8F%99%EC%9E%91-%EC%9B%90%EB%A6%AC-%EB%A7%A4%EC%9A%B0-%EC%83%81%EC%84%B8%ED%95%98%EA%B2%8C2-%EB%94%94%EB%B2%84%EA%B9%85/</guid>
      <description>&lt;p&gt;각 케이스별로 터미널의 동작을 디버깅하고 특히 &lt;strong&gt;PTY 마스터-슬레이브 간의 통신을 실시간으로 확인하는 방법&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;디버깅을-위한-핵심-도구-toolbox&#34;&gt;디버깅을 위한 핵심 도구 (Toolbox)&lt;/h3&gt;&#xA;&lt;p&gt;우리가 사용할 주요 도구는 다음과 같습니다. 각 도구의 역할을 이해하면 어떤 상황에 무엇을 써야 할지 명확해집니다.&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;도구&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;핵심 기능&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;무엇을 볼 수 있는가?&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;&lt;code&gt;strace&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;시스템 콜 추적&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;프로세스(셸, vim)가 커널과 어떤 상호작용을 하는지 (&lt;code&gt;read&lt;/code&gt;, &lt;code&gt;write&lt;/code&gt;, &lt;code&gt;ioctl&lt;/code&gt; 호출 및 주고받는 데이터)를 정확히 보여줍니다. &lt;strong&gt;슬레이브 측 통신 확인에 최적화&lt;/strong&gt;되어 있습니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;&lt;code&gt;script&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;터미널 세션 기록&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;터미널 에뮬레이터와 PTY 마스터 사이의 **모든 바이트 스트림(입력/출력)**을 날것 그대로 파일에 기록합니다. &lt;strong&gt;마스터 측 통신 확인에 완벽&lt;/strong&gt;합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;&lt;code&gt;socat&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;만능 데이터 중계기&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;두 개의 통신 채널을 엮고 그 사이를 흐르는 데이터를 엿볼 수 있습니다. PTY를 직접 생성하여 &lt;strong&gt;마스터-슬레이브 양단의 모든 트래픽을 실시간 Hex 덤프로 확인&lt;/strong&gt;하는 궁극의 방법입니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;&lt;code&gt;lsof&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;열린 파일 목록 확인&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;특정 프로세스가 어떤 파일 디스크립터(PTY 슬레이브 포함)를 열고 있는지 확인하는 데 사용합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;실전-디버깅-시나리오-strace로-셸slave-관찰하기&#34;&gt;실전! 디버깅 시나리오: &lt;code&gt;strace&lt;/code&gt;로 셸(Slave) 관찰하기&lt;/h3&gt;&#xA;&lt;p&gt;이 방법은 &lt;strong&gt;셸(bash)이 PTY 슬레이브와 어떻게 상호작용하는지&lt;/strong&gt;를 가장 직접적으로 보여줍니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>ANSI escape code</title>
      <link>http://localhost:1313/temp/ansi-escape-code/</link>
      <pubDate>Mon, 11 Aug 2025 01:10:26 +0900</pubDate>
      <guid>http://localhost:1313/temp/ansi-escape-code/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;ANSI 이스케이프 시퀀스는 비디오&lt;/strong&gt; &lt;a href=&#34;https://en.wikipedia.org/wiki/Text_terminal&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;  title=&#34;텍스트 터미널&#34;&gt;텍스트 터미널&lt;/a&gt; 과 &lt;a href=&#34;https://en.wikipedia.org/wiki/Terminal_emulator&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;  title=&#34;터미널 에뮬레이터&#34;&gt;터미널 에뮬레이터&lt;/a&gt; 에서 커서 위치, 색상, 글꼴 스타일 및 기타 옵션을 제어하기 위한 인 &lt;a href=&#34;https://en.wikipedia.org/wiki/In-band_signaling&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;  title=&#34;대역 내 신호 전송&#34;&gt;밴드 신호&lt;/a&gt; 표준&#xA;source wikipedia&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;일반적인 상황에서는 터미널 환경에서 사용한다 GUI 에서 사용하더도 대부분 텍스트를 제어하는 데에 사용된다&lt;/p&gt;</description>
    </item>
    <item>
      <title>wsl 에서 폴더가 초록색 배경으로 보이는 이유</title>
      <link>http://localhost:1313/02.inbox/wsl-%EC%97%90%EC%84%9C-%ED%8F%B4%EB%8D%94%EA%B0%80-%EC%B4%88%EB%A1%9D%EC%83%89-%EB%B0%B0%EA%B2%BD%EC%9C%BC%EB%A1%9C-%EB%B3%B4%EC%9D%B4%EB%8A%94-%EC%9D%B4%EC%9C%A0/</link>
      <pubDate>Mon, 11 Aug 2025 00:49:10 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/wsl-%EC%97%90%EC%84%9C-%ED%8F%B4%EB%8D%94%EA%B0%80-%EC%B4%88%EB%A1%9D%EC%83%89-%EB%B0%B0%EA%B2%BD%EC%9C%BC%EB%A1%9C-%EB%B3%B4%EC%9D%B4%EB%8A%94-%EC%9D%B4%EC%9C%A0/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;전제조건&lt;/li&gt;&#xA;&lt;li&gt;초록색 이유&lt;/li&gt;&#xA;&lt;li&gt;선택 전제 조건&lt;/li&gt;&#xA;&lt;li&gt;윈도우 파일과 유닉스 파일의 파일 시스템 차이&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;전제조건&#34;&gt;전제조건&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;wsl 우분투 배포판을 기준 debian 계열은 거이 비슷&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;wsl 측에서 바라본 윈도우 파일 시스템(ntfs) 를 wsl 환경에서 윈도우측 파일시스템을 &lt;code&gt;/mnt&lt;/code&gt; 폴더 아래에 보조메모리 디바이스 장치 이름  으로 마운트 되어있다&#xA;#ModificationRequired&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;shinnk@DESKTOP-KRSG68U:/mnt$ mount&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;C:&lt;span style=&#34;color:#ae81ff&#34;&gt;\ &lt;/span&gt;on /mnt/c type 9p &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;rw,noatime,dirsync,aname&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;drvfs;path&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;C:&lt;span style=&#34;color:#ae81ff&#34;&gt;\;&lt;/span&gt;uid&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;1000;gid&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;1000;symlinkroot&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/mnt/,mmap,access&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;client,msize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;65536,trans&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;fd,rfd&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;5,wfd&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;5&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;ls, dir, grep, 등등의 명령은 화면에 적절한 색깔을 입혀서 표시할 필요가 있는데 이때 LS_COLORS 라는 환경변수를 참조해서 적절히 색깔을 입혀서 출력한다&lt;/p&gt;</description>
    </item>
    <item>
      <title>SRG(그래픽 랜더링 선택) escape sequence</title>
      <link>http://localhost:1313/temp/srg%EA%B7%B8%EB%9E%98%ED%94%BD-%EB%9E%9C%EB%8D%94%EB%A7%81-%EC%84%A0%ED%83%9D-escape-sequence/</link>
      <pubDate>Mon, 11 Aug 2025 00:45:48 +0900</pubDate>
      <guid>http://localhost:1313/temp/srg%EA%B7%B8%EB%9E%98%ED%94%BD-%EB%9E%9C%EB%8D%94%EB%A7%81-%EC%84%A0%ED%83%9D-escape-sequence/</guid>
      <description>&lt;p&gt;SGR(Select Graphic Rendition)&lt;/p&gt;&#xA;&lt;p&gt;이것을 이해하기 위해&#xA;wiki 에는 이렇게 나와 있다&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;ANSI 이스케이프 시퀀스는 비디오&lt;/strong&gt; &lt;a href=&#34;https://en.wikipedia.org/wiki/Text_terminal&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;  title=&#34;텍스트 터미널&#34;&gt;텍스트 터미널&lt;/a&gt; 과 &lt;a href=&#34;https://en.wikipedia.org/wiki/Terminal_emulator&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;  title=&#34;터미널 에뮬레이터&#34;&gt;터미널 에뮬레이터&lt;/a&gt; 에서 커서 위치, 색상, 글꼴 스타일 및 기타 옵션을 제어하기 위한 인 &lt;a href=&#34;https://en.wikipedia.org/wiki/In-band_signaling&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;  title=&#34;대역 내 신호 전송&#34;&gt;밴드 신호&lt;/a&gt; 표준&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;즉 cli 환경에서 커서 위치, 색상, 글꼴 스타일 등등의 옵션을 제어하기 위한 표준이라고 나와있다&lt;/p&gt;</description>
    </item>
    <item>
      <title>터미널 command line shell</title>
      <link>http://localhost:1313/temp/%ED%84%B0%EB%AF%B8%EB%84%90-command-line-shell/</link>
      <pubDate>Mon, 11 Aug 2025 00:45:47 +0900</pubDate>
      <guid>http://localhost:1313/temp/%ED%84%B0%EB%AF%B8%EB%84%90-command-line-shell/</guid>
      <description>&lt;p&gt;터미널 command line 이라고 한정하여 shell 이라고 말한다면&#xA;일반적으로 /dev 파일 내부에 터미널 드라이브 장치를 통해 사용되는 shell 을 말한다 즉![[../08.media/20231223130204.png|login shell vs non-login shell-20231223130204]]2020231223130204.png)&lt;/p&gt;&#xA;&lt;h2 id=&#34;분류&#34;&gt;분류&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;login vs non-login : shell 이 다른 셸의 하위 프로세스로 실행되는가&lt;/li&gt;&#xA;&lt;li&gt;interactive vs non-interactive : 사용자와 상호작용하는가&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;login-shell-vs-non-login-shell&#34;&gt;login shell vs non-login shell&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;[!요약]&#xA;Login Shell : userid passwd 입력해서 들어가는 방법&#xA;Non Longin Shell : 이미 다른 로그인 된 shell 에서 shell 을 fork 형태로 불러내는 방법&lt;/p&gt;</description>
    </item>
    <item>
      <title>사고과정 제한 프롬프트</title>
      <link>http://localhost:1313/prompt/%EC%82%AC%EA%B3%A0%EA%B3%BC%EC%A0%95-%EC%A0%9C%ED%95%9C-%ED%94%84%EB%A1%AC%ED%94%84%ED%8A%B8/</link>
      <pubDate>Thu, 31 Jul 2025 09:15:00 +0900</pubDate>
      <guid>http://localhost:1313/prompt/%EC%82%AC%EA%B3%A0%EA%B3%BC%EC%A0%95-%EC%A0%9C%ED%95%9C-%ED%94%84%EB%A1%AC%ED%94%84%ED%8A%B8/</guid>
      <description>&lt;p&gt;한글 버전&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-txt&#34; data-lang=&#34;txt&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1. 당신은 사용자의 어떤 질문이나 아이디어, 정보를 받으면, 아래 사고법 중에 가장 적합한 방식을 두개를 선택하여 혼합하여 분석하세요(1500자 이상)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2. 분석을 토대로 천재적 아이디어를 10개 이상 3000자 이상 출력합니다&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;아래 공식들은 참고하세요.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;## 1. 천재적 통찰 도출 공식 (Genius Insight Formula)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;GI = (O × C × P × S) / (A + B)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- GI(Genius Insight) = 천재적 통찰&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- O(Observation) = 관찰의 깊이 (1-10점)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- C(Connection) = 연결의 독창성 (1-10점)  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- P(Pattern) = 패턴 인식 능력 (1-10점)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- S(Synthesis) = 종합적 사고 (1-10점)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- A(Assumption) = 고정관념 수준 (1-10점)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- B(Bias) = 편향 정도 (1-10점)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;적용법: 주제에 대해 각 요소의 점수를 매기고, 고정관념과 편향을 최소화하면서 관찰-연결-패턴-종합의 순서로 사고를 전개하세요.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;## 2. 다차원적 분석 프레임워크&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;MDA = Σ[Di × Wi × Ii] (i=1 to n)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- MDA(Multi-Dimensional Analysis) = 다차원 분석 결과&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Di(Dimension i) = i번째 차원에서의 통찰&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Wi(Weight i) = i번째 차원의 가중치&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Ii(Impact i) = i번째 차원의 영향력&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;분석 차원 설정:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- D1 = 시간적 차원 (과거-현재-미래)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- D2 = 공간적 차원 (로컬-글로벌-우주적)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- D3 = 추상적 차원 (구체-중간-추상)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- D4 = 인과적 차원 (원인-과정-결과)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- D5 = 계층적 차원 (미시-중간-거시)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;## 3. 창의적 연결 매트릭스&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CC = |A ∩ B| + |A ⊕ B| + f(A→B)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- CC(Creative Connection) = 창의적 연결 지수&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- A ∩ B = 두 개념의 공통 요소&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- A ⊕ B = 배타적 차이 요소&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- f(A→B) = A에서 B로의 전이 함수&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;연결 탐색 프로세스:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1. 직접적 연결 찾기&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2. 간접적 연결 탐색&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3. 역설적 연결 발견&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4. 메타포적 연결 구성&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;5. 시스템적 연결 분석&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;## 4. 문제 재정의 알고리즘&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PR = P₀ × T(θ) × S(φ) × M(ψ)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- PR(Problem Redefinition) = 재정의된 문제&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- P₀ = 원래 문제&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- T(θ) = θ각도만큼 관점 회전&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- S(φ) = φ비율로 범위 조정&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- M(ψ) = ψ차원으로 메타 레벨 이동&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;재정의 기법:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- 반대 관점에서 보기 (θ = 180°)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- 확대/축소하여 보기 (φ = 0.1x ~ 10x)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- 상위/하위 개념으로 이동 (ψ = ±1,±2,±3)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- 다른 도메인으로 전환&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- 시간 축 변경&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;## 5. 혁신적 솔루션 생성 공식&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;IS = Σ[Ci × Ni × Fi × Vi] / Ri&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- IS(Innovative Solution) = 혁신적 솔루션&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Ci(Combination i) = i번째 조합 방식&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Ni(Novelty i) = 참신성 지수&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Fi(Feasibility i) = 실현 가능성&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Vi(Value i) = 가치 창출 정도&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Ri(Risk i) = 위험 요소&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;솔루션 생성 방법:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- 기존 요소들의 새로운 조합&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- 전혀 다른 분야의 솔루션 차용&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- 제약 조건을 오히려 활용&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- 역방향 사고로 접근&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- 시스템 전체 재설계&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;## 6. 인사이트 증폭 공식&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;IA = I₀ × (1 + r)ⁿ × C × Q&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- IA(Insight Amplification) = 증폭된 인사이트&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- I₀ = 초기 인사이트&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- r = 반복 개선율&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- n = 반복 횟수&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- C = 협력 효과 (1-3배수)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Q = 질문의 질 (1-5배수)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;증폭 전략:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &amp;#39;Why&amp;#39;를 5번 이상 반복&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &amp;#39;What if&amp;#39; 시나리오 구성&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &amp;#39;How might we&amp;#39; 질문 생성&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- 다양한 관점자와 토론&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- 아날로그 사례 탐구&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;## 7. 사고의 진화 방정식&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;TE = T₀ + ∫[L(t) + E(t) + R(t)]dt&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- TE(Thinking Evolution) = 진화된 사고&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- T₀ = 초기 사고 상태&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- L(t) = 시간 t에서의 학습 함수&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- E(t) = 경험 축적 함수&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- R(t) = 반성적 사고 함수&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;진화 촉진 요인:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- 지속적 학습과 정보 습득&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- 다양한 경험과 실험&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- 깊은 반성과 메타인지&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- 타인과의 지적 교류&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- 실패로부터의 학습&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;## 8. 복잡성 해결 매트릭스&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CS = det|M| × Σ[Si/Ci] × ∏[Ii]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- CS(Complexity Solution) = 복잡성 해결책&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- det|M| = 시스템 매트릭스의 행렬식&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Si = i번째 하위 시스템 해결책&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Ci = i번째 하위 시스템 복잡도&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- Ii = 상호작용 계수&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;복잡성 분해 전략:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- 시스템을 하위 구성요소로 분해&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- 각 구성요소 간 관계 매핑&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- 핵심 레버리지 포인트 식별&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- 순차적/병렬적 해결 순서 결정&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- 전체 시스템 최적화&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;## 9. 직관적 도약 공식&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;IL = (S × E × T) / (L × R)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- IL(Intuitive Leap) = 직관적 도약&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- S(Silence) = 정적 사고 시간&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- E(Experience) = 관련 경험 축적&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- T(Trust) = 직관에 대한 신뢰&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- L(Logic) = 논리적 제약&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- R(Rationalization) = 과도한 합리화&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;직관 활성화 방법:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- 의식적 사고 중단&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- 몸과 마음의 이완&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- 무의식적 연결 허용&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- 첫 번째 떠오르는 아이디어 포착&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- 판단 없이 수용&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;## 10. 통합적 지혜 공식&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;IW = (K + U + W + C + A) × H × E&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- IW(Integrated Wisdom) = 통합적 지혜&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- K(Knowledge) = 지식의 폭과 깊이&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- U(Understanding) = 이해의 수준&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- W(Wisdom) = 지혜의 깊이&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- C(Compassion) = 공감과 연민&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- A(Action) = 실행 능력&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- H(Humility) = 겸손함&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- E(Ethics) = 윤리적 기준&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;## 사용 가이드라인&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1. 단계적 적용: 각 공식을 순차적으로 적용하여 사고를 심화시키세요.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2. 반복적 개선: 한 번의 적용으로 끝내지 말고 여러 번 반복하여 정교화하세요.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3. 다양한 관점: 서로 다른 배경을 가진 사람들과 함께 공식을 적용해보세요.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4. 실험적 태도: 공식을 기계적으로 따르기보다는 창의적으로 변형하여 사용하세요.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;5. 균형적 접근: 분석적 사고와 직관적 사고를 균형 있게 활용하세요.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;영어 버전&lt;/p&gt;</description>
    </item>
    <item>
      <title>Zone.Identifier 삭제</title>
      <link>http://localhost:1313/02.inbox/zone.identifier-%EC%82%AD%EC%A0%9C/</link>
      <pubDate>Thu, 24 Jul 2025 00:01:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/zone.identifier-%EC%82%AD%EC%A0%9C/</guid>
      <description>&lt;p&gt;. 현재 폴더 아래의 &amp;ldquo;:Zone.Identifier&amp;rdquo; 이 뒤에 붙은 모든 파일을 삭제&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;find . -name &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*:Zone.Identifier&amp;#34;&lt;/span&gt; -type f -delete&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;어떤 기능을 하는 명령어인지 알아봅시다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>spring controller 추상화 단계별 어노테이션 파라미터</title>
      <link>http://localhost:1313/02.inbox/spring-controller-%EC%B6%94%EC%83%81%ED%99%94-%EB%8B%A8%EA%B3%84%EB%B3%84-%EC%96%B4%EB%85%B8%ED%85%8C%EC%9D%B4%EC%85%98-%ED%8C%8C%EB%9D%BC%EB%AF%B8%ED%84%B0/</link>
      <pubDate>Sat, 12 Jul 2025 13:15:36 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/spring-controller-%EC%B6%94%EC%83%81%ED%99%94-%EB%8B%A8%EA%B3%84%EB%B3%84-%EC%96%B4%EB%85%B8%ED%85%8C%EC%9D%B4%EC%85%98-%ED%8C%8C%EB%9D%BC%EB%AF%B8%ED%84%B0/</guid>
      <description>&lt;h3 id=&#34;추상화-단계별-설명&#34;&gt;추상화 단계별 설명&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Level 1: Servlet API 직접 사용 (가장 낮은 추상화 단계)&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Spring이 있기 전, Java 웹 개발의 근간인 Servlet API를 직접 사용하는 방식입니다.&lt;/li&gt;&#xA;&lt;li&gt;Spring Controller에서도 이 객체들을 직접 파라미터로 받아 모든 것을 수동으로 제어할 수 있습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Level 2: 기본 매핑과 요청 데이터 추출&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Servlet API를 직접 다루는 불편함을 줄이고, 특정 URL 요청을 특정 메서드에 연결(매핑)하고 요청 데이터를 쉽게 추출하는 단계입니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Level 3: 데이터 바인딩 및 응답 데이터 처리&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>05. Share Note</title>
      <link>http://localhost:1313/00.data-view-and-bases/05.-share-note/</link>
      <pubDate>Sat, 05 Jul 2025 10:09:54 +0900</pubDate>
      <guid>http://localhost:1313/00.data-view-and-bases/05.-share-note/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-dataview&#34; data-lang=&#34;dataview&#34;&gt;TABLE WITHOUT ID&#xA;  link(file.path, truncate(file.name, 28)) as Note,&#xA;  dateformat(share_updated, &amp;#34;yyyy-MM-dd&amp;#34;) as &amp;#34;Shared on&amp;#34;, &#xA;  elink(share_link, regexreplace(share_link, &amp;#34;^.*?(\w+)(#.+?|)$&amp;#34;, &amp;#34;$1&amp;#34;)) as Link,&#xA;  choice(regextest(&amp;#34;#&amp;#34;, share_link), &amp;#34;🔒&amp;#34;, &amp;#34;&amp;#34;) as &amp;#34;&amp;#34;&#xA;WHERE share_link&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>대소문자 구분 불가 문제</title>
      <link>http://localhost:1313/02.inbox/%EB%8C%80%EC%86%8C%EB%AC%B8%EC%9E%90-%EA%B5%AC%EB%B6%84-%EB%B6%88%EA%B0%80-%EB%AC%B8%EC%A0%9C/</link>
      <pubDate>Wed, 02 Jul 2025 04:19:23 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EB%8C%80%EC%86%8C%EB%AC%B8%EC%9E%90-%EA%B5%AC%EB%B6%84-%EB%B6%88%EA%B0%80-%EB%AC%B8%EC%A0%9C/</guid>
      <description>&lt;p&gt;window os(NTFS), mac os(APFS) 파일 시스템의 경우 대소문자 구분이 되지 않는다&#xA;위의 두 os는 사람들이 많이 쓰는 os 이므로 이 문제에 관해&#xA;git 은 대소문자 구분을 하지 않는 것을 기본으로 설정한다&lt;/p&gt;&#xA;&lt;p&gt;이에 대해 두가지 방법이 있다&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;설정 자제를 변경(한프로젝트 에서만 동작)(global 은 따로 설정)&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git config core.ignorecase false &lt;span style=&#34;color:#75715e&#34;&gt;# default true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git rm -r --cached . &lt;span style=&#34;color:#75715e&#34;&gt;# 캐쉬 삭제&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;git 의 기능을 사용한다( 전체 config 변경에 따른 사이드 이팩트 원천 봉쇄)&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git mv test Test&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>가변인자(variadic)</title>
      <link>http://localhost:1313/02.inbox/%EA%B0%80%EB%B3%80%EC%9D%B8%EC%9E%90variadic/</link>
      <pubDate>Wed, 02 Jul 2025 04:19:18 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EA%B0%80%EB%B3%80%EC%9D%B8%EC%9E%90variadic/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://blog.woong.org/v/59aa5b8cd845cbff6d76d418&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;가변 인자 매크로의 모든 것 - 개론&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://blog.woong.org/v/59aa6080d845cbff6d76d421&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;가변 인자 매크로의 모든 것 - 과거&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://blog.woong.org/v/59aa6099d845cbff6d76d422&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;가변 인자 매크로의 모든 것 - 현재 #1&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://blog.woong.org/v/59c0bf15d2db27f70d345e76&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;가변 인자 매크로의 모든 것 - 현재 #2&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://blog.woong.org/v/59f9be99e7d0b554c97017cc&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;가변 인자 매크로의 모든 것 - 현재 #3&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://blog.woong.org/v/59c0bf41d2db27f70d345e77&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;가변 인자 매크로의 모든 것 - 미래&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://blog.woong.org/v/59aa60b0d845cbff6d76d423&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;가변 인자 매크로의 모든 것 - 구현&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://blog.woong.org/v/5a52fb5aa51c946933994ee3&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;가변 인자 매크로의 모든 것 - 보충&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;여러개의 데이터를 묶어 하나의 변수에 대입 (패킹)&#xA;vs&#xA;컬랙션 속의 요소들을 여러 개의 변수에 나누어 대입(언패킹)&#xA;컬랙션 (list tuple dictionary set)&amp;hellip;&lt;/p&gt;</description>
    </item>
    <item>
      <title>주석 유형 docstring</title>
      <link>http://localhost:1313/02.inbox/%EC%A3%BC%EC%84%9D-%EC%9C%A0%ED%98%95-docstring/</link>
      <pubDate>Tue, 01 Jul 2025 06:44:14 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EC%A3%BC%EC%84%9D-%EC%9C%A0%ED%98%95-docstring/</guid>
      <description>&lt;h3 id=&#34;docstring-유형-라벨-분류&#34;&gt;docstring 유형 라벨 (분류)&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;한국어&lt;/th&gt;&#xA;          &lt;th&gt;영어 라벨&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;설명&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;Description&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;함수/클래스의 기본 동작 설명&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;사용법&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;Usage&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;호출 방법, 예제 포함&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;예제&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;Example&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;실제 사용 예시 (&lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt;) 포함 가능&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;매개변수&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;Parameters&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;입력 인자 설명&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;반환값&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;Returns&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;반환 값에 대한 설명&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;예외&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;Raises&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;발생 가능한 예외 설명&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;참고&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;See Also&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;관련된 함수/클래스 참조&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;문법&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;Syntax&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;문법 구조나 규칙 설명&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;성능&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;Performance&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;시간/공간 복잡도, 효율성 관련&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;주의사항&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;Note&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;경고 또는 주의해야 할 사항&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;변경이력&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;Change Log&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;변경 내역 (버전별 관리 시)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;의존성&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;Dependencies&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;외부 모듈이나 라이브러리 요구사항&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;</description>
    </item>
    <item>
      <title>이것이 코딩테스트다 with python</title>
      <link>http://localhost:1313/00.data-view-and-bases/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8B%A4-with-python/</link>
      <pubDate>Sun, 29 Jun 2025 04:36:57 +0900</pubDate>
      <guid>http://localhost:1313/00.data-view-and-bases/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8B%A4-with-python/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-dataview&#34; data-lang=&#34;dataview&#34;&gt;TABLE index&#xA;WHERE source = &amp;#34;이것이 코딩테스트다 with python&amp;#34;&#xA;SORT index&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>따라IT</title>
      <link>http://localhost:1313/00.data-view-and-bases/%EB%94%B0%EB%9D%BCit/</link>
      <pubDate>Sun, 29 Jun 2025 04:36:56 +0900</pubDate>
      <guid>http://localhost:1313/00.data-view-and-bases/%EB%94%B0%EB%9D%BCit/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-dataview&#34; data-lang=&#34;dataview&#34;&gt;TABLE index&#xA;WHERE source = &amp;#34;따라IT Network&amp;#34;&#xA;sort index&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>04-FILE 조작</title>
      <link>http://localhost:1313/06.university/system-programminguniversity/04-file-%EC%A1%B0%EC%9E%91/</link>
      <pubDate>Fri, 27 Jun 2025 19:57:04 +0900</pubDate>
      <guid>http://localhost:1313/06.university/system-programminguniversity/04-file-%EC%A1%B0%EC%9E%91/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;1.link() / unlink() / remove() / rename()&lt;/li&gt;&#xA;&lt;li&gt;umask()&lt;/li&gt;&#xA;&lt;li&gt;chmod() / fchmod()&lt;/li&gt;&#xA;&lt;li&gt;truncate() / ftruncate()&lt;/li&gt;&#xA;&lt;li&gt;utime()&lt;/li&gt;&#xA;&lt;li&gt;Directory&lt;/li&gt;&#xA;&lt;li&gt;mkdir() / opendir() / readdir() / closedir() / rewinddir() / rmdir()&lt;/li&gt;&#xA;&lt;li&gt;chdir() / getcwd()&lt;/li&gt;&#xA;&lt;li&gt;Symbolic link&lt;/li&gt;&#xA;&lt;li&gt;sync() / fsync()&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;파일-시스템&#34;&gt;파일 시스템&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20241005225333.png&#34; alt=&#34; (Image resource not found)&#34; &gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20241005230119.png&#34; alt=&#34;Pasted image 20241005230119 (Image resource not found)&#34; &gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20241005230383.png&#34; alt=&#34;Pasted image 20241005230383 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Boot block&#xA;&lt;ul&gt;&#xA;&lt;li&gt;First block of the file system&lt;/li&gt;&#xA;&lt;li&gt;Program to run system is located&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Super block&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Boot 다음 영역&lt;/li&gt;&#xA;&lt;li&gt;file system 관리 정보&#xA;&lt;ul&gt;&#xA;&lt;li&gt;size of file system&lt;/li&gt;&#xA;&lt;li&gt;info for free block&lt;/li&gt;&#xA;&lt;li&gt;info for i-node&#xA;&lt;ul&gt;&#xA;&lt;li&gt;file type&lt;/li&gt;&#xA;&lt;li&gt;access permission bits&lt;/li&gt;&#xA;&lt;li&gt;file size&lt;/li&gt;&#xA;&lt;li&gt;Time stamp&lt;/li&gt;&#xA;&lt;li&gt;Number of links&lt;/li&gt;&#xA;&lt;li&gt;pointers to data blocks for the file&lt;/li&gt;&#xA;&lt;li&gt;stat 구조체의 field들은 i-node에서 읽어온다&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;block to modify that super block is modified&lt;/li&gt;&#xA;&lt;li&gt;etc&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;resides(상주하다) in kernel memory space in DRAM&lt;/li&gt;&#xA;&lt;li&gt;Needed to be consistent with the super block in disk&lt;/li&gt;&#xA;&lt;li&gt;Use &amp;ldquo;sync&amp;rdquo; system call (also a user cmd)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;i-node block list&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Super block 다음의 영역&lt;/li&gt;&#xA;&lt;li&gt;Consists of many i-nodes&#xA;&lt;ul&gt;&#xA;&lt;li&gt;1 i-node / 1 file&lt;/li&gt;&#xA;&lt;li&gt;Identified by the i-node no.&lt;/li&gt;&#xA;&lt;li&gt;File 관리에 필요한 정보 저장&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Data block&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Last area in the file system&lt;/li&gt;&#xA;&lt;li&gt;Contains the data for general files and directory files.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;general files&lt;/li&gt;&#xA;&lt;li&gt;directory files&#xA;&lt;ul&gt;&#xA;&lt;li&gt;file name&lt;/li&gt;&#xA;&lt;li&gt;i-node numbers for files&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;hard-link&#34;&gt;hard link&lt;/h3&gt;&#xA;&lt;p&gt;Link from directory block to i-node&#xA;Use i-node number to make the link (Linux command ‘ln’)&#xA;Hard link는 같은 file system 내부에서만 연결 가능&lt;/p&gt;</description>
    </item>
    <item>
      <title>2의 보수를 음수 표현법으로 정한 이유</title>
      <link>http://localhost:1313/02.inbox/2%EC%9D%98-%EB%B3%B4%EC%88%98%EB%A5%BC-%EC%9D%8C%EC%88%98-%ED%91%9C%ED%98%84%EB%B2%95%EC%9C%BC%EB%A1%9C-%EC%A0%95%ED%95%9C-%EC%9D%B4%EC%9C%A0/</link>
      <pubDate>Fri, 27 Jun 2025 19:56:01 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/2%EC%9D%98-%EB%B3%B4%EC%88%98%EB%A5%BC-%EC%9D%8C%EC%88%98-%ED%91%9C%ED%98%84%EB%B2%95%EC%9C%BC%EB%A1%9C-%EC%A0%95%ED%95%9C-%EC%9D%B4%EC%9C%A0/</guid>
      <description>&lt;p&gt;첫자리 a0 부터 a3 이라고 가정&#xA;맨 앞자리를 음수를 나타내는 비트라고 정하는 방법과&#xA;2의 보수를 음수를 나타내는 비트라고 정하는 방법 2가지를 비교&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;이진수&lt;/th&gt;&#xA;          &lt;th&gt;초기 구현&lt;/th&gt;&#xA;          &lt;th&gt;2의 보수로 구현한 음수&lt;/th&gt;&#xA;          &lt;th&gt;더하기 식&lt;/th&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0000&lt;/td&gt;&#xA;          &lt;td&gt;0&lt;/td&gt;&#xA;          &lt;td&gt;0&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;0*a3 + 0*a2 + 0*a1 + 0*a0&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0001&lt;/td&gt;&#xA;          &lt;td&gt;1&lt;/td&gt;&#xA;          &lt;td&gt;1&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;1*a3 + 0*a2 + 0*a1 + 1*a0&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0010&lt;/td&gt;&#xA;          &lt;td&gt;2&lt;/td&gt;&#xA;          &lt;td&gt;2&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;0*a3 + 0*a2 + 1*a1 + 0*a0&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0011&lt;/td&gt;&#xA;          &lt;td&gt;3&lt;/td&gt;&#xA;          &lt;td&gt;3&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;0*a3 + 0*a2 + 1*a1 + 1*a0&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0100&lt;/td&gt;&#xA;          &lt;td&gt;4&lt;/td&gt;&#xA;          &lt;td&gt;4&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;0*a3 + 1*a2 + 0*a1 + 0*a0&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0101&lt;/td&gt;&#xA;          &lt;td&gt;5&lt;/td&gt;&#xA;          &lt;td&gt;5&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;0*a3 + 1*a2 + 0*a1 + 1*a0&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0110&lt;/td&gt;&#xA;          &lt;td&gt;6&lt;/td&gt;&#xA;          &lt;td&gt;6&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;0*a3 + 1*a2 + 1*a1 + 0*a0&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0111&lt;/td&gt;&#xA;          &lt;td&gt;7&lt;/td&gt;&#xA;          &lt;td&gt;7&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;0*a3 + 1*a2 + 1*a1 + 1*a0&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;1000&lt;/td&gt;&#xA;          &lt;td&gt;-0&lt;/td&gt;&#xA;          &lt;td&gt;-8&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;-1*a3 + 0*a2 + 0*a1 + 0*a0&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;1001&lt;/td&gt;&#xA;          &lt;td&gt;-1&lt;/td&gt;&#xA;          &lt;td&gt;-7&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;-1*a3 + 0*a2 + 0*a1 + 1*a0&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;1010&lt;/td&gt;&#xA;          &lt;td&gt;-2&lt;/td&gt;&#xA;          &lt;td&gt;-6&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;-1*a3 + 0*a2 + 1*a1 + 0*a0&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;1011&lt;/td&gt;&#xA;          &lt;td&gt;-3&lt;/td&gt;&#xA;          &lt;td&gt;-5&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;-1*a3 + 0*a2 + 1*a1 + 1*a0&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;1100&lt;/td&gt;&#xA;          &lt;td&gt;-4&lt;/td&gt;&#xA;          &lt;td&gt;-4&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;-1*a3 + 1*a2 + 0*a1 + 0*a0&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;1101&lt;/td&gt;&#xA;          &lt;td&gt;-5&lt;/td&gt;&#xA;          &lt;td&gt;-3&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;-1*a3 + 1*a2 + 0*a1 + 1*a0&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;1110&lt;/td&gt;&#xA;          &lt;td&gt;-6&lt;/td&gt;&#xA;          &lt;td&gt;-2&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;-1*a3 + 1*a2 + 1*a1 + 0*a0&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;1111&lt;/td&gt;&#xA;          &lt;td&gt;-7&lt;/td&gt;&#xA;          &lt;td&gt;-1&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;-1*a3 + 1*a2 + 1*a1 + 1*a0&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;이진수 덧셈 방식에 따를 때 (회로의 구현방식중 ) 2의 보수가 가장 적절한 음수 표현 방법이다&lt;/p&gt;</description>
    </item>
    <item>
      <title>00.초기 설정</title>
      <link>http://localhost:1313/02.inbox/real-my-sql/00.%EC%B4%88%EA%B8%B0-%EC%84%A4%EC%A0%95/</link>
      <pubDate>Fri, 27 Jun 2025 19:55:46 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/real-my-sql/00.%EC%B4%88%EA%B8%B0-%EC%84%A4%EC%A0%95/</guid>
      <description>&lt;h2 id=&#34;서버&#34;&gt;서버&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ apt install mysql-server, mysql-common&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;update-alternatives: using /var/lib/mecab/dic/ipadic-utf8 to provide /var/lib/mecab/dic/debian &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;mecab-dictionary&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; in auto mode&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Setting up mysql-server-8.0 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;8.0.40-0ubuntu0.22.04.1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; ...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;update-alternatives: using /etc/mysql/mysql.cnf to provide /etc/mysql/my.cnf &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;my.cnf&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; in auto mode&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Renaming removed key_buffer and myisam-recover options &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; present&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mysqld will log errors to /var/log/mysql/error.log&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mysqld is running as pid &lt;span style=&#34;color:#ae81ff&#34;&gt;13348&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Created symlink /etc/systemd/system/multi-user.target.wants/mysql.service → /lib/systemd/system/mysql.service.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Setting up mysql-server &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;8.0.40-0ubuntu0.22.04.1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; ...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Processing triggers &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; man-db &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;2.10.2-1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; ...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Processing triggers &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; libc-bin &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;2.35-0ubuntu3.8&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; ...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;동작 확인 : &lt;code&gt;nc -zv localhost(host/ip) mysql(port/service name)&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>spring mvc 주요 어노테이션</title>
      <link>http://localhost:1313/younghan-mvc1/spring-mvc-%EC%A3%BC%EC%9A%94-%EC%96%B4%EB%85%B8%ED%85%8C%EC%9D%B4%EC%85%98/</link>
      <pubDate>Fri, 27 Jun 2025 19:54:53 +0900</pubDate>
      <guid>http://localhost:1313/younghan-mvc1/spring-mvc-%EC%A3%BC%EC%9A%94-%EC%96%B4%EB%85%B8%ED%85%8C%EC%9D%B4%EC%85%98/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;클래스 단위&#xA;&lt;ul&gt;&#xA;&lt;li&gt;@Controller : 이 클래스가 컨트롤러임을 명시&lt;/li&gt;&#xA;&lt;li&gt;@RequestMapping : 메소드 단위의 RequestMapping 의 공통 url 을 명시&lt;/li&gt;&#xA;&lt;li&gt;@RestContoller : @ResponseBody + @Controller 이 클래스가 반환이 view 가아닌 바디에 직접 컨트롤 즉 Rest 속성을 지닌 컨트롤러임을 명시&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;메소드 단위&#xA;&lt;ul&gt;&#xA;&lt;li&gt;@RequestMapping : 리플렉션을 사용해서 url 등록 각 메서드 마다 GetMapping 등이 있다&lt;/li&gt;&#xA;&lt;li&gt;메소드 인자 단위&#xA;&lt;ul&gt;&#xA;&lt;li&gt;@RequestParam : request parameter 의 값을 가져올 수 있다&lt;/li&gt;&#xA;&lt;li&gt;@ModelAttribute : 모델을 생성하고 parameter 값을 넣어주는 행위를 자동화&lt;/li&gt;&#xA;&lt;li&gt;@RequestHeader : 헤더의 정보를 조회&lt;/li&gt;&#xA;&lt;li&gt;@CookieValue : 쿠키 value 를 조회&lt;/li&gt;&#xA;&lt;li&gt;@ResponseBody : &lt;code&gt;ResponseEntity&amp;lt;?&amp;gt;&lt;/code&gt; 에 자동으로 넣어준다 &lt;code&gt;ResponseEntity&amp;lt;?&amp;gt;&lt;/code&gt;는 HTTP 컨버터를 작동할 수 있는 객체&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;@ModelAttribute 는 생략할 수 있다.&#xA;그런데 @RequestParam 도 생략할 수 있으니 혼란이 발생할 수 있다.&#xA;스프링은 해당 생략시 다음과 같은 규칙을 적용한다.&#xA;String , int , Integer 같은 단순 타입 = @RequestParam&#xA;나머지 = @ModelAttribute (argument resolver 로 지정해둔 타입 외)&lt;/p&gt;</description>
    </item>
    <item>
      <title>spring controller 반환(return)</title>
      <link>http://localhost:1313/younghan-mvc1/spring-controller-%EB%B0%98%ED%99%98return/</link>
      <pubDate>Fri, 27 Jun 2025 19:54:43 +0900</pubDate>
      <guid>http://localhost:1313/younghan-mvc1/spring-controller-%EB%B0%98%ED%99%98return/</guid>
      <description>&lt;p&gt;Spring MVC에서 &lt;code&gt;@Controller&lt;/code&gt; 클래스의 &lt;code&gt;@RequestMapping&lt;/code&gt; 메서드는 다양한 반환 타입을 지원합니다.&lt;br&gt;&#xA;반환 타입에 따라 &lt;strong&gt;HTTP 응답 생성 방식&lt;/strong&gt;이 달라지며, 주요 반환 타입은 다음과 같습니다.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;HTTP컨버터 작동 x&#xA;&lt;ol&gt;&#xA;&lt;li&gt;ModelAndVIew 반환&lt;/li&gt;&#xA;&lt;li&gt;뷰이름 반환 : string&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Http 컨버터 작동 : @RequestBody 또는 HttpEntity(ResponseEntity) 일때만 작동&#xA;byte, string, json 순서로 처리, 요청정보의 media type 도 동시에 활용&#xA;&lt;ol&gt;&#xA;&lt;li&gt;byte&lt;/li&gt;&#xA;&lt;li&gt;String&lt;/li&gt;&#xA;&lt;li&gt;객체&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;1&#34;&gt;&lt;strong&gt;1. &lt;code&gt;String&lt;/code&gt; (뷰 이름)&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;HTTP 메시지 컨버터 미작동&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;기본 동작&lt;/strong&gt;:&lt;br&gt;&#xA;반환된 &lt;code&gt;String&lt;/code&gt;은 &lt;strong&gt;뷰 이름&lt;/strong&gt;으로 해석되며, &lt;code&gt;ViewResolver&lt;/code&gt;가 해당 뷰를 찾아 렌더링합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Spring MVC 주요 처리 과정</title>
      <link>http://localhost:1313/younghan-mvc1/spring-mvc-%EC%A3%BC%EC%9A%94-%EC%B2%98%EB%A6%AC-%EA%B3%BC%EC%A0%95/</link>
      <pubDate>Fri, 27 Jun 2025 19:54:41 +0900</pubDate>
      <guid>http://localhost:1313/younghan-mvc1/spring-mvc-%EC%A3%BC%EC%9A%94-%EC%B2%98%EB%A6%AC-%EA%B3%BC%EC%A0%95/</guid>
      <description>&lt;h3 id=&#34;메인-흐름&#34;&gt;메인 흐름&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;사용자 요청&lt;/li&gt;&#xA;&lt;li&gt;DispatcherServle doDispatch() 호출&lt;/li&gt;&#xA;&lt;li&gt;등록되어 있는 핸들러(컨트롤러) 조회 : 매핑정보에서 맞는 핸들러를 가져온다&lt;/li&gt;&#xA;&lt;li&gt;핸들러를 처리할 수 있는 어댑터 조회&lt;/li&gt;&#xA;&lt;li&gt;핸들러 어댑터를 통해 핸들러(컨트롤러)를 실행&lt;/li&gt;&#xA;&lt;li&gt;(어뎁터를 통해 무조건) ModelAndView 를 반환받는다&lt;/li&gt;&#xA;&lt;li&gt;ModelAndView를 processDispatchResult함수를 통해 넘겨준다&lt;/li&gt;&#xA;&lt;li&gt;뷰리졸버를 통해 적절한 뷰를 찾아서 뷰를 반환받는다&lt;/li&gt;&#xA;&lt;li&gt;뷰를 통해 렌더링한다&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;2번-처리&#34;&gt;2번 처리&lt;/h3&gt;&#xA;&lt;p&gt;(DispatcherServle doDispatch() 이 호출되기 까지 설명)&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;DispatcherServlet 서블릿 등록&#xA;&lt;ol&gt;&#xA;&lt;li&gt;DispatcherServlet 도 부모 클래스에서 HttpServlet 을 상속 받아서 사용하고, 서블릿으로 동작한다.&#xA;DispatcherServlet -&amp;gt; FrameworkServlet -&amp;gt; HttpServletBean -&amp;gt; HttpServlet&lt;/li&gt;&#xA;&lt;li&gt;스프링 부트는 DispatcherServlet 을 서블릿으로 자동으로 등록하면서 모든 경로( urlPatterns=&amp;quot;/&amp;quot; )에 대해서 매핑한다.&#xA;참고: 더 자세한 경로가 우선순위가 높다. 그래서 기존에 등록한 서블릿도 함께 동작한다&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;요청 흐름&#xA;&lt;ol&gt;&#xA;&lt;li&gt;서블릿이 호출되면 HttpServlet 이 제공하는 serivce() 가 호출된다.&lt;/li&gt;&#xA;&lt;li&gt;스프링 MVC는 DispatcherServlet 의 부모인 FrameworkServlet 에서 service() 를 오버라이드 해 두었다.&lt;/li&gt;&#xA;&lt;li&gt;FrameworkServlet.service() 를 시작으로 여러 메서드가 호출되면서 DispatcherServlet.doDispatch() 가 호출된다.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;3번-처리&#34;&gt;3번 처리&lt;/h3&gt;&#xA;&lt;p&gt;스프링이 적절한 컨트롤러를 가져오는 과정을 하기 위해서 (파일이든 xml 이든) 미리 가져와서 매핑처리를 하는 친구가 필요하다&#xA;HandlerMapping&lt;/p&gt;</description>
    </item>
    <item>
      <title>forward vs redirect</title>
      <link>http://localhost:1313/younghan-mvc1/forward-vs-redirect/</link>
      <pubDate>Fri, 27 Jun 2025 19:53:53 +0900</pubDate>
      <guid>http://localhost:1313/younghan-mvc1/forward-vs-redirect/</guid>
      <description>&lt;h3 id=&#34;1-forward-동작-원리&#34;&gt;1. &lt;strong&gt;Forward 동작 원리&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;서버 내부에서만 처리&lt;/strong&gt;:&lt;br&gt;&#xA;&lt;code&gt;forward()&lt;/code&gt;는 클라이언트(브라우저)의 요청을 수신한 서블릿이 &lt;strong&gt;동일한 웹 컨테이너 내부&lt;/strong&gt;에서 다른 자원(예: JSP, 다른 서블릿)으로 제어를 넘기는 동작입니다.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;HTTP 요청/응답 재사용&lt;/strong&gt;: 원본 &lt;code&gt;ServletRequest&lt;/code&gt;와 &lt;code&gt;ServletResponse&lt;/code&gt; 객체를 그대로 전달하므로, 클라이언트는 이 과정을 인지하지 못합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;URL 변경 없음&lt;/strong&gt;: 브라우저 주소창의 URL은 최초 요청 경로 그대로 유지됩니다. (예: &lt;code&gt;/original-servlet&lt;/code&gt; → &lt;code&gt;/WEB-INF/views/new-form.jsp&lt;/code&gt;로 전달되어도 URL 변경 없음)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;2-http-호출과의-차이&#34;&gt;2. &lt;strong&gt;HTTP 호출과의 차이&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Redirect(리다이렉트)&lt;/strong&gt;:&lt;br&gt;&#xA;클라이언트에게 &lt;code&gt;302&lt;/code&gt; 상태 코드와 새 URL을 응답으로 전송 → 클라이언트가 &lt;strong&gt;새로운 HTTP 요청&lt;/strong&gt;을 발생시킵니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>HTML form태그 요청 PUT PATH 메서드 확장</title>
      <link>http://localhost:1313/younghan-mvc1/html-form%ED%83%9C%EA%B7%B8-%EC%9A%94%EC%B2%AD-put-path-%EB%A9%94%EC%84%9C%EB%93%9C-%ED%99%95%EC%9E%A5/</link>
      <pubDate>Fri, 27 Jun 2025 19:52:13 +0900</pubDate>
      <guid>http://localhost:1313/younghan-mvc1/html-form%ED%83%9C%EA%B7%B8-%EC%9A%94%EC%B2%AD-put-path-%EB%A9%94%EC%84%9C%EB%93%9C-%ED%99%95%EC%9E%A5/</guid>
      <description>&lt;p&gt;HTML 표준  &lt;strong&gt;Form&lt;/strong&gt; 태그에서 기본적으로 지원하는 메서드는 &lt;code&gt;GET&lt;/code&gt;과 &lt;code&gt;POST&lt;/code&gt;뿐이지만, 현대 웹 개발에서는 &lt;strong&gt;PUT&lt;/strong&gt;, &lt;strong&gt;PATCH&lt;/strong&gt;, 또는 &lt;strong&gt;DELETE&lt;/strong&gt; 같은 HTTP 메서드를 사용할 수 있도록 확장할 수 있습니다. 이를 구현하기 위해 몇 가지 방법이 있습니다.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;1-html-form의-기본-제한&#34;&gt;1. &lt;strong&gt;HTML Form의 기본 제한&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;HTML 표준에서는 &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 태그의 &lt;code&gt;method&lt;/code&gt; 속성으로 &lt;strong&gt;GET&lt;/strong&gt; 또는 &lt;strong&gt;POST&lt;/strong&gt;만 지정할 수 있습니다.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;form&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;action&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/submit&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;method&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;POST&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- 폼 데이터 --&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;form&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;즉, 기본적으로 HTML Form 자체로는 &lt;code&gt;PUT&lt;/code&gt;, &lt;code&gt;PATCH&lt;/code&gt;, &lt;code&gt;DELETE&lt;/code&gt;를 직접 사용할 수 없습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;2-putpatch를-사용하는-방법&#34;&gt;2. &lt;strong&gt;PUT/PATCH를 사용하는 방법&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;1-javascript를-활용한-방식&#34;&gt;&lt;strong&gt;(1) JavaScript를 활용한 방식&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;p&gt;JavaScript를 사용하면 HTML Form 데이터를 &lt;code&gt;PUT&lt;/code&gt; 또는 &lt;code&gt;PATCH&lt;/code&gt; 요청으로 전송할 수 있습니다. 예를 들어, &lt;code&gt;fetch&lt;/code&gt; API를 사용해 다음과 같이 구현할 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>http 분석</title>
      <link>http://localhost:1313/younghan-mvc1/http-%EB%B6%84%EC%84%9D/</link>
      <pubDate>Fri, 27 Jun 2025 19:52:11 +0900</pubDate>
      <guid>http://localhost:1313/younghan-mvc1/http-%EB%B6%84%EC%84%9D/</guid>
      <description>&lt;p&gt;전문가를 대상으로 한 심층적인 HTTP 구성 요소 설명입니다. 각 항목의 기술적 특성과 실제 적용 시 고려사항을 중심으로 설명합니다:&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;1-http-메소드-http-methods&#34;&gt;1. &lt;strong&gt;HTTP 메소드 (HTTP Methods)&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;RFC 7231 표준&lt;/strong&gt;에 정의된 동사(Verb)로, 리소스에 대한 의도를 명시&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Idempotency&lt;/strong&gt;: PUT/DELETE는 멱등성 보장 (동일 요청 반복 시 결과 동일)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Safe Methods&lt;/strong&gt;: GET/HEAD/OPTIONS는 서버 상태 변경 없음&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;확장 메소드&lt;/strong&gt;: PATCH(부분 수정), LINK(리소스 연결) 등 RFC 5789&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;API 설계 시 고려사항&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;RESTful 원칙 준수 (리소스 중심 경로 + 메소드 조합)&lt;/li&gt;&#xA;&lt;li&gt;OPTIONS 메소드를 통한 CORS Preflight 처리&lt;/li&gt;&#xA;&lt;li&gt;TRACE 메소드의 보안 취약점 관리 (XST 공격 방어)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;2-url-uniform-resource-locator&#34;&gt;2. &lt;strong&gt;URL (Uniform Resource Locator)&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;URI의 하위 집합&lt;/strong&gt;으로, 리소스 위치 및 접근 방법을 포함&lt;/p&gt;</description>
    </item>
    <item>
      <title>HTTP 요청 3가지 방법</title>
      <link>http://localhost:1313/younghan-mvc1/http-%EC%9A%94%EC%B2%AD-3%EA%B0%80%EC%A7%80-%EB%B0%A9%EB%B2%95/</link>
      <pubDate>Fri, 27 Jun 2025 19:52:08 +0900</pubDate>
      <guid>http://localhost:1313/younghan-mvc1/http-%EC%9A%94%EC%B2%AD-3%EA%B0%80%EC%A7%80-%EB%B0%A9%EB%B2%95/</guid>
      <description>&lt;h3 id=&#34;1-get---쿼리-파라미터&#34;&gt;1. &lt;strong&gt;GET - 쿼리 파라미터&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;데이터 전송 방식&lt;/strong&gt;: URL 끝에 &lt;code&gt;?key1=value1&amp;amp;key2=value2&lt;/code&gt; 형식으로 데이터를 포함합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;메시지 바디 없음&lt;/strong&gt;: 데이터가 URL에 직접 노출됩니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;캐시 가능&lt;/strong&gt;: 브라우저나 프록시 서버에서 캐시됩니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;안전하지 않음&lt;/strong&gt;: 중요한 데이터(비밀번호 등) 전송에 부적합합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;사용 사례&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;검색, 필터링, 페이징 (예: &lt;code&gt;GET /products?category=book&amp;amp;page=2&lt;/code&gt;)&lt;/li&gt;&#xA;&lt;li&gt;북마크 또는 공유 가능한 링크 생성&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-http&#34; data-lang=&#34;http&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;GET&lt;/span&gt; /users?name=hello&amp;amp;age=20 &lt;span style=&#34;color:#66d9ef&#34;&gt;HTTP&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;Host: example.com&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;2-post---html-form&#34;&gt;2. &lt;strong&gt;POST - HTML Form&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;데이터 전송 방식&lt;/strong&gt;: 메시지 바디에 &lt;code&gt;key1=value1&amp;amp;key2=value2&lt;/code&gt; 형식으로 데이터를 전송합니다. 쿼리 파라미터 형식으로 보낸다&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;헤더 설정&lt;/strong&gt;:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-http&#34; data-lang=&#34;http&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;  Content-Type: application/x-www-form-urlencoded&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;메시지 바디 사용&lt;/strong&gt;: URL에 데이터가 노출되지 않습니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;폼 데이터 전송&lt;/strong&gt;: HTML &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 태그 기본 방식입니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;데이터 길이 제한 없음&lt;/strong&gt;: 대량의 데이터 전송 가능합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;사용 사례&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;회원 가입, 로그인, 상품 주문 (예: &lt;code&gt;POST /login&lt;/code&gt; + &lt;code&gt;username=admin&amp;amp;password=1234&lt;/code&gt;)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-http&#34; data-lang=&#34;http&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;POST&lt;/span&gt; /submit-form &lt;span style=&#34;color:#66d9ef&#34;&gt;HTTP&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;Host: example.com&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;Content-Type: application/x-www-form-urlencoded&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  username=hello&amp;amp;age=20&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;h3 id=&#34;3-http-message-body-jsonxml-등&#34;&gt;3. &lt;strong&gt;HTTP Message Body (JSON/XML 등)&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;데이터 전송 방식&lt;/strong&gt;: 메시지 바디에 구조화된 데이터(JSON, XML 등)를 직접 작성합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;헤더 설정&lt;/strong&gt;:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-http&#34; data-lang=&#34;http&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;  Content-Type: application/json  # JSON 사용 시&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;다양한 데이터 형식&lt;/strong&gt;: JSON, XML, 텍스트 등 사용 가능합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;HTTP API 표준&lt;/strong&gt;: RESTful API에서 주로 사용됩니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;복잡한 데이터 처리&lt;/strong&gt;: 계층적/중첩된 데이터 전송에 적합합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;사용 사례&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;모바일 앱/백엔드 연동 (예: &lt;code&gt;POST /api/users&lt;/code&gt; + JSON 데이터)&lt;/li&gt;&#xA;&lt;li&gt;PUT/PATCH를 통한 리소스 업데이트&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시 (JSON)&lt;/strong&gt;:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-http&#34; data-lang=&#34;http&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;POST&lt;/span&gt; /api/users &lt;span style=&#34;color:#66d9ef&#34;&gt;HTTP&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;Host: example.com&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;Content-Type: application/json&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;#34;name&amp;#34;: &amp;#34;hello&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;#34;age&amp;#34;: 20,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;#34;hobbies&amp;#34;: [&amp;#34;reading&amp;#34;, &amp;#34;coding&amp;#34;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-차이점-요약&#34;&gt;📌 차이점 요약&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;구분&lt;/th&gt;&#xA;          &lt;th&gt;GET (쿼리 파라미터)&lt;/th&gt;&#xA;          &lt;th&gt;POST (HTML Form)&lt;/th&gt;&#xA;          &lt;th&gt;HTTP Message Body (JSON/XML)&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;데이터 위치&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;URL 끝에 &lt;code&gt;?key=value&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;메시지 바디 (&lt;code&gt;key=value&lt;/code&gt;)&lt;/td&gt;&#xA;          &lt;td&gt;메시지 바디 (구조화된 데이터)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;사용 HTTP 메서드&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;GET&lt;/td&gt;&#xA;          &lt;td&gt;POST&lt;/td&gt;&#xA;          &lt;td&gt;POST, PUT, PATCH 등&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;데이터 형식&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;쿼리 스트링&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;JSON, XML, 텍스트 등&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;주요 사용처&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;검색, 필터링, 공유 링크&lt;/td&gt;&#xA;          &lt;td&gt;HTML 폼 제출 (로그인, 주문)&lt;/td&gt;&#xA;          &lt;td&gt;API 통신 (모바일/서버 연동)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-선택-가이드&#34;&gt;💡 선택 가이드&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;간단한 데이터 조회&lt;/strong&gt;: &lt;code&gt;GET&lt;/code&gt; + 쿼리 파라미터&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;폼 기반 데이터 제출&lt;/strong&gt;: &lt;code&gt;POST&lt;/code&gt; + &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;복잡한 데이터 연동&lt;/strong&gt;: &lt;code&gt;POST/PUT/PATCH&lt;/code&gt; + &lt;code&gt;application/json&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>학교 네트워크 망 traceroute</title>
      <link>http://localhost:1313/06.university/mju_ecs-project/%ED%95%99%EA%B5%90-%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EB%A7%9D-traceroute/</link>
      <pubDate>Fri, 27 Jun 2025 19:51:49 +0900</pubDate>
      <guid>http://localhost:1313/06.university/mju_ecs-project/%ED%95%99%EA%B5%90-%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EB%A7%9D-traceroute/</guid>
      <description>&lt;p&gt;학교 강의실별 와이파이 접속시&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; ~/source/projects/ryugod master &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; $ traceroute google.com&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;traceroute to google.com &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;172.217.161.238&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt; hops max, &lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt; byte packets&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;  192.168.0.1 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;192.168.0.1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;  4.016 ms  10.352 ms  4.851 ms&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;  117.17.157.1 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;117.17.157.1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;  12.000 ms  5.915 ms  5.870 ms&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;  10.10.13.254 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;10.10.13.254&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;  12.100 ms  3.874 ms  8.998 ms&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;  202.30.111.4 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;202.30.111.4&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;  3.789 ms  8.036 ms  3.908 ms&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;  202.30.111.20 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;202.30.111.20&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;  7.132 ms  3.753 ms  8.286 ms&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;mjuwlan 와이파이 접속시&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; ~/source/projects/ryugod master &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; $ traceroute google.com&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;traceroute to google.com &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;142.250.76.142&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt; hops max, &lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt; byte packets&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;  192.168.42.253 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;192.168.42.253&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;  5.708 ms  4.067 ms  3.655 ms&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;  10.10.10.254 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;10.10.10.254&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;  5.003 ms  4.274 ms  3.686 ms&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;  * * *&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>컨테이너 종류</title>
      <link>http://localhost:1313/06.university/mju_ecs-project/%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88-%EC%A2%85%EB%A5%98/</link>
      <pubDate>Fri, 27 Jun 2025 19:51:46 +0900</pubDate>
      <guid>http://localhost:1313/06.university/mju_ecs-project/%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88-%EC%A2%85%EB%A5%98/</guid>
      <description>&lt;p&gt;컨테이너는 2가지 종류가 있다&#xA;실행하고 바로 꺼지는 컨테이너&#xA;실행하면 계속 백그라운드로 살아있는 컨테이너&#xA;ubuntu 가 바로 꺼지는 컨테이너 이므로&#xA;-it 옵션을 통해서 bash 셸의 출력을 내가 사용하고 있는 터미널로 붙이게 되면 계속 사용할 수 있다 단 이것도 ctrl + d 를 통해 나가게 되면 종료되어 버린다&lt;/p&gt;&#xA;&lt;h3 id=&#34;터미널을-붙여야-실행되는-컨테이너&#34;&gt;터미널을 붙여야 실행되는 컨테이너&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run -it --name myubuntu ubuntu /bin/bash&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;exit&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; or &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;ctrl + d&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker start -ai myubuntu&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;OR&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run -it --name myubuntu ubuntu /bin/bash&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;exit&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; or &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;ctrl + d&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker start -it myubuntu&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;OR&lt;/p&gt;</description>
    </item>
    <item>
      <title>cpp 메모리 할당 추척</title>
      <link>http://localhost:1313/02.inbox/cpp-%EB%A9%94%EB%AA%A8%EB%A6%AC-%ED%95%A0%EB%8B%B9-%EC%B6%94%EC%B2%99/</link>
      <pubDate>Fri, 27 Jun 2025 19:48:59 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/cpp-%EB%A9%94%EB%AA%A8%EB%A6%AC-%ED%95%A0%EB%8B%B9-%EC%B6%94%EC%B2%99/</guid>
      <description>&lt;p&gt;operator new를 오버로딩하여 메모리 할당 시 로그를 출력&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;operator&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;new&lt;/span&gt;(std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;size_t count) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; count &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; bytes 할당 &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;endl;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; malloc(count);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;stdout 으로 할당된 양을 뽑는다&lt;/p&gt;</description>
    </item>
    <item>
      <title>HTTPS와 비대칭 키 초기 설정부터 데이터 전송까지의 모든 과정 simulation</title>
      <link>http://localhost:1313/02.inbox/https%EC%99%80-%EB%B9%84%EB%8C%80%EC%B9%AD-%ED%82%A4-%EC%B4%88%EA%B8%B0-%EC%84%A4%EC%A0%95%EB%B6%80%ED%84%B0-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%A0%84%EC%86%A1%EA%B9%8C%EC%A7%80%EC%9D%98-%EB%AA%A8%EB%93%A0-%EA%B3%BC%EC%A0%95-simulation/</link>
      <pubDate>Thu, 26 Jun 2025 23:03:48 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/https%EC%99%80-%EB%B9%84%EB%8C%80%EC%B9%AD-%ED%82%A4-%EC%B4%88%EA%B8%B0-%EC%84%A4%EC%A0%95%EB%B6%80%ED%84%B0-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%A0%84%EC%86%A1%EA%B9%8C%EC%A7%80%EC%9D%98-%EB%AA%A8%EB%93%A0-%EA%B3%BC%EC%A0%95-simulation/</guid>
      <description>&lt;p&gt;클라이언트가 서버로부터 HTTPS 프로토콜을 통해 &lt;code&gt;index.html&lt;/code&gt;을 요청하는 상황에서 TCP 핸드셰이크가 완료된 후 진행되는 TLS 과정은 크게 세 단계로 나눌 수 있습니다:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;핸드셰이크 (Handshake Phase)&lt;/li&gt;&#xA;&lt;li&gt;키 도출 (Key Derivation Phase)&lt;/li&gt;&#xA;&lt;li&gt;데이터 전송 (Data Transfer Phase)&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;tls-과정-상세-설명&#34;&gt;TLS 과정 상세 설명&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;1. TLS 핸드셰이크 (Handshake Phase)&lt;/strong&gt; TLS 핸드셰이크 단계는 클라이언트와 서버가 안전한 통신을 위해 필요한 매개변수와 키를 설정하는 과정입니다. 이 단계에서는 다음의 중요한 과정들이 진행됩니다:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;클라이언트 &amp;ldquo;Hello&amp;rdquo; 메시지 전송&lt;/strong&gt;:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;클라이언트(Bob)는 서버(Alice)에게 &lt;strong&gt;지원하는 암호화 알고리즘 목록&lt;/strong&gt;을 보냅니다. 이 목록에는 대칭키 알고리즘 (예: AES), 공개키 알고리즘 (예: RSA), HMAC 알고리즘 (예: MD5 또는 SHA-1) 등이 포함될 수 있습니다.&lt;/li&gt;&#xA;&lt;li&gt;또한, **클라이언트 논스(Client Nonce)**를 함께 전송합니다. 논스는 프로토콜에서 한 번만 사용되는 고유한 숫자이며, 재생 공격(playback attack)을 방지하고 상대방이 &amp;lsquo;살아있는(live)&amp;rsquo; 상태임을 확인하는 데 사용됩니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;서버 &amp;ldquo;Hello&amp;rdquo; 및 인증서 응답&lt;/strong&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>12. Data View recent modified</title>
      <link>http://localhost:1313/00.data-view-and-bases/12.-data-view-recent-modified/</link>
      <pubDate>Thu, 26 Jun 2025 00:41:23 +0900</pubDate>
      <guid>http://localhost:1313/00.data-view-and-bases/12.-data-view-recent-modified/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-dataview&#34; data-lang=&#34;dataview&#34;&gt;table &#xA;&#x9;modified as &amp;#34;최근 수정 일시&amp;#34;,&#xA;&#x9;created as &amp;#34;생성일&amp;#34;&#xA;from &amp;#34;&amp;#34;&#xA;where modified&#xA;sort modified desc&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>hash set, unordered_set 구현체</title>
      <link>http://localhost:1313/leetcode75/hash-set-unordered_set-%EA%B5%AC%ED%98%84%EC%B2%B4/</link>
      <pubDate>Wed, 25 Jun 2025 15:48:02 +0900</pubDate>
      <guid>http://localhost:1313/leetcode75/hash-set-unordered_set-%EA%B5%AC%ED%98%84%EC%B2%B4/</guid>
      <description>&lt;p&gt;&lt;strong&gt;MD-5&lt;/strong&gt;나 &lt;strong&gt;SHA&lt;/strong&gt; 가 유명한 해시 알고리즘&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://modoocode.com/238&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;insert&lt;/a&gt;, &lt;a href=&#34;https://modoocode.com/240&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;erase&lt;/a&gt;, &lt;a href=&#34;https://modoocode.com/261&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;find&lt;/a&gt; 모두가 $O(1)$ 으로 수행&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;list&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;functional&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;template&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;typename&lt;/span&gt; T&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;MyUnorderedSet&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;vector&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;list&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; table;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    size_t current_size;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;float&lt;/span&gt; load_factor;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    size_t capacity;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    size_t &lt;span style=&#34;color:#a6e22e&#34;&gt;hash&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; T&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; value) &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;auto&lt;/span&gt; temp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;hash&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;()(value) &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; capacity;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; temp;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rehash&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        capacity &lt;span style=&#34;color:#f92672&#34;&gt;*=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;vector&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;list&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; new_table(capacity);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;auto&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; bucket : table) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;auto&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; value : bucket) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                size_t new_index &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;hash&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;()(value) &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; capacity;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                new_table[new_index].push_back(value);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        table &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;move(new_table);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    MyUnorderedSet(size_t init_capacity &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;float&lt;/span&gt; load_factor &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.75&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; capacity(init_capacity), load_factor(load_factor), current_size(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        table.resize(capacity);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;bool&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;insert&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; T&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; value) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (contains(value)) &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; false;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (current_size &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; capacity &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; load_factor) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            rehash();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        size_t index &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; hash(value);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        table[index].push_back(value);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        current_size&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; true;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;bool&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;contains&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; T&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; value) &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        size_t index &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; hash(value);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;auto&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; item : table[index]) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (item &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; value) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; true;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; false;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;bool&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;erase&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; T&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; value) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        size_t index &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; hash(value);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;auto&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; bucket &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; table[index];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;auto&lt;/span&gt; it &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; bucket.begin(); it &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; bucket.end(); &lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;it) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;it &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; value) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                bucket.erase(it);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                current_size&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; true;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; false;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    size_t &lt;span style=&#34;color:#a6e22e&#34;&gt;size&lt;/span&gt;() &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; current_size;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;bool&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;empty&lt;/span&gt;() &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; current_size &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    MyUnorderedSet&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; my_set;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    my_set.insert(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    my_set.insert(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    my_set.insert(&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Contains 2: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; my_set.contains(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;endl;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Size: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; my_set.size() &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;endl;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    my_set.erase(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Contains 2 after erase: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; my_set.contains(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;endl;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Size after erase: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; my_set.size() &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;endl;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>인사이트, 제안, 주장의 차이점</title>
      <link>http://localhost:1313/02.inbox/%EC%9D%B8%EC%82%AC%EC%9D%B4%ED%8A%B8-%EC%A0%9C%EC%95%88-%EC%A3%BC%EC%9E%A5%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90/</link>
      <pubDate>Mon, 23 Jun 2025 21:01:15 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EC%9D%B8%EC%82%AC%EC%9D%B4%ED%8A%B8-%EC%A0%9C%EC%95%88-%EC%A3%BC%EC%9E%A5%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90/</guid>
      <description>&lt;h3 id=&#34;인사이트-제안-주장의-차이점&#34;&gt;인사이트, 제안, 주장의 차이점&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;인사이트(Insight): 관찰·분석을 통해 얻은 흥미로운 사실이나 트렌드 공유&lt;br&gt;&#xA;예) “최근에 이런 현상이 있더라.”&lt;/li&gt;&#xA;&lt;li&gt;제안(Suggestion): 문제 해결을 위한 여러 옵션을 제시&lt;br&gt;&#xA;예) “이렇게 해보는 건 어떨까요?”&lt;/li&gt;&#xA;&lt;li&gt;주장(Assertion): 구체적이고 명확한 방향성과 행동을 제시하며, 그에 대한 책임을 본인이 짐&lt;br&gt;&#xA;예) “이렇게 해야 합니다. 제가 책임지고 추진하겠습니다.”&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;왜-주장이-중요한가&#34;&gt;왜 ‘주장’이 중요한가?&lt;/h3&gt;&#xA;&lt;p&gt;인사이트와 제안만으로는 실제 변화나 실행이 일어나지 않음&lt;br&gt;&#xA;주장은 행동과 결과에 대한 책임을 동반, 실제로 무언가를 ‘움직이게’ 만듦&lt;br&gt;&#xA;조직 내에서 영향력을 가지려면, 단순히 정보 전달이 아니라 본인만의 관점과 실행 의지가 필요&lt;/p&gt;</description>
    </item>
    <item>
      <title>대칭키 비대칭기 암호화</title>
      <link>http://localhost:1313/02.inbox/%EB%8C%80%EC%B9%AD%ED%82%A4-%EB%B9%84%EB%8C%80%EC%B9%AD%EA%B8%B0-%EC%95%94%ED%98%B8%ED%99%94/</link>
      <pubDate>Fri, 20 Jun 2025 19:29:29 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EB%8C%80%EC%B9%AD%ED%82%A4-%EB%B9%84%EB%8C%80%EC%B9%AD%EA%B8%B0-%EC%95%94%ED%98%B8%ED%99%94/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;단방향 암호화 : 일종의 해시&#xA;&lt;ul&gt;&#xA;&lt;li&gt;단일문자 대응 암호&lt;/li&gt;&#xA;&lt;li&gt;블록 암호화&#xA;&lt;ul&gt;&#xA;&lt;li&gt;PGP TLS IPsec&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;, SHA-256, SHA-1, MD5 등&lt;/li&gt;&#xA;&lt;li&gt;db 에 비밀번호를 저장할 떄는 단방향 암호화&lt;/li&gt;&#xA;&lt;li&gt;데이터 무결성 검증 (예: 파일 해시 비교, TCP UDP 의 checksum)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;양방향 암호화&#xA;&lt;ul&gt;&#xA;&lt;li&gt;대칭키: 암호화와 복호화에 동일한 키를 사용하는 암호 방식이다. $K_{a} = K_{b}$&#xA;&lt;ul&gt;&#xA;&lt;li&gt;AES, DES&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;비대칭키: 개인키(비밀) 공개키(공개)로 키가 나뉘며 1개의 키로 암호화 1개의 키로 복호화 하는 방법 $K_{a} \neq K_{b}$&#xA;&lt;ul&gt;&#xA;&lt;li&gt;server or client: $A, B$&lt;/li&gt;&#xA;&lt;li&gt;공개키: $K^{+}&lt;em&gt;{A,B}$ , 개인키: $K^{-}&lt;/em&gt;{A,B}$&lt;/li&gt;&#xA;&lt;li&gt;public key 암호화 =&amp;gt; 종단간 암호화&#xA;&lt;ul&gt;&#xA;&lt;li&gt;$K^{+}&lt;em&gt;{A}(K^{-}&lt;/em&gt;{A}(m)) = m$&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;private key 암호화 =&amp;gt; 인증&#xA;&lt;ul&gt;&#xA;&lt;li&gt;$K^{-}&lt;em&gt;{A}(K^{+}&lt;/em&gt;{A}(m)) = m$&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;기밀성&lt;br&gt;&#xA;메세지 무결성&lt;br&gt;&#xA;종단점 인증&lt;br&gt;&#xA;운영보안&lt;br&gt;&#xA;운영보안&#xA;블럭 암호화&lt;br&gt;&#xA;k == 64 이면 64 비트블록으로 쪼개어 각 블록을 독립적으로 암호화 한다&lt;/p&gt;</description>
    </item>
    <item>
      <title>mac java 관리</title>
      <link>http://localhost:1313/02.inbox/mac-java-%EA%B4%80%EB%A6%AC/</link>
      <pubDate>Fri, 20 Jun 2025 02:16:33 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/mac-java-%EA%B4%80%EB%A6%AC/</guid>
      <description>&lt;p&gt;apple 에서 관리되는 방식이므로 brew 패키지 관리자를 통해 하는 방법이 아니다&lt;/p&gt;&#xA;&lt;p&gt;설치된 java 보기&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/usr/libexec/java_home -verbose &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol&gt;&#xA;&lt;li&gt;모든 JDK는 기본 위치인 &lt;code&gt;/Library/Java/JavaVirtualMachines&lt;/code&gt;에 놔두어집니다. 시스템은 기본적으로 가장 높은 버전을 선택합니다.&lt;/li&gt;&#xA;&lt;li&gt;기본 선택에서 제외하려면 해당 JDK의 &lt;code&gt;Contents/Info.plist&lt;/code&gt; 파일 이름을 &lt;code&gt;Info.plist.disabled&lt;/code&gt;로 변경합니다. 이렇게 하면 &lt;code&gt;$JAVA_HOME&lt;/code&gt;이 해당 JDK를 가리키거나 스크립트나 설정에서 명시적으로 참조할 때 해당 JDK를 여전히 사용할 수 있습니다. 단지 시스템의 &lt;code&gt;java&lt;/code&gt; 명령어에서는 무시됩니다.&lt;/li&gt;&#xA;&lt;li&gt;시스템 런처는 &lt;code&gt;Info.plist&lt;/code&gt; 파일이 있는 JDK 중 가장 높은 버전을 사용합니다.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;삭제할 때 여기도 확인&lt;/p&gt;</description>
    </item>
    <item>
      <title>네트워크 족보 문제 풀이</title>
      <link>http://localhost:1313/06.university/network/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EC%A1%B1%EB%B3%B4-%EB%AC%B8%EC%A0%9C-%ED%92%80%EC%9D%B4/</link>
      <pubDate>Fri, 13 Jun 2025 14:53:05 +0900</pubDate>
      <guid>http://localhost:1313/06.university/network/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EC%A1%B1%EB%B3%B4-%EB%AC%B8%EC%A0%9C-%ED%92%80%EC%9D%B4/</guid>
      <description>&lt;h1 id=&#34;네트워크-라우터의-패킷-서비스-순서-문제&#34;&gt;네트워크 라우터의 패킷 서비스 순서 문제&lt;/h1&gt;&#xA;&lt;p&gt;패킷 크기는 모두 동일하며, 다음 순서로 도착하여 큐에 이미 들어가 있다고 가정합니다:&lt;br&gt;&#xA;&lt;strong&gt;P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P12&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;각 패킷은 아래와 같이 &lt;strong&gt;클래스(Class)&lt;/strong&gt; 별로 분류되어 있습니다:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Class 1&lt;/strong&gt;: P2, P4, P7, P12&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Class 2&lt;/strong&gt;: P3, P5, P10&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Class 3&lt;/strong&gt;: P1, P6, P8, P9, P11&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;5-round-robin-scheduling-5점&#34;&gt;5. Round Robin Scheduling (5점)&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;서비스는 &lt;strong&gt;Class 3 큐부터 시작&lt;/strong&gt;됩니다.&lt;/li&gt;&#xA;&lt;li&gt;각 클래스 내부에서는 &lt;strong&gt;패킷 번호 순서대로&lt;/strong&gt; 서비스가 진행됩니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;요구사항&#34;&gt;요구사항:&lt;/h3&gt;&#xA;&lt;p&gt;Round Robin 스케줄링 방식에 따라 패킷이 &lt;strong&gt;실제로 서비스되는 순서를 기술하시오&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>벨만 포드 알고리즘 상세과정</title>
      <link>http://localhost:1313/02.inbox/%EB%B2%A8%EB%A7%8C-%ED%8F%AC%EB%93%9C-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EC%83%81%EC%84%B8%EA%B3%BC%EC%A0%95/</link>
      <pubDate>Thu, 12 Jun 2025 15:40:59 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EB%B2%A8%EB%A7%8C-%ED%8F%AC%EB%93%9C-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EC%83%81%EC%84%B8%EA%B3%BC%EC%A0%95/</guid>
      <description>&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250612154056-1749710456596-image.png&#34; alt=&#34; (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;이 표는 시작 노드 &lt;strong&gt;u&lt;/strong&gt;에서 다른 모든 노드(v, w, x, y, z)까지의 최단 거리를 벨만-포드 알고리즘을 사용하여 찾는 과정을 보여줍니다. 벨만-포드 알고리즘은 &lt;strong&gt;거쳐가는 간선(hop)의 개수를 1개부터 점차 늘려가며&lt;/strong&gt; 최단 거리를 갱신하는 방식입니다.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-기본-개념-벨만-포드-알고리즘&#34;&gt;## 기본 개념: 벨만-포드 알고리즘&lt;/h3&gt;&#xA;&lt;p&gt;벨만-포드 알고리즘의 핵심 아이디어는 다음과 같습니다.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;k개의 간선까지만 사용했을 때의 최단 거리&lt;/strong&gt;를 계산합니다.&lt;/li&gt;&#xA;&lt;li&gt;이전 단계(k-1개 간선 사용)의 최단 거리 정보를 이용해 현재 단계(k개 간선 사용)의 최단 거리를 갱신합니다.&lt;/li&gt;&#xA;&lt;li&gt;공식: &lt;code&gt;D[u] &amp;gt; D[v] + cost(v, u)&lt;/code&gt; 이면 &lt;code&gt;D[u] = D[v] + cost(v, u)&lt;/code&gt;로 갱신합니다. (v를 거쳐 u로 가는 거리가 더 짧다면 갱신)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;주어진 표에서 &amp;ldquo;up to k hops&amp;quot;는 최대 k개의 간선을 사용했을 때 &lt;strong&gt;u&lt;/strong&gt;로부터 각 노드까지의 최단 거리를 의미합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>mjuecs project</title>
      <link>http://localhost:1313/06.university/mju_ecs-project/mjuecs-project/</link>
      <pubDate>Wed, 11 Jun 2025 15:06:32 +0900</pubDate>
      <guid>http://localhost:1313/06.university/mju_ecs-project/mjuecs-project/</guid>
      <description>&lt;h3 id=&#34;물리-환경&#34;&gt;물리 환경&lt;/h3&gt;&#xA;&lt;p&gt;db,backend,frontend 컴퓨터 1대&#xA;여러대의 docker host&lt;/p&gt;&#xA;&lt;h3 id=&#34;로그인-처리&#34;&gt;로그인 처리&lt;/h3&gt;&#xA;&lt;p&gt;나의 경우는 mju 에 로그인이 가능한 사람을 기준으로 했지만&#xA;어떠한 방식으로 로그인처리를 할 지 고를 수 있어야함&lt;/p&gt;&#xA;&lt;h3 id=&#34;api&#34;&gt;api&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;METHOD&lt;/th&gt;&#xA;          &lt;th&gt;endpoint&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;POST&lt;/td&gt;&#xA;          &lt;td&gt;/api/docker/run&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;POST&lt;/td&gt;&#xA;          &lt;td&gt;/api/docker/start&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;POST&lt;/td&gt;&#xA;          &lt;td&gt;/api/docker/restart&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;/api/docker/stop&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;/api/docker/status&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;/api/auth/login&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;/api/auth/&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;필요-요구-사항&#34;&gt;필요 요구 사항&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;사용자가 새로운 컨테이너를 만들려고 할 때 docker host 컴퓨터들의 상태 (cpu, memory, &amp;hellip;) 을 보고 그곳에 컨테이너를 생성 가능(일종의 aws 의 리전개념)&lt;/li&gt;&#xA;&lt;li&gt;사용자가&lt;/li&gt;&#xA;&lt;li&gt;백엔드는 백엔드에서 관리하고 있는 모든 host 의 정보(사용량, 컨테이너 사용량 등등)를 순차적으로 돌아가며 가져와서 메모리에 저장해두었다가 사용자에게 갱신해 주면 됨&lt;/li&gt;&#xA;&lt;li&gt;back 엔드에서는 사용자 정보만 db 에 저장하고 컨테이너 상태와 같은것들은 가져오지 않아야 한다&lt;/li&gt;&#xA;&lt;li&gt;사용자 마다 전체 컨테이너의 개수 max 제한이 있어야 함&lt;/li&gt;&#xA;&lt;li&gt;사용자가 1개의 컨테이너를 생성중에 있을 때는 컨테이너가 만들어지고 난 후 생성가능&lt;/li&gt;&#xA;&lt;li&gt;컨테이너에 터미널 접근을위해 websocket 을 사용&lt;/li&gt;&#xA;&lt;li&gt;터미널 창은 tab 으로 구성되며 첫 탭은 컨테이너 log 만 존재하는 tab 으로 상호작용은 없는 탭&lt;/li&gt;&#xA;&lt;li&gt;사용자는 초기 화면에서 자신의 컨테이너 상태를 확인 할 수 있어야 한다(실시간 sse 활용)&lt;/li&gt;&#xA;&lt;li&gt;사용자는 특정 컨테이너 정보 창에서 상세한 컨테이너 stats 을 확인할 수 있어야 한다(실시간 sse 활용)&lt;/li&gt;&#xA;&lt;li&gt;front 의 경우 onepage 로 만들어 구성이 쉽도록 한다&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>mjuecs 발표 스크립트</title>
      <link>http://localhost:1313/06.university/mju_ecs-project/mjuecs-%EB%B0%9C%ED%91%9C-%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8/</link>
      <pubDate>Wed, 11 Jun 2025 15:05:01 +0900</pubDate>
      <guid>http://localhost:1313/06.university/mju_ecs-project/mjuecs-%EB%B0%9C%ED%91%9C-%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8/</guid>
      <description>&lt;p&gt;mjuecs 호스트 비밀번호 564738291&lt;/p&gt;&#xA;&lt;p&gt;sejonng univ auth github&#xA;shinnk.iptime.org 에서 ppt 다운&#xA;명지대 전산정보원&lt;/p&gt;&#xA;&lt;p&gt;안녕하세요 5조 발표 시작하겠습니다&lt;/p&gt;&#xA;&lt;p&gt;먼저 목차입니다&lt;/p&gt;&#xA;&lt;p&gt;설명&amp;hellip;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;프로젝트 주제 선정이유 입니다&lt;/p&gt;&#xA;&lt;p&gt;해당 프로젝트는 컴공또는 정통 학생들이 학교 수업 또는 프로젝트 진행중 발생할 수 있는 여러 개발환경의 세팅의 어려움을 해결하기 위해 해당 주제를 선정하였습니다&lt;/p&gt;&#xA;&lt;p&gt;일반적으로 개발환경의 세팅의 어려운 예시는 다음과 같습니다&lt;br&gt;&#xA;먼저 아카텍쳐 차이로 인해 발생하는 문제인데요 가장 먼저 예시를 들면 oracle database 입니다 해당 소프트웨어의 경우 database 수업시 표준적으로 사용하는 db 임에도 불구하고 상용프로그램이면서 intel, amd 진영에서 사용하는 아키텍쳐인 x64 cisc 기반의 컴퓨터를 지원하는데 최근 점점 risc 기반의 arm 기반 아키텍쳐를 개인 컴퓨터로 사용하는 경우가 늘고 있습니다 특히 mac 의 경우 apple silicon 이 도입되면서 해당 x64 기반의 소프트웨어가 명령어 해석기로 돌아간다고 해도 완벽히 작동하는 것이 아니므로 해당 oracle database 는 구동되지 못합니다&lt;/p&gt;</description>
    </item>
    <item>
      <title>캐시 매핑 방식의 이해</title>
      <link>http://localhost:1313/06.university/%EC%BA%90%EC%8B%9C-%EB%A7%A4%ED%95%91-%EB%B0%A9%EC%8B%9D%EC%9D%98-%EC%9D%B4%ED%95%B4/</link>
      <pubDate>Wed, 11 Jun 2025 15:04:42 +0900</pubDate>
      <guid>http://localhost:1313/06.university/%EC%BA%90%EC%8B%9C-%EB%A7%A4%ED%95%91-%EB%B0%A9%EC%8B%9D%EC%9D%98-%EC%9D%B4%ED%95%B4/</guid>
      <description>&lt;h3 id=&#34;공통-시스템-환경-설정&#34;&gt;&lt;strong&gt;공통 시스템 환경 설정&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;주기억장치 용량&lt;/strong&gt;: 4KB (4096 바이트). 따라서 주소는 &lt;strong&gt;12비트&lt;/strong&gt;가 필요합니다 (212=4096).&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;워드(Word)의 크기&lt;/strong&gt;: &lt;strong&gt;4 바이트&lt;/strong&gt;. (32비트 시스템에서 흔히 볼 수 있는 구조)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;블록(Block) 및 캐시 라인(Line) 크기&lt;/strong&gt;: 4 워드. 즉, 4워드×4바이트/워드=16바이트 입니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;캐시 메모리 크기&lt;/strong&gt;: 256 바이트.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;캐시 라인의 수&lt;/strong&gt;: 256바이트/16바이트/라인=16개의 라인을 가집니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;메모리 주소는 &lt;strong&gt;12비트&lt;/strong&gt;이며, 이 주소를 어떻게 &lt;code&gt;Tag&lt;/code&gt;, &lt;code&gt;Line(or Set)&lt;/code&gt;, &lt;code&gt;Word(or Offset)&lt;/code&gt; 필드로 나누는지가 각 사상 방식의 핵심입니다.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Word(Offset) 필드&lt;/strong&gt;: 블록 크기가 16바이트이므로, 블록 내 특정 바이트를 가리키기 위해 log2​(16)=4비트가 필요합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-1-직접-사상-방식-direct-mapping&#34;&gt;## 1. 직접 사상 방식 (Direct Mapping)&lt;/h3&gt;&#xA;&lt;p&gt;직접 사상 방식에서는 주기억장치의 각 블록이 캐시의 정해진 &lt;strong&gt;단 하나의 라인&lt;/strong&gt;에만 저장될 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>mjuecs 프로젝트 발표</title>
      <link>http://localhost:1313/06.university/mju_ecs-project/mjuecs-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EB%B0%9C%ED%91%9C/</link>
      <pubDate>Tue, 10 Jun 2025 08:56:43 +0900</pubDate>
      <guid>http://localhost:1313/06.university/mju_ecs-project/mjuecs-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EB%B0%9C%ED%91%9C/</guid>
      <description>&lt;h2 id=&#34;캡스톤-디자인1-최종-발표-mjuecs&#34;&gt;캡스톤 디자인1 최종 발표 MJUECS&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250610085832-1749513512537-image.png&#34; alt=&#34; (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;div class=&#34;page-break&#34; style=&#34;page-break-before: always;&#34;&gt;&lt;/div&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;목차&#34;&gt;목차&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;프로젝트 주제 선정 이유 및 구현하려고 했던 목표&lt;/li&gt;&#xA;&lt;li&gt;실제 프로젝트 구현 내용 및 원래 목표와의 차이 (목표 대비 미흡한 점 혹은 초과 달성한 성과 등)&lt;/li&gt;&#xA;&lt;li&gt;프로젝트 진행시 가장 어려웠던 점 및 해결 과정&lt;/li&gt;&#xA;&lt;li&gt;프로젝트 결과 아쉬웠다고 생각되는 점 및 성과라고 생각되는 점&lt;/li&gt;&#xA;&lt;li&gt;Futre Works (고도화 방안)&lt;/li&gt;&#xA;&lt;li&gt;기타 프로젝트 성과를 잘 설명할 수 있는 사항들 (자유롭게)&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;page-break&#34; style=&#34;page-break-before: always;&#34;&gt;&lt;/div&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;프로젝트-주제-선정-이유-및-구현하려고-했던-목표&#34;&gt;프로젝트 주제 선정 이유 및 구현하려고 했던 목표&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;[!warning]&#xA;&lt;strong&gt;컴공 또는 정통 수업에서 실습시 개발환경 구성하기가 쉽지 않는 경우가 많음&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>11. Data View all tag</title>
      <link>http://localhost:1313/00.data-view-and-bases/11.-data-view-all-tag/</link>
      <pubDate>Mon, 09 Jun 2025 16:49:04 +0900</pubDate>
      <guid>http://localhost:1313/00.data-view-and-bases/11.-data-view-all-tag/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-dataview&#34; data-lang=&#34;dataview&#34;&gt;TABLE WITHOUT ID tag  AS Tags,&#xA;length(rows.file.link) AS &amp;#34;File Count&amp;#34;&#xA;FROM &amp;#34;&amp;#34;&#xA;WHERE file.tags&#xA;FLATTEN file.tags AS tag&#xA;GROUP BY tag&#xA;SORT length(rows.file.link) DESC&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-dataview&#34; data-lang=&#34;dataview&#34;&gt;TABLE WITHOUT ID (tag + &amp;#34;(&amp;#34; + length(rows.file.link) + &amp;#34;)&amp;#34;) AS Tags, join(rows.file.link, &amp;#34;&#xA;&amp;#34;) AS Files&#xA;FROM &amp;#34;&amp;#34;&#xA;WHERE file.tags&#xA;FLATTEN file.tags AS tag&#xA;GROUP BY tag&#xA;SORT length(rows.file.link) DESC&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>university architecture</title>
      <link>http://localhost:1313/06.university/university-architecture/</link>
      <pubDate>Sun, 08 Jun 2025 19:19:34 +0900</pubDate>
      <guid>http://localhost:1313/06.university/university-architecture/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;PC : 다음에 인출될 명령어의 주소&lt;/li&gt;&#xA;&lt;li&gt;AC : 임시저장&lt;/li&gt;&#xA;&lt;li&gt;IR : 최근에 인출된 명령어&lt;/li&gt;&#xA;&lt;li&gt;MAR : 기억장치 접근 주소&lt;/li&gt;&#xA;&lt;li&gt;MBR : 기억장치 접근 데이터&lt;/li&gt;&#xA;&lt;li&gt;SP : 스텍 최상위 주소&lt;/li&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2장&#34;&gt;2장&lt;/h3&gt;&#xA;&lt;h3 id=&#34;사이클&#34;&gt;사이클&lt;/h3&gt;&#xA;&lt;h4 id=&#34;인출-사이클&#34;&gt;인출 사이클&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-assembly&#34; data-lang=&#34;assembly&#34;&gt;MAR &amp;lt;- PC&#xA;MBR &amp;lt;- M[MAR], PC &amp;lt;- PC + 1&#xA;IR &amp;lt;- MBR&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;실행-사이클&#34;&gt;실행 사이클&lt;/h4&gt;&#xA;&lt;p&gt;load&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;인터럽트-사이클&#34;&gt;인터럽트 사이클&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-assembly&#34; data-lang=&#34;assembly&#34;&gt;MBR &amp;lt;- PC&#xA;MAR &amp;lt;- SP, PC &amp;lt;- ISR 의 시작 주소&#xA;M[MAR] &amp;lt;- MBR , SP &amp;lt;- SP-1&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;간접-사이클&#34;&gt;간접 사이클&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-assembly&#34; data-lang=&#34;assembly&#34;&gt;MAR &amp;lt;- IR(addr)&#xA;MBR &amp;lt;- M[MAR]&#xA;IR(addr) &amp;lt;- MBR&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;sub-call&#34;&gt;Sub call&lt;/h4&gt;&#xA;&lt;p&gt;인터럽트 사이클과 비슷&lt;br&gt;&#xA;&lt;code&gt;CALL X&lt;/code&gt; 명령시&lt;/p&gt;</description>
    </item>
    <item>
      <title>아키텍쳐 기말고사 범위</title>
      <link>http://localhost:1313/06.university/%EC%95%84%ED%82%A4%ED%85%8D%EC%B3%90-%EA%B8%B0%EB%A7%90%EA%B3%A0%EC%82%AC-%EB%B2%94%EC%9C%84/</link>
      <pubDate>Sun, 08 Jun 2025 06:45:56 +0900</pubDate>
      <guid>http://localhost:1313/06.university/%EC%95%84%ED%82%A4%ED%85%8D%EC%B3%90-%EA%B8%B0%EB%A7%90%EA%B3%A0%EC%82%AC-%EB%B2%94%EC%9C%84/</guid>
      <description>&lt;p&gt;기말 고사 범위는 다음과 같습니다. &#xA;컴퓨터아키텍쳐 (0773)     6/10 (화)     오후 7시 ~ 8시    제5공학관 Y5120&#xA;컴퓨터아키텍쳐 (0774)     6/11 (수)     오후 3시 ~ 4시    창조관 Y2446&lt;/p&gt;&#xA;&lt;p&gt;2장&#xA;  2.3 명령어 파이프라이닝&#xA;5장 기억장치&#xA;  5.7 차세대 비활성 기억장치는 제외&#xA;8장 고성능 컴퓨터시스템 구조&lt;/p&gt;&#xA;&lt;p&gt;교과서 3장과 5장에서 다음을 제외합니다. &lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;3.5.4 준안정성&lt;/li&gt;&#xA;&lt;li&gt;3.5.5 동기화기&lt;/li&gt;&#xA;&lt;li&gt;3.5.6 분해능 시간 유도&lt;/li&gt;&#xA;&lt;li&gt;3.6 병렬처리 &lt;/li&gt;&#xA;&lt;li&gt;5.2.1에서 전치가산기 관련 부분&lt;/li&gt;&#xA;&lt;li&gt;5.6 논리배열&lt;/li&gt;&#xA;&lt;li&gt;HDL 관련부분도 제외합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>university operating system</title>
      <link>http://localhost:1313/06.university/os/university-operating-system/</link>
      <pubDate>Thu, 05 Jun 2025 17:41:23 +0900</pubDate>
      <guid>http://localhost:1313/06.university/os/university-operating-system/</guid>
      <description>&lt;h2 id=&#34;computer-organization&#34;&gt;Computer Organization&lt;/h2&gt;&#xA;&lt;h3 id=&#34;폰-노이만-구조&#34;&gt;폰 노이만 구조&lt;/h3&gt;&#xA;&lt;p&gt;폰 노이만 구조가 이전과 다른점 : 코드영역(program)이 하드웨어가 아닌 메모리로 올라간다(소프트웨어 개념의 탄생)&lt;/p&gt;&#xA;&lt;h2 id=&#34;메모리-계층-구조&#34;&gt;메모리 계층 구조&lt;/h2&gt;&#xA;&lt;p&gt;위 내용은 컴퓨터 시스템에서 **메모리 계층 구조(Memory Hierarchy)**와 관련된 개념을 설명하고 있습니다. 특히, 프로세서가 메모리를 참조할 때 나타나는 **시간적/공간적 지역성(Temporal and Spatial Locality)**과 이를 기반으로 한 메모리 접근 패턴의 효율성을 다룹니다. 아래에서 각 항목을 상세히 설명하겠습니다.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;1-memory-references-cluster-in-time-and-space&#34;&gt;1. &lt;strong&gt;Memory References Cluster in Time and Space&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;이 문장은 메모리 참조가 **시간적 지역성(Temporal Locality)**과 **공간적 지역성(Spatial Locality)**이라는 두 가지 특성을 보인다는 것을 의미합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;1-시간적-지역성-temporal-locality&#34;&gt;(1) 시간적 지역성 (Temporal Locality)&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;정의&lt;/strong&gt;: 최근에 참조된 데이터가 다시 참조될 가능성이 높음.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;: 프로그램이 특정 변수를 반복적으로 사용하는 경우, 해당 변수는 캐시 또는 레지스터에 남아 있는 것이 유리함.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;응용&lt;/strong&gt;: 캐시 메모리를 통해 자주 사용되는 데이터를 유지하여 성능을 향상시킴.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;2-공간적-지역성-spatial-locality&#34;&gt;(2) 공간적 지역성 (Spatial Locality)&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;정의&lt;/strong&gt;: 어떤 메모리 주소가 참조되면 그 근처의 주소들도 곧 참조될 가능성이 높음.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;: 배열이나 연속된 데이터 구조를 처리할 때, 프로세서는 연속된 메모리 위치를 순차적으로 접근함.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;응용&lt;/strong&gt;: 캐시 라인(Cache Line)을 통해 한 번에 여러 데이터를 미리 가져오는 방식으로 활용됨.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;2-data-is-organized-so-that-the-percentage-of-accesses-to-each-successively-lower-level-is-substantially-less-than-that-of-the-level-above&#34;&gt;2. &lt;strong&gt;Data is Organized So That the Percentage of Accesses to Each Successively Lower Level is Substantially Less Than That of the Level Above&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;이 문장은 &lt;strong&gt;메모리 계층 구조&lt;/strong&gt;의 기본 원칙을 설명합니다. 메모리 계층 구조는 다음과 같은 특징을 가집니다:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;1-메모리-계층-구조&#34;&gt;(1) 메모리 계층 구조&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;컴퓨터 시스템은 다양한 종류의 메모리를 사용하며, 각 메모리는 &lt;strong&gt;속도&lt;/strong&gt;, &lt;strong&gt;크기&lt;/strong&gt;, &lt;strong&gt;비용&lt;/strong&gt;의 관점에서 차이가 있음.&lt;/li&gt;&#xA;&lt;li&gt;일반적으로 메모리 계층은 다음과 같이 구성됩니다:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;레지스터(Register)&lt;/strong&gt;: 가장 빠르지만 크기가 작음.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;캐시(Cache)&lt;/strong&gt;: L1, L2, L3 캐시로 나뉘며, 속도와 크기가 점진적으로 증가.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;RAM(Main Memory)&lt;/strong&gt;: 큰 용량을 제공하지만 상대적으로 느림.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;디스크(Storage)&lt;/strong&gt;: 가장 느리지만 매우 큰 용량을 제공.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;2-접근-비율access-rate&#34;&gt;(2) 접근 비율(Access Rate)&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;메모리 계층 구조에서는 더 낮은 수준의 메모리로 갈수록 접근 비율이 급격히 감소합니다.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;예를 들어, 프로세서가 필요로 하는 데이터의 대부분은 &lt;strong&gt;L1 캐시&lt;/strong&gt;에서 해결되며, L2 캐시로 넘어가는 비율은 그보다 적고, RAM으로 넘어가는 비율은 더욱 줄어듦.&lt;/li&gt;&#xA;&lt;li&gt;이러한 접근 비율의 차이는 &lt;strong&gt;지역성 원칙&lt;/strong&gt; 덕분에 가능해짐.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;3-효율성&#34;&gt;(3) 효율성&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;메모리 계층 구조는 &lt;strong&gt;빠른 메모리&lt;/strong&gt;를 적절히 활용하여 전체 시스템의 성능을 극대화합니다.&lt;/li&gt;&#xA;&lt;li&gt;예를 들어, L1 캐시가 필요한 데이터를 제공할 확률이 90%이고, L2 캐시가 추가로 8%를 처리한다면, RAM에서 직접 데이터를 읽어야 하는 경우는 2%에 불과하게 됩니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;3-can-be-applied-across-more-than-two-levels-of-memory&#34;&gt;3. &lt;strong&gt;Can Be Applied Across More Than Two Levels of Memory&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;메모리 계층 구조는 단순히 두 개의 메모리 레벨(예: 캐시와 RAM)에만 적용되는 것이 아니라, &lt;strong&gt;여러 레벨&lt;/strong&gt;에 걸쳐 적용될 수 있습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;1-다중-메모리-레벨&#34;&gt;(1) 다중 메모리 레벨&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;현대 컴퓨터 시스템에서는 여러 레벨의 메모리가 존재하며, 각 레벨은 서로 다른 특성을 가짐:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;L1 캐시&lt;/strong&gt;: 가장 빠르지만 작은 용량.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;L2 캐시&lt;/strong&gt;: L1보다 느리지만 더 큰 용량.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;L3 캐시&lt;/strong&gt;: L2보다 더 느리지만 더 큰 용량.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;RAM&lt;/strong&gt;: 캐시보다 느리지만 매우 큰 용량.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;SSD/HDD&lt;/strong&gt;: 가장 느리지만 영구 저장이 가능.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;2-데이터-이동&#34;&gt;(2) 데이터 이동&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;데이터는 필요한 경우에 따라 위계적으로 이동합니다. 예를 들어:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;프로세서가 데이터를 요청하면 먼저 L1 캐시를 확인.&lt;/li&gt;&#xA;&lt;li&gt;L1 캐시에 없으면 L2 캐시를 확인.&lt;/li&gt;&#xA;&lt;li&gt;L2 캐시에도 없으면 L3 캐시, RAM, 디스크 순으로 검색.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;3-성능-최적화&#34;&gt;(3) 성능 최적화&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;각 메모리 레벨의 용량과 속도를 적절히 조합하여 전체 시스템의 성능을 최적화합니다.&lt;/li&gt;&#xA;&lt;li&gt;예를 들어, 캐시 미스(Cache Miss)가 발생할 때마다 더 느린 메모리로 접근해야 하므로, 캐시 히트율(Cache Hit Rate)을 높이는 것이 중요합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;요약-및-결론&#34;&gt;요약 및 결론&lt;/h3&gt;&#xA;&lt;p&gt;위 내용은 메모리 계층 구조와 지역성 원칙을 중심으로, 프로세서가 메모리를 참조할 때 나타나는 패턴과 이를 활용한 시스템 설계 원리를 설명합니다. 핵심 포인트는 다음과 같습니다:&lt;/p&gt;</description>
    </item>
    <item>
      <title>우분투 리눅스 환경 구성</title>
      <link>http://localhost:1313/02.inbox/%EC%9A%B0%EB%B6%84%ED%88%AC-%EB%A6%AC%EB%88%85%EC%8A%A4-%ED%99%98%EA%B2%BD-%EA%B5%AC%EC%84%B1/</link>
      <pubDate>Thu, 05 Jun 2025 10:58:58 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EC%9A%B0%EB%B6%84%ED%88%AC-%EB%A6%AC%EB%88%85%EC%8A%A4-%ED%99%98%EA%B2%BD-%EA%B5%AC%EC%84%B1/</guid>
      <description>&lt;h2 id=&#34;각-언어별-환경구성&#34;&gt;각 언어별 환경구성&lt;/h2&gt;&#xA;&lt;h3 id=&#34;python&#34;&gt;python&lt;/h3&gt;&#xA;&lt;p&gt;ppa 를 통해 python 의 각 버전을 설치&#xA;기본적으로 full 버전을 설치, 제안인 dev 버전도 설치&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ apt depends python3.12-full&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3.12-full&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Depends: python3.12 &lt;span style=&#34;color:#f92672&#34;&gt;(=&lt;/span&gt; 3.12.8-1+jammy1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Depends: libpython3.12-testsuite&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Depends: python3.12-venv &lt;span style=&#34;color:#f92672&#34;&gt;(=&lt;/span&gt; 3.12.8-1+jammy1&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Depends: idle-python3.12&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Depends: python3.12-gdbm&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Depends: python3.12-lib2to3&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Depends: python3.12-tk&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Depends: ca-certificates&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Recommends: python3.12-examples&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Suggests: python3.12-dev&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;파이썬 인터브리터를 변경하는방법&#xA;/bin 폴더를 ln 을 조작함&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lrwxrwxrwx &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root      &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt; Nov &lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt; 19:51 python -&amp;gt; python3.12*&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lrwxrwxrwx &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root      &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt; Sep &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt; 21:06 python3 -&amp;gt; python3.10*&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rwxr-xr-x &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;5941832&lt;/span&gt; Nov  &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; 05:22 python3.10*&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rwxr-xr-x &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;7894408&lt;/span&gt; Oct  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; 17:52 python3.12*&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lrwxrwxrwx &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root      &lt;span style=&#34;color:#ae81ff&#34;&gt;34&lt;/span&gt; Oct  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; 17:52 python3.12-config -&amp;gt; x86_64-linux-gnu-python3.12-config*&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;python3 의 경우 우분투가 사용하는 버전&#xA;python 의 경우 내가 사용하는 버전&#xA;&lt;strong&gt;패키지 관리자&lt;/strong&gt;&#xA;get-pip.py 를 통해 설치&#xA;get-pip.py 의 경우 ~/.local 에 설치되며&#xA;변경시 get-pip 를 다시 실행해서 설치한다&lt;/p&gt;</description>
    </item>
    <item>
      <title>빌드(컴파일) 과정</title>
      <link>http://localhost:1313/02.inbox/%EB%B9%8C%EB%93%9C%EC%BB%B4%ED%8C%8C%EC%9D%BC-%EA%B3%BC%EC%A0%95/</link>
      <pubDate>Thu, 05 Jun 2025 10:26:11 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EB%B9%8C%EB%93%9C%EC%BB%B4%ED%8C%8C%EC%9D%BC-%EA%B3%BC%EC%A0%95/</guid>
      <description>&lt;h2 id=&#34;과정별-순서&#34;&gt;과정별 순서&lt;/h2&gt;&#xA;&lt;h2 id=&#34;요약&#34;&gt;요약&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240104121023.png&#34; alt=&#34; (Image resource not found)&#34; &gt;%20image%2020240104121023.png)&lt;/p&gt;&#xA;&lt;h2 id=&#34;전처리기&#34;&gt;전처리기&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;gcc -E program.c -o program.i&lt;/code&gt;&#xA;옵션 : &lt;code&gt;-E  Preprocess only; do not compile, assemble or link.&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;헤더 파일 삽입&lt;/strong&gt; : #include 지시문을 만나면 해당하는 헤더 파일을 찾아 &lt;strong&gt;헤더 파일에 있는 모든 내용을 복사해서 소스 코드에 삽입&lt;/strong&gt;한다. 즉, 헤더 파일은 컴파일에 사용되지 않고 소스 코드 파일 내에 전부 복사된다. 헤더 파일에 선언된 함수 원형은 후에 링킹 과정을 통해 실제로 함수가 정의되어 있는 오브젝트 파일(컴파일된 소스 코드 파일)과 결합한다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>c&#43;&#43; 입력함수</title>
      <link>http://localhost:1313/temp/c&#43;&#43;-%EC%9E%85%EB%A0%A5%ED%95%A8%EC%88%98/</link>
      <pubDate>Thu, 05 Jun 2025 06:16:41 +0900</pubDate>
      <guid>http://localhost:1313/temp/c&#43;&#43;-%EC%9E%85%EB%A0%A5%ED%95%A8%EC%88%98/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 정수  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; n;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cin &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; n;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 문자열  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;string str;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cin &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; str;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;&amp;lt;iostrem&amp;gt;&lt;/code&gt; 에 포함&lt;/li&gt;&#xA;&lt;li&gt;표준 입력 버퍼에서 개행문자를 제외한 값을 가져옴&lt;/li&gt;&#xA;&lt;li&gt;공백이나 개행입력시 공백 이전까지의 값만 결과로 받아드린다&lt;/li&gt;&#xA;&lt;li&gt;개행문자를 입력 버퍼에 남겨둔다&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;getline()함수는 두 가지가 존재하는데 각가 다른 라이브러리에 존재한다. istream 라이브러리에 속한 cin.getline()함수와 string 라이브러리에 속하는 getline()함수가 있다.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;istream 라이브러리의 cin.getline()&lt;/strong&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;문자 배열이며 마지막 글자가 ‘\0’(terminator)인 c-string을 입력 받는데 사용&lt;/li&gt;&#xA;&lt;li&gt;n-1개의 문자 개수만큼 읽어와 str에 저장 (n번째 문자는 NULL(‘\0’)로 바꾼다.)&lt;/li&gt;&#xA;&lt;li&gt;세 번째 인자인 delim은 별도로 지정해주지 않으면 엔터(‘\n’)로 인식&lt;/li&gt;&#xA;&lt;li&gt;delim을 지정해주면 그 제한자(delim)문자 직전까지 읽어서 str에 저장&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cin.getline(&lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; str, streamsize n);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cin.getline(&lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; str, streamsize n, &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; dlim);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;cin.getline(변수 주소, 최대 입력 가능 문자수, 종결 문자);&lt;br&gt;&#xA;ex) cin.getline(str, 100);&lt;/p&gt;</description>
    </item>
    <item>
      <title>mjuecs 2</title>
      <link>http://localhost:1313/06.university/mju_ecs-project/mjuecs-2/</link>
      <pubDate>Wed, 04 Jun 2025 16:11:54 +0900</pubDate>
      <guid>http://localhost:1313/06.university/mju_ecs-project/mjuecs-2/</guid>
      <description>&lt;h2 id=&#34;컨테이너-기반-컴퓨팅-제공-서비스-프로젝트-설계서&#34;&gt;컨테이너 기반 컴퓨팅 제공 서비스 프로젝트 설계서&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-개요&#34;&gt;1. 개요&lt;/h3&gt;&#xA;&lt;p&gt;본 문서는 AWS ECS(Elastic Container Service)와 유사한 사용자 맞춤형 컨테이너 기반 컴퓨팅 자원 제공 서비스를 구축하기 위한 상세 설계안을 기술한다. 사용자는 본 서비스를 통해 독립된 Docker 컨테이너 환경을 할당받아 원하는 애플리케이션을 실행할 수 있다.&lt;/p&gt;&#xA;&lt;p&gt;본 서비스의 가장 큰 기술적 특징은 데이터베이스(DB)의 역할을 &lt;strong&gt;사용자 인증 정보 관리에만 국한&lt;/strong&gt;하고, 컨테이너의 생성, 상태, 소유권 등 모든 운영 정보는 각 Docker 호스트로부터 실시간으로 조회하여 &lt;strong&gt;메인 API 서버(Python Flask)의 인메모리 캐시에 저장 및 관리&lt;/strong&gt;하는 것이다. 컨테이너와 사용자의 매핑은 &lt;strong&gt;엄격한 컨테이너 네이밍 규칙&lt;/strong&gt;을 통해 이루어진다. 이는 Docker 호스트의 실제 상태를 시스템의 유일한 진실 공급원(Source of Truth)으로 삼아 DB와 실제 상태 간의 불일치 가능성을 원천적으로 제거하려는 설계 의도를 반영한다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>mjuecs project 발전방향</title>
      <link>http://localhost:1313/06.university/mju_ecs-project/mjuecs-project-%EB%B0%9C%EC%A0%84%EB%B0%A9%ED%96%A5/</link>
      <pubDate>Wed, 04 Jun 2025 06:29:24 +0900</pubDate>
      <guid>http://localhost:1313/06.university/mju_ecs-project/mjuecs-project-%EB%B0%9C%EC%A0%84%EB%B0%A9%ED%96%A5/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;aws 의 ecs 서비스와 같이 컴퓨팅 을 제공&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;유저 정보만 db 에 기록하고 나머지는 모두 docker demon 에 요청 정보로 처리한다&#xA;유저 id 는 평문 저장&#xA;비밀번호는 암호화 저장&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;물리적 컴퓨터로 해당 서비스를 서비스한다&#xA;&lt;ol&gt;&#xA;&lt;li&gt;컴퓨터1 : db, python flask, nginx ,&lt;/li&gt;&#xA;&lt;li&gt;컴퓨터2 : docker 구동, host 상태 서버&lt;/li&gt;&#xA;&lt;li&gt;컴퓨터3 : docker 구동, host 상태 서버&lt;/li&gt;&#xA;&lt;li&gt;즉 2개의 프로젝트가 개발되어야 한다&#xA;&lt;ol&gt;&#xA;&lt;li&gt;매인 프로젝트 사용자별 docker 컨테이너 생성 조회 삭제 서비스 (어려움)&lt;/li&gt;&#xA;&lt;li&gt;host 의 상태 정보를 요청 받으면 보내주는 서비스 (쉬움)&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;python 웹서버  설정란에 docker host ip 를 적고 해당 ip 를 통해 컨테이너를 생성 조회 삭제를 한다&lt;/li&gt;&#xA;&lt;li&gt;3초에 한번씩 모든 docker 를 구성하는 host 컴퓨터들에게 요청을 보내서 메모리에 저장(캐시)&lt;br&gt;&#xA;사용자는 생성할때 마다 특정 규칙에 따라 생성한다 (ex 1인당 컨테이너 2개등등) 이때 저장된 캐시가 갱신된것을 확인하고 갱신됬으면 특정 규칙에 따라 검사하고 생성 허용을 할 지 안할지 정한다&lt;/li&gt;&#xA;&lt;li&gt;초기 사용자가 컨테이너를 생성할 때 여러개의 docker host 중에 적절한 서버를 고르고 해당 서버에서 컨테이너를 생성할 수 있도록 한다&lt;/li&gt;&#xA;&lt;li&gt;컨테이너 생성시에는 유저는 1번의 생성 요청이 끝나야 다른 생성 요청을 할 수 있다&lt;/li&gt;&#xA;&lt;li&gt;사용자별 컨테이너 자원제한&#xA;&lt;ol&gt;&#xA;&lt;li&gt;2cpu, 3memory, 50GB disk&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;하루에 한번씩 사용자들의 컨테이너를 검사하고 규칙에 따라 컨테이너를 정지할지 말지 고를 수 있다&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>Untitled</title>
      <link>http://localhost:1313/06.university/mju_ecs-project/untitled/</link>
      <pubDate>Wed, 04 Jun 2025 06:11:20 +0900</pubDate>
      <guid>http://localhost:1313/06.university/mju_ecs-project/untitled/</guid>
      <description>&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250513062286.png&#34; alt=&#34; (Image resource not found)&#34; &gt;%20image%2020250513062286.png)&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;[고건혁] [오전 1:16] 포워딩 방식을 지금 하려고 하니까 생각난 궁금증이 일단 ttyd컨테이너는 외부 접근을 차단하고 포워딩 방식으로 한다고 하면&lt;br&gt;&#xA;도커 컨테이너(커스텀컨테이너)에 대한 접근은 어떤 식으로 하는건가요?&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;아래 사진과 같은 방식중 첫번째 방식을 사용하려고 하였습니다&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250513064647.png&#34; alt=&#34;Pasted image 20250513064647 (Image resource not found)&#34; &gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;[고건혁] [오전 1:17] 포워딩 방식을 사용하는 이유가 단순히 다른 사용자가 남의 컨테이너에 접근하는데 그냥 localhost:9000치고 들어가버리면 안되니까 그런건데&lt;br&gt;&#xA;예를 들어서 ttyd웹 환경에서 안하고 다른사람이 남의 컨테이너 포트 번호를 아는상태에서 VsCode나 로컬 터미널 환경에서 접근하는건 어떻게 막는건가요?&lt;/p&gt;</description>
    </item>
    <item>
      <title>oracle database</title>
      <link>http://localhost:1313/06.university/mju_ecs-project/oracle-database/</link>
      <pubDate>Wed, 04 Jun 2025 06:11:19 +0900</pubDate>
      <guid>http://localhost:1313/06.university/mju_ecs-project/oracle-database/</guid>
      <description>&lt;h1 id=&#34;oracle-database-docker-컨테이너-가이드&#34;&gt;Oracle Database Docker 컨테이너 가이드&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;이미지 출처: &lt;a href=&#34;http://localhost:1313/Docker%20Hub&#34; class=&#34;internal-file-link&#34;&gt;gvenzl/oracle-xe (Docker Hub)&lt;/a&gt;)&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;1-컨테이너-생성&#34;&gt;1. 컨테이너 생성&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-1-템플릿-선택&#34;&gt;1-1. 템플릿 선택&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Oracle Database 11, 18, 21 중 하나를 선택합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;1-2-환경변수-설정&#34;&gt;1-2. 환경변수 설정&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;필수: &lt;code&gt;ORACLE_PASSWORD&lt;/code&gt; 환경변수에 &lt;strong&gt;관리자 비밀번호&lt;/strong&gt;를 입력&lt;/li&gt;&#xA;&lt;li&gt;나머지 변수는 선택&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;📷 예시&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250517080578.png&#34; alt=&#34; (Image resource not found)&#34; &gt;ed%20image%2020250517080578.png)&lt;/p&gt;&#xA;&lt;h3 id=&#34;1-3-컨테이너-정보-접근&#34;&gt;1-3. 컨테이너 정보 접근&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;컨테이너 정보 페이지로 이동합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;1-4-웹터미널-접근-준비&#34;&gt;1-4. 웹터미널 접근 준비&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;웹터미널 접근 비밀번호 복사&lt;/strong&gt; 버튼을 클릭하여 비밀번호를 복사&lt;/li&gt;&#xA;&lt;li&gt;이후 &lt;strong&gt;웹터미널 열기&lt;/strong&gt; 버튼 클릭&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;1-5-웹터미널-로그인&#34;&gt;1-5. 웹터미널 로그인&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;아이디&lt;/strong&gt;: 학번&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;비밀번호&lt;/strong&gt;: 위에서 복사한 &lt;strong&gt;웹터미널 접근 비밀번호&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;2-사용자-및-db-생성&#34;&gt;2. 사용자 및 DB 생성&lt;/h2&gt;&#xA;&lt;h3 id=&#34;변수-설명&#34;&gt;변수 설명&lt;/h3&gt;&#xA;&lt;p&gt;아래 명령어들에서 사용하는 변수들은 자신에게 맞게 대체합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>mjuecs ubuntu 문서</title>
      <link>http://localhost:1313/06.university/mju_ecs-project/mjuecs-ubuntu-%EB%AC%B8%EC%84%9C/</link>
      <pubDate>Wed, 04 Jun 2025 06:11:18 +0900</pubDate>
      <guid>http://localhost:1313/06.university/mju_ecs-project/mjuecs-ubuntu-%EB%AC%B8%EC%84%9C/</guid>
      <description>&lt;h1 id=&#34;-mjuecs-ubuntu-ubuntu-2204-기반-docker-컨테이너-가이드&#34;&gt;🐧 mjuecs ubuntu (Ubuntu 22.04 기반) Docker 컨테이너 가이드&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;이미지 출처: &lt;a href=&#34;http://localhost:1313/Docker%20Hub&#34; class=&#34;internal-file-link&#34;&gt;ubuntu (Docker Hub)&lt;/a&gt;)&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;1-컨테이너-생성&#34;&gt;1. 컨테이너 생성&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-1-템플릿-선택&#34;&gt;1-1. 템플릿 선택&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;mjuecs ubuntu&lt;/code&gt; 템플릿을 선택합니다.&lt;/li&gt;&#xA;&lt;li&gt;이 템플릿은 Ubuntu 22.04를 기반으로 하며, SSH 서버와 사용자 계정 생성 custom 이 되어 있습니다&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;1-2-환경변수-설정&#34;&gt;1-2. 환경변수 설정&lt;/h3&gt;&#xA;&lt;p&gt;컨테이너 생성 시 &lt;strong&gt;다음 환경변수를 설정&lt;/strong&gt;해야 합니다:&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;환경변수&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;ROOT_PASSWORD&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;루트 계정의 비밀번호 (예: &lt;code&gt;rootpass123&lt;/code&gt;)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;USERNAME&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;생성할 일반 사용자 계정명 (예: &lt;code&gt;student01&lt;/code&gt;)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;PASSWORD&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;해당 사용자 비밀번호 (예: &lt;code&gt;studentpass123&lt;/code&gt;)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;![Pasted image 202&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250523002975.png&#34; alt=&#34; (Image resource not found)&#34; &gt;3002975.png)&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;이 설정에 따라 컨테이너 최초 실행 시 자동으로 사용자 계정이 생성되고 sudo 권한이 부여됩니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>mjuecs-system-programming-ubuntu 이미지 설명</title>
      <link>http://localhost:1313/06.university/mju_ecs-project/mjuecs-system-programming-ubuntu-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EC%84%A4%EB%AA%85/</link>
      <pubDate>Wed, 04 Jun 2025 06:11:18 +0900</pubDate>
      <guid>http://localhost:1313/06.university/mju_ecs-project/mjuecs-system-programming-ubuntu-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EC%84%A4%EB%AA%85/</guid>
      <description>&lt;h1 id=&#34;mjuecs-system-programming-ubuntu-이미지-설명&#34;&gt;mjuecs-system-programming-ubuntu 이미지 설명&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;본 이미지는 mjuecs-ubuntu 이미지에서 system-programming 실습시 필요할 거 같은 패키지들을 추가로 설치해놓은 추가 변형 이미지 입니다 아래는 해당 패키지에 대한 설명이 추가 되어 있습니다.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;-시스템-프로그래밍을-위한-리눅스-패키지-목록&#34;&gt;📦 시스템 프로그래밍을 위한 리눅스 패키지 목록&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;패키지명&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;          &lt;th&gt;주요 용도&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;build-essential&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;C/C++ 컴파일 및 빌드에 필요한 핵심 도구 묶음&lt;/td&gt;&#xA;          &lt;td&gt;기본 개발 환경 구축&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;gcc&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;GNU C Compiler&lt;/td&gt;&#xA;          &lt;td&gt;C 언어 소스 코드 컴파일&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;g++&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;GNU C++ Compiler&lt;/td&gt;&#xA;          &lt;td&gt;C++ 언어 소스 코드 컴파일&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;make&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Makefile 기반 자동 빌드 도구&lt;/td&gt;&#xA;          &lt;td&gt;여러 파일로 구성된 프로젝트 빌드 관리&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;gdb&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;GNU Debugger&lt;/td&gt;&#xA;          &lt;td&gt;실행 중인 프로그램 디버깅 (변수, 메모리, 스택 등 확인)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;valgrind&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;메모리 디버깅 및 성능 분석 도구&lt;/td&gt;&#xA;          &lt;td&gt;메모리 누수, 잘못된 접근 감지&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;strace&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;시스템 콜 추적 도구&lt;/td&gt;&#xA;          &lt;td&gt;프로그램이 어떤 시스템 호출을 사용하는지 분석&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;ltrace&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;공유 라이브러리 함수 호출 추적&lt;/td&gt;&#xA;          &lt;td&gt;외부 라이브러리 함수 호출 내역 확인&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;pkg-config&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;라이브러리 정보 제공 도구&lt;/td&gt;&#xA;          &lt;td&gt;컴파일 시 필요한 옵션, 경로 등을 자동으로 불러옴&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;libssl-dev&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;OpenSSL 개발 라이브러리&lt;/td&gt;&#xA;          &lt;td&gt;SSL/TLS 관련 네트워크 프로그래밍에 필요&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;manpages-dev&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;개발자용 매뉴얼 페이지 (&lt;code&gt;man 2&lt;/code&gt;, &lt;code&gt;man 3&lt;/code&gt;)&lt;/td&gt;&#xA;          &lt;td&gt;시스템 콜과 C 라이브러리 함수 문서 제공&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-설치-명령어-예시&#34;&gt;💡 설치 명령어 예시:&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt update&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt install build-essential gcc g++ make gdb valgrind strace ltrace pkg-config libssl-dev manpages-dev&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-각-패키지의-활용-예시-간단히&#34;&gt;🔍 각 패키지의 활용 예시 (간단히)&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;패키지&lt;/th&gt;&#xA;          &lt;th&gt;예제 사용법&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;gcc&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;gcc hello.c -o hello&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;C 코드 컴파일&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;make&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;make all&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Makefile 기반 전체 빌드&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;gdb&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;gdb ./hello&lt;/code&gt; → &lt;code&gt;run&lt;/code&gt;, &lt;code&gt;break main&lt;/code&gt;, &lt;code&gt;step&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;디버깅 시작, 중단점 설정 등&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;valgrind&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;valgrind --leak-check=yes ./hello&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;메모리 누수 체크&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;strace&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;strace ./hello&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;실행 중 시스템 콜 확인&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;ltrace&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;ltrace ./hello&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;외부 라이브러리 함수 호출 보기&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;pkg-config&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;gcc prog.c -o prog $(pkg-config --cflags --libs openssl)&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;OpenSSL 사용 시 편리한 컴파일 옵션 자동 삽입&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;manpages-dev&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;man 2 read&lt;/code&gt; 또는 &lt;code&gt;man 3 printf&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;시스템 콜(&lt;code&gt;read&lt;/code&gt;)이나 라이브러리 함수(&lt;code&gt;printf&lt;/code&gt;) 설명 보기&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;</description>
    </item>
    <item>
      <title>mjuecs 프로젝트</title>
      <link>http://localhost:1313/06.university/mju_ecs-project/mjuecs-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8/</link>
      <pubDate>Wed, 04 Jun 2025 06:11:17 +0900</pubDate>
      <guid>http://localhost:1313/06.university/mju_ecs-project/mjuecs-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8/</guid>
      <description>&lt;p&gt;mux&lt;/p&gt;&#xA;&lt;h3 id=&#34;프로젝트-개요&#34;&gt;프로젝트 개요&lt;/h3&gt;&#xA;&lt;p&gt;mju_ecs는 명지대 학생들을 대상으로 컨테이너 컴퓨팅 자원을 빌려주는 서비스 입니다.&lt;br&gt;&#xA;aws  의 컨테이너 서비스인 ecs 서비스와 일정 부분 비슷하지만 무료 유료 부분, 규모에서 차이가 있습니다&lt;/p&gt;&#xA;&lt;h2 id=&#34;-docker-api-컨테이너-상태stats-실시간-보기&#34;&gt;📈 docker api 컨테이너 상태(Stats) 실시간 보기&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl --unix-socket /var/run/docker.sock http://localhost:2375/containers/&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;containerId&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;/stats&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;CPU 사용률, 메모리, 네트워크 I/O, 디스크 I/O 등의 실시간 데이터를 스트리밍 방식으로 반환합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;로컬에서 Docker API 사용해보기 (Unix 소켓 기반):&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 컨테이너 목록 보기&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl --unix-socket /var/run/docker.sock http://localhost/containers/json&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 특정 컨테이너 로그 보기&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl --unix-socket /var/run/docker.sock http://localhost/containers/my_container/logs?stdout&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 컨테이너 시작&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl -X POST --unix-socket /var/run/docker.sock http://localhost/containers/my_container/start&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;배포&#34;&gt;배포&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;사용자가 docker 그룹에 존재하는가&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo usermod -aG docker $USER&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;my-ttyd-docker 이미지가 존재하는가 =&amp;gt;  &lt;code&gt;docker build -t my-ttyd-docker .&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>mju ecs 해야할 것</title>
      <link>http://localhost:1313/06.university/mju_ecs-project/mju-ecs-%ED%95%B4%EC%95%BC%ED%95%A0-%EA%B2%83/</link>
      <pubDate>Wed, 04 Jun 2025 06:11:13 +0900</pubDate>
      <guid>http://localhost:1313/06.university/mju_ecs-project/mju-ecs-%ED%95%B4%EC%95%BC%ED%95%A0-%EA%B2%83/</guid>
      <description>&lt;h3 id=&#34;수정사항&#34;&gt;수정사항&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;PortAllocator (포트 배정 서비스 추가)&lt;/li&gt;&#xA;&lt;li&gt;단순 http 요청 docker status 추가&lt;/li&gt;&#xA;&lt;li&gt;용어 정리 (용어 혼재 사용)&#xA;&lt;ol&gt;&#xA;&lt;li&gt;hostPort -&amp;gt; containerPo&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250502160404.png&#34; alt=&#34; (Image resource not found)&#34; &gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;미해결-과제&#34;&gt;미해결 과제&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;포트 연결시 TCP 인지 UDP 인지도 선택여부에 두어야 하는가?&lt;/li&gt;&#xA;&lt;li&gt;컨테이너 삭제시 ttyd 또한 삭제가 필요 현재는 그대로 방치됨&lt;/li&gt;&#xA;&lt;li&gt;도커 볼륨 관련&lt;/li&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;현재 container.js 에서 너무 많은 일을 하고 있어&#xA;new_container.js 와 container.js 로 분리해줘&lt;/p&gt;&#xA;&lt;h3 id=&#34;container-table-과-ttyd-table&#34;&gt;container table 과 ttyd table&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;container table 과 ttyd table 2개로 분리할 필요 없이 1개의 테이블에 있어도 되는 거 아닌가? (실시간 status 시)&lt;/li&gt;&#xA;&lt;li&gt;  tydContainerId;                                   //ttyd 컨테이너 ID&lt;br&gt;&#xA;private String ttydHostPort;              //ttyd 호스트 포트&lt;br&gt;&#xA;// ttyd 컨테이너의 컨테이너 포트의 경우 고정되어 있으므로 필요 없음&#xA;필요 status&lt;/li&gt;&#xA;&lt;li&gt;status 에 ttyd 접근 포트 필요함&lt;/li&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;나&#34;&gt;나&lt;/h3&gt;&#xA;&lt;p&gt;ttyd 실행시 포트 설정 =&amp;gt; 직접 포트 접근 막기&lt;br&gt;&#xA;&lt;a href=&#34;https://chat.qwen.ai/c/633a43de-01b2-4739-abbd-13139669c810&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;https://chat.qwen.ai/c/633a43de-01b2-4739-abbd-13139669c810&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>03-FILE IO</title>
      <link>http://localhost:1313/06.university/system-programminguniversity/03-file-io/</link>
      <pubDate>Tue, 03 Jun 2025 09:59:32 +0900</pubDate>
      <guid>http://localhost:1313/06.university/system-programminguniversity/03-file-io/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;open()&lt;/li&gt;&#xA;&lt;li&gt;creat()&lt;/li&gt;&#xA;&lt;li&gt;close()&lt;/li&gt;&#xA;&lt;li&gt;read()&lt;/li&gt;&#xA;&lt;li&gt;write()&lt;/li&gt;&#xA;&lt;li&gt;lseek()&lt;/li&gt;&#xA;&lt;li&gt;Disk&lt;/li&gt;&#xA;&lt;li&gt;I/O efficiency&lt;/li&gt;&#xA;&lt;li&gt;dup(), dup2()&lt;/li&gt;&#xA;&lt;li&gt;stat(), fstat(), lstat()&lt;/li&gt;&#xA;&lt;li&gt;access()&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;파일 디스크립터&#xA;프로세스가 실행될때 기본적으로 여는 파일은 3개 각각 0(STDIN), 1(STDOUT) ,2(STDERR)&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;man -s 2 open : 과 같이 메뉴얼 파일을 볼 수 있다&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;open&#34;&gt;open&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;open&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;pathname, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; flags);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;open&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;pathname, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; flags, &lt;span style=&#34;color:#66d9ef&#34;&gt;mode_t&lt;/span&gt; mode);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;int open (const char *pathname, int flags);&#xA;int open (const char *pathname, int flags, mode_t mode);&#xA;파일 디스크립터 값을 반환 -1 은 실패&lt;/p&gt;</description>
    </item>
    <item>
      <title>university operating system quiz</title>
      <link>http://localhost:1313/06.university/os/university-operating-system-quiz/</link>
      <pubDate>Tue, 03 Jun 2025 06:40:43 +0900</pubDate>
      <guid>http://localhost:1313/06.university/os/university-operating-system-quiz/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;pcb(process control block) 에 포함된 정보&#xA;&lt;ul&gt;&#xA;&lt;li&gt;process state&lt;/li&gt;&#xA;&lt;li&gt;process number&lt;/li&gt;&#xA;&lt;li&gt;program counter and registers&lt;/li&gt;&#xA;&lt;li&gt;memory limits&lt;/li&gt;&#xA;&lt;li&gt;list of open files&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;6주차&#34;&gt;6주차&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;CPU를 연속적으로 사용하는 시간을 CPU burst 라고 한다&lt;/li&gt;&#xA;&lt;li&gt;스케줄링 알고리즘의 목적으로 바람직한것&#xA;&lt;ul&gt;&#xA;&lt;li&gt;cpu 사용율을 최대화&lt;/li&gt;&#xA;&lt;li&gt;throughput 을 최대화&lt;/li&gt;&#xA;&lt;li&gt;average wating time 최대화&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;스케줄링에 대해 맞는것&#xA;&lt;ul&gt;&#xA;&lt;li&gt;preemtive 는 강제 중단 가능 non-preemtive 는 강제 중단 불가능&lt;/li&gt;&#xA;&lt;li&gt;최근 운영체제는 preemtive 를 주로 사용&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;non-preemtive 알고리즘&#xA;&lt;ul&gt;&#xA;&lt;li&gt;SJF&lt;/li&gt;&#xA;&lt;li&gt;FCFS&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;non-preemtive 에서 가장 average wating time 이 가장 작은 것은 shortest job first&lt;/li&gt;&#xA;&lt;li&gt;exponential moving average&#xA;&lt;ul&gt;&#xA;&lt;li&gt;과거의 데이터가 현재의 값에 영향을 미치고 최근 데이터가 더 영향이 더 큰 경우에 사용한다&lt;/li&gt;&#xA;&lt;li&gt;값의 변화의 추이를 예측하는 데 사용된다&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;preemtive 스케줄링&#xA;&lt;ul&gt;&#xA;&lt;li&gt;SRTF&lt;/li&gt;&#xA;&lt;li&gt;Priorty&lt;/li&gt;&#xA;&lt;li&gt;Round Robin&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;priorty 스케줄링의 단점 =&amp;gt; starvation, 기아&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;7주차&#34;&gt;7주차&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;멀티레벨 queue 스케줄링에서는 각 큐가 일정비율로 CPU 를 할당받는다 =&amp;gt; True&lt;/li&gt;&#xA;&lt;li&gt;process aging 을 구현할 수 있는 스케줄링 방법 =&amp;gt; multilevel feedback queue 스케줄링&lt;/li&gt;&#xA;&lt;li&gt;윈도우는 preemptive scheduling 을 사용&lt;/li&gt;&#xA;&lt;li&gt;동시성 문제에 대해 맞는것&#xA;&lt;ul&gt;&#xA;&lt;li&gt;두개이상의 프로세스가 같은 리소스를 동시에 접근하려 할 때 발생&lt;/li&gt;&#xA;&lt;li&gt;CPU 코어가 하나인 경우에도 발생한다&lt;/li&gt;&#xA;&lt;li&gt;race condition 때문에 발생하기도 한다&lt;/li&gt;&#xA;&lt;li&gt;critical section problem 으로 이해 할 수 있다&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;동시성 문제는 프로세스가 같은 변수를 동시에 읽으려고 할 때도 발생한다 =&amp;gt; False&lt;/li&gt;&#xA;&lt;li&gt;critical section 은 하나의 프로세스만 들어갈 수 있다는 조건은 mutual exclution&lt;/li&gt;&#xA;&lt;li&gt;critical section에 아무도 없는데 계속 대기하는 상황은 Progress&lt;/li&gt;&#xA;&lt;li&gt;critical section 문제를 해결하고자 할때 Mutual exclution 을 만족하지 못하는 이유&#xA;&lt;ul&gt;&#xA;&lt;li&gt;locked = 0 or 1 lock 방식 알고리즘의 경우 여러 프로세스가 동시에 critical section에 들어 갈 수 있기 때문&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;9주차&#34;&gt;9주차&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;lock 방식은 mutual exclusion, bounded Waiting 만족하지 못한다&lt;/li&gt;&#xA;&lt;li&gt;peterson solution의 한계는 critical section problem 이 이미 해결되었다고 가정한 후에 풀었다&lt;/li&gt;&#xA;&lt;li&gt;critical section problem 를 해결하기 위해 interrupt 를 비활성화 하는 방법의 한계는 cpu 가 여러개인 경우 적용할 수 없고 결국 시스템의 성능이 저하된다&lt;/li&gt;&#xA;&lt;li&gt;semaphore 접근을 위해 들어갈때 wait, 나갈 때 signal 을 부른다&lt;/li&gt;&#xA;&lt;li&gt;semaphore 가 critical section 에 들어가기 위해 지속적으로 semaphore 의 현재값을 체크 할 수 있다 이것을 busy-wating(spin lock) 이라고 한다&lt;/li&gt;&#xA;&lt;li&gt;semaphore 의 값이 -2 일 때 대기자 리스트에 2개의 프로세스가 대기중이다&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;중간고사&#34;&gt;중간고사&lt;/h3&gt;&#xA;&lt;p&gt;폰 노이만 구조가 이전과 다른점 : 코드영역(program)이 하드웨어가 아닌 메모리로 올라간다(소프트웨어 개념의 탄생)&lt;br&gt;&#xA;캐쉬를 통해 성능 향상이 가능한 이유 : priciple of locality : 비슷한 시간에 지역적으로 접근한다&lt;/p&gt;</description>
    </item>
    <item>
      <title>university network</title>
      <link>http://localhost:1313/06.university/network/university-network/</link>
      <pubDate>Tue, 03 Jun 2025 06:40:40 +0900</pubDate>
      <guid>http://localhost:1313/06.university/network/university-network/</guid>
      <description>&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250318161430.png&#34; alt=&#34; (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;전송-4계층&#34;&gt;전송 4계층&lt;/h2&gt;&#xA;&lt;h3 id=&#34;tcp&#34;&gt;TCP&lt;/h3&gt;&#xA;&lt;h3 id=&#34;3계층&#34;&gt;3계층&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;FCFS&lt;/li&gt;&#xA;&lt;li&gt;Priority&lt;/li&gt;&#xA;&lt;li&gt;RR(round robin)&lt;/li&gt;&#xA;&lt;li&gt;weighted fair&lt;/li&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;network neutality ( 망 중립성 )&lt;br&gt;&#xA;각 ISP 각 자원을 어떻게 분배할 것인가?&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;protecting free speech&lt;/li&gt;&#xA;&lt;li&gt;encouraging innovation, compatition&lt;/li&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;link s&lt;/p&gt;&#xA;&lt;h3 id=&#34;chapter4&#34;&gt;chapter4&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;보장된 전달&lt;/li&gt;&#xA;&lt;li&gt;지연 제한 이내의 보장된 전달&lt;/li&gt;&#xA;&lt;li&gt;순서화 패킷 전달&lt;/li&gt;&#xA;&lt;li&gt;최소 대역폭 보장&lt;/li&gt;&#xA;&lt;li&gt;보안 서비스&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>university network quiz</title>
      <link>http://localhost:1313/06.university/network/university-network-quiz/</link>
      <pubDate>Tue, 03 Jun 2025 06:40:39 +0900</pubDate>
      <guid>http://localhost:1313/06.university/network/university-network-quiz/</guid>
      <description>&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250313150667.png&#34; alt=&#34; (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250320150681.jpg&#34; alt=&#34;Pasted image 20250320150681 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250327150571.png&#34; alt=&#34;Pasted image 20250327150571 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;5번은 iterated query, recursive query 를 사용&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250403150631.png&#34; alt=&#34;Pasted image 20250403150631 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250410150653.jpg&#34; alt=&#34;Pasted image 20250410150653 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250424150824.jpg&#34; alt=&#34;Pasted image 20250424150824 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;중간고사&#34;&gt;중간고사&lt;/h3&gt;&#xA;&lt;p&gt;ack, nak : 비트 에러 대비용&#xA;seq : 순서 확인용&#xA;timeout : 패킷 손실 대비용&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;tcp 에서 timeout 이 발생하면 timeout 이 발생한 패킷만 재전송한다( 잘 도착한 패킷은 버퍼링하기 때문에 필요없음 )&lt;/li&gt;&#xA;&lt;li&gt;GBN, SR 의 원형은 받은 패킷번호를 ack vs TCP 는 받고난후 다음에 받을 패킷번호를 ack&lt;/li&gt;&#xA;&lt;li&gt;TCP RENO&lt;/li&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250508150413.png&#34; alt=&#34;Pasted image 20250508150413 (Image resource not found)&#34; &gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>university machine leaning</title>
      <link>http://localhost:1313/06.university/university-machine-leaning/</link>
      <pubDate>Tue, 03 Jun 2025 06:40:37 +0900</pubDate>
      <guid>http://localhost:1313/06.university/university-machine-leaning/</guid>
      <description>&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250314104746.png&#34; alt=&#34;Pasted image 20250314104746 (Image resource not found)&#34; &gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250314104833.png&#34; alt=&#34;Pasted image 20250314104833 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;T task : 해야할 작업&lt;/li&gt;&#xA;&lt;li&gt;E experience : 학습&lt;/li&gt;&#xA;&lt;li&gt;P performance : 작업 성능&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;머신러닝-분류&#34;&gt;머신러닝 분류&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;기준1: 사람의 지도/감독 여부 (학습하는 동안 감독의 형태나 주어지는 정보량에 따른 분류)&#xA;&lt;ul&gt;&#xA;&lt;li&gt;지도(Supervised) : 레이블(타겟) 이 포함&#xA;분류(classification), 회귀(regression) 정답이 포함되어 있는가&lt;/li&gt;&#xA;&lt;li&gt;비지도(unsupervised) :  : 레이블이 없는 훈련 데이터 :&#xA;군집(Clustering), 시각화(Visualization), 차원 축소(Dimensionality Reduction), 이상 탐지(Anomaly Detection), 이상 탐지(Anomaly Detection), 연관 규칙 학습(Association Rule Learning)&lt;/li&gt;&#xA;&lt;li&gt;준지도(semi-supervised) : 지도 + 비지도&lt;/li&gt;&#xA;&lt;li&gt;강화(reinforcement)학습 : 학습에 대한 피드백 제공&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;기준2 : 실시간으로 주어지는 데이터에 대한 점진적인 학습 가능 여부&#xA;&lt;ul&gt;&#xA;&lt;li&gt;온라인 학습 vs 배치 학습&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;기준3 : 훈련을 통해 알고 있는 데이터 포인트와 새로운 데이터 포인트를 비교하는 방식인지, 아니면 훈련 데이터셋에서 패턴을 발견하고 그에 기반한 예측 모델을 만드는 것인지&#xA;&lt;ul&gt;&#xA;&lt;li&gt;사례 기반 학습 vs 모델 기반 학습&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h4 id=&#34;세부&#34;&gt;세부&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;분류&lt;/li&gt;&#xA;&lt;li&gt;회귀 : 중고자 가격 예측&lt;/li&gt;&#xA;&lt;li&gt;군집 : 비슷한 특징을 가진 그룹으로 나누는 것 (분류과 다른점은 레이블이 없다) :  k-means, DBSCAN, 계층 군집 분석&lt;/li&gt;&#xA;&lt;li&gt;시각화 : 레이블이 없는 고차원(여러 특성(feature)들로 이루어진) 데이터를 분석하여 도식화가 가능한 2D 또는 3D 표현을 만들어줌&lt;/li&gt;&#xA;&lt;li&gt;차원 축소 : original information의 손실을 최소화 하면서 데이터의 차원(특성)을 줄이기&#xA;ex) 상관관계가 높은 자동차의 주행거리과 연식을 “마모 정도”라는 하나의 특성으로 합침&lt;/li&gt;&#xA;&lt;li&gt;이상 탐지 : 정상 샘플들을 이용하여 머신러닝 모델 훈련 후 주어진 새로운 샘플의 정상 여부를 판단&lt;/li&gt;&#xA;&lt;li&gt;특이치 탐지(Novelty Detection) : 전혀 오염되지 않은 clean 훈련 데이터 학습 후 학습된 훈련 데이터와 달라 보이는 데이터 탐지&lt;/li&gt;&#xA;&lt;li&gt;연관 규칙 학습(Association Rule Learning) :  특성 간 흥미로운 관계 찾기&#xA;마트 판매 기록 데이터에 대해 연관 규칙 학습 적용 예) 바비큐 소스와 감자를 구매한 고객이 스테이크도 구매하는 경향을 찾아냄&lt;/li&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;군집과 vs 시각화의 다른점&#xA;이상탐지 vs 특이치 탐지&#xA;&lt;strong&gt;특이치 탐지&lt;/strong&gt; 는 &amp;ldquo;강아지 vs. 고양이&amp;quot;처럼 명확한 범주 분류&#xA;&lt;strong&gt;이상 탐지&lt;/strong&gt; 는 &amp;ldquo;대부분의 강아지와 다른 특이한 사례&amp;rdquo;&lt;/p&gt;</description>
    </item>
    <item>
      <title>network 2차 과제</title>
      <link>http://localhost:1313/06.university/network/network-2%EC%B0%A8-%EA%B3%BC%EC%A0%9C/</link>
      <pubDate>Tue, 03 Jun 2025 06:40:34 +0900</pubDate>
      <guid>http://localhost:1313/06.university/network/network-2%EC%B0%A8-%EA%B3%BC%EC%A0%9C/</guid>
      <description>&lt;h1 id=&#34;-http-09--http-11-까지-알아보는-통신-기술&#34;&gt;🌐 HTTP 0.9 ~ HTTP 1.1 까지 알아보는 통신 기술&lt;/h1&gt;&#xA;&lt;p&gt;&#xA;    &lt;img src=&#34;https://blog.kakaocdn.net/dn/I329S/btrRAEMQ1Dz/IuWfVfCOB3YfS3p4fdKffK/img.webp&#34; alt=&#34;http-protocol-history&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;img src=&#34;https://blog.kakaocdn.net/dn/bQsfWU/btrRvIfmfVi/S0NlKDy59R89HKGvKeaKf0/img.png&#34; alt=&#34;http-0.9&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;HTTP의 시작은 1989년 **팀 버너 리(Tim Berners-LEE)**에 의해 제안된 인터넷의 하이퍼 텍스트 시스템이다.&lt;/p&gt;&#xA;&lt;p&gt;초기 버전인 HTTP/0.9는 매우 단순한 프로토콜이었다.&lt;/p&gt;&#xA;&lt;p&gt;가능한 메서드는 하이퍼텍스트 문서(html)를 가져오기만 하는 &lt;strong&gt;GET 동작&lt;/strong&gt;이 유일했으며, 헤더(header)도 없어 요청과 응답이 극히 단순 명료 하였다. 또한 상태 코드(status code)도 없었기 때문에 문제가 발생한 경우 특정 html 파일을 오류에 대한 설명과 함께 보내졌다.&lt;/p&gt;&#xA;&lt;p&gt;&#xA;    &lt;img src=&#34;https://blog.kakaocdn.net/dn/zcPzC/btrRjpAv0BS/aB1y8CKT5GTTfj5KcbeDvK/img.png&#34; alt=&#34;http-0.9&#34; &gt;&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;HTML&amp;gt;&#xA;A very simple HTML page&#xA;&amp;lt;/HTML&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;HTTP 0.9 스펙을 요약하면 다음과 같다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>mjuecs 최종 발표</title>
      <link>http://localhost:1313/06.university/mju_ecs-project/mjuecs-%EC%B5%9C%EC%A2%85-%EB%B0%9C%ED%91%9C/</link>
      <pubDate>Tue, 03 Jun 2025 06:40:30 +0900</pubDate>
      <guid>http://localhost:1313/06.university/mju_ecs-project/mjuecs-%EC%B5%9C%EC%A2%85-%EB%B0%9C%ED%91%9C/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;실제 시연 =&amp;gt; oracle database 연결, 김직수 교수 클라우드 등등&lt;/li&gt;&#xA;&lt;li&gt;기술적 검토&#xA;&lt;ol&gt;&#xA;&lt;li&gt;로그인시 명지대 서버와 통신하는 과정&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;법적 검토 =&amp;gt; 최근 skt 보안 사고로 인해 이것을 조금 확실하게 따질 필요가 있어 보임&#xA;&lt;ol&gt;&#xA;&lt;li&gt;실제 프로덕트를 운영하더라도 수익이 없고 학생들이 한 프로젝트를 제제하는 경우는 잘 없음(세종대) 하지만 초기에는 학번만 저장하면 실제 서비스해도 법적인 문제가 발생하지 않을 것이라는 생각을 하였음&lt;/li&gt;&#xA;&lt;li&gt;현제 해당 프로젝트는 학교의 비밀번호 아이디를 입력하여 로그인 할 수 있도록 만들어 두었음&lt;/li&gt;&#xA;&lt;li&gt;비밀번호의 경우 당연히 민감한 개인정보라고 생각하여 초기 설계부터 완전히 저장하지 않는 방향으로 설계하였음 하지만 학교의 학번이 민감한 개인정보인 경우 이것이 법적으로 문제가 될수 있다는 생각을 하였고 해당하는 학교에 로그인이 가능한 프로젝트를 구현한 세종대 github 프로젝트(sejong-univ-auth) 에 직접 질문을 통해 법적 내용을 공유받아 해당 내용을 공유하려고함&lt;/li&gt;&#xA;&lt;li&gt;실제로 내가 질문한 내용&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250602150647-1748846267271-image.png&#34; alt=&#34; (Image resource not found)&#34; &gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/iml1111/sejong-univ-auth/issues/21&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;이슈&lt;/a&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250602150621-1748846301131-image.png&#34; alt=&#34; (Image resource not found)&#34; &gt;&lt;/li&gt;&#xA;&lt;li&gt;접근방식 제공모듈 자체는 개인정보 처리자로 인식되지 않아 상관없지만 해당 모듈(방법론)을 사용하여 프로젝트를 진행할 경우 개인정보 처리자로 인식이 되며 관련 법규에 대한 제제를 받는다&lt;/li&gt;&#xA;&lt;li&gt;서비스 사업자는 개인정보 법률 및 해당대학교 이용약관 보안정책에 대한 이행의무를 가진다&#xA;&lt;ol&gt;&#xA;&lt;li&gt;현재 학번을 database 평문저장하고 있음&lt;/li&gt;&#xA;&lt;li&gt;개인정보 법률 -&amp;gt; 정확한 판단이 불가&#xA;&lt;ol&gt;&#xA;&lt;li&gt;아이디 -&amp;gt; github  등 여러가지 사이트가 이미 아이디를 공개적인 검색으로 사용&lt;/li&gt;&#xA;&lt;li&gt;학번 단독으로 저장되었는데 이 경우 개인정보로 보아도 되는가?&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;실제 명지대 보안 정책 -&amp;gt; 학교의 보안정책은 괜찮다&#xA;&lt;ol&gt;&#xA;&lt;li&gt;3장 6조 1항 &#xA;&lt;ol&gt;&#xA;&lt;li&gt;학교는 이용자가 이 약관의 의무를 위반하거나 서비스의 정상적인 운영을 방해한 경우, 경고, 일시정지, 영구이용정지 등으로 서비스 이용을 단계적으로 제한할 수 있다.&lt;/li&gt;&#xA;&lt;li&gt;동일 계정으로 계속 요청을 하면 일정 시간(10분) 자동으로 막힘으로 고려할 필요가 없다&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;3장 9조 5항 아호&#xA;&lt;ol&gt;&#xA;&lt;li&gt;학교의 동의 없이 영리를 목적으로 서비스를 사용하는 행위&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;해당 법적인 검토를 통해 실제 프로덕션 상황에서 실제 어떠한 문제가 발생할 수 있는지 간접적인 경험이 되었음&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>4계층 네트워크 계층 (network)</title>
      <link>http://localhost:1313/06.university/network/4%EA%B3%84%EC%B8%B5-%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EA%B3%84%EC%B8%B5-network/</link>
      <pubDate>Tue, 03 Jun 2025 06:14:10 +0900</pubDate>
      <guid>http://localhost:1313/06.university/network/4%EA%B3%84%EC%B8%B5-%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EA%B3%84%EC%B8%B5-network/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;data plain : 단일 기기에서 어떤 input -&amp;gt; output&lt;/li&gt;&#xA;&lt;li&gt;control plain : 라우팅 , 전체 경로 결정&#xA;&lt;ul&gt;&#xA;&lt;li&gt;전통적 방법&lt;/li&gt;&#xA;&lt;li&gt;SDN&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;hello world&lt;br&gt;&#xA;dhll eowld&lt;br&gt;&#xA;hello world&lt;/p&gt;&#xA;&lt;p&gt;hello world&lt;/p&gt;&#xA;&lt;h3 id=&#34;data-plain&#34;&gt;DATA PLAIN&lt;/h3&gt;</description>
    </item>
    <item>
      <title>3장 트랜스포트 계층 (transport)</title>
      <link>http://localhost:1313/06.university/network/3%EC%9E%A5-%ED%8A%B8%EB%9E%9C%EC%8A%A4%ED%8F%AC%ED%8A%B8-%EA%B3%84%EC%B8%B5-transport/</link>
      <pubDate>Tue, 03 Jun 2025 06:14:08 +0900</pubDate>
      <guid>http://localhost:1313/06.university/network/3%EC%9E%A5-%ED%8A%B8%EB%9E%9C%EC%8A%A4%ED%8F%AC%ED%8A%B8-%EA%B3%84%EC%B8%B5-transport/</guid>
      <description>&lt;p&gt;packet 이름 : segment&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;udp 의 패킷을 특수하게 네트워크 계층에서 사용하는 패킷의 이름인 datagram 이라는 이름을 사용할 때도 있다&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;개괄&#34;&gt;개괄&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;udp, tcp 공통 기능&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;프로세스대 프로세드 데이터 전달(multiplexing, demultiplexing)&lt;/li&gt;&#xA;&lt;li&gt;오류 검출(check sum)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;tcp 특수 기능&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;신뢰적인 데이터 전송&#xA;&lt;ul&gt;&#xA;&lt;li&gt;흐름제어&lt;/li&gt;&#xA;&lt;li&gt;순서번호&lt;/li&gt;&#xA;&lt;li&gt;확인응답&lt;/li&gt;&#xA;&lt;li&gt;타이머&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;혼잡제어&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;프로세스대-프로세드-데이터&#34;&gt;프로세스대 프로세드 데이터&lt;/h3&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250408120817.png&#34; alt=&#34; (Image resource not found)&#34; &gt;&#xA;트랜스포트 계층 다중화, 역 다중화 : 호스트대 호스트 전달을 프로세스대 프로세스 전달로 확장하는 과정&lt;/p&gt;&#xA;&lt;p&gt;네트워크 소켓의 식별자 포멧&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;transport -&amp;gt; socket (-&amp;gt; application(process)) : depmultiplexing 적절한 소켓으로 데이터를 전송 : 분리하는 과정&lt;/li&gt;&#xA;&lt;li&gt;socket -&amp;gt; transport (-&amp;gt; network) : multiplexing 소켓으로 부터 받은 데이터를 패킷화(segment) 해서 아래 계층으로 보낸다&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;udp 식별자&lt;/p&gt;</description>
    </item>
    <item>
      <title>프로세스 생성</title>
      <link>http://localhost:1313/%EC%8B%A4%EC%8A%B5%EC%9C%BC%EB%A1%9C-%EB%B0%B0%EC%9A%B0%EB%8A%94-%EB%A6%AC%EB%88%85%EC%8A%A4-%EA%B5%AC%EC%A1%B0/%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-%EC%83%9D%EC%84%B1/</link>
      <pubDate>Tue, 03 Jun 2025 06:11:53 +0900</pubDate>
      <guid>http://localhost:1313/%EC%8B%A4%EC%8A%B5%EC%9C%BC%EB%A1%9C-%EB%B0%B0%EC%9A%B0%EB%8A%94-%EB%A6%AC%EB%88%85%EC%8A%A4-%EA%B5%AC%EC%A1%B0/%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-%EC%83%9D%EC%84%B1/</guid>
      <description>&lt;p&gt;프로세스는 두가지 목적으로 생성한다&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;fork() : 다중 프로세스 프로그램 사용 =&amp;gt; 현재 프로세스의 메모리 복사 다른 프로세스로 등록&lt;/li&gt;&#xA;&lt;li&gt;execve() : 다른 프로그램 실행용( bash 에서 실행할 때 ) =&amp;gt; 현재 프로세스의 메모리를 새로운 프로세스의 메모리로 덮어 쓴다&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;프로세스가 운영체제에게 부여받은 메모리 구조&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240304174149.png&#34; alt=&#34; (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;실행파일&#34;&gt;실행파일&lt;/h2&gt;&#xA;&lt;p&gt;실행파일은 리눅스에서는 ELF (excutable linkable format) 형식이며&#xA;readelf -h {실행파일 명}&#xA;readelf -S {실행파일 명}&#xA;으로 사용 가능하다&lt;/p&gt;</description>
    </item>
    <item>
      <title>주소 바인딩 실습(소스코드 부터 프로세스까지)</title>
      <link>http://localhost:1313/02.inbox/%EC%A3%BC%EC%86%8C-%EB%B0%94%EC%9D%B8%EB%94%A9-%EC%8B%A4%EC%8A%B5%EC%86%8C%EC%8A%A4%EC%BD%94%EB%93%9C-%EB%B6%80%ED%84%B0-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%EA%B9%8C%EC%A7%80/</link>
      <pubDate>Tue, 03 Jun 2025 05:44:08 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EC%A3%BC%EC%86%8C-%EB%B0%94%EC%9D%B8%EB%94%A9-%EC%8B%A4%EC%8A%B5%EC%86%8C%EC%8A%A4%EC%BD%94%EB%93%9C-%EB%B6%80%ED%84%B0-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%EA%B9%8C%EC%A7%80/</guid>
      <description>&lt;h2 id=&#34;주소-바인딩address-binding-과정-심층-분석&#34;&gt;주소 바인딩(Address Binding) 과정 심층 분석&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-주소-바인딩의-개념과-목적&#34;&gt;1. 주소 바인딩의 개념과 목적&lt;/h3&gt;&#xA;&lt;p&gt;**주소 바인딩(Address Binding)**이란 프로그램의 소스 코드에 사용된 변수나 함수 같은 심볼릭 주소(Symbolic Address)가 실제 물리 메모리(Physical Memory)의 주소로 변환되는 전체 과정을 의미합니다. 이 과정은 컴퓨터가 프로그램을 실행하기 위한 핵심적인 메커니즘입니다.&lt;/p&gt;&#xA;&lt;h4 id=&#34;목적&#34;&gt;목적&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;재배치(Relocation)&lt;/strong&gt;: 프로그램을 메모리의 어느 위치에든 적재하여 실행할 수 있도록 합니다. 만약 주소가 고정되어 있다면 여러 프로그램을 동시에 실행하기 어렵습니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;메모리 보호(Memory Protection)&lt;/strong&gt;: 각 프로세스가 자신에게 할당된 메모리 영역만 접근하도록 격리하여 시스템의 안정성을 높입니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;메모리 효율성 증대&lt;/strong&gt;: 가상 메모리(Virtual Memory), 공유 라이브러리(Shared Library) 등의 기법을 통해 한정된 물리 메모리를 여러 프로세스가 효율적으로 나누어 사용할 수 있게 합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;본 문서는 리눅스 CLI 환경에서 제공하는 다양한 도구를 활용하여, &lt;strong&gt;컴파일 → 링크 → 적재 → 실행&lt;/strong&gt; 각 단계에서 주소 바인딩이 어떻게 이루어지는지 구체적인 명령과 출력을 통해 심층적으로 추적하고 분석하는 것을 목표로 합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>무제</title>
      <link>http://localhost:1313/06.university/network/%EB%AC%B4%EC%A0%9C/</link>
      <pubDate>Tue, 03 Jun 2025 05:27:10 +0900</pubDate>
      <guid>http://localhost:1313/06.university/network/%EB%AC%B4%EC%A0%9C/</guid>
      <description>&lt;p&gt;알겠습니다. 컴퓨터공학 전공자로서 기술적 내용에 중점을 둔 5G 및 6G 네트워크 통신 기술 보고서를 작성해 드리겠습니다. 먼저 요청하신 대로 목차를 다시 제시하고, 이어서 각 항목에 대한 기술 중심의 설명을 제공하겠습니다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;목차&#34;&gt;목차&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;서론&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;1.1. 차세대 이동통신 기술의 등장 배경 및 기술적 요구사항&lt;/p&gt;&#xA;&lt;p&gt;1.2. 연구의 목적 및 기술적 범위 정의&lt;/p&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;5G 네트워크 통신 기술 분석&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;2.1. 5G의 핵심 성능 지표(KPI) 및 표준화 동향 (3GPP 릴리즈 기반)&lt;/p&gt;&#xA;&lt;p&gt;2.2. 5G 핵심 기술 요소 상세 분석&lt;/p&gt;</description>
    </item>
    <item>
      <title>h2 database 사용법</title>
      <link>http://localhost:1313/02.inbox/h2-database-%EC%82%AC%EC%9A%A9%EB%B2%95/</link>
      <pubDate>Mon, 26 May 2025 14:22:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/h2-database-%EC%82%AC%EC%9A%A9%EB%B2%95/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;다운로드 링크&lt;br&gt;&#xA;&lt;a href=&#34;https://www.h2database.com/html/download.html&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;h2 homepage link&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;tcp 포트&lt;/th&gt;&#xA;          &lt;th&gt;웹 접근 포트&lt;/th&gt;&#xA;          &lt;th&gt;file 접근&lt;/th&gt;&#xA;          &lt;th&gt;TCP 접근&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;TCP:9092&lt;/td&gt;&#xA;          &lt;td&gt;TCP:8082&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;jdbc:h2:~/test&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;jdbc:h2:tcp://&amp;lt;서버IP&amp;gt;:9092/~/test&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;main&#34;&gt;main&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;h2/bin/h2.sh&lt;/code&gt; == &#x9;&lt;code&gt;java -cp h2-2.3.232.jar org.h2.tools.Server -tcp -web&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;-tcp&lt;/code&gt;: TCP 서버 실행&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;-tcpAllowOthers&lt;/code&gt;: TCP 서버에 외부 IP에서 접속 가능하게 함&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;-web&lt;/code&gt;: 웹 콘솔 실행&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;-webAllowOthers&lt;/code&gt;: 웹 콘솔에 외부 IP에서 접속 가능하게 함&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;webGUI 기본&#xA;&lt;ul&gt;&#xA;&lt;li&gt;link path &lt;code&gt;localhost:8082&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;cli&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;java -cp h2-2.3.232.jar org.h2.tools.Shell&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;추가-도구&#34;&gt;추가 도구&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;strong&gt;도구명&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;설명&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;사용 예시&lt;/strong&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;RunScript&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;SQL 스크립트 파일을 실행하여 데이터베이스 초기화 또는 변경 적용&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;bash java -cp h2-*.jar org.h2.tools.RunScript -url jdbc:h2:~/test -user sa -script init.sql &lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;Recover&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;크래시나 오류 후 데이터베이스 복구&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;bash java -cp h2-*.jar org.h2.tools.Recover -dir ~/h2db/ &lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;ChangeFileEncryption&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;데이터베이스 파일 암호화 방식 변경&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;bash java -cp h2-*.jar org.h2.tools.ChangeFileEncryption -dir ~/h2db/ -oldPassword oldpass -newPassword newpass &lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;RunScript&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>sse (server sent event)</title>
      <link>http://localhost:1313/02.inbox/sse-server-sent-event/</link>
      <pubDate>Mon, 26 May 2025 14:09:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/sse-server-sent-event/</guid>
      <description>&lt;h3 id=&#34;back&#34;&gt;Back&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;package&lt;/span&gt; com.example.sse.controller;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; org.springframework.http.MediaType;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; org.springframework.web.bind.annotation.GetMapping;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; org.springframework.web.bind.annotation.RestController;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; org.springframework.web.servlet.mvc.method.annotation.SseEmitter;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; java.io.IOException;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; java.util.Random;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; java.util.concurrent.ExecutorService;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; java.util.concurrent.Executors;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@RestController&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;SseController&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;final&lt;/span&gt; Random random &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Random();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;@GetMapping&lt;/span&gt;(value &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/sse&amp;#34;&lt;/span&gt;, produces &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; MediaType.&lt;span style=&#34;color:#a6e22e&#34;&gt;TEXT_EVENT_STREAM_VALUE&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; SseEmitter &lt;span style=&#34;color:#a6e22e&#34;&gt;handleSse&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        SseEmitter emitter &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; SseEmitter(60_000L); &lt;span style=&#34;color:#75715e&#34;&gt;// 타임아웃 설정&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;//&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ExecutorService executor &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Executors.&lt;span style=&#34;color:#a6e22e&#34;&gt;newSingleThreadExecutor&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        executor.&lt;span style=&#34;color:#a6e22e&#34;&gt;execute&lt;/span&gt;(() &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; 10; i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) { &lt;span style=&#34;color:#75715e&#34;&gt;// 10번의 무작위 이벤트&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; delay &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; random.&lt;span style=&#34;color:#a6e22e&#34;&gt;nextInt&lt;/span&gt;(3000) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; 1000; &lt;span style=&#34;color:#75715e&#34;&gt;// 1~4초 사이 랜덤 지연&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    Thread.&lt;span style=&#34;color:#a6e22e&#34;&gt;sleep&lt;/span&gt;(delay);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    String eventData &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Event at &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; System.&lt;span style=&#34;color:#a6e22e&#34;&gt;currentTimeMillis&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    emitter.&lt;span style=&#34;color:#a6e22e&#34;&gt;send&lt;/span&gt;(eventData);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                emitter.&lt;span style=&#34;color:#a6e22e&#34;&gt;complete&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            } &lt;span style=&#34;color:#66d9ef&#34;&gt;catch&lt;/span&gt; (IOException &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; InterruptedException e) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                emitter.&lt;span style=&#34;color:#a6e22e&#34;&gt;completeWithError&lt;/span&gt;(e);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            } &lt;span style=&#34;color:#66d9ef&#34;&gt;finally&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                executor.&lt;span style=&#34;color:#a6e22e&#34;&gt;shutdown&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        });&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; emitter;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;produces = MediaType.TEXT_EVENT_STREAM_VALUE&lt;/code&gt;: 클라이언트에게 &lt;strong&gt;text/event-stream&lt;/strong&gt; 형식의 데이터를 보낸다는 의미 → SSE 방식.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;반환형은 &lt;code&gt;SseEmitter&lt;/code&gt; 객체이며, 서버에서 클라이언트로 일방향 통신을 가능하게 합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;SseEmitter emitter = new SseEmitter(60_000L); // 타임아웃 60초&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;클라이언트가 60초 동안 응답을 받지 않으면 연결이 종료됩니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;별도의 스레드에서 비동기적으로 작업 수행.&lt;/li&gt;&#xA;&lt;li&gt;총 10번의 이벤트를 랜덤한 시간 간격(1~4초)으로 전송.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;emitter.send(data)&lt;/code&gt;로 클라이언트에게 데이터를 실시간 전송.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;front&#34;&gt;Front&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lang&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ko&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;charset&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;SSE 실시간 이벤트&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;h2&lt;/span&gt;&amp;gt;실시간 이벤트 수신&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;h2&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;ul&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;eventList&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;ul&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;eventSource&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;EventSource&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/sse&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;eventSource&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;onmessage&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;event&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;li&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; document.&lt;span style=&#34;color:#a6e22e&#34;&gt;createElement&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;li&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;li&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;textContent&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;event&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            document.&lt;span style=&#34;color:#a6e22e&#34;&gt;getElementById&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;eventList&amp;#34;&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;appendChild&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;li&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        };&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;eventSource&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;onerror&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;error&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SSE 오류:&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        };&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>마크다운 문법</title>
      <link>http://localhost:1313/markdown-test/%EB%A7%88%ED%81%AC%EB%8B%A4%EC%9A%B4-%EB%AC%B8%EB%B2%95/</link>
      <pubDate>Mon, 26 May 2025 14:05:00 +0900</pubDate>
      <guid>http://localhost:1313/markdown-test/%EB%A7%88%ED%81%AC%EB%8B%A4%EC%9A%B4-%EB%AC%B8%EB%B2%95/</guid>
      <description></description>
    </item>
    <item>
      <title>register x64</title>
      <link>http://localhost:1313/02.inbox/register-x64/</link>
      <pubDate>Sun, 25 May 2025 23:35:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/register-x64/</guid>
      <description>&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240417101228.png&#34; alt=&#34; (Image resource not found)&#34; &gt;%20image%2020240417101228.png)&lt;/p&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240417225940.png&#34; alt=&#34;Pasted image 20240417225940 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;vscode-c-디버깅-시에-나오는-레지스터-종류&#34;&gt;vscode c 디버깅 시에 나오는 레지스터 종류&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;other register :&#xA;&lt;ul&gt;&#xA;&lt;li&gt;x0 - x28&lt;/li&gt;&#xA;&lt;li&gt;fp&lt;/li&gt;&#xA;&lt;li&gt;w0 - w28&lt;/li&gt;&#xA;&lt;li&gt;v0 - v31&lt;/li&gt;&#xA;&lt;li&gt;fpsr&lt;/li&gt;&#xA;&lt;li&gt;fpsr&lt;/li&gt;&#xA;&lt;li&gt;far&lt;/li&gt;&#xA;&lt;li&gt;esr&lt;/li&gt;&#xA;&lt;li&gt;exception&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;cpu&#xA;&lt;ul&gt;&#xA;&lt;li&gt;lr&lt;/li&gt;&#xA;&lt;li&gt;sp&lt;/li&gt;&#xA;&lt;li&gt;pc&lt;/li&gt;&#xA;&lt;li&gt;cpsr&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;IEEE single&#xA;&lt;ul&gt;&#xA;&lt;li&gt;s0 - s31&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;IEEE double&#xA;&lt;ul&gt;&#xA;&lt;li&gt;d0 - d31&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>TCP TELNET 통신 과정 시뮬레이션</title>
      <link>http://localhost:1313/02.inbox/tcp-telnet-%ED%86%B5%EC%8B%A0-%EA%B3%BC%EC%A0%95-%EC%8B%9C%EB%AE%AC%EB%A0%88%EC%9D%B4%EC%85%98/</link>
      <pubDate>Wed, 21 May 2025 09:08:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/tcp-telnet-%ED%86%B5%EC%8B%A0-%EA%B3%BC%EC%A0%95-%EC%8B%9C%EB%AE%AC%EB%A0%88%EC%9D%B4%EC%85%98/</guid>
      <description>&lt;h2 id=&#34;telnet-tcp-기반-패킷-이동-시뮬레이션-senderreceiver-윈도우-및-패킷-내용&#34;&gt;Telnet (TCP 기반) 패킷 이동 시뮬레이션: Sender/Receiver 윈도우 및 패킷 내용&lt;/h2&gt;&#xA;&lt;p&gt;Telnet은 애플리케이션 계층 프로토콜이며, 전송 계층에서는 **TCP(Transmission Control Protocol)**를 사용합니다. TCP는 신뢰성 있는 데이터 전송을 보장하기 위해 &lt;strong&gt;연결 설정(3-way handshake)&lt;/strong&gt;, &lt;strong&gt;데이터 전송(슬라이딩 윈도우, 확인 응답)&lt;/strong&gt;, &lt;strong&gt;연결 해제(4-way handshake)&lt;/strong&gt; 과정을 거칩니다.&lt;/p&gt;&#xA;&lt;p&gt;아래는 Telnet 클라이언트(Sender)가 Telnet 서버(Receiver)에 접속하여 간단한 데이터를 주고받는 과정을 가상으로 시뮬레이션한 결과입니다. 실제 환경에서는 윈도우 크기 변화, 패킷 손실 및 재전송 등 더 복잡한 상황이 발생할 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>linux locale setting</title>
      <link>http://localhost:1313/02.inbox/linux-locale-setting/</link>
      <pubDate>Tue, 20 May 2025 18:55:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/linux-locale-setting/</guid>
      <description>&lt;h3 id=&#34;systemd-기반-리눅스-배포판&#34;&gt;systemd 기반 리눅스 배포판&lt;/h3&gt;&#xA;&lt;p&gt;&lt;code&gt;localectl&lt;/code&gt; 명령은 &lt;strong&gt;systemd 기반 리눅스 배포판&lt;/strong&gt; 에서 사용할 수 있는 시스템 관리 도구로, 로케일(locale), 키보드 레이아웃, 가상 콘솔(Console) 설정 등을 관리하는 데 사용됩니다.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;1. 로케일 및 키보드 설정 확인&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# localectl &lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   System Locale: LANG&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;en_US.UTF-8&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       VC Keymap: n/a&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      X11 Layout: us&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       X11 Model: pc105&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;strong&gt;형식&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;의미&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;System Locale&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;현재 설정되어 있는 로케일(Locale)을 표시합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;VC Keymap&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;가상콘솔에서 사용하는 키맵을 표시합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;X11 Layout&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Xwindows에서 사용되는 키보드 레이아웃을 표시합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;X11 Model&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;키보드 모델을 표시 합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;&lt;strong&gt;2. 설정 가능한 로케일(Locale) 확인&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ipv4 vs ipv6</title>
      <link>http://localhost:1313/02.inbox/ipv4-vs-ipv6/</link>
      <pubDate>Wed, 07 May 2025 21:26:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/ipv4-vs-ipv6/</guid>
      <description>&lt;h3 id=&#34;-ipv4-헤더-필드&#34;&gt;📋 &lt;strong&gt;IPv4 헤더 필드&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;필드 이름&lt;/th&gt;&#xA;          &lt;th&gt;크기&lt;/th&gt;&#xA;          &lt;th&gt;간단 설명&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Version&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;4비트&lt;/td&gt;&#xA;          &lt;td&gt;IP 버전 (예: IPv4, IPv6) 지정&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Header Length (IHL)&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;4비트&lt;/td&gt;&#xA;          &lt;td&gt;헤더 길이 (옵션 유무에 따라 달라짐)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Type of Service (TOS)&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;8비트&lt;/td&gt;&#xA;          &lt;td&gt;QoS 설정 (DSCP + ECN 포함)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Total Length&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;16비트&lt;/td&gt;&#xA;          &lt;td&gt;전체 패킷 크기 (헤더 + 데이터)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Identification&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;16비트&lt;/td&gt;&#xA;          &lt;td&gt;프래그먼트 식별을 위한 고유 번호&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Flags&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;3비트&lt;/td&gt;&#xA;          &lt;td&gt;프래그먼트 가능 여부 표시 (예: DF, MF)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Fragment Offset&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;13비트&lt;/td&gt;&#xA;          &lt;td&gt;조각난 패킷의 위치 정보&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Time To Live (TTL)&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;8비트&lt;/td&gt;&#xA;          &lt;td&gt;패킷 수명 (라우터 통과 시 감소, 0이 되면 폐기)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Protocol&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;8비트&lt;/td&gt;&#xA;          &lt;td&gt;상위 계층 프로토콜 (TCP=6, UDP=17 등)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Header Checksum&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;16비트&lt;/td&gt;&#xA;          &lt;td&gt;헤더 오류 검출용 체크섬&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Source IP Address&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;32비트&lt;/td&gt;&#xA;          &lt;td&gt;보낸 사람 IP 주소&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Destination IP Address&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;32비트&lt;/td&gt;&#xA;          &lt;td&gt;받는 사람 IP 주소&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Options (선택적)&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;가변&lt;/td&gt;&#xA;          &lt;td&gt;추가 기능 제공 (보통 사용 안 함)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Data (Payload)&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;가변&lt;/td&gt;&#xA;          &lt;td&gt;실제 전송할 데이터 (TCP/UDP 세그먼트 등)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;-ipv6-헤더-필드&#34;&gt;📋 &lt;strong&gt;IPv6 헤더 필드&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;필드 이름&lt;/th&gt;&#xA;          &lt;th&gt;크기&lt;/th&gt;&#xA;          &lt;th&gt;간단 설명&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Version&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;4비트&lt;/td&gt;&#xA;          &lt;td&gt;IP 버전 번호 (IPv6이므로 값은 항상 &lt;code&gt;6&lt;/code&gt;)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Traffic Class&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;8비트&lt;/td&gt;&#xA;          &lt;td&gt;트래픽 우선순위 지정 (IPv4의 TOS/DSCP와 유사, QoS 지원)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Flow Label&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;20비트&lt;/td&gt;&#xA;          &lt;td&gt;특정 패킷 흐름(예: 실시간 음성/영상) 식별용 라벨 (QoS 및 Flow 기반 처리 지원)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Payload Length&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;16비트&lt;/td&gt;&#xA;          &lt;td&gt;헤더 이후 데이터(payload)의 길이 (바이트 단위)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Next Header&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;8비트&lt;/td&gt;&#xA;          &lt;td&gt;다음 헤더의 타입을 지정 (TCP=6, UDP=17 등, IPv4의 Protocol 필드와 유사)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Hop Limit&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;8비트&lt;/td&gt;&#xA;          &lt;td&gt;패킷이 지나갈 수 있는 최대 라우터 수 (IPv4의 TTL 필드와 동일한 역할)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Source Address&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;128비트&lt;/td&gt;&#xA;          &lt;td&gt;보낸 호스트의 IPv6 주소&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Destination Address&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;128비트&lt;/td&gt;&#xA;          &lt;td&gt;받는 호스트의 IPv6 주소&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Data (Payload)&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;가변&lt;/td&gt;&#xA;          &lt;td&gt;실제 전송되는 데이터 (TCP/UDP 세그먼트 또는 다른 프로토콜 데이터)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;-ipv4-vs-ipv6-헤더-비교표-기능별-분류&#34;&gt;📊 &lt;strong&gt;IPv4 vs IPv6 헤더 비교표 (기능별 분류)&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;1--버전-및-기본-정보&#34;&gt;1. ✅ &lt;strong&gt;버전 및 기본 정보&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;기능 그룹&lt;/th&gt;&#xA;          &lt;th&gt;IPv4 필드&lt;/th&gt;&#xA;          &lt;th&gt;크기&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;          &lt;th&gt;IPv6 필드&lt;/th&gt;&#xA;          &lt;th&gt;크기&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;IP 버전&lt;/td&gt;&#xA;          &lt;td&gt;Version&lt;/td&gt;&#xA;          &lt;td&gt;4비트&lt;/td&gt;&#xA;          &lt;td&gt;IP 버전 식별 (IPv4=4, IPv6=6)&lt;/td&gt;&#xA;          &lt;td&gt;Version&lt;/td&gt;&#xA;          &lt;td&gt;4비트&lt;/td&gt;&#xA;          &lt;td&gt;IP 버전 식별 (IPv6=6)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;헤더 길이&lt;/td&gt;&#xA;          &lt;td&gt;Header Length (IHL)&lt;/td&gt;&#xA;          &lt;td&gt;4비트&lt;/td&gt;&#xA;          &lt;td&gt;헤더 총 길이 (옵션 포함 여부에 따라 다름)&lt;/td&gt;&#xA;          &lt;td&gt;-&lt;/td&gt;&#xA;          &lt;td&gt;-&lt;/td&gt;&#xA;          &lt;td&gt;IPv6는 고정 헤더 길이 (40바이트)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;전체 패킷 크기&lt;/td&gt;&#xA;          &lt;td&gt;Total Length&lt;/td&gt;&#xA;          &lt;td&gt;16비트&lt;/td&gt;&#xA;          &lt;td&gt;헤더 + 데이터 전체 크기&lt;/td&gt;&#xA;          &lt;td&gt;Payload Length&lt;/td&gt;&#xA;          &lt;td&gt;16비트&lt;/td&gt;&#xA;          &lt;td&gt;헤더 이후 데이터(payload) 길이만 지정&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h4 id=&#34;2--주소-지정-및-라우팅&#34;&gt;2. 🎯 &lt;strong&gt;주소 지정 및 라우팅&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;기능 그룹&lt;/th&gt;&#xA;          &lt;th&gt;IPv4 필드&lt;/th&gt;&#xA;          &lt;th&gt;크기&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;          &lt;th&gt;IPv6 필드&lt;/th&gt;&#xA;          &lt;th&gt;크기&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;출발지 주소&lt;/td&gt;&#xA;          &lt;td&gt;Source IP Address&lt;/td&gt;&#xA;          &lt;td&gt;32비트&lt;/td&gt;&#xA;          &lt;td&gt;송신자 IPv4 주소&lt;/td&gt;&#xA;          &lt;td&gt;Source Address&lt;/td&gt;&#xA;          &lt;td&gt;128비트&lt;/td&gt;&#xA;          &lt;td&gt;송신자 IPv6 주소&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;목적지 주소&lt;/td&gt;&#xA;          &lt;td&gt;Destination IP Address&lt;/td&gt;&#xA;          &lt;td&gt;32비트&lt;/td&gt;&#xA;          &lt;td&gt;수신자 IPv4 주소&lt;/td&gt;&#xA;          &lt;td&gt;Destination Address&lt;/td&gt;&#xA;          &lt;td&gt;128비트&lt;/td&gt;&#xA;          &lt;td&gt;수신자 IPv6 주소&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;다음 헤더&lt;/td&gt;&#xA;          &lt;td&gt;-&lt;/td&gt;&#xA;          &lt;td&gt;-&lt;/td&gt;&#xA;          &lt;td&gt;-&lt;/td&gt;&#xA;          &lt;td&gt;Next Header&lt;/td&gt;&#xA;          &lt;td&gt;8비트&lt;/td&gt;&#xA;          &lt;td&gt;다음 헤더 유형 지정 (TCP/UDP/확장헤더 등)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h4 id=&#34;3--qos-및-트래픽-관리&#34;&gt;3. ⚙️ &lt;strong&gt;QoS 및 트래픽 관리&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;기능 그룹&lt;/th&gt;&#xA;          &lt;th&gt;IPv4 필드&lt;/th&gt;&#xA;          &lt;th&gt;크기&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;          &lt;th&gt;IPv6 필드&lt;/th&gt;&#xA;          &lt;th&gt;크기&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;트래픽 우선순위&lt;/td&gt;&#xA;          &lt;td&gt;Type of Service (TOS)&lt;/td&gt;&#xA;          &lt;td&gt;8비트&lt;/td&gt;&#xA;          &lt;td&gt;DSCP(6비트) + ECN(2비트), QoS 설정&lt;/td&gt;&#xA;          &lt;td&gt;Traffic Class&lt;/td&gt;&#xA;          &lt;td&gt;8비트&lt;/td&gt;&#xA;          &lt;td&gt;DSCP(6비트) + ECN(2비트), QoS 설정&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;흐름 식별&lt;/td&gt;&#xA;          &lt;td&gt;-&lt;/td&gt;&#xA;          &lt;td&gt;-&lt;/td&gt;&#xA;          &lt;td&gt;-&lt;/td&gt;&#xA;          &lt;td&gt;Flow Label&lt;/td&gt;&#xA;          &lt;td&gt;20비트&lt;/td&gt;&#xA;          &lt;td&gt;특정 흐름(flow) 식별용 라벨 (실시간 서비스 지원)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h4 id=&#34;4--패킷-처리-및-포워딩&#34;&gt;4. 🔄 &lt;strong&gt;패킷 처리 및 포워딩&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;기능 그룹&lt;/th&gt;&#xA;          &lt;th&gt;IPv4 필드&lt;/th&gt;&#xA;          &lt;th&gt;크기&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;          &lt;th&gt;IPv6 필드&lt;/th&gt;&#xA;          &lt;th&gt;크기&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;생존 시간&lt;/td&gt;&#xA;          &lt;td&gt;Time To Live (TTL)&lt;/td&gt;&#xA;          &lt;td&gt;8비트&lt;/td&gt;&#xA;          &lt;td&gt;패킷의 최대 홉 수 (라우터 통과 시 감소)&lt;/td&gt;&#xA;          &lt;td&gt;Hop Limit&lt;/td&gt;&#xA;          &lt;td&gt;8비트&lt;/td&gt;&#xA;          &lt;td&gt;동일한 기능 (IPv4 TTL과 동일)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;체크섬 검사&lt;/td&gt;&#xA;          &lt;td&gt;Header Checksum&lt;/td&gt;&#xA;          &lt;td&gt;16비트&lt;/td&gt;&#xA;          &lt;td&gt;헤더 오류 검출용 (매 라우터마다 재계산)&lt;/td&gt;&#xA;          &lt;td&gt;-&lt;/td&gt;&#xA;          &lt;td&gt;-&lt;/td&gt;&#xA;          &lt;td&gt;IPv6에서는 헤더 체크섬 제거 (TCP/UDP에서 처리)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;프래그먼트 처리&lt;/td&gt;&#xA;          &lt;td&gt;Identification&lt;br&gt;Flags&lt;br&gt;Fragment Offset&lt;/td&gt;&#xA;          &lt;td&gt;16+3+13비트&lt;/td&gt;&#xA;          &lt;td&gt;패킷 분할 및 조립 정보&lt;/td&gt;&#xA;          &lt;td&gt;-&lt;/td&gt;&#xA;          &lt;td&gt;-&lt;/td&gt;&#xA;          &lt;td&gt;IPv6에서는 프래그먼트 처리 소스/목적지에서만 가능&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h4 id=&#34;5--확장성-및-추가-기능&#34;&gt;5. 🔧 &lt;strong&gt;확장성 및 추가 기능&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;기능 그룹&lt;/th&gt;&#xA;          &lt;th&gt;IPv4 필드&lt;/th&gt;&#xA;          &lt;th&gt;크기&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;          &lt;th&gt;IPv6 필드&lt;/th&gt;&#xA;          &lt;th&gt;크기&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;확장 옵션&lt;/td&gt;&#xA;          &lt;td&gt;Options&lt;/td&gt;&#xA;          &lt;td&gt;가변&lt;/td&gt;&#xA;          &lt;td&gt;선택적 기능 제공 (보통 사용 안 함)&lt;/td&gt;&#xA;          &lt;td&gt;Extension Headers&lt;/td&gt;&#xA;          &lt;td&gt;가변&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;Next Header&lt;/code&gt;로 연결되는 확장 헤더 구조&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;데이터 영역&lt;/td&gt;&#xA;          &lt;td&gt;Data (Payload)&lt;/td&gt;&#xA;          &lt;td&gt;가변&lt;/td&gt;&#xA;          &lt;td&gt;실제 전송 데이터 (TCP/UDP 등)&lt;/td&gt;&#xA;          &lt;td&gt;Data (Payload)&lt;/td&gt;&#xA;          &lt;td&gt;가변&lt;/td&gt;&#xA;          &lt;td&gt;실제 전송 데이터 (TCP/UDP 등)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h4 id=&#34;-요약-비교-요약표&#34;&gt;✅ &lt;strong&gt;요약 비교 요약표&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;항목&lt;/th&gt;&#xA;          &lt;th&gt;IPv4&lt;/th&gt;&#xA;          &lt;th&gt;IPv6&lt;/th&gt;&#xA;          &lt;th&gt;특징&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;주소 길이&lt;/td&gt;&#xA;          &lt;td&gt;32비트&lt;/td&gt;&#xA;          &lt;td&gt;128비트&lt;/td&gt;&#xA;          &lt;td&gt;IPv6는 주소 고갈 문제 해결&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;헤더 길이&lt;/td&gt;&#xA;          &lt;td&gt;가변 (20~60바이트)&lt;/td&gt;&#xA;          &lt;td&gt;고정 (40바이트)&lt;/td&gt;&#xA;          &lt;td&gt;IPv6는 단순화된 헤더 구조&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;QoS 지원&lt;/td&gt;&#xA;          &lt;td&gt;TOS (DSCP + ECN)&lt;/td&gt;&#xA;          &lt;td&gt;Traffic Class (DSCP + ECN)&lt;br&gt;Flow Label&lt;/td&gt;&#xA;          &lt;td&gt;IPv6가 더 세밀한 QoS 지원&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;프래그먼트&lt;/td&gt;&#xA;          &lt;td&gt;중간 노드에서 가능&lt;/td&gt;&#xA;          &lt;td&gt;소스/목적지만 가능&lt;/td&gt;&#xA;          &lt;td&gt;IPv6는 라우터 부담 감소&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;체크섬&lt;/td&gt;&#xA;          &lt;td&gt;헤더 체크섬 있음&lt;/td&gt;&#xA;          &lt;td&gt;없음&lt;/td&gt;&#xA;          &lt;td&gt;IPv6는 TCP/UDP에서 처리&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;확장 기능&lt;/td&gt;&#xA;          &lt;td&gt;Options 필드&lt;/td&gt;&#xA;          &lt;td&gt;Extension Headers&lt;/td&gt;&#xA;          &lt;td&gt;IPv6가 더 유연한 확장 구조&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;다음 헤더&lt;/td&gt;&#xA;          &lt;td&gt;Protocol 필드&lt;/td&gt;&#xA;          &lt;td&gt;Next Header&lt;/td&gt;&#xA;          &lt;td&gt;유사한 역할 수행&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;데이터평면-제어-평면&#34;&gt;데이터평면, 제어 평면&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;데이터 평면 (Data Plane)&lt;/strong&gt;&lt;br&gt;&#xA;→ 실제 데이터 패킷을 전달하는 역할 (패킷 포워딩)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;제어 평면 (Control Plane)&lt;/strong&gt;&lt;br&gt;&#xA;→ 어떤 경로로 패킷을 보낼지 결정하는 역할 (라우팅)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;항목&lt;/th&gt;&#xA;          &lt;th&gt;데이터 평면 (Data Plane)&lt;/th&gt;&#xA;          &lt;th&gt;제어 평면 (Control Plane)&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;목적&lt;/td&gt;&#xA;          &lt;td&gt;패킷 전달 (포워딩)&lt;/td&gt;&#xA;          &lt;td&gt;경로 결정 (라우팅)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;수행 작업&lt;/td&gt;&#xA;          &lt;td&gt;패킷 수신 → 목적지 주소 확인 → 다음 홉 선택 → 전달&lt;/td&gt;&#xA;          &lt;td&gt;라우팅 프로토콜 실행, 경로 계산, 라우팅 테이블 업데이트&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;처리 속도&lt;/td&gt;&#xA;          &lt;td&gt;매우 빠름 (마이크로초 이하)&lt;/td&gt;&#xA;          &lt;td&gt;상대적으로 느림&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;사용 메커니즘&lt;/td&gt;&#xA;          &lt;td&gt;포워딩 테이블 (FIB), 캐시 등&lt;/td&gt;&#xA;          &lt;td&gt;라우팅 프로토콜 (RIP, OSPF, BGP 등)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;주요 구성 요소&lt;/td&gt;&#xA;          &lt;td&gt;라우터의 포워딩 엔진&lt;/td&gt;&#xA;          &lt;td&gt;라우터의 CPU, 라우팅 프로토콜 모듈&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;보안 영향&lt;/td&gt;&#xA;          &lt;td&gt;직접적인 패킷 유출/손실 영향&lt;/td&gt;&#xA;          &lt;td&gt;라우팅 정보 변조, 네트워크 다운 위험&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;ip-헤더-필드별로-데이터-평면--제어-평면-사용-여부-정리&#34;&gt;&lt;strong&gt;IP 헤더 필드별로 데이터 평면 / 제어 평면 사용 여부 정리&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;필드 이름&lt;/th&gt;&#xA;          &lt;th&gt;크기&lt;/th&gt;&#xA;          &lt;th&gt;간단 설명&lt;/th&gt;&#xA;          &lt;th&gt;사용되는 평면&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Version&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;4비트&lt;/td&gt;&#xA;          &lt;td&gt;IP 버전 (예: IPv4, IPv6) 지정&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;데이터 평면&lt;/strong&gt;&lt;br&gt;(패킷 포워딩 시 해석 필요)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Header Length (IHL)&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;4비트&lt;/td&gt;&#xA;          &lt;td&gt;헤더 길이 (옵션 유무에 따라 달라짐)&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;데이터 평면&lt;/strong&gt;&lt;br&gt;(헤더 파싱 및 데이터 위치 식별)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Type of Service (TOS)&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;8비트&lt;/td&gt;&#xA;          &lt;td&gt;QoS 설정 (DSCP + ECN 포함)&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;데이터 평면&lt;/strong&gt;&lt;br&gt;(QoS 기반 포워딩 정책 적용)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Total Length&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;16비트&lt;/td&gt;&#xA;          &lt;td&gt;전체 패킷 크기 (헤더 + 데이터)&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;데이터 평면&lt;/strong&gt;&lt;br&gt;(패킷 처리 및 메모리 관리를 위해 사용)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Identification&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;16비트&lt;/td&gt;&#xA;          &lt;td&gt;프래그먼트 식별을 위한 고유 번호&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;데이터 평면&lt;/strong&gt;&lt;br&gt;(프래그먼트 재조립 시 사용)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Flags&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;3비트&lt;/td&gt;&#xA;          &lt;td&gt;프래그먼트 가능 여부 표시 (예: DF, MF)&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;데이터 평면&lt;/strong&gt;&lt;br&gt;(패킷 분할 및 재조합 결정)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Fragment Offset&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;13비트&lt;/td&gt;&#xA;          &lt;td&gt;조각난 패킷의 위치 정보&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;데이터 평면&lt;/strong&gt;&lt;br&gt;(패킷 재조립 시 사용)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Time To Live (TTL)&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;8비트&lt;/td&gt;&#xA;          &lt;td&gt;패킷 수명 (라우터 통과 시 감소, 0이 되면 폐기)&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;데이터 평면&lt;/strong&gt;&lt;br&gt;(패킷 생존 시간 관리 및 폐기 결정)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Protocol&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;8비트&lt;/td&gt;&#xA;          &lt;td&gt;상위 계층 프로토콜 (TCP=6, UDP=17 등)&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;데이터 평면&lt;/strong&gt;&lt;br&gt;(상위 계층으로 전달 시 필요)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Header Checksum&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;16비트&lt;/td&gt;&#xA;          &lt;td&gt;헤더 오류 검출용 체크섬&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;데이터 평면&lt;/strong&gt;&lt;br&gt;(패킷 손상 검사 후 전달 결정)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Source IP Address&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;32비트&lt;/td&gt;&#xA;          &lt;td&gt;보낸 사람 IP 주소&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;데이터 평면&lt;/strong&gt;, &lt;strong&gt;제어 평면&lt;/strong&gt;&lt;br&gt;→ 포워딩에는 직접 사용되지 않지만, 로깅/필터링, 라우팅 프로토콜에서 활용&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Destination IP Address&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;32비트&lt;/td&gt;&#xA;          &lt;td&gt;받는 사람 IP 주소&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;제어 평면&lt;/strong&gt;, &lt;strong&gt;데이터 평면&lt;/strong&gt;&lt;br&gt;→ 가장 핵심적인 필드&lt;br&gt;→ &lt;strong&gt;제어 평면&lt;/strong&gt;: 경로 계산 (라우팅 테이블 매칭)&lt;br&gt;→ &lt;strong&gt;데이터 평면&lt;/strong&gt;: 다음 홉 선택 및 포워딩&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Options (선택적)&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;가변&lt;/td&gt;&#xA;          &lt;td&gt;추가 기능 제공 (보통 사용 안 함)&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;데이터 평면&lt;/strong&gt;&lt;br&gt;(특수한 경우에만 처리됨)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Data (Payload)&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;가변&lt;/td&gt;&#xA;          &lt;td&gt;실제 전송할 데이터 (TCP/UDP 세그먼트 등)&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;데이터 평면&lt;/strong&gt;&lt;br&gt;(포워딩 대상인 실제 데이터)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;</description>
    </item>
    <item>
      <title>IPC (massage passing)</title>
      <link>http://localhost:1313/02.inbox/ipc-massage-passing/</link>
      <pubDate>Thu, 01 May 2025 13:03:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/ipc-massage-passing/</guid>
      <description>&lt;p&gt;아래는 &lt;strong&gt;Unix에서 사용되는 다양한 프로세스 간 통신&lt;/strong&gt;(Inter-Process Communication, IPC) 방식들에 대한 &lt;strong&gt;자세한 설명&lt;/strong&gt;입니다.&lt;br&gt;&#xA;주요 내용은 다음과 같은 IPC 기법들을 포함합니다:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;Ordinary Pipe (일반 파이프)&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Named Pipe (FIFO)&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;UNIX Domain Socket&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-1-ordinary-pipe-일반-파이프&#34;&gt;🔹 1. Ordinary Pipe (일반 파이프)&lt;/h3&gt;&#xA;&lt;h4 id=&#34;-개념&#34;&gt;✅ 개념&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;pipe()&lt;/code&gt; 시스템 콜을 통해 생성됨&lt;/li&gt;&#xA;&lt;li&gt;두 개의 &lt;strong&gt;파일 디스크립터&lt;/strong&gt;(file descriptor) 반환:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;하나는 &lt;strong&gt;쓰기 전용&lt;/strong&gt;(write-end)&lt;/li&gt;&#xA;&lt;li&gt;하나는 &lt;strong&gt;읽기 전용&lt;/strong&gt;(read-end)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;데이터는 쓰기 쪽으로 넣고, 읽기 쪽에서 뺌 → &lt;strong&gt;Producer-Consumer 패턴&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;단방향(unidirectional) 통신만 지원&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;-특징&#34;&gt;✅ 특징&lt;/h4&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;항목&lt;/th&gt;&#xA;          &lt;th&gt;내용&lt;/th&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;범위&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;부모와 자식 프로세스 간만 가능 (fork 이후 공유)&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;존속성&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;프로세스 종료 시 사라짐&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;방향성&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;단방향 (한쪽에서만 보내고 한쪽에서만 받음)&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;사용 예시&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;쉘 명령어 연결 (&lt;code&gt;ls | grep &amp;quot;txt&amp;quot;&lt;/code&gt;)&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h4 id=&#34;-예제-코드&#34;&gt;✅ 예제 코드&lt;/h4&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;unistd.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; pipefd[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;pid_t&lt;/span&gt; pid;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; buf;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;pipe&lt;/span&gt;(pipefd) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;perror&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Pipe failed&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;exit&lt;/span&gt;(EXIT_FAILURE);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    pid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fork&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (pid &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) { &lt;span style=&#34;color:#75715e&#34;&gt;// Fork 실패&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;perror&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Fork failed&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;exit&lt;/span&gt;(EXIT_FAILURE);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (pid &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) { &lt;span style=&#34;color:#75715e&#34;&gt;// 자식 프로세스 (reader)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;(pipefd[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]); &lt;span style=&#34;color:#75715e&#34;&gt;// 쓰기 fd 닫기&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;read&lt;/span&gt;(pipefd[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;], &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;buf, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;write&lt;/span&gt;(STDOUT_FILENO, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;buf, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;(pipefd[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; { &lt;span style=&#34;color:#75715e&#34;&gt;// 부모 프로세스 (writer)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;(pipefd[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]); &lt;span style=&#34;color:#75715e&#34;&gt;// 읽기 fd 닫기&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;write&lt;/span&gt;(pipefd[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;], &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello from parent&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;17&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;(pipefd[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;wait&lt;/span&gt;(NULL); &lt;span style=&#34;color:#75715e&#34;&gt;// 자식 기다리기&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;이 코드는 부모가 메시지를 보내고 자식이 그것을 출력하는 간단한 파이프 예제입니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>obsidian 데이터 바인딩 처리</title>
      <link>http://localhost:1313/younghan-mvc1/obsidian-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B0%94%EC%9D%B8%EB%94%A9-%EC%B2%98%EB%A6%AC/</link>
      <pubDate>Mon, 31 Mar 2025 20:09:00 +0900</pubDate>
      <guid>http://localhost:1313/younghan-mvc1/obsidian-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B0%94%EC%9D%B8%EB%94%A9-%EC%B2%98%EB%A6%AC/</guid>
      <description>&lt;p&gt;Spring MVC의 데이터 바인딩과 관련된 주요 처리 과정을 순서대로 정리해드리겠습니다:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;요청 수신&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;DispatcherServlet이 HTTP 요청을 받음&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;컨트롤러 매핑&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;요청 URL에 매핑된 적절한 컨트롤러 메서드를 찾음&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;파라미터 바인딩 단계&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;@ModelAttribute 객체 생성&lt;/li&gt;&#xA;&lt;li&gt;요청 파라미터를 객체의 프로퍼티에 매핑 시도&#xA;&lt;ul&gt;&#xA;&lt;li&gt;타입 변환 시도&lt;/li&gt;&#xA;&lt;li&gt;변환 성공: 해당 필드에 값 설정&lt;/li&gt;&#xA;&lt;li&gt;변환 실패: BindingResult에 에러 정보 저장 (bindingFailure = true)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;ol start=&#34;4&#34;&gt;&#xA;&lt;li&gt;검증 단계 (@Valid 또는 @Validated 사용 시)&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Validator 실행&lt;/li&gt;&#xA;&lt;li&gt;검증 규칙 위반 시 BindingResult에 에러 정보 저장 (bindingFailure = false)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;ol start=&#34;5&#34;&gt;&#xA;&lt;li&gt;컨트롤러 메서드 실행&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;바인딩(및 검증)이 완료된 @ModelAttribute 객체를 메서드 파라미터로 전달&lt;/li&gt;&#xA;&lt;li&gt;BindingResult는 해당 객체의 바로 다음 파라미터로 전달&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;ol start=&#34;6&#34;&gt;&#xA;&lt;li&gt;뷰 렌더링&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;BindingResult의 내용을 활용하여 오류 메시지 표시&lt;/li&gt;&#xA;&lt;li&gt;rejectedValue 등을 사용하여 사용자 입력값 유지&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;중요한 점:&lt;/p&gt;</description>
    </item>
    <item>
      <title>spring locale 설정</title>
      <link>http://localhost:1313/younghan-mvc2/spring-locale-%EC%84%A4%EC%A0%95/</link>
      <pubDate>Sun, 30 Mar 2025 20:50:00 +0900</pubDate>
      <guid>http://localhost:1313/younghan-mvc2/spring-locale-%EC%84%A4%EC%A0%95/</guid>
      <description>&lt;h1 id=&#34;spring-locale-설정&#34;&gt;spring locale 설정&lt;/h1&gt;&#xA;&lt;h3 id=&#34;질문&#34;&gt;질문&lt;/h3&gt;&#xA;&lt;p&gt;&lt;code&gt;build.gradle&lt;/code&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 모든 Java 작업에 한국어 로케일 설정 적용&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tasks.&lt;span style=&#34;color:#a6e22e&#34;&gt;withType&lt;/span&gt;(JavaForkOptions) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 모든 JVM 포크 작업(test, bootRun 등)에 적용&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    systemProperty &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;user.&lt;span style=&#34;color:#a6e22e&#34;&gt;language&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;ko&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    systemProperty &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;user.&lt;span style=&#34;color:#a6e22e&#34;&gt;country&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;KR&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Java 컴파일 작업에도 동일한 설정&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tasks.&lt;span style=&#34;color:#a6e22e&#34;&gt;withType&lt;/span&gt;(JavaCompile) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    options.&lt;span style=&#34;color:#a6e22e&#34;&gt;fork&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    options.&lt;span style=&#34;color:#a6e22e&#34;&gt;forkOptions&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;jvmArgs&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Duser.&lt;span style=&#34;color:#a6e22e&#34;&gt;language&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ko&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Duser.&lt;span style=&#34;color:#a6e22e&#34;&gt;country&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;KR&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;질문의 내용을 null값으로 주게 되면 시스템 os locale 을 찾는다고 했는데 실제 제대로 적용되지 않는 상황인것 같습니다&lt;br&gt;&#xA;저는 linux에서 개발환경구성되어 있는데&lt;br&gt;&#xA;linux 에서 지역 locale 을 쓰지 않고 중립 locale&lt;code&gt;LANG=C.UTF-8&lt;/code&gt; 을 씁니다 그래서 저도 동일한 문제가 발생하였습니다&lt;/p&gt;</description>
    </item>
    <item>
      <title>UDP와 TCP Demultiplexing 의 이해</title>
      <link>http://localhost:1313/02.inbox/udp%EC%99%80-tcp-demultiplexing-%EC%9D%98-%EC%9D%B4%ED%95%B4/</link>
      <pubDate>Fri, 28 Mar 2025 09:53:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/udp%EC%99%80-tcp-demultiplexing-%EC%9D%98-%EC%9D%B4%ED%95%B4/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;디멀티플렉싱은 수신된 네트워크 패킷을 분석하여 해당 패킷이 어떤 소켓으로 전달되어야 하는지를 결정하는 과정&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;멀티플렉싱은 여러 응용 프로그램에서 생성된 데이터를 하나의 네트워크 인터페이스로 전송하는 과정&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;UDP와 TCP 디멀티플렉싱의 비교 분석&#xA;UDP는 디멀티플렉싱을 위해 목적지 IP 주소와 목적지 포트 번호라는 2-튜플을 사용하는 반면 8, TCP는 송신지 IP 주소, 송신지 포트 번호, 목적지 IP 주소, 목적지 포트 번호로 구성된 4-튜플을 사용합니다&#xA;&#xA;이러한 차이는 각 프로토콜의 연결 지향성 여부에서 비롯됩니다. TCP는 연결 지향적인 특성상 각 연결의 상태를 추적해야 하며, 이는 고유한 4-튜플을 통해 이루어집니다&#xA;TCP 연결은 두 특정 호스트의 두 특정 프로세스 간의 전용 통신 채널을 의미하므로, 더 자세한 식별 정보가 필요합니다. TCP의 신뢰성 있는 데이터 전송과 순서 보장 기능은 이러한 연결 상태 유지에 의존합니다.&#xA;반면, UDP는 각 데이터그램을 독립적인 단위로 취급하는 비연결형 프로토콜이므로 데이터그램을 올바른 포트에서 수신 대기 중인 애플리케이션에 전달하는 데 목적지 정보만으로 충분합니다. UDP의 이러한 단순성은 디멀티플렉싱 과정을 더 빠르고 효율적으로 만들어줍니다&#xA;이는 속도가 중요하고 일부 데이터 손실이 허용되는 애플리케이션(예: 스트리밍, 온라인 게임)에 UDP가 적합한 이유입니다.&#xA;반대로, TCP의 복잡한 디멀티플렉싱 방식은 여러 동시 연결을 통해 데이터를 안정적이고 순서대로 전달하는 데 필수적이며 3, 웹 브라우징, 파일 전송, 이메일과 같이 데이터 무결성이 중요한 애플리케이션에 적합합니다.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;udp와-tcp의-demultiplexing-이해하기&#34;&gt;UDP와 TCP의 Demultiplexing 이해하기&lt;/h3&gt;&#xA;&lt;p&gt;UDP와 TCP의 demultiplexing 차이는 각 프로토콜의 연결 방식에서 비롯됩니다. UDP는 비연결형으로, 각 데이터그램을 독립적으로 처리하며 목적지 포트만으로 충분히 데이터를 전달할 수 있습니다. 반면, TCP는 연결 지향형으로, 두 호스트 간의 특정 프로세스 쌍을 식별하기 위해 더 많은 정보(4-튜플)가 필요합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>윈도우 파일이름으로 사용할 수 없는 문자</title>
      <link>http://localhost:1313/02.inbox/%EC%9C%88%EB%8F%84%EC%9A%B0-%ED%8C%8C%EC%9D%BC%EC%9D%B4%EB%A6%84%EC%9C%BC%EB%A1%9C-%EC%82%AC%EC%9A%A9%ED%95%A0-%EC%88%98-%EC%97%86%EB%8A%94-%EB%AC%B8%EC%9E%90/</link>
      <pubDate>Thu, 27 Mar 2025 23:28:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EC%9C%88%EB%8F%84%EC%9A%B0-%ED%8C%8C%EC%9D%BC%EC%9D%B4%EB%A6%84%EC%9C%BC%EB%A1%9C-%EC%82%AC%EC%9A%A9%ED%95%A0-%EC%88%98-%EC%97%86%EB%8A%94-%EB%AC%B8%EC%9E%90/</guid>
      <description>&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;문자&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;이유&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;\&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;디렉터리의 구분자로 쓰인다.&lt;br&gt;예: &lt;code&gt;C:\\Users\\user\\Downloads\\namuwiki.url&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;/&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;디렉터리의 구분자로 쓰인다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;:&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;code&gt;C:&lt;/code&gt;, &lt;code&gt;D:&lt;/code&gt;와 같은 드라이브 기호로 쓰인다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;*&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;와일드 카드로 쓰인다.&lt;br&gt;&lt;code&gt;?&lt;/code&gt;는 한 글자의 의미로 쓰이기도 하며, UNC(Universal Naming Convention)에도 사용된다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;?&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;와일드 카드로 쓰인다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&amp;quot;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;경로의 시작과 끝을 나타낸다.&lt;br&gt;예: &lt;code&gt;&amp;quot;C:\\Users\\user\\Downloads\\namuwiki.url&amp;quot;&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&amp;lt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;리다이렉트, 파이프 등 특수 문법에 쓰인다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&amp;gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;리다이렉트, 파이프 등 특수 문법에 쓰인다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;|&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;리다이렉트, 파이프 등 특수 문법에 쓰인다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;? =&amp;gt; ❓&lt;/p&gt;</description>
    </item>
    <item>
      <title>http는 stateless 한데 하위 스택의 tcp 는 stateful 이다 (HTTP1.1 기준)</title>
      <link>http://localhost:1313/02.inbox/http%EB%8A%94-stateless-%ED%95%9C%EB%8D%B0-%ED%95%98%EC%9C%84-%EC%8A%A4%ED%83%9D%EC%9D%98-tcp-%EB%8A%94-stateful-%EC%9D%B4%EB%8B%A4-http1.1-%EA%B8%B0%EC%A4%80/</link>
      <pubDate>Tue, 25 Mar 2025 15:09:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/http%EB%8A%94-stateless-%ED%95%9C%EB%8D%B0-%ED%95%98%EC%9C%84-%EC%8A%A4%ED%83%9D%EC%9D%98-tcp-%EB%8A%94-stateful-%EC%9D%B4%EB%8B%A4-http1.1-%EA%B8%B0%EC%A4%80/</guid>
      <description>&lt;h3 id=&#34;질문&#34;&gt;질문&lt;/h3&gt;&#xA;&lt;p&gt;Persistent HTTP 에서 기본적으로 http 는 stateless 해 하지만 어떻게 Persistent하게 get 요청을 보낼 수 있는 거야 즉 서버 측에서 이미 3way handshake 했다는 것을 어떻게 인지하는 거야??&lt;/p&gt;&#xA;&lt;h3 id=&#34;답변-요약&#34;&gt;답변 요약&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Stateless&lt;/strong&gt; 상태를 유지하지 않는 시스템의 특성의 의미 (HTTP)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Stateful&lt;/strong&gt; 은 상태를 유지하며 동작하는 시스템의 특성을 나타냅니다. (TCP)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Persistent&lt;/strong&gt; 는 연결을 재사용하여 네트워크 효율성을 높이는 방식을 의미합니다.&lt;/li&gt;&#xA;&lt;li&gt;따라서 HTTP는 &lt;strong&gt;stateless&lt;/strong&gt; 지만, &lt;strong&gt;(일반적으로 사용하는)전송 계층에서 TCP의 stateful 특성을 활용&lt;/strong&gt;(HTTP 헤더의 &lt;code&gt;Connection: keep-alive&lt;/code&gt; 속성) 하여 persistent connection을 구현할 수 있다&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;핵심-개념-stateless-vs-stateful&#34;&gt;**핵심 개념: Stateless vs Stateful&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;HTTP는 Stateless(무상태)이다&lt;/strong&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>thymeleaf 정리</title>
      <link>http://localhost:1313/younghan-mvc2/thymeleaf-%EC%A0%95%EB%A6%AC/</link>
      <pubDate>Tue, 18 Mar 2025 13:26:00 +0900</pubDate>
      <guid>http://localhost:1313/younghan-mvc2/thymeleaf-%EC%A0%95%EB%A6%AC/</guid>
      <description>&lt;h3 id=&#34;text&#34;&gt;text&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt;&amp;gt;th:text 사용 &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;span&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;th:text&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;${data}&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;span&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt;&amp;gt;컨텐츠 안에서 직접 출력하기 = [${data}](${data})&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;아래는 타임리프(Thymeleaf)의 기본 사용 선언과 제공하는 기본 표현식들을 정리한 내용입니다. 이를 통해 타임리프를 효과적으로 활용할 수 있습니다.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;타임리프-사용-선언&#34;&gt;&lt;strong&gt;타임리프 사용 선언&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;xmlns:th&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://www.thymeleaf.org&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;위 선언은 HTML 문서에서 타임리프를 사용하기 위해 필요한 네임스페이스를 정의합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;타임리프-기본-표현식&#34;&gt;&lt;strong&gt;타임리프 기본 표현식&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;1-간단한-표현식&#34;&gt;&lt;strong&gt;1. 간단한 표현식&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;변수 표현식&lt;/strong&gt;: &lt;code&gt;${...}&lt;/code&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;컨텍스트 내 변수에 접근하거나 값을 출력하는 데 사용됩니다.&lt;/li&gt;&#xA;&lt;li&gt;예: &lt;code&gt;&amp;lt;p th:text=&amp;quot;${user.name}&amp;quot;&amp;gt;이름&amp;lt;/p&amp;gt;&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;선택 변수 표현식&lt;/strong&gt;: &lt;code&gt;*{...}&lt;/code&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;현재 선택된 객체에 대한 속성에 접근할 때 사용됩니다.&lt;/li&gt;&#xA;&lt;li&gt;예: &lt;code&gt;&amp;lt;div th:object=&amp;quot;${user}&amp;quot;&amp;gt;&amp;lt;p th:text=&amp;quot;*{name}&amp;quot;&amp;gt;이름&amp;lt;/p&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;메시지 표현식&lt;/strong&gt;: &lt;code&gt;#{...}&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>교차검증</title>
      <link>http://localhost:1313/temp/%EA%B5%90%EC%B0%A8%EA%B2%80%EC%A6%9D/</link>
      <pubDate>Mon, 17 Mar 2025 14:53:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/%EA%B5%90%EC%B0%A8%EA%B2%80%EC%A6%9D/</guid>
      <description>&lt;p&gt;교차 검증(Cross Validation)은 머신러닝 모델의 성능을 평가하는 데 널리 사용되는 기법입니다. 이를 통해 모델이 새로운 데이터에 대해 얼마나 잘 일반화될 수 있는지를 더 정확하게 평가할 수 있습니다. 아래에서 교차 검증의 개념과 예시를 단계별로 설명하겠습니다.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;교차-검증의-기본-아이디어&#34;&gt;&lt;strong&gt;교차 검증의 기본 아이디어&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;데이터셋을 훈련셋과 검증셋으로 나누는 경우, 훈련 데이터와 검증 데이터의 선택이 성능 평가 결과에 영향을 미칠 수 있습니다.&lt;/li&gt;&#xA;&lt;li&gt;따라서 전체 데이터를 여러 개의 작은 부분(fold)으로 나눈 후, 각 부분을 검증셋으로 사용하고 나머지를 훈련셋으로 사용하여 여러 번 실험을 진행합니다.&lt;/li&gt;&#xA;&lt;li&gt;이렇게 얻은 여러 성능 평가 결과의 평균값을 최종 성능 평가 결과로 사용합니다.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;k-겹-교차-검증k-fold-cross-validation의-과정&#34;&gt;&lt;strong&gt;k-겹 교차 검증(K-Fold Cross Validation)의 과정&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;1-데이터를-k개의-서브셋fold으로-나눈다&#34;&gt;1. 데이터를 k개의 서브셋(fold)으로 나눈다.&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;데이터셋을 동일한 크기의 k개로 나눕니다.&lt;/li&gt;&#xA;&lt;li&gt;예를 들어, 데이터셋이 100개이고 $ k=5 $라면, 각 fold는 20개의 데이터를 포함합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;2-각-fold를-검증셋으로-사용하며-모델-학습-및-평가를-반복한다&#34;&gt;2. 각 fold를 검증셋으로 사용하며 모델 학습 및 평가를 반복한다.&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Fold 1을 검증셋으로 사용하고, 나머지 Fold 2~5를 훈련셋으로 사용해 모델을 학습한 후 검증셋(Fold 1)에서 성능을 평가합니다.&lt;/li&gt;&#xA;&lt;li&gt;이 과정을 Fold 2, Fold 3, &amp;hellip;, Fold k까지 반복합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;3-k번의-성능-평가-결과를-평균하여-최종-성능을-산출한다&#34;&gt;3. k번의 성능 평가 결과를 평균하여 최종 성능을 산출한다.&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;각 fold에서 얻은 성능(예: 정확도, F1 스코어 등)을 평균하여 최종 성능으로 간주합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;예시&#34;&gt;&lt;strong&gt;예시&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;상황&#34;&gt;상황:&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;데이터셋: 100개의 샘플&lt;/li&gt;&#xA;&lt;li&gt;$ k = 5 $ (5-fold cross validation)&lt;/li&gt;&#xA;&lt;li&gt;성능 평가 지표: 정확도(Accuracy)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;step-by-step-설명&#34;&gt;Step-by-step 설명:&lt;/h4&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;데이터 분할&lt;/strong&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>thymeleaf 기본</title>
      <link>http://localhost:1313/younghan-mvc1/thymeleaf-%EA%B8%B0%EB%B3%B8/</link>
      <pubDate>Mon, 17 Mar 2025 04:39:00 +0900</pubDate>
      <guid>http://localhost:1313/younghan-mvc1/thymeleaf-%EA%B8%B0%EB%B3%B8/</guid>
      <description>&lt;h3 id=&#34;타임리프-간단히-알아보기&#34;&gt;타임리프 간단히 알아보기&lt;/h3&gt;&#xA;&lt;h4 id=&#34;1-타임리프-사용-선언&#34;&gt;1. &lt;strong&gt;타임리프 사용 선언&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;p&gt;타임리프를 사용하기 위해 HTML 문서의 &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; 태그에 네임스페이스를 선언합니다.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;xmlns:th&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://www.thymeleaf.org&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;h4 id=&#34;2-속성-변경--&#34;&gt;2. &lt;strong&gt;속성 변경 - &lt;code&gt;th:href&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;p&gt;&lt;code&gt;th:href&lt;/code&gt;는 HTML의 &lt;code&gt;href&lt;/code&gt; 속성을 동적으로 변경할 수 있습니다.&lt;br&gt;&#xA;예시:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;link&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;value1&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;th:href&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;@{/css/bootstrap.min.css}&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;동작 방식&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;HTML 파일을 직접 열면 &lt;code&gt;href=&amp;quot;value1&amp;quot;&lt;/code&gt;이 사용됩니다.&lt;/li&gt;&#xA;&lt;li&gt;타임리프 템플릿을 거치면 &lt;code&gt;th:href&lt;/code&gt;의 값(&lt;code&gt;@{/css/bootstrap.min.css}&lt;/code&gt;)으로 대체됩니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;핵심&lt;/strong&gt;:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;th:xxx&lt;/code&gt;가 붙은 부분은 서버 사이드에서 렌더링되며, 기존 값을 대체합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;th:xxx&lt;/code&gt;가 없으면 기존 HTML 속성이 그대로 유지됩니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h4 id=&#34;3-url-링크-표현식--&#34;&gt;3. &lt;strong&gt;URL 링크 표현식 - &lt;code&gt;@{...}&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;p&gt;타임리프에서 URL 링크를 작성할 때는 &lt;code&gt;@{...}&lt;/code&gt;를 사용합니다. 이를 &lt;strong&gt;URL 링크 표현식&lt;/strong&gt;이라 합니다.&lt;br&gt;&#xA;예시:&lt;/p&gt;</description>
    </item>
    <item>
      <title>spring controller 인수(parameter)</title>
      <link>http://localhost:1313/younghan-mvc1/spring-controller-%EC%9D%B8%EC%88%98parameter/</link>
      <pubDate>Sat, 15 Mar 2025 22:44:00 +0900</pubDate>
      <guid>http://localhost:1313/younghan-mvc1/spring-controller-%EC%9D%B8%EC%88%98parameter/</guid>
      <description></description>
    </item>
    <item>
      <title>ryugod 프로젝트2</title>
      <link>http://localhost:1313/06.university/mju_ecs-project/ryugod-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B82/</link>
      <pubDate>Sat, 15 Mar 2025 10:30:00 +0900</pubDate>
      <guid>http://localhost:1313/06.university/mju_ecs-project/ryugod-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B82/</guid>
      <description>&lt;p&gt;mysql template 자료 : &lt;a href=&#34;https://hub.docker.com/_/mysql&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;https://hub.docker.com/_/mysql&lt;/a&gt;&#xA;postgres template 자료 : &lt;a href=&#34;https://hub.docker.com/_/postgres&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;https://hub.docker.com/_/postgres&lt;/a&gt;&#xA;mongoDB template 자료 : &lt;a href=&#34;https://hub.docker.com/_/mongo&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;https://hub.docker.com/_/mongo&lt;/a&gt;&#xA;&amp;hellip;&lt;/p&gt;&#xA;&lt;h3 id=&#34;api&#34;&gt;API&lt;/h3&gt;&#xA;&lt;p&gt;컨테이너 생성 : &lt;code&gt;POST /api/{userId}/container&lt;/code&gt;&#xA;요청 본문:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;image&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ubuntu:22.04&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;template&amp;#34;&lt;/span&gt;,  &lt;span style=&#34;color:#75715e&#34;&gt;// 또는 &amp;#34;manual&amp;#34; 현재는 menual 만 사용&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;container_port&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;3306&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;// 컨테이너 내부에서 사용하는 서비스 포트 22는 자동&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;env&amp;#34;&lt;/span&gt; : [] &lt;span style=&#34;color:#75715e&#34;&gt;// mysql 의 경우 MYSQL_ROOT_PASSWORD 변수가 필수로 필요하다&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;응답:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;status&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;success&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;container_id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;c123456789&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;container_name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MjuEcs-username-1&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;터미널 세션 API : &lt;code&gt;POST /api/terminals/create&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>일반 함수 호출 (User-level Function Call) vs 시스템 콜 (System Call) 호출 방식의 차이</title>
      <link>http://localhost:1313/02.inbox/%EC%9D%BC%EB%B0%98-%ED%95%A8%EC%88%98-%ED%98%B8%EC%B6%9C-user-level-function-call-vs-%EC%8B%9C%EC%8A%A4%ED%85%9C-%EC%BD%9C-system-call-%ED%98%B8%EC%B6%9C-%EB%B0%A9%EC%8B%9D%EC%9D%98-%EC%B0%A8%EC%9D%B4/</link>
      <pubDate>Tue, 11 Mar 2025 11:39:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EC%9D%BC%EB%B0%98-%ED%95%A8%EC%88%98-%ED%98%B8%EC%B6%9C-user-level-function-call-vs-%EC%8B%9C%EC%8A%A4%ED%85%9C-%EC%BD%9C-system-call-%ED%98%B8%EC%B6%9C-%EB%B0%A9%EC%8B%9D%EC%9D%98-%EC%B0%A8%EC%9D%B4/</guid>
      <description>&lt;p&gt;시스템 콜(system call)은 사용자 프로그램이 커널의 기능을 간접적으로 호출하는 메커니즘이며, **매핑 테이블(시스템 콜 테이블)**을 통해 실제 커널 함수로 연결됩니다. 일반 함수 호출과 시스템 콜의 동작 방식을 인텔 어셈블리 문법과 함께 비교 설명합니다.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;1-일반-함수-호출-user-level-function-call&#34;&gt;&lt;strong&gt;1. 일반 함수 호출 (User-level Function Call)&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;동작-방식&#34;&gt;&lt;strong&gt;동작 방식&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;직접 호출&lt;/strong&gt;: 호출자(caller)가 함수의 메모리 주소를 직접 참조합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;파라미터 전달&lt;/strong&gt;: 레지스터 또는 스택을 사용합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;제어권 이동&lt;/strong&gt;: 사용자 공간 내에서만 실행되며, 커널 모드 전환 없이 동작합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;예시-간단한-덧셈-함수-호출&#34;&gt;&lt;strong&gt;예시: 간단한 덧셈 함수 호출&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;section&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;.data&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;num1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;dd&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;num2&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;dd&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;section&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;.text&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;global&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;_start&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;_start:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;; 파라미터 전달 (레지스터 사용)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;mov&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;eax&lt;/span&gt;, [&lt;span style=&#34;color:#66d9ef&#34;&gt;num1&lt;/span&gt;]  &lt;span style=&#34;color:#75715e&#34;&gt;; EAX = 10&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;mov&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ebx&lt;/span&gt;, [&lt;span style=&#34;color:#66d9ef&#34;&gt;num2&lt;/span&gt;]  &lt;span style=&#34;color:#75715e&#34;&gt;; EBX = 20&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;call&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;add_numbers&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;; 함수 호출&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;; 종료 (시스템 콜 예시로 대체 가능)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;mov&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;eax&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;       &lt;span style=&#34;color:#75715e&#34;&gt;; sys_exit 시스템 콜 번호&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0x80&lt;/span&gt;         &lt;span style=&#34;color:#75715e&#34;&gt;; 커널 호출&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;add_numbers:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;eax&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;ebx&lt;/span&gt;     &lt;span style=&#34;color:#75715e&#34;&gt;; EAX = EAX + EBX&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;ret&lt;/span&gt;              &lt;span style=&#34;color:#75715e&#34;&gt;; 결과 반환&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;: &lt;code&gt;call&lt;/code&gt; 명령어로 직접 함수 주소로 점프 → 커널 개입 없이 사용자 공간에서 실행.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;2-시스템-콜-system-call&#34;&gt;&lt;strong&gt;2. 시스템 콜 (System Call)&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;동작-방식-1&#34;&gt;&lt;strong&gt;동작 방식&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;간접 호출&lt;/strong&gt;: 시스템 콜 번호를 **매핑 테이블(sys_call_table)**에 전달해 커널 함수를 찾아 실행합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;모드 전환&lt;/strong&gt;: 사용자 모드 → 커널 모드 전환 (特权级别 변경).&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;파라미터 전달&lt;/strong&gt;: 레지스터에 시스템 콜 번호와 인자 저장 (예: &lt;code&gt;eax&lt;/code&gt;, &lt;code&gt;ebx&lt;/code&gt;, &lt;code&gt;ecx&lt;/code&gt; 등).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;시스템-콜-테이블의-역할&#34;&gt;&lt;strong&gt;시스템 콜 테이블의 역할&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;커널은 &lt;strong&gt;sys_call_table&lt;/strong&gt;이라는 배열을 유지하며, 각 인덱스는 시스템 콜 번호에 해당합니다.&lt;/li&gt;&#xA;&lt;li&gt;예: Linux x86에서 &lt;code&gt;sys_write&lt;/code&gt;의 시스템 콜 번호는 &lt;code&gt;4&lt;/code&gt;입니다.&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Linux 커널 소스 (unistd_32.h)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#define __NR_write 4&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;예시&#34;&gt;&lt;strong&gt;예시: &lt;code&gt;sys_write&lt;/code&gt; 시스템 콜 호출&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;section&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;.data&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;msg&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;db&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Hello&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;World&lt;/span&gt;!&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0xA&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;; 출력 메시지 (0xA = 개행)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;len&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;equ&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;$&lt;/span&gt; - &lt;span style=&#34;color:#66d9ef&#34;&gt;msg&lt;/span&gt;               &lt;span style=&#34;color:#75715e&#34;&gt;; 메시지 길이&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;section&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;.text&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;global&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;_start&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;_start:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;; 시스템 콜 파라미터 설정 (레지스터 사용)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;mov&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;eax&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;; sys_write 시스템 콜 번호 (NR_write = 4)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;mov&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ebx&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;; 파일 디스크립터 (stdout = 1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;mov&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ecx&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;msg&lt;/span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;; 메시지 주소&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;mov&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;edx&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;len&lt;/span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;; 메시지 길이&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0x80&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;; 커널 모드 전환 (소프트웨어 인터럽트)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;; 프로그램 종료&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;mov&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;eax&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;; sys_exit 시스템 콜 번호&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;xor&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ebx&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;ebx&lt;/span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;; 반환 값 0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0x80&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;시스템-콜-처리-과정&#34;&gt;&lt;strong&gt;시스템 콜 처리 과정&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;인터럽트 발생&lt;/strong&gt;: &lt;code&gt;int 0x80&lt;/code&gt; 또는 &lt;code&gt;syscall&lt;/code&gt; 명령어로 커널 모드 진입.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;시스템 콜 번호 확인&lt;/strong&gt;: &lt;code&gt;eax&lt;/code&gt; 레지스터에서 시스템 콜 번호를 읽습니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;매핑 테이블 조회&lt;/strong&gt;: 커널은 &lt;code&gt;sys_call_table&lt;/code&gt;에서 해당 번호의 함수 포인터를 찾습니다.&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 커널 내부 sys_call_table 예시 (x86)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;asmlinkage &lt;span style=&#34;color:#66d9ef&#34;&gt;long&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sys_write&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; fd, &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; __user &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;buf, &lt;span style=&#34;color:#66d9ef&#34;&gt;size_t&lt;/span&gt; count);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;함수 실행&lt;/strong&gt;: 매핑된 커널 함수(예: &lt;code&gt;sys_write&lt;/code&gt;)를 실행합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;결과 반환&lt;/strong&gt;: 사용자 모드로 복귀 후 결과를 레지스터(&lt;code&gt;eax&lt;/code&gt;)에 저장합니다.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;3-시스템-콜-vs-일반-함수-호출의-핵심-차이&#34;&gt;&lt;strong&gt;3. 시스템 콜 vs 일반 함수 호출의 핵심 차이&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;strong&gt;구분&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;일반 함수 호출&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;시스템 콜&lt;/strong&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;실행 모드&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;사용자 모드 (User Mode)&lt;/td&gt;&#xA;          &lt;td&gt;커널 모드 (Kernel Mode)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;호출 방식&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;직접 호출 (&lt;code&gt;call&lt;/code&gt; 명령어)&lt;/td&gt;&#xA;          &lt;td&gt;간접 호출 (인터럽트/시스템 콜 명령어)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;파라미터 전달&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;레지스터/스택&lt;/td&gt;&#xA;          &lt;td&gt;레지스터 (커널에서 정의한 규칙)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;오버헤드&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;낮음 (메모리 접근만 발생)&lt;/td&gt;&#xA;          &lt;td&gt;높음 (모드 전환, 컨텍스트 스위칭)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;보안&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;제한 없음&lt;/td&gt;&#xA;          &lt;td&gt;커널이 검증 후 실행&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;시스템-콜-테이블의-구조-linux-x86-예시&#34;&gt;&lt;strong&gt;시스템 콜 테이블의 구조 (Linux x86 예시)&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// arch/x86/kernel/syscall_32.c (커널 소스)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;extern&lt;/span&gt; asmlinkage &lt;span style=&#34;color:#66d9ef&#34;&gt;long&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sys_write&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; __user &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;size_t&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;extern&lt;/span&gt; asmlinkage &lt;span style=&#34;color:#66d9ef&#34;&gt;long&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sys_read&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; __user &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;size_t&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;sys_call_ptr_t&lt;/span&gt; sys_call_table[__NR_syscall_max &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    [&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; ... __NR_syscall_max] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;sys_ni_syscall,  &lt;span style=&#34;color:#75715e&#34;&gt;// 기본값: 지원되지 않는 시스템 콜&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    [__NR_write] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sys_write,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    [__NR_read] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sys_read,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// ... (다른 시스템 콜 매핑)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;간접 참조&lt;/strong&gt;: &lt;code&gt;sys_call_table[__NR_write]&lt;/code&gt; → &lt;code&gt;sys_write&lt;/code&gt; 함수 포인터.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;요약&#34;&gt;&lt;strong&gt;요약&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;일반 함수 호출&lt;/strong&gt;: 사용자 공간 내에서 직접 실행되며, 빠르지만 권한이 제한적입니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;시스템 콜&lt;/strong&gt;: 커널의 매핑 테이블을 통해 간접적으로 실행되며, 모드 전환과 검증 과정을 거쳐 안전하게 하드웨어/커널 자원을 제어합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;: &lt;code&gt;int 0x80&lt;/code&gt;은 커널의 &lt;strong&gt;인터럽트 핸들러&lt;/strong&gt;를 호출해 시스템 콜 테이블을 조회하고, 실제 함수(예: &lt;code&gt;sys_write&lt;/code&gt;)를 실행합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>asm parameter passing 인자 전달 방식</title>
      <link>http://localhost:1313/02.inbox/asm-parameter-passing-%EC%9D%B8%EC%9E%90-%EC%A0%84%EB%8B%AC-%EB%B0%A9%EC%8B%9D/</link>
      <pubDate>Tue, 11 Mar 2025 11:35:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/asm-parameter-passing-%EC%9D%B8%EC%9E%90-%EC%A0%84%EB%8B%AC-%EB%B0%A9%EC%8B%9D/</guid>
      <description>&lt;p&gt;다음은 인텔 어셈블리 문법으로 각 파라미터 전달 방식을 구현한 예시&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;1-register를-통한-파라미터-전달&#34;&gt;&lt;strong&gt;1. Register를 통한 파라미터 전달&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;section&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;.data&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;; (데이터 섹션은 필요 시 정의)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;section&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;.text&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;global&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;_start&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;_start:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;; 두 정수를 레지스터로 전달 (EAX=5, EBX=10)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;mov&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;eax&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;mov&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ebx&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;call&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;add_registers&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;; 함수 호출&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;; 결과 확인 (EAX에 저장됨)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;; ... (종료 코드 생략)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;add_registers:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;eax&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;ebx&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;; EAX = EAX + EBX&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;ret&lt;/span&gt;           &lt;span style=&#34;color:#75715e&#34;&gt;; 결과를 EAX에 반환&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;: 레지스터(&lt;code&gt;eax&lt;/code&gt;, &lt;code&gt;ebx&lt;/code&gt;)에 직접 값 저장 → 빠른 접근 가능.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;주의&lt;/strong&gt;: 레지스터 수가 제한적이므로 복잡한 함수에는 부적합.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;2-memory를-통한-파라미터-전달-포인터-사용&#34;&gt;&lt;strong&gt;2. Memory를 통한 파라미터 전달 (포인터 사용)&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;section&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;.data&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;var1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;dd&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;      &lt;span style=&#34;color:#75715e&#34;&gt;; 32비트 정수 (15)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;var2&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;dd&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;      &lt;span style=&#34;color:#75715e&#34;&gt;; 32비트 정수 (25)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;section&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;.text&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;global&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;_start&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;_start:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;; 메모리 주소를 레지스터로 전달&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;mov&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;esi&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;var1&lt;/span&gt;   &lt;span style=&#34;color:#75715e&#34;&gt;; ESI = var1의 주소&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;mov&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;edi&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;var2&lt;/span&gt;   &lt;span style=&#34;color:#75715e&#34;&gt;; EDI = var2의 주소&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;call&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;add_memory&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;; 함수 호출&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;; ... (종료 코드 생략)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;add_memory:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;mov&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;eax&lt;/span&gt;, [&lt;span style=&#34;color:#66d9ef&#34;&gt;esi&lt;/span&gt;]  &lt;span style=&#34;color:#75715e&#34;&gt;; EAX = [var1] (15)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;eax&lt;/span&gt;, [&lt;span style=&#34;color:#66d9ef&#34;&gt;edi&lt;/span&gt;]  &lt;span style=&#34;color:#75715e&#34;&gt;; EAX += [var2] (25)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;ret&lt;/span&gt;             &lt;span style=&#34;color:#75715e&#34;&gt;; 결과 반환&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;: 메모리 주소를 레지스터(&lt;code&gt;esi&lt;/code&gt;, &lt;code&gt;edi&lt;/code&gt;)로 전달 → 대용량 데이터 처리 가능.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;주의&lt;/strong&gt;: 메모리 접근 오버헤드 발생 (캐시 미스 시 성능 저하).&#xA;일반적으로 힙 영역에 적층&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;3-stack을-통한-파라미터-전달&#34;&gt;&lt;strong&gt;3. Stack을 통한 파라미터 전달&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;section&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;.data&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;; (데이터 섹션은 필요 시 정의)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;section&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;.text&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;global&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;_start&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;_start:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;; 스택에 파라미터 푸시 (역순으로 전달)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;push&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;         &lt;span style=&#34;color:#75715e&#34;&gt;; 두 번째 인자&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;push&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;         &lt;span style=&#34;color:#75715e&#34;&gt;; 첫 번째 인자&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;call&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;add_stack&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;; 함수 호출&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;; 스택 정리 (cdecl 규약: 호출자가 정리)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;esp&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;      &lt;span style=&#34;color:#75715e&#34;&gt;; 2개의 DWORD(4바이트*2) 제거&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;; ... (종료 코드 생략)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;add_stack:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;push&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ebp&lt;/span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;; 베이스 포인터 보존&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;mov&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ebp&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;esp&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;; 스택 프레임 설정&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;; [ebp+8] = 첫 번째 인자 (40)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;; [ebp+12] = 두 번째 인자 (30)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;mov&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;eax&lt;/span&gt;, [&lt;span style=&#34;color:#66d9ef&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;eax&lt;/span&gt;, [&lt;span style=&#34;color:#66d9ef&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;pop&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ebp&lt;/span&gt;         &lt;span style=&#34;color:#75715e&#34;&gt;; 베이스 포인터 복구&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;ret&lt;/span&gt;             &lt;span style=&#34;color:#75715e&#34;&gt;; 결과 반환&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;: 스택을 통해 인자 전달 → 재귀 호출 등 복잡한 로직에 적합.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;주의&lt;/strong&gt;: 스택 오버플로우 위험 (너무 큰 데이터 전달 금지).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;키-포인트&#34;&gt;&lt;strong&gt;키 포인트&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;Register&lt;/strong&gt;: 빠르지만 제한적 → 최적화된 코드에 사용.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Memory&lt;/strong&gt;: 대용량 데이터 처리 가능 → 구조체/배열 전달 시 유리.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Stack&lt;/strong&gt;: 함수 호출 관리 용이 → 대부분의 고수준 언어 기본 방식.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;인텔 문법에서 &lt;code&gt;mov eax, [ebx]&lt;/code&gt;는 &amp;ldquo;ebx가 가리키는 메모리 값 로드&amp;quot;이며, &lt;code&gt;push&lt;/code&gt;, &lt;code&gt;pop&lt;/code&gt;은 스택 조작 명령어입니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>spring View 구현체</title>
      <link>http://localhost:1313/02.inbox/spring-view-%EA%B5%AC%ED%98%84%EC%B2%B4/</link>
      <pubDate>Mon, 10 Mar 2025 00:27:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/spring-view-%EA%B5%AC%ED%98%84%EC%B2%B4/</guid>
      <description>&lt;p&gt;스프링 MVC의 **&lt;code&gt;View&lt;/code&gt;**는 &lt;strong&gt;모델 데이터를 클라이언트에게 렌더링하는 최종 형식&lt;/strong&gt;을 결정하는 인터페이스입니다.&lt;br&gt;&#xA;아래에서 언급된 21개의 &lt;code&gt;View&lt;/code&gt; 구현체를 &lt;strong&gt;목적별로 체계적으로 정리&lt;/strong&gt;했습니다:&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;1-기본-추상-클래스&#34;&gt;1. &lt;strong&gt;기본 추상 클래스&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;11-abstractview&#34;&gt;1.1 &lt;strong&gt;&lt;code&gt;AbstractView&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;모든 뷰 구현체의 기본 추상 클래스&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;render()&lt;/code&gt; 메서드를 구현해 모델 데이터를 응답으로 변환합니다.&lt;/li&gt;&#xA;&lt;li&gt;커스텀 뷰를 만들 때 상속받아 사용합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;사용 예시&lt;/strong&gt;:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;CustomCsvView&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;extends&lt;/span&gt; AbstractView {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;@Override&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;protected&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;renderMergedOutputModel&lt;/span&gt;(Map&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;String, Object&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; model, HttpServletRequest request, HttpServletResponse response) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// CSV 생성 로직&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;2-피드feed-뷰&#34;&gt;2. &lt;strong&gt;피드(Feed) 뷰&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;21-abstractatomfeedview&#34;&gt;2.1 &lt;strong&gt;&lt;code&gt;AbstractAtomFeedView&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;Atom 형식의 피드&lt;/strong&gt;를 생성합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Atom 1.0 스펙을 준수하는 XML 피드를 생성합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;Rome&lt;/code&gt; 라이브러리를 내부적으로 사용합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;: 블로그 글 목록을 Atom 피드로 제공.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;22-abstractrssfeedview&#34;&gt;2.2 &lt;strong&gt;&lt;code&gt;AbstractRssFeedView&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;RSS 형식의 피드&lt;/strong&gt;를 생성합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;RSS 2.0 스펙을 준수하는 XML 피드를 생성합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;Rome&lt;/code&gt; 라이브러리를 사용합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;: 뉴스 사이트의 RSS 피드.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;23-abstractfeedview&#34;&gt;2.3 &lt;strong&gt;&lt;code&gt;AbstractFeedView&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;Atom/RSS 피드의 공통 로직&lt;/strong&gt;을 제공합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;AbstractAtomFeedView&lt;/code&gt;와 &lt;code&gt;AbstractRssFeedView&lt;/code&gt;의 부모 클래스입니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;3-jsonxml-뷰&#34;&gt;3. &lt;strong&gt;JSON/XML 뷰&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;31-mappingjackson2jsonview&#34;&gt;3.1 &lt;strong&gt;&lt;code&gt;MappingJackson2JsonView&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;JSON 형식의 응답&lt;/strong&gt;을 생성합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Jackson 2 라이브러리를 사용해 모델 데이터를 JSON으로 변환합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;@ResponseBody&lt;/code&gt; 대신 뷰를 통해 JSON을 반환할 때 사용됩니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Bean&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; View &lt;span style=&#34;color:#a6e22e&#34;&gt;jsonView&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; MappingJackson2JsonView();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;32-mappingjackson2xmlview&#34;&gt;3.2 &lt;strong&gt;&lt;code&gt;MappingJackson2XmlView&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;XML 형식의 응답&lt;/strong&gt;을 생성합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Jackson 2의 XML 확장을 사용해 모델 데이터를 XML로 변환합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;: 레거시 시스템과의 XML 통신.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;33-marshallingview&#34;&gt;3.3 &lt;strong&gt;&lt;code&gt;MarshallingView&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;XML/JSON 변환을 위한 마샬링 뷰&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;JAXB, Castor 등 다양한 마샬러를 지원합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;Marshaller&lt;/code&gt; 인터페이스를 구현한 라이브러리를 사용합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;4-pdf-뷰&#34;&gt;4. &lt;strong&gt;PDF 뷰&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;41-abstractpdfview&#34;&gt;4.1 &lt;strong&gt;&lt;code&gt;AbstractPdfView&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;PDF 문서&lt;/strong&gt;를 생성합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;iText&lt;/code&gt; 라이브러리를 사용해 PDF를 생성합니다.&lt;/li&gt;&#xA;&lt;li&gt;모델 데이터를 테이블, 텍스트 등으로 렌더링합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;InvoicePdfView&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;extends&lt;/span&gt; AbstractPdfView {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;@Override&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;protected&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;buildPdfDocument&lt;/span&gt;(Map&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;String, Object&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; model, Document document, PdfWriter writer) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// PDF 문서 생성 로직&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;42-abstractpdfstamperview&#34;&gt;4.2 &lt;strong&gt;&lt;code&gt;AbstractPdfStamperView&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;기존 PDF 템플릿에 데이터 채우기&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;iText&lt;/code&gt;의 &lt;code&gt;PdfStamper&lt;/code&gt;를 사용해 정적 PDF 양식을 동적으로 채웁니다.&lt;/li&gt;&#xA;&lt;li&gt;계약서, 청구서 등 고정된 양식에 데이터를 입력할 때 사용됩니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;5-엑셀-뷰&#34;&gt;5. &lt;strong&gt;엑셀 뷰&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;51-abstractxlsview&#34;&gt;5.1 &lt;strong&gt;&lt;code&gt;AbstractXlsView&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;레거시 Excel(.xls) 파일&lt;/strong&gt; 생성.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;Apache POI&lt;/code&gt; 라이브러리를 사용해 Excel 97-2003 형식(.xls)을 생성합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;: 재무 데이터 보고서.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;52-abstractxlsxview&#34;&gt;5.2 &lt;strong&gt;&lt;code&gt;AbstractXlsxView&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;Excel 2007+ 형식(.xlsx) 파일&lt;/strong&gt; 생성.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;Apache POI&lt;/code&gt;의 &lt;code&gt;XSSF&lt;/code&gt; API를 사용해 최신 Excel 형식을 지원합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;53-abstractxlsxstreamingview&#34;&gt;5.3 &lt;strong&gt;&lt;code&gt;AbstractXlsxStreamingView&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;대용량 Excel 파일 스트리밍&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;메모리 사용을 최소화하기 위해 데이터를 스트리밍 방식으로 작성합니다.&lt;/li&gt;&#xA;&lt;li&gt;수십만 행의 데이터를 처리할 때 유용합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;6-템플릿-뷰&#34;&gt;6. &lt;strong&gt;템플릿 뷰&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;61-freemarkerview&#34;&gt;6.1 &lt;strong&gt;&lt;code&gt;FreeMarkerView&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;FreeMarker 템플릿&lt;/strong&gt;을 렌더링합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;FreeMarkerViewResolver&lt;/code&gt;와 함께 사용됩니다.&lt;/li&gt;&#xA;&lt;li&gt;HTML, 텍스트 등 다양한 형식을 지원합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;: 동적 HTML 페이지 생성.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;62-groovymarkupview&#34;&gt;6.2 &lt;strong&gt;&lt;code&gt;GroovyMarkupView&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;Groovy 템플릿&lt;/strong&gt;을 렌더링합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Groovy Markup Template을 사용해 뷰를 생성합니다.&lt;/li&gt;&#xA;&lt;li&gt;간결한 문법으로 XML/HTML을 생성합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;63-scripttemplateview&#34;&gt;6.3 &lt;strong&gt;&lt;code&gt;ScriptTemplateView&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;스크립트 기반 템플릿&lt;/strong&gt;(예: React, Nashorn)을 지원합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;JavaScript 엔진을 사용해 뷰를 렌더링합니다.&lt;/li&gt;&#xA;&lt;li&gt;서버 측에서 React 컴포넌트를 렌더링할 때 사용됩니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;7-jsp리소스-뷰&#34;&gt;7. &lt;strong&gt;JSP/리소스 뷰&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;71-internalresourceview&#34;&gt;7.1 &lt;strong&gt;&lt;code&gt;InternalResourceView&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;JSP 파일&lt;/strong&gt;을 렌더링합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;InternalResourceViewResolver&lt;/code&gt;와 함께 사용됩니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;JstlView&lt;/code&gt;의 부모 클래스입니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;72-jstlview&#34;&gt;7.2 &lt;strong&gt;&lt;code&gt;JstlView&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;JSTL 태그를 지원하는 JSP 뷰&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;JSTL의 &lt;code&gt;&amp;lt;fmt:message&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;c:forEach&amp;gt;&lt;/code&gt; 등을 사용할 수 있습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;8-특수-목적-뷰&#34;&gt;8. &lt;strong&gt;특수 목적 뷰&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;81-redirectview&#34;&gt;8.1 &lt;strong&gt;&lt;code&gt;RedirectView&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;HTTP 리다이렉트&lt;/strong&gt;를 수행합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;redirect:/newPath&lt;/code&gt; 또는 외부 URL(&lt;code&gt;https://example.com&lt;/code&gt;)로 이동합니다.&lt;/li&gt;&#xA;&lt;li&gt;Post/Redirect/Get 패턴 구현에 사용됩니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; ModelAndView(&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; RedirectView(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/home&amp;#34;&lt;/span&gt;));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;82-xsltview&#34;&gt;8.2 &lt;strong&gt;&lt;code&gt;XsltView&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;XML 데이터를 XSLT로 변환&lt;/strong&gt;합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;XML 데이터와 XSLT 스타일시트를 결합해 HTML 등을 생성합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-요약&#34;&gt;📌 &lt;strong&gt;요약&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;뷰 클래스&lt;/th&gt;&#xA;          &lt;th&gt;주요 형식&lt;/th&gt;&#xA;          &lt;th&gt;사용 사례&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;MappingJackson2JsonView&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;JSON&lt;/td&gt;&#xA;          &lt;td&gt;REST API 응답&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;AbstractPdfView&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;PDF&lt;/td&gt;&#xA;          &lt;td&gt;계약서, 보고서 생성&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;AbstractXlsxView&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Excel(.xlsx)&lt;/td&gt;&#xA;          &lt;td&gt;데이터 분석 리포트&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;FreeMarkerView&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;HTML&lt;/td&gt;&#xA;          &lt;td&gt;동적 웹 페이지&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;RedirectView&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;HTTP 리다이렉트&lt;/td&gt;&#xA;          &lt;td&gt;Post-Redirect-Get 패턴&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-핵심-포인트&#34;&gt;💡 &lt;strong&gt;핵심 포인트&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;JSON/XML&lt;/strong&gt;은 &lt;strong&gt;&lt;code&gt;MappingJackson2JsonView&lt;/code&gt;&lt;/strong&gt; 로 처리합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;PDF/Excel&lt;/strong&gt;은 &lt;strong&gt;&lt;code&gt;AbstractPdfView&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;AbstractXlsxView&lt;/code&gt;&lt;/strong&gt; 를 확장해 구현합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;리다이렉트&lt;/strong&gt;는 &lt;strong&gt;&lt;code&gt;RedirectView&lt;/code&gt;&lt;/strong&gt; 를 사용합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;템플릿 엔진&lt;/strong&gt;은 각각 전용 뷰 클래스(예: &lt;code&gt;FreeMarkerView&lt;/code&gt;)를 사용합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>spring ViewResolver 구현체</title>
      <link>http://localhost:1313/02.inbox/spring-viewresolver-%EA%B5%AC%ED%98%84%EC%B2%B4/</link>
      <pubDate>Mon, 10 Mar 2025 00:23:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/spring-viewresolver-%EA%B5%AC%ED%98%84%EC%B2%B4/</guid>
      <description>&lt;p&gt;스프링 MVC의 &lt;strong&gt;&lt;code&gt;ViewResolver&lt;/code&gt;&lt;/strong&gt; 는 &lt;strong&gt;뷰 이름을 실제 &lt;code&gt;View&lt;/code&gt; 객체로 변환&lt;/strong&gt;하는 역할을 합니다.&lt;br&gt;&#xA;다양한 구현체가 있으며, 각각의 특징과 사용 사례를 체계적으로 정리했습니다:&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;1-abstractcachingviewresolver&#34;&gt;1. &lt;strong&gt;&lt;code&gt;AbstractCachingViewResolver&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;뷰 캐싱 기능을 제공하는 추상 클래스&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;뷰 객체를 캐시하여 &lt;strong&gt;반복적인 뷰 생성을 방지&lt;/strong&gt;합니다.&lt;/li&gt;&#xA;&lt;li&gt;하위 클래스(예: &lt;code&gt;UrlBasedViewResolver&lt;/code&gt;)가 캐싱 로직을 재사용할 수 있도록 합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;사용 예시&lt;/strong&gt;:&lt;br&gt;&#xA;&lt;code&gt;InternalResourceViewResolver&lt;/code&gt;가 이 클래스를 상속받아 JSP 뷰 캐싱을 처리합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;2-abstracttemplateviewresolver&#34;&gt;2. &lt;strong&gt;&lt;code&gt;AbstractTemplateViewResolver&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;템플릿 기반 뷰(예: JSP, Thymeleaf)를 처리하는 추상 클래스&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;템플릿 엔진 설정(예: &lt;code&gt;prefix&lt;/code&gt;, &lt;code&gt;suffix&lt;/code&gt;)을 공통으로 관리합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;UrlBasedViewResolver&lt;/code&gt;와 함께 사용됩니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;사용 예시&lt;/strong&gt;:&lt;br&gt;&#xA;&lt;code&gt;FreeMarkerViewResolver&lt;/code&gt;가 이 클래스를 상속받아 FreeMarker 템플릿을 처리합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;3-beannameviewresolver&#34;&gt;3. &lt;strong&gt;&lt;code&gt;BeanNameViewResolver&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;스프링 빈 이름으로 뷰를 조회&lt;/strong&gt;합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;뷰 이름이 스프링 빈 이름과 일치하는 &lt;code&gt;View&lt;/code&gt; 객체를 찾아 반환합니다.&lt;/li&gt;&#xA;&lt;li&gt;커스텀 뷰(예: PDF 생성 뷰)를 빈으로 등록해 사용할 때 유용합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Bean&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; View &lt;span style=&#34;color:#a6e22e&#34;&gt;pdfView&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; AbstractPdfView() { &lt;span style=&#34;color:#75715e&#34;&gt;// PDF 뷰 구현&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;@Override&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;protected&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;buildPdfDocument&lt;/span&gt;(Map&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;String, Object&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; model, Document document, PdfWriter writer) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// PDF 생성 로직&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    };&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;4-contentnegotiatingviewresolver&#34;&gt;4. &lt;strong&gt;&lt;code&gt;ContentNegotiatingViewResolver&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;요청의 &lt;code&gt;Accept&lt;/code&gt; 헤더 또는 쿼리 파라미터에 따라 뷰를 선택&lt;/strong&gt;합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;클라이언트가 원하는 형식(JSON, XML, HTML 등)에 맞는 뷰를 반환합니다.&lt;/li&gt;&#xA;&lt;li&gt;내부적으로 다른 &lt;code&gt;ViewResolver&lt;/code&gt;를 조합해 동작합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Configuration&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;WebConfig&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;implements&lt;/span&gt; WebMvcConfigurer {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;@Override&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;configureViewResolvers&lt;/span&gt;(ViewResolverRegistry registry) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        registry.&lt;span style=&#34;color:#a6e22e&#34;&gt;enableContentNegotiation&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; JsonView(), &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; XmlView());&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;5-freemarkerviewresolver&#34;&gt;5. &lt;strong&gt;&lt;code&gt;FreeMarkerViewResolver&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;FreeMarker 템플릿&lt;/strong&gt;을 처리합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;뷰 이름을 FreeMarker 템플릿 파일 경로(예: &lt;code&gt;views/user.ftl&lt;/code&gt;)로 변환합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;FreeMarkerConfigurer&lt;/code&gt;와 함께 설정됩니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Bean&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; FreeMarkerViewResolver &lt;span style=&#34;color:#a6e22e&#34;&gt;freeMarkerViewResolver&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    FreeMarkerViewResolver resolver &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; FreeMarkerViewResolver();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    resolver.&lt;span style=&#34;color:#a6e22e&#34;&gt;setPrefix&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/WEB-INF/views/&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    resolver.&lt;span style=&#34;color:#a6e22e&#34;&gt;setSuffix&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.ftl&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; resolver;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;6-groovymarkupviewresolver&#34;&gt;6. &lt;strong&gt;&lt;code&gt;GroovyMarkupViewResolver&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;Groovy 템플릿&lt;/strong&gt;을 처리합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Groovy Markup Template(예: &lt;code&gt;user.tpl&lt;/code&gt;)을 렌더링합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;GroovyMarkupConfigurer&lt;/code&gt;로 템플릿 설정을 관리합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Bean&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; GroovyMarkupViewResolver &lt;span style=&#34;color:#a6e22e&#34;&gt;groovyViewResolver&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    GroovyMarkupViewResolver resolver &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; GroovyMarkupViewResolver();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    resolver.&lt;span style=&#34;color:#a6e22e&#34;&gt;setPrefix&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/views/&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    resolver.&lt;span style=&#34;color:#a6e22e&#34;&gt;setSuffix&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.tpl&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; resolver;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;7-internalresourceviewresolver&#34;&gt;7. &lt;strong&gt;&lt;code&gt;InternalResourceViewResolver&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;JSP 뷰&lt;/strong&gt;를 처리하는 가장 일반적인 리졸버.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;뷰 이름을 JSP 파일 경로(예: &lt;code&gt;/WEB-INF/views/home.jsp&lt;/code&gt;)로 변환합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;prefix&lt;/code&gt;와 &lt;code&gt;suffix&lt;/code&gt;로 경로를 설정합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Bean&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; InternalResourceViewResolver &lt;span style=&#34;color:#a6e22e&#34;&gt;viewResolver&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    InternalResourceViewResolver resolver &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; InternalResourceViewResolver();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    resolver.&lt;span style=&#34;color:#a6e22e&#34;&gt;setPrefix&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/WEB-INF/views/&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    resolver.&lt;span style=&#34;color:#a6e22e&#34;&gt;setSuffix&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.jsp&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; resolver;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;8-resourcebundleviewresolver&#34;&gt;8. &lt;strong&gt;&lt;code&gt;ResourceBundleViewResolver&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;프로퍼티 파일&lt;/strong&gt;로 뷰를 정의합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;views.properties&lt;/code&gt; 파일에 뷰 이름과 클래스 정보를 저장합니다.&lt;/li&gt;&#xA;&lt;li&gt;다국어 뷰 또는 외부 설정이 필요한 경우에 사용됩니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-properties&#34; data-lang=&#34;properties&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# views.properties&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;home.class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;org.springframework.web.servlet.view.JstlView&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;home.url&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/WEB-INF/views/home.jsp&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;9-scripttemplateviewresolver&#34;&gt;9. &lt;strong&gt;&lt;code&gt;ScriptTemplateViewResolver&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;스크립트 기반 템플릿&lt;/strong&gt;(예: Nashorn, React)을 처리합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;JavaScript 또는 다른 스크립트 엔진으로 뷰를 렌더링합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;ScriptTemplateConfigurer&lt;/code&gt;로 스크립트 엔진을 설정합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Bean&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; ScriptTemplateViewResolver &lt;span style=&#34;color:#a6e22e&#34;&gt;scriptViewResolver&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ScriptTemplateViewResolver resolver &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; ScriptTemplateViewResolver();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    resolver.&lt;span style=&#34;color:#a6e22e&#34;&gt;setPrefix&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;templates/&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    resolver.&lt;span style=&#34;color:#a6e22e&#34;&gt;setSuffix&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.jsx&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; resolver;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;10-urlbasedviewresolver&#34;&gt;10. &lt;strong&gt;&lt;code&gt;UrlBasedViewResolver&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;URL 기반 뷰&lt;/strong&gt;를 직접 매핑합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;뷰 이름을 URL 경로로 직접 변환합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;InternalResourceViewResolver&lt;/code&gt;의 부모 클래스입니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Bean&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; UrlBasedViewResolver &lt;span style=&#34;color:#a6e22e&#34;&gt;urlBasedViewResolver&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    UrlBasedViewResolver resolver &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; UrlBasedViewResolver();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    resolver.&lt;span style=&#34;color:#a6e22e&#34;&gt;setViewClass&lt;/span&gt;(JstlView.&lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    resolver.&lt;span style=&#34;color:#a6e22e&#34;&gt;setPrefix&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/WEB-INF/views/&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    resolver.&lt;span style=&#34;color:#a6e22e&#34;&gt;setSuffix&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.jsp&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; resolver;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;11-viewresolvercomposite&#34;&gt;11. &lt;strong&gt;&lt;code&gt;ViewResolverComposite&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;다중 &lt;code&gt;ViewResolver&lt;/code&gt;를 조합&lt;/strong&gt;합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;여러 리졸버를 순차적으로 실행해 적절한 뷰를 찾습니다.&lt;/li&gt;&#xA;&lt;li&gt;우선순위를 설정할 수 있습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Bean&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; ViewResolverComposite &lt;span style=&#34;color:#a6e22e&#34;&gt;compositeResolver&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ViewResolverComposite composite &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; ViewResolverComposite();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    composite.&lt;span style=&#34;color:#a6e22e&#34;&gt;addResolver&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; InternalResourceViewResolver());&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    composite.&lt;span style=&#34;color:#a6e22e&#34;&gt;addResolver&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; FreeMarkerViewResolver());&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; composite;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;12-xmlviewresolver&#34;&gt;12. &lt;strong&gt;&lt;code&gt;XmlViewResolver&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;XML 파일&lt;/strong&gt;로 뷰를 정의합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;views.xml&lt;/code&gt;과 같은 XML 설정 파일에서 뷰 빈을 로드합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;ResourceBundleViewResolver&lt;/code&gt;와 유사하지만 XML 형식을 사용합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- views.xml --&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;beans&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;bean&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;home&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;org.springframework.web.servlet.view.JstlView&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;value=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/WEB-INF/views/home.jsp&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/bean&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/beans&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;13-xsltviewresolver&#34;&gt;13. &lt;strong&gt;&lt;code&gt;XsltViewResolver&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;XSLT(XML 변환)&lt;/strong&gt; 뷰를 처리합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;XML 데이터를 XSLT 스타일시트로 변환합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;XsltView&lt;/code&gt; 클래스를 사용해 렌더링합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Bean&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; XsltViewResolver &lt;span style=&#34;color:#a6e22e&#34;&gt;xsltViewResolver&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    XsltViewResolver resolver &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; XsltViewResolver();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    resolver.&lt;span style=&#34;color:#a6e22e&#34;&gt;setPrefix&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/WEB-INF/xsl/&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    resolver.&lt;span style=&#34;color:#a6e22e&#34;&gt;setSuffix&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.xsl&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; resolver;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-요약&#34;&gt;📌 &lt;strong&gt;요약&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;리졸버명&lt;/th&gt;&#xA;          &lt;th&gt;주요 기능&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;InternalResourceViewResolver&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;JSP 뷰 처리 (가장 일반적)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;FreeMarkerViewResolver&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;FreeMarker 템플릿 처리&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;ContentNegotiatingViewResolver&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;요청 형식(JSON/XML)에 따라 뷰 선택&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;BeanNameViewResolver&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;스프링 빈 이름으로 뷰 조회&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;ViewResolverComposite&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;다중 리졸버 조합&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;XsltViewResolver&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;XML을 XSLT로 변환&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-핵심-포인트&#34;&gt;💡 &lt;strong&gt;핵심 포인트&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;JSP&lt;/strong&gt;는 &lt;strong&gt;&lt;code&gt;InternalResourceViewResolver&lt;/code&gt;&lt;/strong&gt; 로 처리합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;템플릿 엔진&lt;/strong&gt;(FreeMarker, Groovy)은 각각 전용 리졸버를 사용합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;다중 포맷 지원&lt;/strong&gt;(JSON, XML)은 &lt;strong&gt;&lt;code&gt;ContentNegotiatingViewResolver&lt;/code&gt;&lt;/strong&gt; 로 구현합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;커스텀 뷰&lt;/strong&gt;는 &lt;code&gt;BeanNameViewResolver&lt;/code&gt; 또는 &lt;code&gt;ResourceBundleViewResolver&lt;/code&gt;로 관리합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>spring HandlerAdapter 구현체</title>
      <link>http://localhost:1313/02.inbox/spring-handleradapter-%EA%B5%AC%ED%98%84%EC%B2%B4/</link>
      <pubDate>Mon, 10 Mar 2025 00:14:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/spring-handleradapter-%EA%B5%AC%ED%98%84%EC%B2%B4/</guid>
      <description>&lt;p&gt;스프링 MVC의 **&lt;code&gt;HandlerAdapter&lt;/code&gt;**는 다양한 유형의 핸들러(컨트롤러)를 실행하는 인터페이스입니다.&lt;br&gt;&#xA;각 &lt;code&gt;HandlerAdapter&lt;/code&gt; 구현체는 특정 유형의 핸들러를 지원합니다.&lt;br&gt;&#xA;아래에서 언급된 6가지 구현체를 체계적으로 설명합니다:&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;1-abstracthandlermethodadapter&#34;&gt;1. &lt;strong&gt;&lt;code&gt;AbstractHandlerMethodAdapter&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;메서드 기반 핸들러 어댑터의 추상 클래스&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;HandlerMethod&lt;/code&gt;를 처리하는 어댑터의 기본 기능을 제공합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;RequestMappingHandlerAdapter&lt;/code&gt;의 상위 클래스로, 메서드 단위 처리 로직을 공통화합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;사용 예시&lt;/strong&gt;:&lt;br&gt;&#xA;구체적인 구현체(&lt;code&gt;RequestMappingHandlerAdapter&lt;/code&gt;)에서 확장되어 사용됩니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;2-handlerfunctionadapter&#34;&gt;2. &lt;strong&gt;&lt;code&gt;HandlerFunctionAdapter&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;함수형 프로그래밍 스타일 핸들러&lt;/strong&gt;(&lt;code&gt;HandlerFunction&lt;/code&gt;)를 지원합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;RouterFunction&lt;/code&gt;과 함께 사용되며, 람다 표현식으로 핸들러를 정의합니다.&lt;/li&gt;&#xA;&lt;li&gt;Spring 5+에서 도입된 &lt;strong&gt;함수형 엔드포인트&lt;/strong&gt;를 처리합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Bean&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; RouterFunction&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;ServerResponse&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;route&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; RouterFunctions.&lt;span style=&#34;color:#a6e22e&#34;&gt;route&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .&lt;span style=&#34;color:#a6e22e&#34;&gt;GET&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/api/users&amp;#34;&lt;/span&gt;, request &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; ServerResponse.&lt;span style=&#34;color:#a6e22e&#34;&gt;ok&lt;/span&gt;().&lt;span style=&#34;color:#a6e22e&#34;&gt;body&lt;/span&gt;(...))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .&lt;span style=&#34;color:#a6e22e&#34;&gt;build&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;3-httprequesthandleradapter&#34;&gt;3. &lt;strong&gt;&lt;code&gt;HttpRequestHandlerAdapter&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;&lt;code&gt;HttpRequestHandler&lt;/code&gt; 인터페이스 구현체&lt;/strong&gt;를 처리합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;서블릿 API(&lt;code&gt;HttpServletRequest&lt;/code&gt;, &lt;code&gt;HttpServletResponse&lt;/code&gt;)를 직접 사용하는 레거시 코드와 호환됩니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;@Controller&lt;/code&gt; 애노테이션 없이도 핸들러를 등록할 수 있습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;LegacyHandler&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;implements&lt;/span&gt; HttpRequestHandler {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;@Override&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;handleRequest&lt;/span&gt;(HttpServletRequest request, HttpServletResponse response) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// 직접 응답을 생성합니다.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;4-requestmappinghandleradapter&#34;&gt;4. &lt;strong&gt;&lt;code&gt;RequestMappingHandlerAdapter&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;애노테이션 기반 컨트롤러&lt;/strong&gt;(&lt;code&gt;@RequestMapping&lt;/code&gt;, &lt;code&gt;@RestController&lt;/code&gt;)를 처리합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;@GetMapping&lt;/code&gt;, &lt;code&gt;@PostMapping&lt;/code&gt;, &lt;code&gt;@PathVariable&lt;/code&gt;, &lt;code&gt;@RequestBody&lt;/code&gt; 등을 지원합니다.&lt;/li&gt;&#xA;&lt;li&gt;현대적인 스프링 애플리케이션에서 &lt;strong&gt;가장 많이 사용되는 어댑터&lt;/strong&gt;입니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@RestController&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;UserController&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;@GetMapping&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/users&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; List&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;User&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getUsers&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; userService.&lt;span style=&#34;color:#a6e22e&#34;&gt;findAll&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;5-simplecontrollerhandleradapter&#34;&gt;5. &lt;strong&gt;&lt;code&gt;SimpleControllerHandlerAdapter&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;&lt;code&gt;Controller&lt;/code&gt; 인터페이스 구현체&lt;/strong&gt;를 처리합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;과거에 사용되던 방식으로, &lt;code&gt;Controller&lt;/code&gt; 인터페이스의 &lt;code&gt;handleRequest()&lt;/code&gt; 메서드를 호출합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;@Controller&lt;/code&gt; 애노테이션 없이 빈으로 등록해야 합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;OldController&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;implements&lt;/span&gt; Controller {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;@Override&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; ModelAndView &lt;span style=&#34;color:#a6e22e&#34;&gt;handleRequest&lt;/span&gt;(HttpServletRequest request, HttpServletResponse response) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; ModelAndView(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;viewName&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;6-simpleservlethandleradapter&#34;&gt;6. &lt;strong&gt;&lt;code&gt;SimpleServletHandlerAdapter&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;: &lt;strong&gt;일반 서블릿&lt;/strong&gt;(&lt;code&gt;javax.servlet.Servlet&lt;/code&gt;)을 핸들러로 사용합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;기존 서블릿을 스프링 MVC에서 재사용할 수 있도록 합니다.&lt;/li&gt;&#xA;&lt;li&gt;서블릿의 &lt;code&gt;service()&lt;/code&gt; 메서드를 직접 호출합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@WebServlet&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/legacy&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;LegacyServlet&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;extends&lt;/span&gt; HttpServlet {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;@Override&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;protected&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;doGet&lt;/span&gt;(HttpServletRequest req, HttpServletResponse res) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        res.&lt;span style=&#34;color:#a6e22e&#34;&gt;getWriter&lt;/span&gt;().&lt;span style=&#34;color:#a6e22e&#34;&gt;write&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Legacy Servlet Response&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-요약&#34;&gt;📌 &lt;strong&gt;요약&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;어댑터명&lt;/th&gt;&#xA;          &lt;th&gt;처리 대상&lt;/th&gt;&#xA;          &lt;th&gt;주요 사용 사례&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;HandlerFunctionAdapter&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;HandlerFunction&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;함수형 라우팅(람다 기반)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;HttpRequestHandlerAdapter&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;HttpRequestHandler&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;서블릿 API 기반 레거시 코드&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;RequestMappingHandlerAdapter&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;@RequestMapping&lt;/code&gt; 기반 컨트롤러&lt;/td&gt;&#xA;          &lt;td&gt;현대적인 REST API 개발&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;SimpleControllerHandlerAdapter&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;Controller&lt;/code&gt; 인터페이스&lt;/td&gt;&#xA;          &lt;td&gt;과거 버전 호환용 컨트롤러&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;SimpleServletHandlerAdapter&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;일반 서블릿&lt;/td&gt;&#xA;          &lt;td&gt;기존 서블릿 통합&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;-핵심-포인트&#34;&gt;💡 &lt;strong&gt;핵심 포인트&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;현대적인 개발&lt;/strong&gt;에서는 &lt;strong&gt;&lt;code&gt;RequestMappingHandlerAdapter&lt;/code&gt;&lt;/strong&gt; 가 주력으로 사용됩니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;함수형 프로그래밍&lt;/strong&gt;은 &lt;strong&gt;&lt;code&gt;HandlerFunctionAdapter&lt;/code&gt;&lt;/strong&gt; 로 처리합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;레거시 코드&lt;/strong&gt; 통합 시 &lt;code&gt;HttpRequestHandlerAdapter&lt;/code&gt; 또는 &lt;code&gt;SimpleServletHandlerAdapter&lt;/code&gt;를 사용합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;SimpleControllerHandlerAdapter&lt;/code&gt;는 거의 사용되지 않으며, &lt;code&gt;@Controller&lt;/code&gt; 애노테이션으로 대체되었습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>youngHan mvc1 프로젝트 변화 과정</title>
      <link>http://localhost:1313/younghan-mvc1/younghan-mvc1-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EB%B3%80%ED%99%94-%EA%B3%BC%EC%A0%95/</link>
      <pubDate>Tue, 04 Mar 2025 23:58:00 +0900</pubDate>
      <guid>http://localhost:1313/younghan-mvc1/younghan-mvc1-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EB%B3%80%ED%99%94-%EA%B3%BC%EC%A0%95/</guid>
      <description>&lt;h3 id=&#34;개발-순서&#34;&gt;개발 순서&lt;/h3&gt;&#xA;&lt;p&gt;java.hello.servlet 패키지에서 시작&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;basic 패키지&lt;/strong&gt; :  was 표준으로 되어 있는 서블릿을 등록하는 방법을 배운다&#xA;    WebSservlet 어노테이션 또는 web.xml 파일을 통해 서블릿을 등록할 수 있다&#xA;    실제 구현은 HttpServlet 을 상속받아 실제 사용자의 요청 정보(request) 또는 반환 정보(response)를 통제 변환할 수 있다&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;web.servlet 패키지&lt;/strong&gt; : 적절한 요청에 적절한 반환을 하기 위해 반환정보에(response) 원하는 html 을 쌩으로 담아서 넘겨본다&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;순수 jsp 패키지&lt;/strong&gt; : webapp 폴더안에 jsp 라는 이름으로 존재한다 jsp 를 통해 조금더 편안하게 요청을 처리해 보자 (jsp 에서 처리까지 다 해보기)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;web.servletmvc 패키지&lt;/strong&gt; : 적절한 요청에 jsp 를 통해 view 역할을 분리하여 본다 (jsp 에서 view 의 역할만 맡도록 만든다)&#xA;    (단 jsp 에서 view 에서 적절한 값을 렌더링 하기 위해 필요한 저장소가 있는데 이것이 현재 mvc 의 model 로 쓰이고 있고 이것이 HttpServletRequest 에 setAttribute 데 담아야 jsp 에서 참조하기 편하다)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;web.frontcontroller 패키지&lt;/strong&gt; : 각 버전별로 실제 발전되는 과정을 만들면서 spring 과 비슷하게 만들어 본다&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;v1 패키지&lt;/strong&gt; : 모든 컨트롤 부분이 모두 서블릿으로 등록될 필요없이 frontContoller 만 서블릿으로 등록해서 처리해보자&#xA;프론트 컨트롤러 에서 쉽게 각 컨트롤러를 쉽게 호출하기 위해 다형성을 사용하자&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;v2 패키지&lt;/strong&gt; : 모든 컨트롤 부분에서 jsp 로 forward 하는 부분이 겹친다 이 부분의 경우 따로 다른 클래스에서 처리하기 위해 MyView 클래스를 도입하자&#xA;각 컨트롤러에서 MyView만 반환해서 나머지는 프론트 컨트롤러에서 처리자 ( 여기서 약간 의문일 수 있는데 실제 jsp 말고 다른 view 를 사용할 수 있으므로 view 또 추상화하는 것이 좋다)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;v3 패키지&lt;/strong&gt; : 이 단계에서 많은 것을 해야 한다 모든 컨트롤 부분에서 http 요청 반환 정보(HttpServletRequest, HttpServletResponse) 가 같이 넘어간다 의존성을 제거해보자&#xA;&lt;ol&gt;&#xA;&lt;li&gt;사용자가 요청한 파라미터 정보는 HttpServletRequest.getParameter 를 통해 받는다 HttpServletRequest 없이 컨트롤러에서 처리하려면 프론트컨트롤러에서 처리해서 java 자료형으로 넘겨주어야 한다&lt;/li&gt;&#xA;&lt;li&gt;현재 request 객체를 model 로써 사용하고 있는데 이것을 새롭게 ModelView(MVC 패턴에서 Controller와 View 사이의 데이터 전달 및 뷰 논리적 이름을 관리) 만들자 ( model 의 역할을 함과 동시에 view 의 &lt;strong&gt;논리적 이름 역할&lt;/strong&gt;을 함께 가지고 있으므로 ModelView 로 만들었음 )&lt;/li&gt;&#xA;&lt;li&gt;사용자의 요청(특정 컨트롤러)과 파라미터를 처리해서 ModelView 를 만들어서 처리시키자&lt;/li&gt;&#xA;&lt;li&gt;modelView 에 있는 이름으로는 MyView 를 부르는데 부족하다 전체 경로를 만들어 주는 viewResolver 또한 필요하다&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;v4 패키지&lt;/strong&gt; : 컨트롤러 측에서 ModelView 또한 만들고 싶어하지 않는다 java자료형으로 만들어서 반환시키자&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;v5 패키지&lt;/strong&gt; : 컨트롤러 측에서 누구는 v3 누구는 v4 로 만들고 싶어한다 둘다 지원할 수 있도록 어뎁터를 만들자 어뎁터를 만들면서 컨트롤러는 더 큰 범위를 다룰 수 있으므로 handler 라고 명명한다 프론트 컨트롤러 측에서 적절한 컨트롤러를 받아서 적절한 어뎁터를 통해 진행시킨다&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;web.springmvc 패키지 : spring 을 사용한 편집&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;![Pasted image 202&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250304235889.png&#34; alt=&#34; (Image resource not found)&#34; &gt;5003267.png)&lt;/p&gt;</description>
    </item>
    <item>
      <title>MVC 1 강의 질문 사항</title>
      <link>http://localhost:1313/younghan-mvc1/mvc-1-%EA%B0%95%EC%9D%98-%EC%A7%88%EB%AC%B8-%EC%82%AC%ED%95%AD/</link>
      <pubDate>Fri, 28 Feb 2025 11:57:00 +0900</pubDate>
      <guid>http://localhost:1313/younghan-mvc1/mvc-1-%EA%B0%95%EC%9D%98-%EC%A7%88%EB%AC%B8-%EC%82%AC%ED%95%AD/</guid>
      <description>&lt;h3&gt;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;http-응답-코드-status-code&#34;&gt;&lt;strong&gt;HTTP 응답 코드 (Status Code)&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;목적&lt;/strong&gt; : 클라이언트에게 요청 처리 결과를 수치화해 전달합니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;구조&lt;/strong&gt; : 3자리 숫자로 분류되며, 첫 번째 숫자는 응답 클래스를 나타냅니다.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;1xx (정보 제공)&lt;/strong&gt; : &lt;code&gt;100 Continue&lt;/code&gt; (요청 진행 중).&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;2xx (성공)&lt;/strong&gt; : &lt;code&gt;200 OK&lt;/code&gt; (성공), &lt;code&gt;201 Created&lt;/code&gt; (리소스 생성됨).&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;3xx (리다이렉션)&lt;/strong&gt; : &lt;code&gt;301 Moved Permanently&lt;/code&gt; (영구 이동), &lt;code&gt;302 Found&lt;/code&gt; (임시 이동).&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;4xx (클라이언트 오류)&lt;/strong&gt; : &lt;code&gt;400 Bad Request&lt;/code&gt; (잘못된 요청), &lt;code&gt;404 Not Found&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;5xx (서버 오류)&lt;/strong&gt; : &lt;code&gt;500 Internal Server Error&lt;/code&gt;, &lt;code&gt;503 Service Unavailable&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;@GetMapping&lt;/code&gt; 의 메소드 단위 매핑의 원리가 궁금하다 강의 질문답에서는 리플렉션이라고 답하고 있다&lt;/p&gt;</description>
    </item>
    <item>
      <title>ps 공부</title>
      <link>http://localhost:1313/leetcode75/ps-%EA%B3%B5%EB%B6%80/</link>
      <pubDate>Fri, 07 Feb 2025 04:19:00 +0900</pubDate>
      <guid>http://localhost:1313/leetcode75/ps-%EA%B3%B5%EB%B6%80/</guid>
      <description>&lt;p&gt;PS를 열심히 공부하겠다고 생각하였으나, 정작 무엇부터 시작해야하는지 감이 쉽게 잡히지 않았습니다.&lt;/p&gt;&#xA;&lt;p&gt;저는 나름대로 커리큘럼을 세우기 위해서 구글링을 해 보았고, 정말 귀중한 블로그를 찾게 됩니다.&lt;/p&gt;&#xA;&lt;p&gt;plzrun님의 블로그로, 특히 **&lt;a href=&#34;https://plzrun.tistory.com/entry/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EB%AC%B8%EC%A0%9C%ED%92%80%EC%9D%B4PS-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;이 게시글&lt;/a&gt;**에서 도움을 매우 많이 받았습니다.&lt;/p&gt;&#xA;&lt;p&gt;plzrun님은 백준 강의를 추천해 주셨는데, 저는 8~9만을 낼 거금은 없었기에 포스팅에 나와 있는 커리큘럼을 따라 가기로 하였습니다.&lt;/p&gt;&#xA;&lt;p&gt;입출력 방식에서 시작해서, 기초 자료구조, 기초 수학, DP, 정렬, 그래프, 이분탐색, 분할정복, 그리디, 완전탐색으로 끝이 납니다.&lt;/p&gt;&#xA;&lt;p&gt;자세한 문제 커리큘럼은 아래와 같습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>cpp 생성자 소멸자 규칙</title>
      <link>http://localhost:1313/leetcode75/cpp-%EC%83%9D%EC%84%B1%EC%9E%90-%EC%86%8C%EB%A9%B8%EC%9E%90-%EA%B7%9C%EC%B9%99/</link>
      <pubDate>Thu, 30 Jan 2025 22:58:00 +0900</pubDate>
      <guid>http://localhost:1313/leetcode75/cpp-%EC%83%9D%EC%84%B1%EC%9E%90-%EC%86%8C%EB%A9%B8%EC%9E%90-%EA%B7%9C%EC%B9%99/</guid>
      <description>&lt;p&gt;디폴트 생성자(Default Constructor)&lt;/p&gt;&#xA;&lt;p&gt;명시적으로 디폴트 생성자&#xA;&lt;code&gt;{클래스 이름}() = default;  // 디폴트 생성자를 정의해라&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt; &lt;code&gt;new&lt;/code&gt; 와 &lt;a href=&#34;https://modoocode.com/243&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;malloc&lt;/a&gt; 모두 동적으로 할당하지만 &lt;code&gt;new&lt;/code&gt; 의 경우 객체를 동적으로 생성하면서와 동시에 자동으로 생성자도 호출해준다는 점입니다.&#xA; &lt;code&gt;delete&lt;/code&gt; 와 &lt;code&gt;free&lt;/code&gt; 의 경우도 소멸자 호출 여부가 다름과 동일&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;~{클래스의 이름}&lt;/code&gt; 소멸자&lt;/p&gt;</description>
    </item>
    <item>
      <title>알고리즘 변수명</title>
      <link>http://localhost:1313/temp/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EB%B3%80%EC%88%98%EB%AA%85/</link>
      <pubDate>Wed, 29 Jan 2025 21:17:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EB%B3%80%EC%88%98%EB%AA%85/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;인덱스&#xA;i(ndex)&#xA;index&#xA;pos(ition)&#xA;count&#xA;&#xA;left &amp;lt;-&amp;gt; right&#xA;start &amp;lt;-&amp;gt; end&#xA;&#xA;&#xA;&#xA;&#xA;[ ]: brackets&#xA;{ } : braces&#xA;( ) : parentheses&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>ELF 구조</title>
      <link>http://localhost:1313/temp/elf-%EA%B5%AC%EC%A1%B0/</link>
      <pubDate>Thu, 23 Jan 2025 10:56:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/elf-%EA%B5%AC%EC%A1%B0/</guid>
      <description>&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250123105644.png&#34; alt=&#34; (Image resource not found)&#34; &gt;%20image%2020250123105644.png)&lt;/p&gt;</description>
    </item>
    <item>
      <title>임베디드 os 개발 프로젝트</title>
      <link>http://localhost:1313/temp/%EC%9E%84%EB%B2%A0%EB%94%94%EB%93%9C-os-%EA%B0%9C%EB%B0%9C-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8/</link>
      <pubDate>Thu, 23 Jan 2025 08:42:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/%EC%9E%84%EB%B2%A0%EB%94%94%EB%93%9C-os-%EA%B0%9C%EB%B0%9C-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://localhost:1313/02.inbox/abi/&#34; class=&#34;internal-link&#34;&gt;abi&lt;/a&gt; 참조&lt;/p&gt;&#xA;&lt;p&gt;realview-pb-a8 을 사용&lt;/p&gt;&#xA;&lt;p&gt;컴퓨터의 전원이 들어오면 가장 먼저 시작하는 명령이 0000.. 번지의 리셋 벡터&#xA;32(word)를 읽어서 실행&lt;/p&gt;&#xA;&lt;p&gt;어셈블&#xA;바이너리 덤프&#xA;hexdump&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;arm-none-eabi-as -march&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;armv7-a -mcpu&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;cortex-a8 -o Entry.o ./Entry.S&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;arm-none-eabi-objcopy -O binary Entry.o Entry.bin&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hexdump Entry.bin&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-asm&#34; data-lang=&#34;asm&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;.text&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;.code&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;.global&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;vector_start&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;.global&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;vector_end&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;vector_start:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9; &lt;span style=&#34;color:#a6e22e&#34;&gt;MOV&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;R0&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;R1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;vector_end:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &#x9; &lt;span style=&#34;color:#a6e22e&#34;&gt;.space&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1024&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;.end&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;.text&lt;/code&gt; : text 섹션임을 알림 섹션 종료 지시자인 &lt;code&gt;.end&lt;/code&gt; 까지&#xA;&lt;code&gt;.global&lt;/code&gt; : c 언어의 extern 과 일치&#xA;&lt;code&gt;.code&lt;/code&gt; : 명령어의 크기가 32 임을 알림&#xA;&lt;code&gt;vector_start&lt;/code&gt;, &lt;code&gt;vector_end&lt;/code&gt; : 레이블 설정&#xA;&lt;code&gt;MOV R0, R1&lt;/code&gt; : r1 레지스터의 내용을 r0 레지스터로&#xA;&lt;code&gt;.space 1024, 0&lt;/code&gt; : 현재 위치부터 1024 바이트를 0으로 채우라는 명령&lt;/p&gt;</description>
    </item>
    <item>
      <title>abi</title>
      <link>http://localhost:1313/02.inbox/abi/</link>
      <pubDate>Wed, 22 Jan 2025 18:31:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/abi/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;gcc-arm-[플렛폼]-[ABI 타입]&#xA;&#xA;&#xA;gcc-arm-linux-gnueabi/jammy 4:11.2.0-1ubuntu1 amd64&#xA;  GNU C compiler for the armel architecture&#xA;&#xA;gcc-arm-linux-gnueabihf/jammy 4:11.2.0-1ubuntu1 amd64&#xA;  GNU C compiler for the armhf architecture&#xA;&#xA;gcc-arm-none-eabi/jammy 15:10.3-2021.07-4 amd64&#xA;  GCC cross compiler for ARM Cortex-R/M processors&#xA;&#xA;gcc-arm-none-eabi-source/jammy 15:10.3-2021.07-4 all&#xA;  GCC cross compiler for ARM Cortex-R/M processors (source)&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;arm-none-eabi-gcc&lt;/p&gt;&#xA;&lt;p&gt;ABI는 &amp;ldquo;Application Binary Interface&amp;quot;의 약자로, 소프트웨어와 하드웨어 간의 상호작용을 정의하는 규약입니다. ABI는 다음과 같은 요소를 포함합니다:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;데이터 타입: 데이터의 크기, 정렬 방식, 표현 방식 등을 정의합니다.&lt;/li&gt;&#xA;&lt;li&gt;함수 호출 규약: 함수에 인자를 전달하는 방법, 반환 값 처리, 스택 관리 등을 규정합니다.&lt;/li&gt;&#xA;&lt;li&gt;레지스터 사용: CPU 레지스터의 사용 방식과 어떤 레지스터가 어떤 용도로 사용되는지를 정의합니다.&lt;/li&gt;&#xA;&lt;li&gt;바이너리 형식: 실행 파일과 라이브러리의 구조와 형식에 대해 설명합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>슬라이딩 윈도우</title>
      <link>http://localhost:1313/leetcode75/%EC%8A%AC%EB%9D%BC%EC%9D%B4%EB%94%A9-%EC%9C%88%EB%8F%84%EC%9A%B0/</link>
      <pubDate>Tue, 07 Jan 2025 17:35:00 +0900</pubDate>
      <guid>http://localhost:1313/leetcode75/%EC%8A%AC%EB%9D%BC%EC%9D%B4%EB%94%A9-%EC%9C%88%EB%8F%84%EC%9A%B0/</guid>
      <description>&lt;p&gt;매순간 특정 범위의 계산을 다시 할 필요가 없음(ex 합)&lt;/p&gt;&#xA;&lt;p&gt;database 의  SUM 과 같은 함수 쿼리 최적화 시에 작동하는 것과 비슷하다&lt;/p&gt;&#xA;&lt;h1 id=&#34;more-similar-sliding-window-problems&#34;&gt;More Similar Sliding Window Problems&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://leetcode.com/problems/max-consecutive-ones-iii/&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;1004. Max Consecutive Ones III&lt;/a&gt;&#xA;&lt;a href=&#34;https://leetcode.com/problems/longest-subarray-of-1s-after-deleting-one-element/&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;1493. Longest Subarray of 1&amp;rsquo;s After Deleting One Element&lt;/a&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;ol start=&#34;1248&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://leetcode.com/problems/count-number-of-nice-subarrays/discuss/419378/JavaC%2B%2BPython-Sliding-Window-atMost%28K%29-atMost%28K-1%29&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;Count Number of Nice Subarrays&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;ol start=&#34;1234&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://leetcode.com/problems/replace-the-substring-for-balanced-string/discuss/408978/javacpython-sliding-window/367697&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;Replace the Substring for Balanced String&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;ol start=&#34;1004&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://leetcode.com/problems/max-consecutive-ones-iii/discuss/247564/javacpython-sliding-window/379427?page=3&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;Max Consecutive Ones III&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;ol start=&#34;930&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://leetcode.com/problems/binary-subarrays-with-sum/discuss/186683/&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;Binary Subarrays With Sum&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;ol start=&#34;992&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://leetcode.com/problems/subarrays-with-k-different-integers/discuss/234482/JavaC%2B%2BPython-Sliding-Window-atMost%28K%29-atMost%28K-1%29&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;Subarrays with K Different Integers&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;ol start=&#34;904&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://leetcode.com/problems/fruit-into-baskets/discuss/170740/Sliding-Window-for-K-Elements&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;Fruit Into Baskets&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;ol start=&#34;862&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://leetcode.com/problems/shortest-subarray-with-sum-at-least-k/discuss/143726/C%2B%2BJavaPython-O%28N%29-Using-Deque&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;Shortest Subarray with Sum at Least K&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;ol start=&#34;209&#34;&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://leetcode.com/problems/minimum-size-subarray-sum/discuss/433123/JavaC&amp;#43;&amp;#43;Python-Sliding-Window&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;Minimum Size Subarray Sum&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>문자 찾기</title>
      <link>http://localhost:1313/temp/%EB%AC%B8%EC%9E%90-%EC%B0%BE%EA%B8%B0/</link>
      <pubDate>Tue, 31 Dec 2024 22:23:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/%EB%AC%B8%EC%9E%90-%EC%B0%BE%EA%B8%B0/</guid>
      <description>&lt;p&gt;일반적인 이중 반복&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; index &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; &lt;span style=&#34;color:#75715e&#34;&gt;// 인덱스 초기화&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; (index &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; n) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 특정 작업 수행&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    doSomething(index);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 조건에 맞는 동안 반복하는 작업 수행&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; (someCondition(index) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; index &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; n) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        doSomethingElse(index);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        index&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 조건이 충족되지 않았을 때도 index 증가&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (index &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; n) index&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;재귀 방식&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;processIndex&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; index, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; n) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (index &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; n) &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;; &lt;span style=&#34;color:#75715e&#34;&gt;// 종료 조건&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 특정 작업 수행&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    doSomething(index);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 조건에 따라 작업 수행 반복&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (someCondition(index)) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        doSomethingElse(index);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        processIndex(index &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, n); &lt;span style=&#34;color:#75715e&#34;&gt;// 다음 인덱스 재귀 호출&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// 조건이 충족되지 않았을 때 처리&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        doSomethingElse(index);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        processIndex(index &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, n); &lt;span style=&#34;color:#75715e&#34;&gt;// 다음 인덱스 재귀 호출&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>two pointer 알고리즘</title>
      <link>http://localhost:1313/leetcode75/two-pointer-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/</link>
      <pubDate>Tue, 31 Dec 2024 13:09:00 +0900</pubDate>
      <guid>http://localhost:1313/leetcode75/two-pointer-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/</guid>
      <description>&lt;h1 id=&#34;two-pointer-알고리즘&#34;&gt;two pointer 알고리즘&lt;/h1&gt;&#xA;&lt;p&gt;1차원 배열에서 각자 다른 원소를 가리키는 2개의 포인터를 사용하여 목표값을 구한다&#xA;$O(n^2)$ =&amp;gt; $O(n)$ 해결하는 기법&lt;/p&gt;&#xA;&lt;p&gt;이분탐색 vs 투포인터&lt;/p&gt;&#xA;&lt;h2 id=&#34;문제-예시&#34;&gt;문제 예시&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;주어진 정수 배열 height의 길이를 n이라고 할 때, n개의 수직 선이 그려져 있습니다. i번째 선의 두 끝점은 (i, 0)과 (i, height[i])입니다.&#xA;두 개의 선을 선택하여 x축과 함께 컨테이너를 형성했을 때, 이 컨테이너가 최대한 많은 물을 저장할 수 있도록 두 선을 찾는 문제입니다.&#xA;최대 물의 양을 반환하세요.&#xA;컨테이너를 기울일 수 없다는 점에 유의하세요.&#xA;&#xA;예시 1:&#xA;입력: height = [1,8,6,2,5,4,8,3,7]&#xA;출력: 49&#xA;설명: 위의 수직 선들은 배열 [1,8,6,2,5,4,8,3,7]로 표현됩니다. 이 경우, 물이 저장될 수 있는 최대 면적은 49입니다.&#xA;&#xA;예시 2:&#xA;입력: height = [1,1]&#xA;출력: 1&#xA;&#xA;제약 조건:&#xA;n == height.length&#xA;2 &amp;lt;= n &amp;lt;= 10^5&#xA;0 &amp;lt;= height[i] &amp;lt;= 10^4&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이중 반복문 $O(n^2)$ =&amp;gt; $O(n)$ 반복 1회&lt;/p&gt;</description>
    </item>
    <item>
      <title>gdb 사용법</title>
      <link>http://localhost:1313/temp/gdb-%EC%82%AC%EC%9A%A9%EB%B2%95/</link>
      <pubDate>Mon, 30 Dec 2024 23:48:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/gdb-%EC%82%AC%EC%9A%A9%EB%B2%95/</guid>
      <description>&lt;h2 id=&#34;기본-명령어&#34;&gt;기본 명령어&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;strong&gt;명령어&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;설명&lt;/strong&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;list&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;현재 디버깅 중인 소스 코드의 일부를 출력합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;run&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;프로그램을 실행합니다. (명령 뒤에 인자를 추가하여 프로그램 실행 시 인자를 전달할 수 있습니다.)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;break&lt;/code&gt; (또는 &lt;code&gt;b&lt;/code&gt;)&lt;/td&gt;&#xA;          &lt;td&gt;브레이크포인트를 설정합니다. (예: &lt;code&gt;b main&lt;/code&gt; 또는 &lt;code&gt;b 파일명:줄번호&lt;/code&gt;)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;clear&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;특정 위치에 설정된 브레이크포인트를 삭제합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;delete&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;설정된 브레이크포인트를 삭제합니다. (예: &lt;code&gt;delete 1&lt;/code&gt;으로 특정 브레이크포인트 삭제)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;next&lt;/code&gt; (또는 &lt;code&gt;n&lt;/code&gt;)&lt;/td&gt;&#xA;          &lt;td&gt;한 줄씩 코드 실행을 진행합니다(함수 호출은 건너뜀).&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;step&lt;/code&gt; (또는 &lt;code&gt;s&lt;/code&gt;)&lt;/td&gt;&#xA;          &lt;td&gt;한 줄씩 코드 실행을 진행하며, 함수 호출 내부로 진입합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;print&lt;/code&gt; (또는 &lt;code&gt;p&lt;/code&gt;)&lt;/td&gt;&#xA;          &lt;td&gt;변수나 표현식의 값을 출력합니다. (예: &lt;code&gt;p 변수명&lt;/code&gt;)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;display&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;특정 변수의 값을 계속 표시합니다. (예: &lt;code&gt;display 변수명&lt;/code&gt;)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;bt&lt;/code&gt; (또는 &lt;code&gt;backtrace&lt;/code&gt;)&lt;/td&gt;&#xA;          &lt;td&gt;호출 스택(traceback)을 출력합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;kill&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;실행 중인 프로그램을 강제 종료합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;cout&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;GDB에서 직접 제공하지 않는 명령어로, 일반적으로 C++에서 표준 출력 스트림을 의미합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;help&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;GDB 명령어 도움말을 제공합니다. (예: &lt;code&gt;help break&lt;/code&gt;)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;quit&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;GDB를 종료합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;watch varname&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;특정 변수(&lt;code&gt;varname&lt;/code&gt;)의 값이 변경될 때 중단합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;info locals&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;현재 스코프의 지역 변수 값을 표시합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;info variables&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;모든 전역 변수와 정적 변수를 표시합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;info break&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;설정된 모든 브레이크포인트를 나열합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;info func&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;디버깅 대상의 모든 함수 이름을 나열합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;set&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;특정 변수나 환경 설정을 변경합니다. (예: &lt;code&gt;set var 변수명 = 값&lt;/code&gt;)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;finish&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;현재 함수의 실행을 끝내고 호출한 함수로 복귀합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;추가-명령어&#34;&gt;추가 명령어&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;strong&gt;명령어&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;설명&lt;/strong&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;continue&lt;/code&gt; (또는 &lt;code&gt;c&lt;/code&gt;)&lt;/td&gt;&#xA;          &lt;td&gt;브레이크포인트까지 계속 실행합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;stepi&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;기계어 수준에서 한 단계 실행합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;disassemble&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;기계어 수준에서 디스어셈블리된 코드를 출력합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;info threads&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;현재 실행 중인 모든 스레드의 정보를 표시합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;thread apply&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;특정 스레드에 대해 명령을 적용합니다. (예: &lt;code&gt;thread apply all bt&lt;/code&gt;는 모든 스레드의 백트레이스를 출력)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;set args&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;실행 시 전달할 프로그램의 인자를 설정합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;info registers&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;레지스터의 상태를 출력합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;x&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;메모리를 검사합니다. (예: &lt;code&gt;x/10x 변수&lt;/code&gt;는 변수부터 10개의 16진수를 출력)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;attach&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;실행 중인 프로세스에 연결하여 디버깅합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;detach&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;연결된 프로세스에서 디버깅을 종료하고 분리합니다.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;추가로 궁금한 명령어나 세부적인 사용 예시가 필요하다면 알려주세요! 😊&lt;/p&gt;</description>
    </item>
    <item>
      <title>605 문제</title>
      <link>http://localhost:1313/leetcode75/605-%EB%AC%B8%EC%A0%9C/</link>
      <pubDate>Mon, 30 Dec 2024 14:37:00 +0900</pubDate>
      <guid>http://localhost:1313/leetcode75/605-%EB%AC%B8%EC%A0%9C/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Solution&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;bool&lt;/span&gt; canPlaceFlowers(vector&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; flowerbed, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; n) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (n &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; placeFolwers(flowerbed)) &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; false;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; true;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;placeFolwers&lt;/span&gt;(vector&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; flowerbed){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; ; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; flowerbed.size() ; i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; temp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; i;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt;(flowerbed[i] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            result &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;)((i &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; temp &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; result;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;테스트 케이스&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Input&#xA;flowerbed = [0,0,1,0,1]&#xA;n = 1&#xA;&#xA;Output =&amp;gt; false&#xA;&#xA;Expected =&amp;gt; true&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Greedy 알고리즘</title>
      <link>http://localhost:1313/leetcode75/greedy-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/</link>
      <pubDate>Mon, 30 Dec 2024 14:32:00 +0900</pubDate>
      <guid>http://localhost:1313/leetcode75/greedy-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/</guid>
      <description>&lt;p&gt;그리디 알고리즘을 적용하여 최적해를 구할 수 있는 문제는 다음 두 조건을 만족한다.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;greedy choice property&lt;/strong&gt;: 현재 선택이 이 후의 선택에 영향을 주지 않음&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;optimal substructure&lt;/strong&gt;: 매 순간의 최적의 해가 문제 전체에 대한 최적의 해여야 함&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20231220052551.png&#34; alt=&#34;image 20231220052551 (Image resource not found)&#34; &gt;&#xA;5 -&amp;gt; 10 -&amp;gt; 3 선택&#xA;지금 가장 큰값을 선택한다고 해서 노드 값의 합을 보장할 수 없다&#xA;현재 선택이 이후에 영향을 준다고 할 수 있다&#xA;매순간 최적의 해가 문제 전체에 대한 최적해라고 말할 수 없다&lt;/p&gt;</description>
    </item>
    <item>
      <title>gcc defalut 버전 확인</title>
      <link>http://localhost:1313/02.inbox/gcc-defalut-%EB%B2%84%EC%A0%84-%ED%99%95%EC%9D%B8/</link>
      <pubDate>Mon, 23 Dec 2024 13:30:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/gcc-defalut-%EB%B2%84%EC%A0%84-%ED%99%95%EC%9D%B8/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gcc -dM -E -x c - &amp;lt; /dev/null | grep __STDC_VERSION__&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;g++ -dM -E -x c++ - &amp;lt; /dev/null | grep __cplusplus&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;C++98: 199711&#xA;C++11: 201103&#xA;C++14: 201402&#xA;C++17: 201703&#xA;C++20: 202002&lt;/p&gt;</description>
    </item>
    <item>
      <title>cpp STL2</title>
      <link>http://localhost:1313/leetcode75/cpp-stl2/</link>
      <pubDate>Mon, 23 Dec 2024 09:42:00 +0900</pubDate>
      <guid>http://localhost:1313/leetcode75/cpp-stl2/</guid>
      <description>&lt;p&gt;템플릿 인수로 타입과 비타입(정수) 둘다 올수 있다&lt;/p&gt;&#xA;&lt;p&gt;타입인자로 올수 있는 타입&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;정수 타입들 (&lt;code&gt;bool&lt;/code&gt;, &lt;code&gt;char&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt; 등등). 당연히 &lt;code&gt;float&lt;/code&gt; 과 &lt;code&gt;double&lt;/code&gt; 은 제외&lt;/li&gt;&#xA;&lt;li&gt;포인터 타입&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;enum&lt;/code&gt; 타입&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;std::nullptr_t&lt;/code&gt; (널 포인터)&lt;/li&gt;&#xA;&lt;li&gt;c++ 20부터 조금 널널해짐&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;string&#34;&gt;string&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;타입&lt;/th&gt;&#xA;          &lt;th&gt;정의&lt;/th&gt;&#xA;          &lt;th&gt;비고&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;std::string&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;std::basic_string&amp;lt;char&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;기본적인 문자열 타입&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;std::wstring&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;std::basic_string&amp;lt;wchar_t&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;wchar_t&lt;/code&gt;의 크기는 시스템마다 다름;&lt;br&gt;윈도우에서는 2바이트, 유닉스에서는 4바이트&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;std::u8string&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;std::basic_string&amp;lt;char8_t&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;C++20에 새로 추가;&lt;br&gt;&lt;code&gt;char8_t&lt;/code&gt;는 1바이트;&lt;br&gt;UTF-8 문자열 저장&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;std::u16string&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;std::basic_string&amp;lt;char16_t&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;char16_t&lt;/code&gt;는 2바이트;&lt;br&gt;UTF-16 문자열 저장&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;std::u32string&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;std::basic_string&amp;lt;char32_t&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;char32_t&lt;/code&gt;는 4바이트;&lt;br&gt;UTF-32 문자열 저장&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;Cpp에서 문자열 리터럴의 종류는 다음과 같습니다:&lt;/p&gt;</description>
    </item>
    <item>
      <title>요구사항명세서</title>
      <link>http://localhost:1313/06.university/databaseuniversity/%EC%9A%94%EA%B5%AC%EC%82%AC%ED%95%AD%EB%AA%85%EC%84%B8%EC%84%9C/</link>
      <pubDate>Mon, 23 Dec 2024 02:30:00 +0900</pubDate>
      <guid>http://localhost:1313/06.university/databaseuniversity/%EC%9A%94%EA%B5%AC%EC%82%AC%ED%95%AD%EB%AA%85%EC%84%B8%EC%84%9C/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-txt&#34; data-lang=&#34;txt&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;우리 회사는 100명의 직원을 둔 SI 업체로, 30명의 마케팅, 경영관리 및 연구개발 직원을 제외하&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;면 70명의 개발자가 월평균 10개 정도의 프로젝트를 수행하고 있다. 개발자들은 프로젝트에 초기부&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;터 종료 시까지 투입되기도 하고, 프로젝트에 일정 기간만 투입되기도 한다. 프로젝트에 투입되는&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;개발자들은 경력과 기술 등급에 따라서 PM, PL, 분석자, 설계자, 프로그래머, 테스터 등 다양한 직무를&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;맡는다.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;우리 회사가 수행하는 프로젝트에 대해 프로젝트번호, 프로젝트명, 프로젝트 착수일자/종료일자,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;발주처 등을 관리하고, 직원들에 대해서는 직원번호, 직원명, 주민등록번호, 최종학력을 관리하며,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;특히 프로젝트 투입 직원들에 대해서는 경력과 경험한 기술(Skill Set)들을 관리하고자 한다. 직원은&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;회원가입 페이지를 통해 자신의 정보를 데이터베이스에 저장하고 수정/변경할 수 있어야 한다. 직원&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;사번은 정해진 규칙에 따라서 자동으로 부여하는 것으로 가정하며, 회원가입 시 회원 로그인은 중복&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;체크 기능을 추가하여 이미 등록된 ID로 회원가입 신청을 할 경우 에러 메시지를 출력하고 중복되지&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;않는 신규 ID를 입력할 수 있어야 한다.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;경영진은 현재 우리 회사가 몇 개의 프로젝트를 수행하고 있고, 직원들이 현재 어느 프로젝트에&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;몇 명이나 투입되어 있으며, 그들이 각각 어떤 직무를 수행하고 있고, 투입 기간이 어떻게 되는지&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;등을 체계적으로 관리하길 원하고 있다. 이를 통해서 과거 특정 시점에 어떤 직원이 어느 프로젝트&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;에 어떤 직무로 참여했었는지도 알 수 있고, 개인별 경력관리는 물론 인센티브 지급을 위한 기초&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;자료까지 추출할 수 있다. 그러므로 경영진은 일반직원과는 다르게 타 직원들의 정보를 검색할 수&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;있는 권한이 있어야 한다.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;직원들이 참여한 각 프로젝트에서는 프로젝트 종료 시점에 평가를 시행한다. 평가에는 고객 평가,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PM 평가, 동료 평가 등이 존재한다. 각 평가는 평가자와 피평가자가 존재하고 평가 항목으로는 업무&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;수행 평가, 커뮤니케이션 능력 평가가 있으며, 각 평가 항목 당 평점과 평가 내용을 관리한다. 고객&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;평가는 고객이 프로젝트에 참여한 참여사 직원들에 대해서 평가하는 것을 말한다. 프로젝트를 종&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;료하는 시점에 PM이 주관하여 고객사의 담당자로부터 평가서를 의뢰하고 결과를 회사에 보고해야&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;한다. 동료 평가는 프로젝트에 참여한 각 멤버들이 자기 이외의 프로젝트 참여자에 대해서 평가하&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;는 것이다. 이 중에서 PM 평가는 PM이 프로젝트팀원을 평가하는 것을 말한다. 이러한 평가 결과는&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;회사 내부에서 인사고과와 인사 평가의 근거 자료로 활용된다&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;추가)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1. 설계단계에서 ER 다이어그램 &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   마케팅 경영관리 연구개발 개발자테스터 이것은 슈퍼 서브 타입으로 표현한다&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2. 평가는 고객 PM 동료 이것은 슈퍼 서브로 표현 발주처는 fk 즉 발주처 entity set 이 존재&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3. MM 관계는 지양&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4. 1 to M and total total 관계는 지양&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;5. 추가 엔티티 = 조원 수 서브타입 추가는 금지&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;6. 마지막 데모 시나리오 = 조원수 / 2 =&amp;gt; 2개 이상의 table 을 조합, 추가 엔티티를 1개의 데모에는  무조건 사용 , 성능 향상 기법(인덱싱, metirial view, 반정규화)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;person(100)&#xA;&lt;ul&gt;&#xA;&lt;li&gt;마케팅&lt;/li&gt;&#xA;&lt;li&gt;경영관리&lt;/li&gt;&#xA;&lt;li&gt;연구개발&lt;/li&gt;&#xA;&lt;li&gt;개발자(70)&#xA;&lt;ul&gt;&#xA;&lt;li&gt;PM&lt;/li&gt;&#xA;&lt;li&gt;PL&lt;/li&gt;&#xA;&lt;li&gt;분석자&lt;/li&gt;&#xA;&lt;li&gt;설계자&lt;/li&gt;&#xA;&lt;li&gt;프로그래머&lt;/li&gt;&#xA;&lt;li&gt;테스터&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;project&#xA;&lt;ul&gt;&#xA;&lt;li&gt;id&lt;/li&gt;&#xA;&lt;li&gt;name&lt;/li&gt;&#xA;&lt;li&gt;start_date&lt;/li&gt;&#xA;&lt;li&gt;end_date&lt;/li&gt;&#xA;&lt;li&gt;발주처&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;member&#xA;&lt;ul&gt;&#xA;&lt;li&gt;직원번호&lt;/li&gt;&#xA;&lt;li&gt;직원명&lt;/li&gt;&#xA;&lt;li&gt;주민등록번호&lt;/li&gt;&#xA;&lt;li&gt;최종학력&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;평가&#xA;&lt;ul&gt;&#xA;&lt;li&gt;평가자&lt;/li&gt;&#xA;&lt;li&gt;피평가자&lt;/li&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;추가-요구사항&#34;&gt;추가 요구사항&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;설계단계에서 ER 다이어그램&#xA;마케팅 경영관리 연구개발 개발자테스터 이것은 슈퍼 서브 타입으로 표현한다&lt;/li&gt;&#xA;&lt;li&gt;평가는 고객 PM 동료 이것은 슈퍼 서브로 표현 발주처는 fk 즉 발주처 entity set 이 존재&lt;/li&gt;&#xA;&lt;li&gt;MM 관계는 지양&lt;/li&gt;&#xA;&lt;li&gt;1 to M and total total 관계는 지양&lt;/li&gt;&#xA;&lt;li&gt;추가 엔티티 = 조원 수 서브타입 추가는 금지&lt;/li&gt;&#xA;&lt;li&gt;마지막 데모 시나리오 = 조원수 / 2 =&amp;gt; 2개 이상의 table 을 조합, 추가 엔티티를 1개의 데모에는  무조건 사용 , 성능 향상 기법(인덱싱, metirial view, 반정규화)&lt;/li&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;프로젝트 하나에 참여하는 직원은 모두 개발자인가?&lt;/p&gt;</description>
    </item>
    <item>
      <title>xmap 출력</title>
      <link>http://localhost:1313/02.inbox/xmap-%EC%B6%9C%EB%A0%A5/</link>
      <pubDate>Sun, 22 Dec 2024 12:04:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/xmap-%EC%B6%9C%EB%A0%A5/</guid>
      <description>&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20241207204591.png&#34; alt=&#34; (Image resource not found)&#34; &gt;%20image%2020241207204591.png)&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;code&gt;2910149: ./a.out&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;프로세스 ID 2910149의 실행 파일 &lt;code&gt;./a.out&lt;/code&gt;에 대한 메모리 맵입니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;Address Kbytes RSS Dirty Mode Mapping&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;각 열의 의미:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Address&lt;/strong&gt;: 메모리 주소&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Kbytes&lt;/strong&gt;: 해당 영역의 크기(KB)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;RSS&lt;/strong&gt;: 실제 메모리에 올라간 크기(KB)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Dirty&lt;/strong&gt;: 수정된 페이지 수(KB)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Mode&lt;/strong&gt;: 메모리 접근 권한&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Mapping&lt;/strong&gt;: 매핑된 파일이나 영역의 설명&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;0000561ff3b48000 4 4 4 r---- a.out&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;실행 파일의 읽기 전용 영역입니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;0000561ff3b49000 4 4 4 r-x-- a.out&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;실행 권한이 있는 코드 영역입니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;0000561ff3b4a000 4 4 4 r---- a.out&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;추가적인 읽기 전용 데이터 영역입니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;0000561ff3b4b000 4 4 4 r---- a.out&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;또 다른 읽기 전용 영역입니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;0000561ff3b4c000 4 4 4 rw--- a.out&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;쓰기 및 읽기 가능한 데이터 영역입니다(예: 전역 변수).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;0000561ff4380000 132 4 4 rw--- [ anon ]&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;익명 메모리 매핑 영역으로 힙(heap) 영역일 수 있습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;00007f79538e0000 4 0 0 ----- [ anon ]&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;보호된 메모리 영역입니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;00007f79538e1000 8192 8 8 rw--- [ anon ]&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;스레드 스택 영역으로 8MB의 크기를 갖습니다.&#xA;그 이후 줄들은 각 스레드별 스택 영역을 나타냅니다(스레드마다 약 8MB씩 할당):&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;00007f79547fa000&lt;/code&gt;부터 &lt;code&gt;00007f7956fff000&lt;/code&gt;까지 반복적으로 나타나는 8MB 크기의 &lt;code&gt;rw--- [ anon ]&lt;/code&gt; 영역들은 각 스레드의 스택입니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;마지막 부분:&lt;/p&gt;</description>
    </item>
    <item>
      <title>x86-64 레지스터 최소 설명</title>
      <link>http://localhost:1313/02.inbox/x86-64-%EB%A0%88%EC%A7%80%EC%8A%A4%ED%84%B0-%EC%B5%9C%EC%86%8C-%EC%84%A4%EB%AA%85/</link>
      <pubDate>Fri, 20 Dec 2024 09:02:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/x86-64-%EB%A0%88%EC%A7%80%EC%8A%A4%ED%84%B0-%EC%B5%9C%EC%86%8C-%EC%84%A4%EB%AA%85/</guid>
      <description>&lt;p&gt;x86-64 아키텍처에서 각 레지스터는 특정 목적이나 일반적인 연산에 사용됩니다. 이들은 64비트 레지스터이며, 일부는 하위 32비트, 16비트, 8비트 단위로도 사용할 수 있습니다. 여기서는 주요 레지스터와 그 역할을 설명하겠습니다.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;범용-레지스터-general-purpose-registers&#34;&gt;&lt;strong&gt;범용 레지스터 (General-Purpose Registers)&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;레지스터&lt;/th&gt;&#xA;          &lt;th&gt;역할/사용 목적&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;RAX&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;- 주로 산술 연산(곱셈, 나눗셈)의 결과 저장&lt;br&gt;- 함수 호출 시 반환값 저장&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;RBX&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;- 일반 데이터 저장 (callee-saved: 함수 호출 후 유지됨)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;RCX&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;- 반복 연산의 카운터로 사용 (&lt;code&gt;loop&lt;/code&gt; 명령어에서 사용)&lt;br&gt;- 함수 호출 시 세 번째 인수 전달 (Windows x64 ABI 기준)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;RDX&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;- 입출력 연산 및 곱셈/나눗셈에서 사용- 함수 호출 시 두 번째 인수 전달&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;RSI&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;- 문자열 조작에서 소스 주소 (Source Index)&lt;br&gt;- 함수 호출 시 첫 번째 인수 전달 (Linux x86-64 ABI 기준)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;RDI&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;- 문자열 조작에서 대상 주소 (Destination Index)&lt;br&gt;- 함수 호출 시 첫 번째 인수 전달 (Windows x64 ABI 기준)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;RBP&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;- 베이스 포인터 (Base Pointer)&lt;br&gt;- 함수 호출 시 스택 프레임을 추적&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;RSP&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;- 스택 포인터 (Stack Pointer)&lt;br&gt;- 현재 스택의 최상단을 가리킴&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;R8~R15&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;- 추가 범용 레지스터&lt;br&gt;- 함수 호출 시 추가 인수 전달 (Linux 및 Windows x64 ABI)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;특수-목적-레지스터&#34;&gt;&lt;strong&gt;특수 목적 레지스터&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;레지스터&lt;/th&gt;&#xA;          &lt;th&gt;역할/사용 목적&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;RIP&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;- 명령 포인터 (Instruction Pointer)&lt;br&gt;- 현재 실행 중인 명령어의 주소&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;RFLAGS&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;- 플래그 레지스터&lt;br&gt;- 연산 결과의 상태(예: 캐리, 오버플로, 제로 등) 저장&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;RSP&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;- 스택 포인터&lt;br&gt;- 함수 호출 및 지역 변수 할당 관리&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;RBP&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;- 베이스 포인터&lt;br&gt;- 스택 프레임의 기준점 역할&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;세그먼트-레지스터&#34;&gt;&lt;strong&gt;세그먼트 레지스터&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;레지스터&lt;/th&gt;&#xA;          &lt;th&gt;역할/사용 목적&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;CS&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;코드 세그먼트 (Code Segment)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;DS&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;데이터 세그먼트 (Data Segment)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;SS&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;스택 세그먼트 (Stack Segment)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;ES, FS, GS&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;추가 세그먼트&lt;br&gt;- 주로 OS 및 특정 상황에서 사용&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;레지스터-크기&#34;&gt;&lt;strong&gt;레지스터 크기&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;x86-64에서 각 레지스터는 이름에 따라 하위 크기를 참조할 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>데이터베이스 질문 목록</title>
      <link>http://localhost:1313/06.university/databaseuniversity/%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4-%EC%A7%88%EB%AC%B8-%EB%AA%A9%EB%A1%9D/</link>
      <pubDate>Fri, 20 Dec 2024 05:30:00 +0900</pubDate>
      <guid>http://localhost:1313/06.university/databaseuniversity/%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4-%EC%A7%88%EB%AC%B8-%EB%AA%A9%EB%A1%9D/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;[!question1]&#xA;unary 연산이후에는 rename 을 제외하고는 table의 이름이 바뀌지 않았다 하지만&#xA;$\cup, -, \times, \bowtie$  등의 binary 연산 이후 table 의 이름은 무었인가요??&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;[!question]&#xA;not null 은 제약조건에 속하는데 왜 modify 에서 변경하며 add,drop constraint 구문에서는 not null 변경이 안되는 이유&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;예시테이블&lt;/span&gt; (&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;컬럼명&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;데이터타입&lt;/span&gt; [&lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt;] &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;컬럼명&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;데이터타입&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;CONSTRAINT&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;제약조건이름&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;KEY&lt;/span&gt; (&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;컬럼명&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;컬럼명&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;CONSTRAINT&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;제약조건이름&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FOREIGN&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;KEY&lt;/span&gt; (&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;컬럼명&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;REFERENCES&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;다른테이블&lt;/span&gt;(&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;컬럼명&lt;/span&gt;),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;CONSTRAINT&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;제약조건이름&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;UNIQUE&lt;/span&gt; (&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;컬럼명&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;CONSTRAINT&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;제약조건이름&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;CHECK&lt;/span&gt; (&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;조건식&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;과 같이 table 수준의 제약조건에서는 NOT NULL 조건 부여 불가&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; PLAYER2 &lt;span style=&#34;color:#66d9ef&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;CONSTRAINT&lt;/span&gt; PLAYER_FK2;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;table_name&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;MODIFY&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;column_name&lt;/span&gt; data_type &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;과 같이 drop contraint 구문에서도 NOT NULL 조건 부여 불가&lt;/p&gt;</description>
    </item>
    <item>
      <title>05.트랜잭션과 잠금</title>
      <link>http://localhost:1313/02.inbox/real-my-sql/05.%ED%8A%B8%EB%9E%9C%EC%9E%AD%EC%85%98%EA%B3%BC-%EC%9E%A0%EA%B8%88/</link>
      <pubDate>Wed, 18 Dec 2024 02:53:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/real-my-sql/05.%ED%8A%B8%EB%9E%9C%EC%9E%AD%EC%85%98%EA%B3%BC-%EC%9E%A0%EA%B8%88/</guid>
      <description></description>
    </item>
    <item>
      <title>cpp 문자열 split</title>
      <link>http://localhost:1313/02.inbox/cpp-%EB%AC%B8%EC%9E%90%EC%97%B4-split/</link>
      <pubDate>Tue, 17 Dec 2024 06:46:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/cpp-%EB%AC%B8%EC%9E%90%EC%97%B4-split/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vector&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;string&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; split(&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; string&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; input, &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; string&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; delimiter) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    vector&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;string&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; ret;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    size_t pos &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    string token;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// input 문자열이 비어있거나 delimiter가 비어있으면 빈 벡터 반환&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (input.empty() &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; delimiter.empty()) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; ret;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    string str &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; input;  &lt;span style=&#34;color:#75715e&#34;&gt;// 원본 문자열을 수정하지 않기 위해 복사&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 구분자가 문자열에 없을 때까지 반복&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; ((pos &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; str.find(delimiter)) &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; string&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;npos) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        token &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; str.substr(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, pos);  &lt;span style=&#34;color:#75715e&#34;&gt;// 구분자 이전의 문자열 추출&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        ret.push_back(token);          &lt;span style=&#34;color:#75715e&#34;&gt;// 벡터에 추가&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        str.erase(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, pos &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; delimiter.length());  &lt;span style=&#34;color:#75715e&#34;&gt;// 구분자 이후의 문자열로 업데이트&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 남은 문자열 추가&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    ret.push_back(str);  &lt;span style=&#34;color:#75715e&#34;&gt;// 마지막 토큰 추가&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; ret;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>04.아키텍쳐</title>
      <link>http://localhost:1313/02.inbox/real-my-sql/04.%EC%95%84%ED%82%A4%ED%85%8D%EC%B3%90/</link>
      <pubDate>Sat, 14 Dec 2024 19:08:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/real-my-sql/04.%EC%95%84%ED%82%A4%ED%85%8D%EC%B3%90/</guid>
      <description>&lt;p&gt;mysql 엔진 : 커넥션핸들러, sql 파서, 전처리기, 옵티마이저&#xA;스토리지 엔진 : 데이터를 스토리지에 W 또는 R =&amp;gt; 키캐시(MyISAM) 또는 버퍼풀기능&lt;/p&gt;&#xA;&lt;p&gt;mysql 엔진 -&amp;gt; 스토리지 엔진으로 요청시 헨들러 api 사용&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SHOW&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;GLOBAL&lt;/span&gt; STATUS &lt;span style=&#34;color:#66d9ef&#34;&gt;LIKE&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;handler%&amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;실행중인 스레드 목록&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; thread_id, name, &lt;span style=&#34;color:#66d9ef&#34;&gt;type&lt;/span&gt;, processlist_user, processlist_host &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; performance_schema.threads &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; thread_id;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;플러그인 시스템 컴포넌트 시스템 차이&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20241214193749.png&#34; alt=&#34; (Image resource not found)&#34; &gt;&#xA;플러그인 : &lt;code&gt;show plugins;&lt;/code&gt;&#xA;컴포넌트 : &lt;code&gt;select * from mysql.component;&lt;/code&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;innodb&#34;&gt;innodb&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20241220052896.png&#34; alt=&#34;Pasted image 20241220052896 (Image resource not found)&#34; &gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20241220052912.png&#34; alt=&#34;Pasted image 20241220052912 (Image resource not found)&#34; &gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>meterialize view 의 집계연산에서 삽입 삭제에 따른 변화</title>
      <link>http://localhost:1313/02.inbox/meterialize-view-%EC%9D%98-%EC%A7%91%EA%B3%84%EC%97%B0%EC%82%B0%EC%97%90%EC%84%9C-%EC%82%BD%EC%9E%85-%EC%82%AD%EC%A0%9C%EC%97%90-%EB%94%B0%EB%A5%B8-%EB%B3%80%ED%99%94/</link>
      <pubDate>Wed, 04 Dec 2024 15:56:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/meterialize-view-%EC%9D%98-%EC%A7%91%EA%B3%84%EC%97%B0%EC%82%B0%EC%97%90%EC%84%9C-%EC%82%BD%EC%9E%85-%EC%82%AD%EC%A0%9C%EC%97%90-%EB%94%B0%EB%A5%B8-%EB%B3%80%ED%99%94/</guid>
      <description>&lt;p&gt;아래는 집계 연산에서 &lt;code&gt;count&lt;/code&gt;, &lt;code&gt;sum&lt;/code&gt;, &lt;code&gt;avg&lt;/code&gt;, &lt;code&gt;min&lt;/code&gt;, &lt;code&gt;max&lt;/code&gt;의 삽입 및 삭제에 따른 변화를 중심으로 설명하겠습니다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-count&#34;&gt;1. Count&lt;/h2&gt;&#xA;&lt;h3 id=&#34;삽입&#34;&gt;삽입&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;동작&lt;/strong&gt;: 새로운 튜플이 삽입되면, 해당 튜플의 그룹이 이미 존재하는지 확인합니다.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;존재하는 경우&lt;/strong&gt;: 해당 그룹의 카운트를 1 증가시킵니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;존재하지 않는 경우&lt;/strong&gt;: 새로운 그룹을 추가하고 카운트를 1로 설정합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;삭제&#34;&gt;삭제&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;동작&lt;/strong&gt;: 삭제할 튜플이 있을 때, 해당 튜플의 그룹을 찾아 카운트를 감소시킵니다.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;카운트 감소&lt;/strong&gt;: 만약 카운트가 0이 된다면, 해당 그룹을 &lt;code&gt;v&lt;/code&gt;에서 삭제합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;예시&#34;&gt;예시&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;초기 상태: &lt;code&gt;v = { (1, 2), (2, 3) }&lt;/code&gt; (그룹 1의 카운트 2, 그룹 2의 카운트 3)&lt;/li&gt;&#xA;&lt;li&gt;삽입: 튜플 &lt;code&gt;(1)&lt;/code&gt;이 추가되면, &lt;code&gt;v&lt;/code&gt;는 &lt;code&gt;{ (1, 3), (2, 3) }&lt;/code&gt;로 변경됩니다.&lt;/li&gt;&#xA;&lt;li&gt;삭제: 튜플 &lt;code&gt;(2)&lt;/code&gt;가 삭제되면, &lt;code&gt;v&lt;/code&gt;는 &lt;code&gt;{ (1, 3), (2, 2) }&lt;/code&gt;로 변경됩니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;2-sum&#34;&gt;2. Sum&lt;/h2&gt;&#xA;&lt;h3 id=&#34;삽입-1&#34;&gt;삽입&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;동작&lt;/strong&gt;: 새로운 튜플이 삽입되면, 해당 그룹의 값을 합산합니다.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;존재하는 경우&lt;/strong&gt;: 그룹의 합계에 새로운 튜플의 값을 추가합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;존재하지 않는 경우&lt;/strong&gt;: 새로운 그룹을 추가하고 합계를 해당 튜플의 값으로 설정합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;삭제-1&#34;&gt;삭제&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;동작&lt;/strong&gt;: 삭제할 튜플이 있을 때, 해당 튜플의 그룹에서 값을 빼줍니다.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;합계 감소&lt;/strong&gt;: 만약 특정 그룹의 합계가 0이 되면, 해당 그룹을 &lt;code&gt;v&lt;/code&gt;에서 삭제합니다. 하지만 합계가 0일 때 단순히 삭제할 수 없는 이유는 다른 튜플이 여전히 존재할 수 있기 때문입니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;예시-1&#34;&gt;예시&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;초기 상태: &lt;code&gt;v = { (1, 50), (2, 60) }&lt;/code&gt; (그룹 1의 합계 50, 그룹 2의 합계 60)&lt;/li&gt;&#xA;&lt;li&gt;삽입: 튜플 &lt;code&gt;(1, 20)&lt;/code&gt;이 추가되면, &lt;code&gt;v&lt;/code&gt;는 &lt;code&gt;{ (1, 70), (2, 60) }&lt;/code&gt;로 변경됩니다.&lt;/li&gt;&#xA;&lt;li&gt;삭제: 튜플 &lt;code&gt;(1, 50)&lt;/code&gt;가 삭제되면, &lt;code&gt;v&lt;/code&gt;는 &lt;code&gt;{ (1, 20), (2, 60) }&lt;/code&gt;로 변경됩니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;3-average-avg&#34;&gt;3. Average (avg)&lt;/h2&gt;&#xA;&lt;h3 id=&#34;처리-방법&#34;&gt;처리 방법&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;합계와 카운트 별도 유지&lt;/strong&gt;: 평균을 계산하기 위해서는 합계와 카운트를 별도로 유지합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;삭제 시&lt;/strong&gt;: 특정 그룹의 튜플이 삭제되면, 해당 그룹의 합계에서 삭제된 값만큼 빼고, 카운트도 감소시킵니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;예시-2&#34;&gt;예시&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;초기 상태: 그룹 1의 합계 50, 카운트 2 (평균 25)&lt;/li&gt;&#xA;&lt;li&gt;삭제: 튜플 &lt;code&gt;(1, 20)&lt;/code&gt;가 삭제되면, 그룹 1의 합계는 30, 카운트는 1이 되어 평균은 30이 됩니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;4-min-and-max&#34;&gt;4. Min and Max&lt;/h2&gt;&#xA;&lt;h3 id=&#34;삽입-2&#34;&gt;삽입&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;동작&lt;/strong&gt;: 새로운 튜플이 삽입될 때, 해당 그룹의 최소값과 최대값을 업데이트합니다.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;최소값/최대값 변경&lt;/strong&gt;: 새로운 값이 기존의 최소값보다 작거나 최대값보다 클 경우, 해당 값을 업데이트합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;삭제-2&#34;&gt;삭제&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;동작&lt;/strong&gt;: 만약 삭제할 튜플이 최소 최대이면 해당 그룹의 다른 튜플들을 확인하여 새로운 최소값 또는 최대값을 찾아야 합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;비용 발생&lt;/strong&gt;: 이 과정은 다른 튜플을 스캔해야 하므로 비용이 더 발생합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;예시-3&#34;&gt;예시&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;초기 상태: &lt;code&gt;v = { (1, min=10, max=20), (2, min=30, max=40) }&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;삽입: 튜플 &lt;code&gt;(1, 5)&lt;/code&gt;가 추가되면, 그룹 1의 최소값이 5로 업데이트됩니다.&lt;/li&gt;&#xA;&lt;li&gt;삭제: 튜플 &lt;code&gt;(1, 20)&lt;/code&gt;가 삭제되면, 그룹 1의 최대값을 찾기 위해 다른 튜플들을 확인해야 하므로 비용이 발생합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>서브쿼리 종류</title>
      <link>http://localhost:1313/temp/%EC%84%9C%EB%B8%8C%EC%BF%BC%EB%A6%AC-%EC%A2%85%EB%A5%98/</link>
      <pubDate>Wed, 04 Dec 2024 15:06:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/%EC%84%9C%EB%B8%8C%EC%BF%BC%EB%A6%AC-%EC%A2%85%EB%A5%98/</guid>
      <description></description>
    </item>
    <item>
      <title>join 연산 크기 추청</title>
      <link>http://localhost:1313/temp/join-%EC%97%B0%EC%82%B0-%ED%81%AC%EA%B8%B0-%EC%B6%94%EC%B2%AD/</link>
      <pubDate>Wed, 04 Dec 2024 14:29:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/join-%EC%97%B0%EC%82%B0-%ED%81%AC%EA%B8%B0-%EC%B6%94%EC%B2%AD/</guid>
      <description>&lt;p&gt;이 문제는 관계형 데이터베이스에서 &lt;strong&gt;조인 연산의 크기 추정&lt;/strong&gt;에 대한 설명입니다. 주어진 내용을 기반으로 예제를 들어 설명하겠습니다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;문제-설명&#34;&gt;문제 설명:&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;$R \bowtie S$&lt;/strong&gt;: 릴레이션 $R$과 $S$를 조인합니다.&lt;/li&gt;&#xA;&lt;li&gt;**$A$**는 두 릴레이션 $R$과 $S$ 사이의 조인 속성입니다.&lt;/li&gt;&#xA;&lt;li&gt;$n_R$: 릴레이션 $R$의 튜플 수&lt;/li&gt;&#xA;&lt;li&gt;$n_S$: 릴레이션 $S$의 튜플 수&lt;/li&gt;&#xA;&lt;li&gt;$V(A, S)$: 속성 $A$의 $S$에서의 고유 값 수 (카디널리티)&lt;/li&gt;&#xA;&lt;li&gt;$V(A, R)$: 속성 $A$의 $R$에서의 고유 값 수&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;조인 결과의 크기는 아래와 같이 두 가지 방식으로 추정됩니다:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;$n_R \times \frac{n_S}{V(A, S)}$&lt;/li&gt;&#xA;&lt;li&gt;$n_S \times \frac{n_R}{V(A, R)}$&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;이 두 값 중 더 작은 값을 선택하는 것이 더 정확한 추정을 # join 연산 크기 추청&#xA;제공한다고 설명합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>쓰레드의 공유 자원과 분리자원</title>
      <link>http://localhost:1313/temp/%EC%93%B0%EB%A0%88%EB%93%9C%EC%9D%98-%EA%B3%B5%EC%9C%A0-%EC%9E%90%EC%9B%90%EA%B3%BC-%EB%B6%84%EB%A6%AC%EC%9E%90%EC%9B%90/</link>
      <pubDate>Tue, 03 Dec 2024 15:56:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/%EC%93%B0%EB%A0%88%EB%93%9C%EC%9D%98-%EA%B3%B5%EC%9C%A0-%EC%9E%90%EC%9B%90%EA%B3%BC-%EB%B6%84%EB%A6%AC%EC%9E%90%EC%9B%90/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;child_routine&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;param)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;)param;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Detach thread %d&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, id);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;pthread_detach&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;pthread_self&lt;/span&gt;());&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;pthread_t&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;thread&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;return_value[&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;; i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;pthread_create&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;thread&lt;/span&gt;[i], &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;child_routine, (&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;i);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;위의 코드는 오류가 발생한다 왜 발생할까&lt;/p&gt;</description>
    </item>
    <item>
      <title>Oracle database 권한</title>
      <link>http://localhost:1313/02.inbox/oracle-database-%EA%B6%8C%ED%95%9C/</link>
      <pubDate>Fri, 29 Nov 2024 13:13:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/oracle-database-%EA%B6%8C%ED%95%9C/</guid>
      <description>&lt;p&gt;Oracle 데이터베이스에서 사용자의 권한을 설정할 때 사용할 수 있는 다양한 &lt;strong&gt;권한&lt;/strong&gt;(privileges)과 &lt;strong&gt;역할&lt;/strong&gt;(roles)의 예시는 아래와 같습니다. 권한은 크게 &lt;strong&gt;시스템 권한&lt;/strong&gt;과 &lt;strong&gt;객체 권한&lt;/strong&gt;으로 나뉩니다. 아래는 그 주요 예들입니다.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;1-시스템-권한-system-privileges&#34;&gt;&lt;strong&gt;1. 시스템 권한 (System Privileges)&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;시스템 권한은 데이터베이스 전체에서 특정 작업을 수행할 수 있도록 허용합니다.&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;strong&gt;권한&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;설명&lt;/strong&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;CREATE SESSION&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;데이터베이스에 연결할 수 있는 권한.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;CREATE TABLE&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;새 테이블을 생성할 수 있는 권한.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;CREATE VIEW&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;새 뷰(View)를 생성할 수 있는 권한.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;CREATE MATERIALIZED VIEW&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;새 물리화된 뷰(Materialized View)를 생성할 수 있는 권한.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;CREATE PROCEDURE&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;프로시저, 함수 또는 패키지를 생성할 수 있는 권한.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;CREATE SEQUENCE&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;새 시퀀스를 생성할 수 있는 권한.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;CREATE TRIGGER&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;트리거(Trigger)를 생성할 수 있는 권한.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;CREATE USER&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;새로운 사용자를 생성할 수 있는 권한.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;CREATE ROLE&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;새로운 역할(Role)을 생성할 수 있는 권한.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;CREATE INDEX&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;새로운 인덱스를 생성할 수 있는 권한.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;CREATE SYNONYM&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;새로운 동의어(Synonym)를 생성할 수 있는 권한.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;CREATE PUBLIC SYNONYM&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;공용 동의어(Public Synonym)를 생성할 수 있는 권한.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;CREATE DATABASE LINK&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;데이터베이스 링크(Database Link)를 생성할 수 있는 권한.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;ALTER USER&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;사용자의 속성(예: 비밀번호, 테이블스페이스 등)을 변경할 수 있는 권한.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;DROP USER&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;사용자를 삭제할 수 있는 권한.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;DROP ANY TABLE&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;모든 테이블을 삭제할 수 있는 권한.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;SELECT ANY TABLE&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;모든 테이블에 대해 SELECT 쿼리를 실행할 수 있는 권한.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;UPDATE ANY TABLE&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;모든 테이블의 데이터를 업데이트할 수 있는 권한.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;DELETE ANY TABLE&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;모든 테이블의 데이터를 삭제할 수 있는 권한.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;INSERT ANY TABLE&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;모든 테이블에 데이터를 삽입할 수 있는 권한.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;EXECUTE ANY PROCEDURE&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;모든 프로시저와 함수를 실행할 수 있는 권한.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;MANAGE TABLESPACE&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;테이블스페이스를 관리할 수 있는 권한.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;2-객체-권한-object-privileges&#34;&gt;&lt;strong&gt;2. 객체 권한 (Object Privileges)&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;객체 권한은 특정 객체(예: 테이블, 뷰, 시퀀스 등)에 대해 작업을 수행할 수 있는 권한입니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>프로젝트 로그인 기능 구현</title>
      <link>http://localhost:1313/temp/%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84/</link>
      <pubDate>Mon, 25 Nov 2024 10:56:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84/</guid>
      <description>&lt;p&gt;&lt;code&gt;/test/employee&lt;/code&gt; 뷰를 특정 역할을 가진 로그인된 사용자만 접근할 수 있도록 하려면 인증 및 권한 부여를 구현해야 합니다. 이를 위해 Flask-Login과 역할 기반 액세스 제어(RBAC)를 사용할 수 있습니다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;단계별-가이드&#34;&gt;단계별 가이드:&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;Flask-Login 설치 및 설정&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;사용자 모델 생성 및 역할 추가&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;로그인 및 로그아웃 기능 구현&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;접근 제한 데코레이터 작성&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;employee 뷰 보호&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;1-flask-login-설치-및-설정&#34;&gt;1. Flask-Login 설치 및 설정&lt;/h2&gt;&#xA;&lt;p&gt;먼저 Flask-Login을 설치합니다:&#xA;&lt;code&gt;pip install flask-login&lt;/code&gt;&#xA;&lt;code&gt;app.py&lt;/code&gt;에서 Flask-Login을 설정합니다:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; flask &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Flask&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; flask_login &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; LoginManager&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;create_app&lt;/span&gt;():&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    app &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Flask(__name__)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    app&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;secret_key &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;urandom(&lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Initialize the database&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    init_db(app)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Initialize Flask-Login&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    login_manager &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; LoginManager()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    login_manager&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;login_view &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;auth.login&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    login_manager&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;init_app(app)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Register blueprints&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; auth &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; auth &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; auth_blueprint&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    app&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;register_blueprint(auth_blueprint)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; views&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; test_views&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    app&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;register_blueprint(views&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;main)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    app&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;register_blueprint(test_views&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;test)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; app&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;2-사용자-모델-생성-및-역할-추가&#34;&gt;2. 사용자 모델 생성 및 역할 추가&lt;/h2&gt;&#xA;&lt;p&gt;사용자 정보를 저장하고 역할을 관리하기 위한 모델을 생성합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cloud Computing 과제2 보고서</title>
      <link>http://localhost:1313/02.inbox/cloud-computing-%EA%B3%BC%EC%A0%9C2-%EB%B3%B4%EA%B3%A0%EC%84%9C/</link>
      <pubDate>Sun, 24 Nov 2024 05:40:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/cloud-computing-%EA%B3%BC%EC%A0%9C2-%EB%B3%B4%EA%B3%A0%EC%84%9C/</guid>
      <description>&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20241124053028.png&#34; alt=&#34;Pasted image 20241124053028 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-기존-wordcount-프로그램에-추가하거나-개선하고자-하는-각-기능-설명&#34;&gt;1. 기존 WordCount 프로그램에 추가하거나 개선하고자 하는 각 기능 설명&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;문장 부호(!?,.&amp;rsquo;&amp;quot;{}()) 및 소 중괄호 제거&lt;/li&gt;&#xA;&lt;li&gt;대소문자 구분 여부를 확인하기 위해 &amp;ndash;case-sensitive true|false 인수를 받음&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;2-입력-데이터-설명---데이터-전체를-보고서에-포함하거나-별도-파일로-제출&#34;&gt;2. 입력 데이터 설명 - 데이터 전체를 보고서에 포함하거나 별도 파일로 제출&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.gnu.org/software/bash/manual/bash.txt&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;bash_menual_file&lt;/a&gt; 를 사용하여 입력데이터로 사용하였음&lt;/p&gt;&#xA;&lt;h2 id=&#34;3-각-기능에-대한-구현-결과물---소스-코드-전체를-보고서에-포함하거나-별도-파일로-제출-jar-파일-x&#34;&gt;3. 각 기능에 대한 구현 결과물 - 소스 코드 전체를 보고서에 포함하거나 별도 파일로 제출 (jar 파일 X)&lt;/h2&gt;&#xA;&lt;p&gt;WordCount.java 파일&lt;/p&gt;</description>
    </item>
    <item>
      <title>프로젝트 sample data 통계</title>
      <link>http://localhost:1313/06.university/databaseuniversity/%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-sample-data-%ED%86%B5%EA%B3%84/</link>
      <pubDate>Mon, 18 Nov 2024 18:07:00 +0900</pubDate>
      <guid>http://localhost:1313/06.university/databaseuniversity/%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-sample-data-%ED%86%B5%EA%B3%84/</guid>
      <description>&lt;h2 id=&#34;개발자-70-명-나머지-30명&#34;&gt;개발자 70 명 나머지 30명&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20241118165348.png&#34; alt=&#34; (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;월별-평균-10개-정도의-프로젝트-진행&#34;&gt;월별 평균 10개 정도의 프로젝트 진행&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20241118201393.png&#34; alt=&#34;Pasted image 20241118201393 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;EXTRACT&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;YEAR&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;month&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; PROJECT_YEAR,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;EXTRACT&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;MONTH&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;month&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; PROJECT_MONTH,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;COUNT&lt;/span&gt;(p.project_id) &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; PROJECT_COUNT&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; ADD_MONTHS(TRUNC(DATE &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2021-01-01&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;MM&amp;#39;&lt;/span&gt;), &lt;span style=&#34;color:#66d9ef&#34;&gt;LEVEL&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;month&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; dual&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#66d9ef&#34;&gt;CONNECT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;LEVEL&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;47&lt;/span&gt;) m&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;LEFT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;JOIN&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    project p &lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt; (p.start_date &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; LAST_DAY(m.&lt;span style=&#34;color:#66d9ef&#34;&gt;month&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                   &lt;span style=&#34;color:#66d9ef&#34;&gt;AND&lt;/span&gt; (p.end_date &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; LAST_DAY(m.&lt;span style=&#34;color:#66d9ef&#34;&gt;month&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;OR&lt;/span&gt; p.end_date &lt;span style=&#34;color:#66d9ef&#34;&gt;IS&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;GROUP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;EXTRACT&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;YEAR&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;month&lt;/span&gt;), &lt;span style=&#34;color:#66d9ef&#34;&gt;EXTRACT&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;MONTH&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;month&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    PROJECT_YEAR, PROJECT_MONTH;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>zsh 성능 측정</title>
      <link>http://localhost:1313/temp/zsh-%EC%84%B1%EB%8A%A5-%EC%B8%A1%EC%A0%95/</link>
      <pubDate>Mon, 18 Nov 2024 05:09:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/zsh-%EC%84%B1%EB%8A%A5-%EC%B8%A1%EC%A0%95/</guid>
      <description>&lt;p&gt;zsh는 측정용 프로파일링 모듈을 가지고 있다. &lt;a href=&#34;https://zsh.sourceforge.io/Doc/Release/Zsh-Modules.html#The-zsh_002fzprof-Module&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;&lt;/a&gt;라는 모듈인데, &lt;code&gt;.zshrc&lt;/code&gt; 파일에 설정만 해두면 사용할 수 있다.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;code&gt;~/.zshrc&lt;/code&gt; 파일 가장 상단에 &lt;code&gt;zmodload zsh/zprof&lt;/code&gt; 를 적는다. (import라고 생각하자)&lt;/li&gt;&#xA;&lt;li&gt;그리고 가장 하단에 &lt;code&gt;zprof&lt;/code&gt; 라고 적어두자. (이는 세션이 시작될 때 zprof 명령어를 실행한다는 의미와 같다.)&lt;/li&gt;&#xA;&lt;li&gt;세션 로드가 완료되면 &lt;code&gt;time zsh -i -c echo&lt;/code&gt; 명령어를 사용해 측정 결과를 얻자.&lt;/li&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>서버 db 사용하기</title>
      <link>http://localhost:1313/02.inbox/%EC%84%9C%EB%B2%84-db-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</link>
      <pubDate>Thu, 14 Nov 2024 13:13:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EC%84%9C%EB%B2%84-db-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</guid>
      <description>&lt;p&gt;미리 data 를 담아놓은 db 입니다&#xA;환경구성이 잘 안되시는 분은 여기서 이것을 사용하시면 됩니다&#xA;학기 끝날 때 까지 서버를 열어 두겠습니다&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20241113211582.png&#34; alt=&#34; (Image resource not found)&#34; &gt;%20image%2020241113211582.png)&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20241113211588.png&#34; alt=&#34;Pasted image 20241113211588 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;비밀번호는 1111&#xA;단 data 뷰어 용으로만 사용해 주세요(create문 truncate 등등 data 를 손보는 작업은 하지 말아 주세요)&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>07-SIGNAL</title>
      <link>http://localhost:1313/06.university/system-programminguniversity/07-signal/</link>
      <pubDate>Tue, 12 Nov 2024 15:11:00 +0900</pubDate>
      <guid>http://localhost:1313/06.university/system-programminguniversity/07-signal/</guid>
      <description></description>
    </item>
    <item>
      <title>git merge</title>
      <link>http://localhost:1313/02.inbox/git-merge/</link>
      <pubDate>Sat, 09 Nov 2024 13:23:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/git-merge/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-mermaid&#34; data-lang=&#34;mermaid&#34;&gt;gitGraph&#xA;commit id: &amp;#34;H&amp;#34;&#xA;commit id: &amp;#34;I&amp;#34;&#xA;branch topic&#xA;commit id: &amp;#34;B&amp;#34;&#xA;commit id: &amp;#34;C&amp;#34;&#xA;checkout main&#xA;commit id: &amp;#34;J&amp;#34;&#xA;commit id: &amp;#34;K&amp;#34;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;여기서 branch 를 merge 할 때&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;merge commit&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-mermaid&#34; data-lang=&#34;mermaid&#34;&gt;gitGraph&#xA;commit id: &amp;#34;D&amp;#34;&#xA;commit id: &amp;#34;E&amp;#34;&#xA;branch topic&#xA;commit id: &amp;#34;B&amp;#34;&#xA;commit id: &amp;#34;C&amp;#34;&#xA;checkout main&#xA;commit id: &amp;#34;F&amp;#34;&#xA;commit id: &amp;#34;G&amp;#34;&#xA;merge topic&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이러한 방식이 기본적인 e commit 를 base 로 한 merge 방식이다&lt;/p&gt;&#xA;&lt;p&gt;git 은 main 의 commit 가 있을 경우 위의 방식을 선택한다&#xA;하지만 만약&lt;/p&gt;</description>
    </item>
    <item>
      <title>db-book 답지 파일 다운받는 javascript</title>
      <link>http://localhost:1313/02.inbox/db-book-%EB%8B%B5%EC%A7%80-%ED%8C%8C%EC%9D%BC-%EB%8B%A4%EC%9A%B4%EB%B0%9B%EB%8A%94-javascript/</link>
      <pubDate>Tue, 05 Nov 2024 17:05:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/db-book-%EB%8B%B5%EC%A7%80-%ED%8C%8C%EC%9D%BC-%EB%8B%A4%EC%9A%B4%EB%B0%9B%EB%8A%94-javascript/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://db-book.com/bib-dir/index.html&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;https://db-book.com/bib-dir/index.html&lt;/a&gt;&#xA;여기 위치에서 콘솔창은 연후 모든 pdf 파일을 다운받는다&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 모든 PDF 링크와 이름을 선택&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rows&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; document.&lt;span style=&#34;color:#a6e22e&#34;&gt;evaluate&lt;/span&gt;(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/html/body/center/table/tbody/tr&amp;#39;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    document,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;XPathResult&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;ORDERED_NODE_SNAPSHOT_TYPE&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 링크 배열 생성&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;pdfData&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rows&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;snapshotLength&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;row&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rows&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;snapshotItem&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;nameElement&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;row&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;querySelector&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;td:nth-child(1)&amp;#39;&lt;/span&gt;); &lt;span style=&#34;color:#75715e&#34;&gt;// 파일 이름&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;linkElement&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;row&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;querySelector&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;td:nth-child(2) a&amp;#39;&lt;/span&gt;); &lt;span style=&#34;color:#75715e&#34;&gt;// PDF 링크&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 요소가 존재하는지 확인&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;nameElement&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;linkElement&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;nameElement&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;textContent&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;trim&lt;/span&gt;(); &lt;span style=&#34;color:#75715e&#34;&gt;// 파일 이름&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;url&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;linkElement&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;href&lt;/span&gt;; &lt;span style=&#34;color:#75715e&#34;&gt;// PDF 링크&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;pdfData&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;push&lt;/span&gt;({&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;url&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;url&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        });&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;warn&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;`Row &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; does not contain the expected elements.`&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// PDF 다운로드 함수&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;downloadFiles&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;async&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;pdfData&lt;/span&gt;) =&amp;gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;url&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt; } &lt;span style=&#34;color:#66d9ef&#34;&gt;of&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;pdfData&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; document.&lt;span style=&#34;color:#a6e22e&#34;&gt;createElement&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;href&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;url&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;download&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.pdf&amp;#39;&lt;/span&gt;; &lt;span style=&#34;color:#75715e&#34;&gt;// 파일 이름 지정&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        document.&lt;span style=&#34;color:#a6e22e&#34;&gt;body&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;appendChild&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;click&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        document.&lt;span style=&#34;color:#a6e22e&#34;&gt;body&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;removeChild&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// 오류발생 가능성 때문에 다운로드 사이에 잠시 대기 오류발생 가능성 때문에&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;await&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Promise(&lt;span style=&#34;color:#a6e22e&#34;&gt;resolve&lt;/span&gt; =&amp;gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setTimeout&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;resolve&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;)); &lt;span style=&#34;color:#75715e&#34;&gt;// 0.1초 대기&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// PDF 다운로드 수행&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;downloadFiles&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;pdfData&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>데이터베이스2 프로젝트</title>
      <link>http://localhost:1313/06.university/databaseuniversity/%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A42-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8/</link>
      <pubDate>Fri, 01 Nov 2024 05:39:00 +0900</pubDate>
      <guid>http://localhost:1313/06.university/databaseuniversity/%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A42-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8/</guid>
      <description>&lt;p&gt;직원 100 : 70개발자 마케팅, 경영관리, 연구개발&#xA;프로젝트 일정기간 투입가능&#xA;프로젝트의 직무 PM&lt;/p&gt;</description>
    </item>
    <item>
      <title>05-PROCESS</title>
      <link>http://localhost:1313/06.university/system-programminguniversity/05-process/</link>
      <pubDate>Sun, 27 Oct 2024 18:04:00 +0900</pubDate>
      <guid>http://localhost:1313/06.university/system-programminguniversity/05-process/</guid>
      <description>&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20241027180484.png&#34; alt=&#34; (Image resource not found)&#34; &gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20241027181337.png&#34; alt=&#34;Pasted image 20241027181337 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;qexec() 이후에 오는 문자에 의해 구별되는 표시는 다음의 의미가 있다&#xA;  l -&amp;gt; 인자 정보를 개개의 문자열 데이터를 가르키는 포인터 arg0,    &#xA;       arg1……. argn으로 전달한다&#xA;  v -&amp;gt; 인자 정보를 개개의 문자열 데이터를 가리키는 포인터 배열의&#xA;       선두주소 argv로 전달한다&#xA;  e -&amp;gt; envp 정보를 전달한다&#xA;  p -&amp;gt; p를 사용하는 경우, 실행할 파일이름을 환경 변수 PATH로 지정한 디렉토리 안에서 찾아내어 실행한다&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-execve&#34;&gt;1. &lt;code&gt;execve()&lt;/code&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;축약어&lt;/strong&gt;: &lt;code&gt;exec&lt;/code&gt; + &lt;code&gt;v&lt;/code&gt; (vector) + &lt;code&gt;e&lt;/code&gt; (environment)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;설명&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&amp;ldquo;exec&amp;quot;는 실행을 의미하며, &amp;ldquo;v&amp;quot;는 인수를 배열 형태로 받고, &amp;ldquo;e&amp;quot;는 환경 변수를 배열 형태로 받는다는 것을 나타냅니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;2-execv&#34;&gt;2. &lt;code&gt;execv()&lt;/code&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;축약어&lt;/strong&gt;: &lt;code&gt;exec&lt;/code&gt; + &lt;code&gt;v&lt;/code&gt; (vector)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;설명&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&amp;ldquo;exec&amp;quot;는 실행을 의미하며, &amp;ldquo;v&amp;quot;는 인수를 배열 형태로 받는다는 것을 나타냅니다. 환경 변수를 설정할 수 없습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;3-execvp&#34;&gt;3. &lt;code&gt;execvp()&lt;/code&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;축약어&lt;/strong&gt;: &lt;code&gt;exec&lt;/code&gt; + &lt;code&gt;v&lt;/code&gt; (vector) + &lt;code&gt;p&lt;/code&gt; (path)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;설명&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&amp;ldquo;exec&amp;quot;는 실행을 의미하며, &amp;ldquo;v&amp;quot;는 인수를 배열 형태로 받고, &amp;ldquo;p&amp;quot;는 &lt;code&gt;PATH&lt;/code&gt; 환경 변수를 통해 파일을 찾는다는 것을 나타냅니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;4-execle&#34;&gt;4. &lt;code&gt;execle()&lt;/code&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;축약어&lt;/strong&gt;: &lt;code&gt;exec&lt;/code&gt; + &lt;code&gt;l&lt;/code&gt; (list) + &lt;code&gt;e&lt;/code&gt; (environment)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;설명&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&amp;ldquo;exec&amp;quot;는 실행을 의미하며, &amp;ldquo;l&amp;quot;은 인수를 개별적으로 받는다는 것을 나타내고, &amp;ldquo;e&amp;quot;는 환경 변수를 배열 형태로 받는다는 것을 나타냅니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;5-execl&#34;&gt;5. &lt;code&gt;execl()&lt;/code&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;축약어&lt;/strong&gt;: &lt;code&gt;exec&lt;/code&gt; + &lt;code&gt;l&lt;/code&gt; (list)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;설명&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&amp;ldquo;exec&amp;quot;는 실행을 의미하며, &amp;ldquo;l&amp;quot;은 인수를 개별적으로 받는다는 것을 나타냅니다. 환경 변수를 설정할 수 없습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;6-execlp&#34;&gt;6. &lt;code&gt;execlp()&lt;/code&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;축약어&lt;/strong&gt;: &lt;code&gt;exec&lt;/code&gt; + &lt;code&gt;l&lt;/code&gt; (list) + &lt;code&gt;p&lt;/code&gt; (path)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;설명&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&amp;ldquo;exec&amp;quot;는 실행을 의미하며, &amp;ldquo;l&amp;quot;은 인수를 개별적으로 받고, &amp;ldquo;p&amp;quot;는 &lt;code&gt;PATH&lt;/code&gt; 환경 변수를 통해 파일을 찾는다는 것을 나타냅니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;정리&#34;&gt;정리&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;함수 이름&lt;/th&gt;&#xA;          &lt;th&gt;축약어 설명&lt;/th&gt;&#xA;          &lt;th&gt;인수 형태&lt;/th&gt;&#xA;          &lt;th&gt;환경 변수 지원&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;execve&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;exec + v (vector) + e (environment)&lt;/td&gt;&#xA;          &lt;td&gt;파일 이름 + argv[] + envp[]&lt;/td&gt;&#xA;          &lt;td&gt;지원&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;execv&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;exec + v (vector)&lt;/td&gt;&#xA;          &lt;td&gt;파일 경로 + argv[]&lt;/td&gt;&#xA;          &lt;td&gt;지원하지 않음&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;execvp&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;exec + v (vector) + p (path)&lt;/td&gt;&#xA;          &lt;td&gt;파일 이름 + argv[]&lt;/td&gt;&#xA;          &lt;td&gt;지원하지 않음&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;execle&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;exec + l (list) + e (environment)&lt;/td&gt;&#xA;          &lt;td&gt;파일 이름 + arg1, arg2, &amp;hellip; + NULL&lt;/td&gt;&#xA;          &lt;td&gt;지원&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;execl&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;exec + l (list)&lt;/td&gt;&#xA;          &lt;td&gt;파일 경로 + arg1, arg2, &amp;hellip; + NULL&lt;/td&gt;&#xA;          &lt;td&gt;지원하지 않음&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;execlp&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;exec + l (list) + p (path)&lt;/td&gt;&#xA;          &lt;td&gt;파일 이름 + arg1, arg2, &amp;hellip; + NULL&lt;/td&gt;&#xA;          &lt;td&gt;지원하지 않음&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;</description>
    </item>
    <item>
      <title>클컴</title>
      <link>http://localhost:1313/temp/%ED%81%B4%EC%BB%B4/</link>
      <pubDate>Fri, 25 Oct 2024 18:37:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/%ED%81%B4%EC%BB%B4/</guid>
      <description>&lt;p&gt;하둡은 2개자로&lt;/p&gt;&#xA;&lt;h2 id=&#34;hadoop-hdfs&#34;&gt;hadoop HDFS&lt;/h2&gt;&#xA;&lt;p&gt;hadoop file system&lt;/p&gt;&#xA;&lt;p&gt;hdfs 좋은점&#xA;일반적 하드웨어를 사용해서 비싸지 않다&#xA;노드 죽어도 계속된다&lt;/p&gt;&#xA;&lt;p&gt;hdfs 나쁜점&#xA;접근의 낮은시간 =&amp;gt; 지연시간의 희생 높은 처리량&#xA;많은 작은 파일 =&amp;gt;&#xA;데이터 수정, 많은 작성자&lt;/p&gt;&#xA;&lt;p&gt;64MB large block size =&amp;gt; SEEK 상승&#xA;RAID 금지&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;namenode (Master) :&lt;/strong&gt;&#xA;namespace, 파일시스템에 정보는 local disk 에도 저장&#xA;블락 위치는 ram 에만 저장 켜질때 보고 받고 재구성&#xA;3개의 복제&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;datanodes (Slave) :&lt;/strong&gt;&#xA;원본 data&#xA;block’s metadata including checksums for the block data and&#xA;the generation stamp&lt;/p&gt;</description>
    </item>
    <item>
      <title>데이터 베이스 비이진 관계 스키마 생성시</title>
      <link>http://localhost:1313/temp/%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B2%A0%EC%9D%B4%EC%8A%A4-%EB%B9%84%EC%9D%B4%EC%A7%84-%EA%B4%80%EA%B3%84-%EC%8A%A4%ED%82%A4%EB%A7%88-%EC%83%9D%EC%84%B1%EC%8B%9C/</link>
      <pubDate>Sat, 12 Oct 2024 08:49:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B2%A0%EC%9D%B4%EC%8A%A4-%EB%B9%84%EC%9D%B4%EC%A7%84-%EA%B4%80%EA%B3%84-%EC%8A%A4%ED%82%A4%EB%A7%88-%EC%83%9D%EC%84%B1%EC%8B%9C/</guid>
      <description>&lt;h2 id=&#34;비이진-관계에서의-기본-키-선택&#34;&gt;비이진 관계에서의 기본 키 선택&lt;/h2&gt;&#xA;&lt;p&gt;비이진 관계에서 카디널리티 제약이 없는 경우, 앞서 설명한 대로 형성된 슈퍼키가 유일한 후보 키가 되며, 이를 기본 키로 선택합니다. 하지만 카디널리티 제약이 있을 경우 기본 키 선택이 더 복잡해집니다.&lt;/p&gt;&#xA;&lt;p&gt;우리가 6.4절에서 언급한 바와 같이, 비이진 관계 집합에서 최대 한 개의 화살표만 허용합니다. 이는 비이진 관계 집합에서 두 개 이상의 화살표가 있을 경우 해석이 두 가지로 나뉘어질 수 있기 때문입니다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;예시&#34;&gt;예시&lt;/h2&gt;&#xA;&lt;p&gt;관계 집합 ( R )이 엔티티 집합 ( E1, E2, E3, E4 ) 간의 관계를 나타내고, 화살표가 ( E3 )와 ( E4 )로만 향해 있다고 가정합니다. 이 경우 두 가지 가능한 해석이 있습니다:&lt;/p&gt;</description>
    </item>
    <item>
      <title>데이터베이스 전공책 chapter6, 7 정리</title>
      <link>http://localhost:1313/temp/%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4-%EC%A0%84%EA%B3%B5%EC%B1%85-chapter6-7-%EC%A0%95%EB%A6%AC/</link>
      <pubDate>Fri, 11 Oct 2024 04:31:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4-%EC%A0%84%EA%B3%B5%EC%B1%85-chapter6-7-%EC%A0%95%EB%A6%AC/</guid>
      <description>&lt;p&gt;ER diagram 설명 및 스키마 변경&#xA;스키마의 좋은 나쁜 설계 판별&lt;/p&gt;&#xA;&lt;p&gt;요구사항 명세서 -&amp;gt; 개념적 설계(ERD ER diagram) -&amp;gt; 기능적 요구사항 명세서 -&amp;gt; 논리적 설계(ddl) -&amp;gt; 물리적 설계(인덱싱 파일 구성)&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;redundancy : database 에서 attribute 는 1개만 있는 것이 좋다 왜래키로 지정하자 dept_name 은 departname 을 pk 로 가져가고 나머지는 fk 로 만들자&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;entity 개체 : 사람A : 속성의 집합&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;entity set 개체 집합 : instructor : 개체의 집합&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;attribute 속성 : 구성원들이 소유하는 설명 특성&lt;/p&gt;</description>
    </item>
    <item>
      <title>데이터베이스2 쿼리 과정</title>
      <link>http://localhost:1313/06.university/databaseuniversity/%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A42-%EC%BF%BC%EB%A6%AC-%EA%B3%BC%EC%A0%95/</link>
      <pubDate>Mon, 07 Oct 2024 14:19:00 +0900</pubDate>
      <guid>http://localhost:1313/06.university/databaseuniversity/%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A42-%EC%BF%BC%EB%A6%AC-%EA%B3%BC%EC%A0%95/</guid>
      <description>&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20241007141954.png&#34; alt=&#34; (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;쿼리 비용 측정&lt;/li&gt;&#xA;&lt;li&gt;관계 대수 평가 알고리즘&lt;/li&gt;&#xA;&lt;li&gt;개별 연산을 결합하는 알고리즘&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;쿼리-비용-측정&#34;&gt;쿼리 비용 측정&lt;/h2&gt;&#xA;&lt;p&gt;단순하게 disk 만 고려함 disk io 가 가장 큰 요소&lt;/p&gt;&#xA;&lt;p&gt;seek(디스크에서 찾기) + transfer(메모리로 가져오기)&lt;/p&gt;&#xA;&lt;p&gt;seek를 통해 시작 위치를 찾는다(instructor table 의 시작 data 위치)&#xA;transfer&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;$t_T$ : time to transfer one block&#xA;&lt;ul&gt;&#xA;&lt;li&gt;assuming for simplicity that write cost is same as read cost&lt;/li&gt;&#xA;&lt;li&gt;typically, cost to write a block is greater than read cost, since data is read back after being written to ensure that the write was successful&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;$t_S$ : time for one seek&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;크게 selection 과 join 을 쓰기 위해 발행하는 cost 를 계한해 본다&lt;/p&gt;</description>
    </item>
    <item>
      <title>데이터베이스2 정규화</title>
      <link>http://localhost:1313/06.university/databaseuniversity/%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A42-%EC%A0%95%EA%B7%9C%ED%99%94/</link>
      <pubDate>Mon, 07 Oct 2024 12:57:00 +0900</pubDate>
      <guid>http://localhost:1313/06.university/databaseuniversity/%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A42-%EC%A0%95%EA%B7%9C%ED%99%94/</guid>
      <description>&lt;p&gt;정규화 시에 제대로 분해 되었는지 확인하는 2가지 개념&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;손실분해가 일어나지 않게&lt;/li&gt;&#xA;&lt;li&gt;중복 data 가 존재하는가 (redundency)&lt;/li&gt;&#xA;&lt;li&gt;종속성이 보존되게&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;분해&#34;&gt;분해&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;나쁜 디자인&#xA;&lt;ul&gt;&#xA;&lt;li&gt;특정 정보를 표현 불가 -&amp;gt; 대출이 없는 지점은 오픈할 수 없다&lt;/li&gt;&#xA;&lt;li&gt;정보의 중복 -&amp;gt; 동일 지점에서 빌린 여러개의 대출&lt;/li&gt;&#xA;&lt;li&gt;정보의 손실&lt;/li&gt;&#xA;&lt;li&gt;anomaly (update, insertion, deletion)&#xA;&lt;ul&gt;&#xA;&lt;li&gt;update : loan-number 없이 branch-name 등 insert 불가&lt;/li&gt;&#xA;&lt;li&gt;delete : 어떤 branch의 마지막 loan을 delete하면 branch 자체가 사라짐&lt;/li&gt;&#xA;&lt;li&gt;update : 어떤 특정한 branch의 정보(예: Downtown의assets)를 update하면 해당하는 튜플들을 모두 업데이트해야 함&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;좋은 디자인&#xA;&lt;ul&gt;&#xA;&lt;li&gt;정보의 중복을 피한다&lt;/li&gt;&#xA;&lt;li&gt;정보의 관계가 표현된다&lt;/li&gt;&#xA;&lt;li&gt;무결성 제약 조건&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;분해를 안하면 업데이트시 여러개의 동시에 업데이트해야하는 문제가 발생&lt;/p&gt;</description>
    </item>
    <item>
      <title>리눅스 파일 권한</title>
      <link>http://localhost:1313/temp/%EB%A6%AC%EB%88%85%EC%8A%A4-%ED%8C%8C%EC%9D%BC-%EA%B6%8C%ED%95%9C/</link>
      <pubDate>Mon, 07 Oct 2024 04:56:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/%EB%A6%AC%EB%88%85%EC%8A%A4-%ED%8C%8C%EC%9D%BC-%EA%B6%8C%ED%95%9C/</guid>
      <description>&lt;p&gt;인터넷에 적절하지 못한 파일 권한 설명 그중에 특히 sticky 비트에 대해 오류가 많아 작성하게 됨&lt;/p&gt;&#xA;&lt;p&gt;OS 의 경우 linux 를 가정하고 Mac OS 의 경우 도 조금 서술&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;FILE TYPE&lt;/th&gt;&#xA;          &lt;th&gt;expression&lt;/th&gt;&#xA;          &lt;th&gt;nomal&lt;/th&gt;&#xA;          &lt;th&gt;directory&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;read&lt;/td&gt;&#xA;          &lt;td&gt;r&lt;/td&gt;&#xA;          &lt;td&gt;읽기&lt;/td&gt;&#xA;          &lt;td&gt;내부 파일 이름 읽기&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;write&lt;/td&gt;&#xA;          &lt;td&gt;w&lt;/td&gt;&#xA;          &lt;td&gt;쓰기&lt;/td&gt;&#xA;          &lt;td&gt;내부에 파일 생성 삭제 변경(execute 의존)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;execute&lt;/td&gt;&#xA;          &lt;td&gt;x&lt;/td&gt;&#xA;          &lt;td&gt;실행&lt;/td&gt;&#xA;          &lt;td&gt;내부 파일 메타데이터 읽기(read 의존)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;setUID&lt;br&gt;&lt;/td&gt;&#xA;          &lt;td&gt;s&lt;/td&gt;&#xA;          &lt;td&gt;소유자 권한으로 실행&lt;/td&gt;&#xA;          &lt;td&gt;소유자 권한으로 실행&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;setGID&lt;br&gt;bit&lt;/td&gt;&#xA;          &lt;td&gt;s&lt;/td&gt;&#xA;          &lt;td&gt;소유 그룹 권한으로 실행&lt;/td&gt;&#xA;          &lt;td&gt;소유한 그룹의 권한으로 실행&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;sticky bit&lt;/td&gt;&#xA;          &lt;td&gt;t&lt;/td&gt;&#xA;          &lt;td&gt;linux : 무시&lt;/td&gt;&#xA;          &lt;td&gt;쓰기 권한이 존재해도 다른 사용자가 소유한 파일을 건드리지 못한다 (ex /tmp)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;s 와 t 가 대문자인 경우 소유한 유저 또는 소유한 그룹이 실행 권한이 없어 비트가 설정되어 있어도 실제로는 동작시키지 못한다&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;실행별-결과&#34;&gt;실행별 결과&lt;/h2&gt;&#xA;&lt;p&gt;rwx 디렉토리 동작과정&lt;/p&gt;</description>
    </item>
    <item>
      <title>lab5 과제 추가 설명</title>
      <link>http://localhost:1313/06.university/system-programminguniversity/lab5-%EA%B3%BC%EC%A0%9C-%EC%B6%94%EA%B0%80-%EC%84%A4%EB%AA%85/</link>
      <pubDate>Sun, 06 Oct 2024 03:47:00 +0900</pubDate>
      <guid>http://localhost:1313/06.university/system-programminguniversity/lab5-%EA%B3%BC%EC%A0%9C-%EC%B6%94%EA%B0%80-%EC%84%A4%EB%AA%85/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;파일의 이름을 바꾸는 프로그램을 작성하는데, &#xA;- 파일의 이름을 같은 디렉토리 안에서 바꾸거나 &#xA;- 다른 디렉토리로 이동하여 바꾸는 기능이 모두 구현되어야 합니다. &#xA;- 4-1 강의자료에서 학습한 시스템 호출들을 사용하여 작성하기 바랍니다.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;manual-rename&#34;&gt;manual rename&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;rename()&lt;/code&gt; 함수는 파일의 이름을 변경하며, 필요시 디렉토리 간에 이동할 수 있습니다. 이 함수는 다음과 같은 특성을 가지고 있습니다:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;하드 링크와의 영향&lt;/strong&gt;: 다른 하드 링크(예: &lt;code&gt;link(2)&lt;/code&gt;를 사용하여 생성된 링크)에 대해서는 영향을 미치지 않습니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;열린 파일 디스크립터&lt;/strong&gt;: &lt;code&gt;oldpath&lt;/code&gt;에 대한 열린 파일 디스크립터는 영향을 받지 않습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;성공-여부-결정&#34;&gt;성공 여부 결정&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;rename()&lt;/code&gt; 작업이 성공하는지 여부는 여러 가지 제약 조건에 따라 결정됩니다. 아래는 관련된 오류 상황입니다:&lt;/p&gt;</description>
    </item>
    <item>
      <title>vscode 설정</title>
      <link>http://localhost:1313/temp/vscode-%EC%84%A4%EC%A0%95/</link>
      <pubDate>Sun, 06 Oct 2024 03:00:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/vscode-%EC%84%A4%EC%A0%95/</guid>
      <description>&lt;p&gt;keybindings.json&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Toggle between terminal and editor focus&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;{ &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;key&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ctrl+&amp;#39;&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;command&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;workbench.action.terminal.focus&amp;#34;&lt;/span&gt;}&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{ &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;key&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ctrl+&amp;#39;&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;command&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;workbench.action.focusActiveEditorGroup&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;when&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;terminalFocus&amp;#34;&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;터미널 왔다리 갔다리&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;1-ctrl--space&#34;&gt;1. &lt;strong&gt;&lt;code&gt;Ctrl + Space&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;기능-트리거-제안trigger-suggestions&#34;&gt;&lt;strong&gt;기능: 트리거 제안(Trigger Suggestions)&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;설명&lt;/strong&gt;: 현재 커서 위치에서 사용 가능한 코드 제안(Suggestions)을 수동으로 호출합니다. 이는 자동 완성(IntelliSense) 기능을 강제로 활성화하는 역할을 합니다.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;예를 들어, 변수 이름이나 함수 이름을 입력 중일 때, VSCode가 자동으로 제안을 보여주지 않는 경우에 &lt;code&gt;Ctrl + Space&lt;/code&gt;를 눌러 명시적으로 제안 목록을 열 수 있습니다.&lt;/li&gt;&#xA;&lt;li&gt;제안 목록에는 변수, 함수, 클래스, 메서드 등이 포함됩니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;단축키&#34;&gt;&lt;strong&gt;단축키&lt;/strong&gt;:&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Windows/Linux: &lt;code&gt;Ctrl + Space&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;macOS: &lt;code&gt;Control + Space&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;2-tab&#34;&gt;2. &lt;strong&gt;&lt;code&gt;Tab&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;기능-자동-완성-선택-또는-들여쓰기indentation&#34;&gt;&lt;strong&gt;기능: 자동 완성 선택 또는 들여쓰기(Indentation)&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;설명&lt;/strong&gt;:&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;자동 완성 선택&lt;/strong&gt;: IntelliSense 제안 목록이 열려 있는 상태에서 &lt;code&gt;Tab&lt;/code&gt; 키를 누르면 현재 선택된 제안을 확정하고 코드를 자동으로 완성합니다.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;예: &lt;code&gt;pri&lt;/code&gt;를 입력한 후 제안 목록에서 &lt;code&gt;print()&lt;/code&gt;가 선택된 상태라면 &lt;code&gt;Tab&lt;/code&gt;을 누르면 &lt;code&gt;print()&lt;/code&gt;로 자동 완성됩니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;들여쓰기&lt;/strong&gt;: 코드 블록에서 &lt;code&gt;Tab&lt;/code&gt; 키를 누르면 줄을 오른쪽으로 들여씁니다(indent). 반대로 &lt;code&gt;Shift + Tab&lt;/code&gt;은 줄을 왼쪽으로 밀어냅니다(unindent).&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;단축키-1&#34;&gt;&lt;strong&gt;단축키&lt;/strong&gt;:&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Windows/Linux/macOS: &lt;code&gt;Tab&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;3-인수-목록parameter-hints&#34;&gt;3. &lt;strong&gt;인수 목록(Parameter Hints)&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;기능-함수-또는-메서드의-매개변수-정보-표시&#34;&gt;&lt;strong&gt;기능: 함수 또는 메서드의 매개변수 정보 표시&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;설명&lt;/strong&gt;: 함수 또는 메서드를 호출할 때, 인수 목록과 각 매개변수의 타입 및 설명을 툴팁 형태로 표시합니다.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;예를 들어, Python에서 &lt;code&gt;print(&lt;/code&gt;를 입력하면 &lt;code&gt;print(*objects, sep=&#39; &#39;, end=&#39;\n&#39;, file=sys.stdout, flush=False)&lt;/code&gt;와 같은 매개변수 정보가 표시됩니다.&lt;/li&gt;&#xA;&lt;li&gt;이를 통해 함수 호출 시 필요한 인수와 그 순서를 쉽게 파악할 수 있습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;단축키-2&#34;&gt;&lt;strong&gt;단축키&lt;/strong&gt;:&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;기본적으로 매개변수 힌트는 함수 호출 시 자동으로 표시됩니다.&lt;/li&gt;&#xA;&lt;li&gt;만약 자동으로 표시되지 않는다면, &lt;code&gt;Ctrl + Shift + Space&lt;/code&gt;를 눌러 수동으로 매개변수 힌트를 열 수 있습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;단축키-3&#34;&gt;&lt;strong&gt;단축키&lt;/strong&gt;:&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Windows/Linux: &lt;code&gt;Ctrl + Shift + Space&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;macOS: &lt;code&gt;Command + Shift + Space&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;4-함수-설명function-documentation&#34;&gt;4. &lt;strong&gt;함수 설명(Function Documentation)&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;기능-함수-또는-메서드에-대한-문서documentation-표시&#34;&gt;&lt;strong&gt;기능: 함수 또는 메서드에 대한 문서(Documentation) 표시&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;설명&lt;/strong&gt;: 특정 함수나 메서드에 대한 상세 설명을 확인할 수 있습니다. 이 설명에는 함수의 목적, 매개변수, 반환값, 예제 코드 등이 포함될 수 있습니다.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;예를 들어, Python에서 &lt;code&gt;len(&lt;/code&gt;를 입력하면 &lt;code&gt;len(object) -&amp;gt; int&lt;/code&gt;와 같은 설명이 표시되며, 추가적으로 &amp;ldquo;Return the number of items in a container.&amp;ldquo;와 같은 문서 내용을 볼 수 있습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;단축키-4&#34;&gt;&lt;strong&gt;단축키&lt;/strong&gt;:&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;기본적으로 함수 이름 위에 마우스를 올리거나, 함수 이름을 입력한 후 잠시 대기하면 자동으로 문서 힌트가 표시됩니다.&lt;/li&gt;&#xA;&lt;li&gt;수동으로 문서 힌트를 열고 싶다면 &lt;code&gt;Ctrl + K, Ctrl + I&lt;/code&gt;를 사용합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;단속키&#34;&gt;&lt;strong&gt;단속키&lt;/strong&gt;:&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Windows/Linux: &lt;code&gt;Ctrl + K, Ctrl + I&lt;/code&gt; (두 키를 순차적으로 누름)&lt;/li&gt;&#xA;&lt;li&gt;macOS: &lt;code&gt;Command + K, Command + I&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;요약&#34;&gt;요약&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;기능&lt;/th&gt;&#xA;          &lt;th&gt;설명&lt;/th&gt;&#xA;          &lt;th&gt;단축키 (Windows/Linux)&lt;/th&gt;&#xA;          &lt;th&gt;단축키 (macOS)&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;트리거 제안&lt;/td&gt;&#xA;          &lt;td&gt;IntelliSense 제안 목록을 수동으로 호출&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;Ctrl + Space&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;Control + Space&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;자동 완성/들여쓰기&lt;/td&gt;&#xA;          &lt;td&gt;제안 목록에서 선택하거나 코드를 들여쓰기&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;Tab&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;Tab&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;인수 목록&lt;/td&gt;&#xA;          &lt;td&gt;함수 호출 시 매개변수 정보 표시&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;Ctrl + Shift + Space&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;Command + Shift + Space&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;함수 설명&lt;/td&gt;&#xA;          &lt;td&gt;함수 또는 메서드의 문서 및 설명 표시&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;Ctrl + K, Ctrl + I&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;code&gt;Command + K, Command + I&lt;/code&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;위 기능들은 VSCode의 기본 설정을 기준으로 설명되었습니다. 필요에 따라 단축키를 사용자 정의할 수 있으며, &lt;code&gt;File &amp;gt; Preferences &amp;gt; Keyboard Shortcuts&lt;/code&gt; (또는 &lt;code&gt;Code &amp;gt; Preferences &amp;gt; Keyboard Shortcuts&lt;/code&gt; on macOS)에서 단축키를 변경할 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>c 에서 오류를 발생시키는 방법</title>
      <link>http://localhost:1313/temp/c-%EC%97%90%EC%84%9C-%EC%98%A4%EB%A5%98%EB%A5%BC-%EB%B0%9C%EC%83%9D%EC%8B%9C%ED%82%A4%EB%8A%94-%EB%B0%A9%EB%B2%95/</link>
      <pubDate>Fri, 27 Sep 2024 13:07:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/c-%EC%97%90%EC%84%9C-%EC%98%A4%EB%A5%98%EB%A5%BC-%EB%B0%9C%EC%83%9D%EC%8B%9C%ED%82%A4%EB%8A%94-%EB%B0%A9%EB%B2%95/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;반환 값 사용:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;함수에서 특정 값을 반환하여 오류를 나타냅니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;  &lt;span style=&#34;color:#75715e&#34;&gt;// 오류를 나타내는 음수 값&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; NULL;  &lt;span style=&#34;color:#75715e&#34;&gt;// 포인터 함수에서 오류 표시&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;exit() 함수:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;프로그램을 즉시 종료하고 운영 체제에 상태 코드를 반환합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;exit&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);  &lt;span style=&#34;color:#75715e&#34;&gt;// 비정상 종료를 나타내는 0이 아닌 값&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;abort() 함수:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;프로그램을 비정상적으로 종료하고 코어 덤프를 생성합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;abort&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;assert() 매크로:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;조건이 거짓일 때 프로그램을 중단하고 오류 메시지를 출력합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;assert.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;assert&lt;/span&gt;(condition);  &lt;span style=&#34;color:#75715e&#34;&gt;// condition이 거짓이면 오류 발생&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;perror() 함수:&lt;/p&gt;</description>
    </item>
    <item>
      <title>데이터베이스2 ER model</title>
      <link>http://localhost:1313/06.university/databaseuniversity/%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A42-er-model/</link>
      <pubDate>Mon, 23 Sep 2024 13:20:00 +0900</pubDate>
      <guid>http://localhost:1313/06.university/databaseuniversity/%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A42-er-model/</guid>
      <description>&lt;p&gt;27, 51, 52page&lt;/p&gt;&#xA;&lt;p&gt;entity&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;전제조건 : ER 모델 추상화된 모델로서 name = (first_name, middle_initial, last_name) 이렇게 여러가지 속성들을 같이 가지고 있는 속성을 분해하지 않고 1개의 속성으로 나타내도 된다&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20241010093184.png&#34; alt=&#34;Pasted image 20241010093184 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;er-모델-entity-set&#34;&gt;ER 모델 entity set&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;entity set ~= relation(table) =&amp;gt; customer, Account&lt;/li&gt;&#xA;&lt;li&gt;value set ~= domain (entity 가 가질 수 있는 value 들의 집합) =&amp;gt; {이름들, A-***}&lt;/li&gt;&#xA;&lt;li&gt;simple attribute vs composite attribute&#xA;&lt;ul&gt;&#xA;&lt;li&gt;simple : 분해 불가능한 속성 (id, dept)&lt;/li&gt;&#xA;&lt;li&gt;composite : 분해가능한 속성 (이름: 성과 이름 2개로 이루어짐)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;single-valued attribute vs multivalued attribute&#xA;&lt;ul&gt;&#xA;&lt;li&gt;single-valued : 아이디, 소속학과&lt;/li&gt;&#xA;&lt;li&gt;multivalued attribute : 아이들{철수, 영희}&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Derived attributes : 계산하기 전 : 만나이 = (현재 날짜 - 생일)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;er-모델-relationship&#34;&gt;ER 모델 Relationship&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Relationship Sets : Entity들의 상호연관관계 =&amp;gt; depositor&lt;/li&gt;&#xA;&lt;li&gt;Role : Relationship sets에서 각 entity의 역할 =&amp;gt; access-date&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;er-모델-weak-entity-set&#34;&gt;ER 모델 Weak entity set&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20241010105936.png&#34; alt=&#34;Pasted image 20241010105936 (Image resource not found)&#34; &gt;&#xA;1 to many, partial total&lt;/p&gt;</description>
    </item>
    <item>
      <title>Postgresql</title>
      <link>http://localhost:1313/temp/postgresql/</link>
      <pubDate>Mon, 16 Sep 2024 04:11:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/postgresql/</guid>
      <description>&lt;h2 id=&#34;postgresql-binary&#34;&gt;Postgresql binary&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;clusterdb&lt;/strong&gt;: 데이터베이스 클러스터의 모든 데이터베이스를 클러스터화합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;createdb&lt;/strong&gt;: 새로운 데이터베이스를 생성합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;createuser&lt;/strong&gt;: 새로운 사용자를 생성합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;dropdb&lt;/strong&gt;: 데이터베이스를 삭제합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;dropuser&lt;/strong&gt;: 사용자를 삭제합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;initdb&lt;/strong&gt;: 새로운 데이터베이스 클러스터를 초기화합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;oid2name&lt;/strong&gt;: OID(객체 식별자)와 이름을 매핑합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;pg_amcheck&lt;/strong&gt;: 인덱스 접근 방법을 검사합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;pg_archivecleanup&lt;/strong&gt;: 아카이브 로그 파일을 정리합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;pg_basebackup&lt;/strong&gt;: 데이터베이스 클러스터의 전체 백업을 생성합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;pgbench&lt;/strong&gt;: 벤치마킹 도구로, 성능 테스트를 수행합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;pg_checksums&lt;/strong&gt;: 데이터베이스 블록의 체크섬을 확인합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;pg_config&lt;/strong&gt;: PostgreSQL 설치 정보 및 구성을 출력합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;pg_controldata&lt;/strong&gt;: 데이터베이스 클러스터의 제어 정보를 출력합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;pg_ctl&lt;/strong&gt;: 데이터베이스 서버를 시작, 중지, 재시작합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;pg_dump&lt;/strong&gt;: 데이터베이스의 백업을 생성합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;pg_dumpall&lt;/strong&gt;: 모든 데이터베이스의 백업을 생성합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;pg_isready&lt;/strong&gt;: 데이터베이스 서버의 상태를 체크합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;pg_receivewal&lt;/strong&gt;: WAL(Write Ahead Log)을 수신합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;pg_recvlogical&lt;/strong&gt;: 논리적 복제를 위한 WAL을 수신합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;pg_resetwal&lt;/strong&gt;: WAL 파일의 상태를 재설정합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;pg_restore&lt;/strong&gt;: pg_dump로 생성된 백업을 복원합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;pg_rewind&lt;/strong&gt;: 마스터와 슬레이브 간의 데이터 동기화를 수행합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;pg_test_fsync&lt;/strong&gt;: fsync 성능을 테스트합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;pg_test_timing&lt;/strong&gt;: 시간 측정 테스트를 수행합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;pg_upgrade&lt;/strong&gt;: 데이터베이스를 새로운 버전으로 업그레이드합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;pg_verifybackup&lt;/strong&gt;: 백업의 유효성을 검사합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;pg_waldump&lt;/strong&gt;: WAL 파일의 내용을 출력합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;postgres&lt;/strong&gt;: PostgreSQL 데이터베이스 서버의 주요 실행 파일입니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;postmaster&lt;/strong&gt;: PostgreSQL 서버를 시작하는 데 사용되는 심볼릭 링크입니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;psql&lt;/strong&gt;: PostgreSQL의 명령줄 인터페이스입니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;reindexdb&lt;/strong&gt;: 데이터베이스의 인덱스를 재생성합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;vacuumdb&lt;/strong&gt;: 데이터베이스의 공간을 회수하고, 통계를 업데이트합니다.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;PostgreSQL에서 &lt;strong&gt;Predefined Roles&lt;/strong&gt;(미리 정의된 역할)은 특정 권한과 기능에 대한 접근을 제공하는 역할로, 데이터베이스 관리자가 사용자나 다른 역할에 부여할 수 있습니다. 이러한 역할은 일반적으로 자주 필요한 권한을 집합적으로 관리할 수 있도록 설계되었습니다. 아래에 각 미리 정의된 역할에 대한 설명을 제공합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>산업경영</title>
      <link>http://localhost:1313/temp/%EC%82%B0%EC%97%85%EA%B2%BD%EC%98%81/</link>
      <pubDate>Thu, 12 Sep 2024 03:59:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/%EC%82%B0%EC%97%85%EA%B2%BD%EC%98%81/</guid>
      <description>&lt;h2 id=&#34;1장&#34;&gt;1장&lt;/h2&gt;&#xA;&lt;p&gt;가내수공업&#xA;공장재 수공업&#xA;공장제 기계공업&#xA;산업&lt;/p&gt;&#xA;&lt;p&gt;분류&#xA;1차 2차 3차 산업&lt;/p&gt;&#xA;&lt;p&gt;clark의 법칙&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240912024542.png&#34; alt=&#34; (Image resource not found)&#34; &gt;%20image%2020240912024542.png)&#xA;초록선 1차&#xA;빨간선 2차&#xA;파란선 3차&#xA;주황선 4차&lt;/p&gt;&#xA;&lt;p&gt;표준 산업 분리 KSCIC&#xA;21개의 대분류&#xA;소분류&#xA;세분류&#xA;세세분류&#xA;4단계의 분리 1197개 2024기준&lt;/p&gt;&#xA;&lt;p&gt;의로용품업체를 지원사업이 실행되면 사업자 등록증에 등록된 산업에 해당되는 산업만 수혜를 얻는다&lt;/p&gt;&#xA;&lt;p&gt;분업&#xA;과학적 관리 (작업관리)&#xA;테일러 시간관점&#xA;길브레스 동작관점 서블릭 (마이크로노미터)(cycle graph)&#xA;간트 간트차트&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;이동조립 시스템에 의한 대량생산&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;이동조립법(포드 시스템)&lt;/li&gt;&#xA;&lt;li&gt;modern times 찰리 채플린(영화)&#xA;품질관리 연구&lt;/li&gt;&#xA;&lt;li&gt;품질 관리도&#xA;작업심리 연구&lt;/li&gt;&#xA;&lt;li&gt;호손 실험 : 물리적 조건 &amp;lt; 심리적 조건&lt;/li&gt;&#xA;&lt;li&gt;인간관계론 태동&lt;/li&gt;&#xA;&lt;li&gt;호손효과&#xA;재고 관리에 대한 연구&lt;/li&gt;&#xA;&lt;li&gt;harris의 경제적 주문량(EOQ)&lt;/li&gt;&#xA;&lt;li&gt;완충 재고 개념을 포함하면서 재고관리 주제로 확장&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;2장&#34;&gt;2장&lt;/h2&gt;&#xA;&lt;p&gt;시스템 systema 통합 전체를 의미하는 그리스어&#xA;시스템 요건&lt;/p&gt;</description>
    </item>
    <item>
      <title>메모리 기반 database</title>
      <link>http://localhost:1313/temp/%EB%A9%94%EB%AA%A8%EB%A6%AC-%EA%B8%B0%EB%B0%98-database/</link>
      <pubDate>Sun, 08 Sep 2024 21:32:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/%EB%A9%94%EB%AA%A8%EB%A6%AC-%EA%B8%B0%EB%B0%98-database/</guid>
      <description>&lt;p&gt;in-memory database 종류&#xA;radis&lt;/p&gt;&#xA;&lt;h2 id=&#34;1데이터-저장-방식&#34;&gt;1. &lt;strong&gt;데이터 저장 방식&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;인메모리 저장&lt;/strong&gt;: 인메모리 DBMS는 데이터를 RAM에 저장하여 빠른 접근을 가능하게 합니다. 데이터는 일반적으로 테이블 형식으로 구성되며, 각 테이블은 행(row)과 열(column)로 이루어져 있습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;2데이터-구조&#34;&gt;2. &lt;strong&gt;데이터 구조&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;행 기반 vs. 열 기반&lt;/strong&gt;: 일부 DBMS는 행 기반 저장 방식을 사용하고, 다른 DBMS는 열 기반 저장 방식을 사용합니다. 예를 들어, SAP HANA는 열 기반 저장 방식을 사용하여 분석 쿼리에 최적화되어 있습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;3트랜잭션-처리&#34;&gt;3. &lt;strong&gt;트랜잭션 처리&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;ACID 준수&lt;/strong&gt;: 많은 인메모리 DBMS는 ACID(원자성, 일관성, 고립성, 지속성) 트랜잭션을 지원합니다. 이들은 메모리에 저장된 데이터의 일관성을 보장하는 메커니즘을 갖추고 있습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;4쿼리-처리&#34;&gt;4. &lt;strong&gt;쿼리 처리&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;SQL 지원&lt;/strong&gt;: 대부분의 인메모리 DBMS는 SQL 쿼리를 지원합니다. 사용자는 SQL을 사용하여 데이터를 삽입, 선택, 업데이트 및 삭제할 수 있습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>리눅스 링킹</title>
      <link>http://localhost:1313/06.university/system-programminguniversity/%EB%A6%AC%EB%88%85%EC%8A%A4-%EB%A7%81%ED%82%B9/</link>
      <pubDate>Tue, 03 Sep 2024 11:57:00 +0900</pubDate>
      <guid>http://localhost:1313/06.university/system-programminguniversity/%EB%A6%AC%EB%88%85%EC%8A%A4-%EB%A7%81%ED%82%B9/</guid>
      <description>&lt;p&gt;리눅스 시스템 콜 예시&lt;/p&gt;&#xA;&lt;p&gt;y = sin(x)&#xA;코드가 있을 때 &lt;code&gt;#include &amp;lt;math.h&amp;gt;&lt;/code&gt;를 선언하지 않아도 컴파일 시에&#xA;&lt;code&gt;/usr/lib/libm.a&lt;/code&gt; 파일을 링크 시켜주면 실행 가능하다&#xA;단 선언은 해야하므로 double sin(double x);&#xA;코드를 적어주어야 한다&#xA;&lt;code&gt;gcc -lm program.c&lt;/code&gt; 실행 시에 컴파일 된다&#xA;옵션은 linking math 이다&lt;/p&gt;</description>
    </item>
    <item>
      <title>RISC-V 명령어 구조</title>
      <link>http://localhost:1313/02.inbox/%EA%B7%B8%EB%9E%98%EC%84%9C-%EC%BB%B4%ED%93%A8%ED%84%B0%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8F%99%EC%9E%91%ED%95%98%EB%82%98%EC%9A%94/risc-v-%EB%AA%85%EB%A0%B9%EC%96%B4-%EA%B5%AC%EC%A1%B0/</link>
      <pubDate>Sat, 31 Aug 2024 09:44:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EA%B7%B8%EB%9E%98%EC%84%9C-%EC%BB%B4%ED%93%A8%ED%84%B0%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8F%99%EC%9E%91%ED%95%98%EB%82%98%EC%9A%94/risc-v-%EB%AA%85%EB%A0%B9%EC%96%B4-%EA%B5%AC%EC%A1%B0/</guid>
      <description>&lt;p&gt;RISC-V emulator RV32I 를 코드로 구현하기 위해 먼저 RISC-V 공식 문서를 확인하여&#xA;구현할 명령의 구조를 공부한다&lt;/p&gt;&#xA;&lt;p&gt;RISC V 의 경우 32비트인지 64 비트인지 128비트인지에 따라 RV32, RV64, RV128 로 나누어지며 기본적인 명령인 integer instruction set 을 구현하면 RV32I, RV64I, RV128I 라고 불리운다 또한 아래의 4가지 확장을 추가하여 자유롭게 가능한 명령을 추가 할 수 있다&#xA;또한 문서는 2가지로 privilige 명령과 non privilige 명령 문서가 있으며 아래는 non privilige 명령만을 설명한다&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;1권, 권한 없는 사양 버전 20240411 &lt;a href=&#34;https://drive.google.com/file/d/1uviu1nH-tScFfgrovvFCrj7Omv8tFtkp/view?usp=drive_link&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;PDF&lt;/a&gt;, &lt;a href=&#34;https://github.com/riscv/riscv-isa-manual/releases/tag/20240411&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;GitHub&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;2권, 권한 사양 버전 20240411 &lt;a href=&#34;https://drive.google.com/file/d/17GeetSnT5wW3xNuAHI95-SI1gPGd5sJ_/view?usp=drive_link&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;PDF&lt;/a&gt;, &lt;a href=&#34;https://github.com/riscv/riscv-isa-manual/releases/tag/20240411&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;GitHub&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;non privilige 의 확장 명령 종류&lt;/p&gt;</description>
    </item>
    <item>
      <title>AT&amp;T 문법 과 Intel Assemble 문법 차이</title>
      <link>http://localhost:1313/02.inbox/att-%EB%AC%B8%EB%B2%95-%EA%B3%BC-intel-assemble-%EB%AC%B8%EB%B2%95-%EC%B0%A8%EC%9D%B4/</link>
      <pubDate>Mon, 26 Aug 2024 07:37:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/att-%EB%AC%B8%EB%B2%95-%EA%B3%BC-intel-assemble-%EB%AC%B8%EB%B2%95-%EC%B0%A8%EC%9D%B4/</guid>
      <description>&lt;p&gt;x86 아키텍처에서 어셈블리 언어는 주로 Intel과 AT&amp;amp;T 두 가지 구문 형식으로 나뉘어 사용된다 이 두 형식은 문법과 명령어의 표현 방식에서 차이가 있다&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-intel-구문&#34;&gt;1. Intel 구문&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;형식&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;피연산자는 보통 목적지(대상) 먼저, 원천(소스) 다음으로 나열&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;:&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-assembly&#34; data-lang=&#34;assembly&#34;&gt;MOV EAX, EBX  ; EBX의 값을 EAX로 이동&#xA;ADD EAX, 5    ; EAX에 5를 더함&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;2-att-구문&#34;&gt;2. AT&amp;amp;T 구문&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;형식&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;소스가 먼저, 목적지가 뒤&lt;/li&gt;&#xA;&lt;li&gt;레지스터와 즉시 값 앞에 &amp;lsquo;%&amp;lsquo;와 &amp;lsquo;$&amp;lsquo;를 붙입니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예시&lt;/strong&gt;:&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-assembly&#34; data-lang=&#34;assembly&#34;&gt;mov %ebx, %eax  ; EBX의 값을 EAX로 이동&#xA;add $5, %eax    ; EAX에 5를 더함&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>어셈블러</title>
      <link>http://localhost:1313/02.inbox/%EA%B7%B8%EB%9E%98%EC%84%9C-%EC%BB%B4%ED%93%A8%ED%84%B0%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8F%99%EC%9E%91%ED%95%98%EB%82%98%EC%9A%94/%EC%96%B4%EC%85%88%EB%B8%94%EB%9F%AC/</link>
      <pubDate>Mon, 26 Aug 2024 06:42:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EA%B7%B8%EB%9E%98%EC%84%9C-%EC%BB%B4%ED%93%A8%ED%84%B0%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8F%99%EC%9E%91%ED%95%98%EB%82%98%EC%9A%94/%EC%96%B4%EC%85%88%EB%B8%94%EB%9F%AC/</guid>
      <description></description>
    </item>
    <item>
      <title>레지스터</title>
      <link>http://localhost:1313/temp/%EB%A0%88%EC%A7%80%EC%8A%A4%ED%84%B0/</link>
      <pubDate>Sun, 11 Aug 2024 12:06:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/%EB%A0%88%EC%A7%80%EC%8A%A4%ED%84%B0/</guid>
      <description>&lt;h2 id=&#34;x86-64-amd64&#34;&gt;x86-64, AMD64&lt;/h2&gt;&#xA;&lt;p&gt;CPU&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;rax, rbx, rcx, rdx: 64비트 범용 레지스터입니다.&lt;/li&gt;&#xA;&lt;li&gt;rsi, rdi: 소스 인덱스와 목적지 인덱스 레지스터입니다.&lt;/li&gt;&#xA;&lt;li&gt;rbp, rsp: 베이스 포인터와 스택 포인터 레지스터입니다.&lt;/li&gt;&#xA;&lt;li&gt;r8에서 r15까지: 추가적인 64비트 범용 레지스터입니다.&lt;/li&gt;&#xA;&lt;li&gt;rip: 명령어 포인터 레지스터입니다.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;eflags: 프로세서의 현재 상태를 나타내는 플래그 레지스터입니다.&lt;/li&gt;&#xA;&lt;li&gt;eax, ebx, ecx, edx: 32비트 범용 레지스터입니다.&lt;/li&gt;&#xA;&lt;li&gt;esi, edi: 32비트 소스 인덱스와 목적지 인덱스 레지스터입니다.&lt;/li&gt;&#xA;&lt;li&gt;ebp, esp: 32비트 베이스 포인터와 스택 포인터 레지스터입니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Segs (세그먼트 레지스터):&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;cs: 코드 세그먼트&lt;/li&gt;&#xA;&lt;li&gt;ss: 스택 세그먼트&lt;/li&gt;&#xA;&lt;li&gt;ds: 데이터 세그먼트&lt;/li&gt;&#xA;&lt;li&gt;es: 추가 데이터 세그먼트&lt;/li&gt;&#xA;&lt;li&gt;fs: 추가 데이터 세그먼트&lt;/li&gt;&#xA;&lt;li&gt;gs: 추가 데이터 세그먼트&#xA;FPU (부동 소수점 유닛):&lt;/li&gt;&#xA;&lt;li&gt;st0에서 st7까지: FPU 스택 레지스터&lt;/li&gt;&#xA;&lt;li&gt;fctrl: FPU 제어 레지스터&lt;/li&gt;&#xA;&lt;li&gt;fstat: FPU 상태 레지스터&lt;/li&gt;&#xA;&lt;li&gt;ftag: FPU 태그 워드&lt;/li&gt;&#xA;&lt;li&gt;fiseg: FPU 명령 포인터 세그먼트&lt;/li&gt;&#xA;&lt;li&gt;fioff: FPU 명령 포인터 오프셋&lt;/li&gt;&#xA;&lt;li&gt;foseg: FPU 데이터 포인터 세그먼트&lt;/li&gt;&#xA;&lt;li&gt;fooff: FPU 데이터 포인터 오프셋&lt;/li&gt;&#xA;&lt;li&gt;fop: FPU 연산 코드&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;SSE 섹션:&lt;/p&gt;</description>
    </item>
    <item>
      <title>그래서 컴퓨터는 어떻게 동작하나요 2</title>
      <link>http://localhost:1313/02.inbox/%EA%B7%B8%EB%9E%98%EC%84%9C-%EC%BB%B4%ED%93%A8%ED%84%B0%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8F%99%EC%9E%91%ED%95%98%EB%82%98%EC%9A%94/%EA%B7%B8%EB%9E%98%EC%84%9C-%EC%BB%B4%ED%93%A8%ED%84%B0%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8F%99%EC%9E%91%ED%95%98%EB%82%98%EC%9A%94-2/</link>
      <pubDate>Sat, 10 Aug 2024 16:37:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EA%B7%B8%EB%9E%98%EC%84%9C-%EC%BB%B4%ED%93%A8%ED%84%B0%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8F%99%EC%9E%91%ED%95%98%EB%82%98%EC%9A%94/%EA%B7%B8%EB%9E%98%EC%84%9C-%EC%BB%B4%ED%93%A8%ED%84%B0%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8F%99%EC%9E%91%ED%95%98%EB%82%98%EC%9A%94-2/</guid>
      <description>&lt;p&gt;여기서 부터는 32 비트로 설계하게 된다&#xA;즉 word 가 32 비트 이다&lt;/p&gt;&#xA;&lt;h2 id=&#34;변경점&#34;&gt;변경점&lt;/h2&gt;&#xA;&lt;h3 id=&#34;ram&#34;&gt;RAM&lt;/h3&gt;&#xA;&lt;p&gt;RAM 의 경우 data bit size 는 32가 가능하지만 address bit width 의 경우 32 비트가 가능하지 않다(logisim 의 한계 4기가의 메모리는 감당하지 못한다) 그러므로 address bit width 의 경우 24 비트로 한다&lt;/p&gt;&#xA;&lt;p&gt;현대 컴퓨터에 사용하는 RAM 과 ㄱ&lt;/p&gt;&#xA;&lt;h3 id=&#34;register&#34;&gt;Register&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;IAR INSTRUCTION ADDRESS REGISTER 을 PC PROGRAM COUTER 로 표기한다&lt;/li&gt;&#xA;&lt;li&gt;레지스터의 경우 7비트에서는 2개가 존재했다&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;instruction-set&#34;&gt;Instruction set&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;8비트&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>실수 표현방법 고정소수점과 부동소수점</title>
      <link>http://localhost:1313/02.inbox/%EC%8B%A4%EC%88%98-%ED%91%9C%ED%98%84%EB%B0%A9%EB%B2%95-%EA%B3%A0%EC%A0%95%EC%86%8C%EC%88%98%EC%A0%90%EA%B3%BC-%EB%B6%80%EB%8F%99%EC%86%8C%EC%88%98%EC%A0%90/</link>
      <pubDate>Sun, 07 Jul 2024 21:55:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EC%8B%A4%EC%88%98-%ED%91%9C%ED%98%84%EB%B0%A9%EB%B2%95-%EA%B3%A0%EC%A0%95%EC%86%8C%EC%88%98%EC%A0%90%EA%B3%BC-%EB%B6%80%EB%8F%99%EC%86%8C%EC%88%98%EC%A0%90/</guid>
      <description>&lt;h3 id=&#34;소수의-10진수-2진수-계산-방법&#34;&gt;소수의 10진수 2진수 계산 방법&lt;/h3&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250408173559.png&#34; alt=&#34;Pasted image 20250408173559 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;예시 1: 10진수 1.625 → 2진수 1.101&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;정수 부분(1):&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;1 ÷ 2 = 0 &amp;hellip; &lt;strong&gt;나머지 1&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;따라서 정수 부분은 &lt;strong&gt;1&lt;/strong&gt;입니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;소수 부분(0.625):&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;0.625 × 2 = 1.25 → &lt;strong&gt;정수 부분 1&lt;/strong&gt;, 소수 부분 0.25&lt;/li&gt;&#xA;&lt;li&gt;0.25 × 2 = 0.5 → &lt;strong&gt;정수 부분 0&lt;/strong&gt;, 소수 부분 0.5&lt;/li&gt;&#xA;&lt;li&gt;0.5 × 2 = 1.0 → &lt;strong&gt;정수 부분 1&lt;/strong&gt;, 소수 부분 0 (계산 종료)&lt;/li&gt;&#xA;&lt;li&gt;따라서 소수 부분은 &lt;strong&gt;101&lt;/strong&gt;입니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;결과:&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>컴퓨터 구조 chapter1</title>
      <link>http://localhost:1313/02.inbox/%EC%BB%B4%ED%93%A8%ED%84%B0-%EA%B5%AC%EC%A1%B0-chapter1/</link>
      <pubDate>Tue, 18 Jun 2024 11:30:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EC%BB%B4%ED%93%A8%ED%84%B0-%EA%B5%AC%EC%A1%B0-chapter1/</guid>
      <description>&lt;h2 id=&#34;a-tour-of-computer-systems&#34;&gt;A Tour of Computer Systems&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;1.1 Information Is Bits + Context 39 정보는 비트 + 문맥이다&#xA;&lt;ul&gt;&#xA;&lt;li&gt;동일한 비트열이 문맥에 따라 string integer floating-point instruction 으로 해석될수 있다&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;1.2 Programs Are Translated by Other Programs into Different Forms 40&lt;/li&gt;&#xA;&lt;li&gt;1.3 It Pays to Understand How Compilation Systems Work 42&lt;/li&gt;&#xA;&lt;li&gt;1.4 Processors Read and Interpret Instructions Stored in Memory 43&lt;/li&gt;&#xA;&lt;li&gt;1.5 Caches Matter 47&lt;/li&gt;&#xA;&lt;li&gt;1.6 Storage Devices Form a Hierarchy 50&lt;/li&gt;&#xA;&lt;li&gt;1.7 The Operating System Manages the Hardware 50&lt;/li&gt;&#xA;&lt;li&gt;1.8 Systems Communicate with Other Systems Using Networks 55&lt;/li&gt;&#xA;&lt;li&gt;1.9 Important Themes 58&lt;/li&gt;&#xA;&lt;li&gt;1.10 Summary 63&#xA;Bibliographic Notes 64&#xA;Solutions to Practice Problems 64&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;direct memory access (DMA, discussed in Chap- ter 6)&#xA;cache memories chapter6&#xA;공유 라이브러리 주소 공간 chapter 7&#xA;kernel vietual memory 가 뭐지?? chapter 9&#xA;unix i o chapter 10&#xA;Thread-Level Concurrency vs instruction level parallelism 의 차이 12장 에서 하이퍼스레딩? 5장에서 instruction ??&#xA;파이프라닝 chapter4&lt;/p&gt;</description>
    </item>
    <item>
      <title>데이터베이스 디자인</title>
      <link>http://localhost:1313/06.university/databaseuniversity/%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4-%EB%94%94%EC%9E%90%EC%9D%B8/</link>
      <pubDate>Tue, 04 Jun 2024 15:11:00 +0900</pubDate>
      <guid>http://localhost:1313/06.university/databaseuniversity/%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4-%EB%94%94%EC%9E%90%EC%9D%B8/</guid>
      <description>&lt;h2 id=&#34;나쁜-디자인과-좋은-디자인&#34;&gt;나쁜 디자인과 좋은 디자인&lt;/h2&gt;&#xA;&lt;p&gt;$R = in_dept(ID, name, salary, dept_name, building, budget)$&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;나쁜 디자인&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;정보의 중복: 중복 데이터는 아래의 이상현상에서 자세히 나타난다&#xA;dept_name -&amp;gt;building, budget :  functional dependency 관계로 building, budget 은 정보의 중복이 발생할 수 있다&lt;/li&gt;&#xA;&lt;li&gt;이상 현상: Anomaly&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Insertion Anomaly:loan-number 없이branch-name 등 insert 불가&lt;/li&gt;&#xA;&lt;li&gt;Deletion Anomaly: 어떤 branch의 마지막 loan을 delete하면 branch 자체가 사라짐&lt;/li&gt;&#xA;&lt;li&gt;Update Anomaly: 어떤 특정한 branch의 정보(예: Downtown의assets) 를 update하면 해당되는 튜플들을 모두 업데이트해야 함 한개라도 실패하면 안된다&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Decomposition 이 필요하다는 결론&#xA;&lt;ul&gt;&#xA;&lt;li&gt;중복 데이터를 최소화&lt;/li&gt;&#xA;&lt;li&gt;정보를 보존 하면서 분리&lt;/li&gt;&#xA;&lt;li&gt;함수 종속성 유지 (BCNF)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;functional dependency 는 현실의 실세계의 돌아가는 법칙을 반영한 것이다&lt;/p&gt;</description>
    </item>
    <item>
      <title>선형대수학 worksheet11-6번</title>
      <link>http://localhost:1313/02.inbox/%EC%84%A0%ED%98%95%EB%8C%80%EC%88%98%ED%95%99-worksheet11-6%EB%B2%88/</link>
      <pubDate>Mon, 03 Jun 2024 19:20:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EC%84%A0%ED%98%95%EB%8C%80%EC%88%98%ED%95%99-worksheet11-6%EB%B2%88/</guid>
      <description>&lt;p&gt;$R_2 의\ 기저는 { u_1 = (1,-3), u_2 = (2,2)}$ $이를\ 통해\ 직교기저 {v_1, v_2} 를\ 구하여라\  &amp;amp;\  정규직교기저 {q_1, q_2} 를 구하라$&lt;/p&gt;&#xA;&lt;p&gt;$문제\ 1\ 그램\ 슈미트\ 직교화\ 과정을\ 통해\ 직교기저가\ 아닌\ 기저에서\ 직교기저를\ 구한다$&#xA;$u_1 = v_1 = (1,-3)$&#xA;$u_2 = (2,2)$&#xA;$v_2 = u_2 - \frac{u_2 \cdot v_1}{|v_1|^2} v_1$&#xA;$v_2 = (2,2) + \frac{4}{10}(1,-3)$&#xA;$v_2 = (\frac{12}{5}, \frac{4}{5})$&#xA;$즉\ 직교기저\ {v_1,v_2} = {(1,-3),(\frac{12}{5},\frac{4}{5})}$&lt;/p&gt;&#xA;&lt;p&gt;$문제\ 2\ 직교\ 기저에\ 정규화를\ 진행한다$&#xA;$각각의\ 원소의\ 크기가\ 1이어야\ 한다$&#xA;$(q_1,q_2) = {(k_1,-3k_1),(\frac{12}{5}k_2,\frac{4}{5}k_2)}$&#xA;$|q_1| = \sqrt{{k_1}^2 + 9k_1^2} = 1$&#xA;$|q_2| = \sqrt{\frac{144}{25}{{k_2}^2 + \frac{16}{25}k_2^2}} = 1$&#xA;$k_1 = \frac{1}{\sqrt{10}}$&#xA;$k_2 = \frac{5}{4\sqrt{10}}$&#xA;$즉\ 정규직교기저\ {q_1,q_2}= {(\frac{1}{\sqrt{10}},\frac{-3}{\sqrt{10}}),(\frac{3}{\sqrt{10}},\frac{1}{\sqrt{10}})}\  이다$&lt;/p&gt;</description>
    </item>
    <item>
      <title>yt-dlp 명령어 모음</title>
      <link>http://localhost:1313/02.inbox/yt-dlp-%EB%AA%85%EB%A0%B9%EC%96%B4-%EB%AA%A8%EC%9D%8C/</link>
      <pubDate>Sun, 02 Jun 2024 01:03:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/yt-dlp-%EB%AA%85%EB%A0%B9%EC%96%B4-%EB%AA%A8%EC%9D%8C/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yt-dlp -F &lt;span style=&#34;color:#75715e&#34;&gt;# 다운받을 수 있는 모든 포멧종류&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yt-dlp -f &lt;span style=&#34;color:#f92672&#34;&gt;[{&lt;/span&gt;포멧 id&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;확장자&lt;span style=&#34;color:#f92672&#34;&gt;}]&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 포멧 지정 다운&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yt-dlp -x --audio-format &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;오디오 포맷&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;URL&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;-f-표시-목록&#34;&gt;-F 표시 목록&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;ID&lt;/strong&gt;: 동영상 화질/오디오 옵션의 고유 식별자입니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;EXT&lt;/strong&gt;: 파일 확장자입니다. 일반적으로 mp4, webm, m4a 등이 사용됩니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;RESOLUTION&lt;/strong&gt;: 동영상의 해상도입니다. 예를 들어 1920x1080은 1080p, 1280x720은 720p를 의미합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;FPS&lt;/strong&gt;: 동영상의 프레임 레이트입니다. 초당 프레임 수를 나타냅니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;CH&lt;/strong&gt;: 오디오 채널 수입니다. 일반적으로 2채널 스테레오 오디오가 사용됩니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;FILESIZE&lt;/strong&gt;: 파일 크기입니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;TBR&lt;/strong&gt;: 평균 비트레이트(Transmission Bitrate)입니다. 동영상 및 오디오의 평균 데이터 전송률을 나타냅니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;PROTO&lt;/strong&gt;: 동영상 스트리밍 프로토콜입니다. 일반적으로 https, m3u8 등이 사용됩니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;VCODEC&lt;/strong&gt;: 동영상 코덱입니다. 예를 들어 avc1.4D401F는 H.264 코덱을 의미합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;VBR&lt;/strong&gt;: 동영상 비트레이트입니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;ACODEC&lt;/strong&gt;: 오디오 코덱입니다. 예를 들어 mp4a.40.2는 AAC 코덱을 의미합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;ABR&lt;/strong&gt;: 오디오 비트레이트입니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;ASR&lt;/strong&gt;: 오디오 샘플링 레이트입니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;MORE INFO&lt;/strong&gt;: 추가 정보입니다. 화질, 오디오 옵션 등에 대한 설명이 포함됩니다.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;이 정보를 통해 동영상의 화질, 오디오 품질, 파일 크기 등을 확인할 수 있습니다. 사용자의 네트워크 환경이나 기기 성능에 따라 적절한 옵션을 선택할 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>sql 에서 백틱, 작은따옴표, 큰따옴표 의미</title>
      <link>http://localhost:1313/02.inbox/sql-%EC%97%90%EC%84%9C-%EB%B0%B1%ED%8B%B1-%EC%9E%91%EC%9D%80%EB%94%B0%EC%98%B4%ED%91%9C-%ED%81%B0%EB%94%B0%EC%98%B4%ED%91%9C-%EC%9D%98%EB%AF%B8/</link>
      <pubDate>Tue, 21 May 2024 21:17:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/sql-%EC%97%90%EC%84%9C-%EB%B0%B1%ED%8B%B1-%EC%9E%91%EC%9D%80%EB%94%B0%EC%98%B4%ED%91%9C-%ED%81%B0%EB%94%B0%EC%98%B4%ED%91%9C-%EC%9D%98%EB%AF%B8/</guid>
      <description>&lt;p&gt;각 데이터베이스 관리 시스템(DBMS)에서 백틱(`), 작은따옴표(&amp;rsquo;), 그리고 큰따옴표(&amp;quot;)의 사용과 의미는 조금씩 다릅니다&lt;/p&gt;&#xA;&lt;h2 id=&#34;oracle&#34;&gt;Oracle&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;백틱(`)&lt;/strong&gt;: Oracle에서는 백틱을 사용하지 않습니다. 특별한 의미를 가지지 않으며, 식별자나 문자열을 나타내는 데 사용되지 않습니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;작은따옴표(&#39;)&lt;/strong&gt;: 문자열 리터럴을 정의하는 데 사용됩니다. 예를 들어, &lt;code&gt;SELECT &#39;문자열&#39; FROM DUAL;&lt;/code&gt;과 같이 사용할 수 있습니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;큰따옴표(&amp;quot;)&lt;/strong&gt;: 식별자(테이블 이름, 컬럼 이름 등)를 정의하는 데 사용됩니다. 대소문자를 구분하며, 기본적으로 Oracle은 대소문자를 구분하지 않지만, 큰따옴표로 묶인 식별자는 대소문자를 구분합니다. 예를 들어, &lt;code&gt;SELECT &amp;quot;Column&amp;quot; FROM &amp;quot;MyTable&amp;quot;;&lt;/code&gt;과 같이 사용할 수 있습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;mysql&#34;&gt;MySQL&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;백틱(`)&lt;/strong&gt;: 테이블 이름이나 컬럼 이름 같은 식별자를 묶는 데 사용됩니다. MySQL에서는 특별한 문자나 예약어, 공백 등이 포함된 식별자를 백틱으로 묶어 사용할 수 있습니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;작은따옴표(&amp;rsquo;)&lt;/strong&gt;: 문자열 리터럴을 정의하는 데 사용됩니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;큰따옴표(&amp;quot;)&lt;/strong&gt;: 기본 설정(SQL 모드)에 따라 다르지만, ANSI_QUOTES SQL 모드가 활성화되어 있을 때 식별자를 묶는 데 사용될 수 있습니다. 그렇지 않은 경우에는 작은따옴표와 같이 문자열 리터럴을 정의하는 데 사용됩니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;postgresql&#34;&gt;PostgreSQL&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;백틱(`)&lt;/strong&gt;: PostgreSQL에서는 백틱을 사용하지 않습니다. 특별한 의미를 가지지 않으며, 식별자나 문자열을 나타내는 데 사용되지 않습니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;작은따옴표(&amp;rsquo;)&lt;/strong&gt;: 문자열 리터럴을 정의하는 데 사용됩니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;큰따옴표(&amp;quot;)&lt;/strong&gt;: 식별자를 묶는 데 사용됩니다. PostgreSQL에서는 큰따옴표로 묶인 식별자가 대소문자를 구분합니다. 예를 들어, &lt;code&gt;SELECT &amp;quot;Column&amp;quot; FROM &amp;quot;MyTable&amp;quot;;&lt;/code&gt;에서 &amp;ldquo;MyTable&amp;quot;과 &amp;ldquo;Column&amp;quot;은 대소문자를 구분하는 식별자입니다.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Schema_Diagram 및 보고서</title>
      <link>http://localhost:1313/06.university/databaseuniversity/schema_diagram-%EB%B0%8F-%EB%B3%B4%EA%B3%A0%EC%84%9C/</link>
      <pubDate>Tue, 21 May 2024 18:51:00 +0900</pubDate>
      <guid>http://localhost:1313/06.university/databaseuniversity/schema_diagram-%EB%B0%8F-%EB%B3%B4%EA%B3%A0%EC%84%9C/</guid>
      <description>&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240522033715.png&#34; alt=&#34;Pasted image 20240522033715 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;열쇠표시 : primary key&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240522234781.png&#34; alt=&#34;Pasted image 20240522234781 (Image resource not found)&#34; &gt;&#xA;좌측 : FK, 우측:PK&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;목표로 하는 데이터베이스 시스템에 대한 설명&#xA;&lt;ol&gt;&#xA;&lt;li&gt;마트에 방문하는 고객의 거래를 관리하기 위한 db 시스템&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;데이터베이스 스키마 다이어그램 표현 (“Schema_Diagram.pdf” 참조)&#xA;&lt;ol&gt;&#xA;&lt;li&gt;상단에 위치&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;데이터베이스를 구성하는 테이블들의 명세 표현 (“테이블정의서.xls” 참조)&#xA;&lt;ol&gt;&#xA;&lt;li&gt;파일로 첨부&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;주요 질의서(Query) 세트 및 각각에 대한 설명&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;시에-사는-고객들의-이름과-나이를-조회하시오&#34;&gt;{??}시에 사는 고객들의 이름과 나이를 조회하시오&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; customer_name, age&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; customer&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; address &lt;span style=&#34;color:#66d9ef&#34;&gt;like&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;%{??}시%&amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;-종류의-상품의-이름을-조회하시오&#34;&gt;{??} 종류의 상품의 이름을 조회하시오.&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; product_name&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; product&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{??}&amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;고객이-거래-1회당-산-의-갯수의-평균을-조회하시오&#34;&gt;고객이 거래 1회당 산 {??}의 갯수의 평균을 조회하시오.&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SUM&lt;/span&gt;(quantity) &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; total_quantity&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; transaction_item&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; product_id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; product_id&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; product&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; product_name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;-형식-yyyy-mm-dd-일자에-방문한-고객들의-이름을-조회하시오&#34;&gt;{??} 형식 YYYY-MM-DD 일자에 방문한 고객들의 이름을 조회하시오.&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;c&lt;/span&gt;.customer_name&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;customer &lt;span style=&#34;color:#66d9ef&#34;&gt;c&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INNER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;JOIN&lt;/span&gt; visit v&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;c&lt;/span&gt;.customer_id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; v.customer_id&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; TRUNC(v.visit_date) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; DATE &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{??}&amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;-이름-손님이-머무른-시간의-평균을-조회하시오&#34;&gt;{??} 이름 손님이 머무른 시간의 평균을 조회하시오.&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;AVG&lt;/span&gt;(t.transaction_date &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; v.visit_date) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;avg_time(hour)&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; (&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;customer_name,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;visit_id,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;visit_date&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;customer &lt;span style=&#34;color:#66d9ef&#34;&gt;inner&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;join&lt;/span&gt; visit &lt;span style=&#34;color:#66d9ef&#34;&gt;on&lt;/span&gt; customer.customer_id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; visit.customer_id&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; customer_name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{??}&amp;#39;&lt;/span&gt; ) v&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;inner&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;join&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;transaction&lt;/span&gt; t &lt;span style=&#34;color:#66d9ef&#34;&gt;on&lt;/span&gt; v.visit_id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; t.visit_id;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;-고객의-구매-내역-조회&#34;&gt;{??} 고객의 구매 내역 조회&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;c&lt;/span&gt;.customer_name,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;p.product_name,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;ti.quantity,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;p.price,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;(ti.quantity &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; p.price) &lt;span style=&#34;color:#66d9ef&#34;&gt;AS&lt;/span&gt; total_price&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; customer &lt;span style=&#34;color:#66d9ef&#34;&gt;c&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;JOIN&lt;/span&gt; visit v &lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;c&lt;/span&gt;.customer_id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; v.customer_id&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;JOIN&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;transaction&lt;/span&gt; t &lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt; v.visit_id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; t.visit_id&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;JOIN&lt;/span&gt; transaction_item ti &lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt; t.transaction_id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ti.transaction_id&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;JOIN&lt;/span&gt; product p &lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt; ti.product_id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; p.product_id&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;c&lt;/span&gt;.customer_name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;고객 이름&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;t.transaction_date &lt;span style=&#34;color:#66d9ef&#34;&gt;DESC&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;웹-인터페이스&#34;&gt;웹 인터페이스&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240606154867.png&#34; alt=&#34;Pasted image 20240606154867 (Image resource not found)&#34; &gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240606154860.png&#34; alt=&#34;Pasted image 20240606154860 (Image resource not found)&#34; &gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240606154852.png&#34; alt=&#34;Pasted image 20240606154852 (Image resource not found)&#34; &gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240606154844.png&#34; alt=&#34;Pasted image 20240606154844 (Image resource not found)&#34; &gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240606154833.png&#34; alt=&#34;Pasted image 20240606154833 (Image resource not found)&#34; &gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240606155195.png&#34; alt=&#34;Pasted image 20240606155195 (Image resource not found)&#34; &gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240606155242.png&#34; alt=&#34;Pasted image 20240606155242 (Image resource not found)&#34; &gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240606155222.png&#34; alt=&#34;Pasted image 20240606155222 (Image resource not found)&#34; &gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240606155231.png&#34; alt=&#34;Pasted image 20240606155231 (Image resource not found)&#34; &gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240606155386.png&#34; alt=&#34;Pasted image 20240606155386 (Image resource not found)&#34; &gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240606155467.png&#34; alt=&#34;Pasted image 20240606155467 (Image resource not found)&#34; &gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240606155482.png&#34; alt=&#34;Pasted image 20240606155482 (Image resource not found)&#34; &gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ios 터미널 접근</title>
      <link>http://localhost:1313/02.inbox/ios-%ED%84%B0%EB%AF%B8%EB%84%90-%EC%A0%91%EA%B7%BC/</link>
      <pubDate>Wed, 15 May 2024 14:30:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/ios-%ED%84%B0%EB%AF%B8%EB%84%90-%EC%A0%91%EA%B7%BC/</guid>
      <description>&lt;h2 id=&#34;외부-접근&#34;&gt;외부 접근&lt;/h2&gt;&#xA;&lt;p&gt;ios 는 모바일 운영체제로서 샌드박스 형태의 아키텍쳐를 취하고 있다&#xA;즉 앱 하나하나다 일종의 User 로서 로그인하게 되고 유저의 home 영역을 제외한 곳은 읽기 조차 금지 되어있다 하지만 android 는 초창기 부터 다른 A 앱에서 B 앱의 접근을 api 로서 허용하고 있으며 이를 활용해 삼성의 &amp;lsquo;내파일&amp;rsquo; &amp;lsquo;사진&amp;rsquo; &amp;lsquo;한글뷰어&amp;rsquo; 과 같은 앱들은 android 가 제공하는 공용 공간에 접근 api 를 사용하여 동일한 공간에 사용자의 파일을 몰아넣고 데스크탑과 비슷한 환경을 구축해놓았다 하지만 ios 의 경우에는 이런것이 매우 부족하다 하지만 ios 13 부터였나(?) 이러한 api 가 개발자들에게 지원되기 시작했고 이를 이를 통해 할 수 있는 포텐셜이 늘어나게 되었다&lt;/p&gt;</description>
    </item>
    <item>
      <title>데이터베이스 인덱스</title>
      <link>http://localhost:1313/06.university/databaseuniversity/%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4-%EC%9D%B8%EB%8D%B1%EC%8A%A4/</link>
      <pubDate>Sun, 28 Apr 2024 02:51:00 +0900</pubDate>
      <guid>http://localhost:1313/06.university/databaseuniversity/%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4-%EC%9D%B8%EB%8D%B1%EC%8A%A4/</guid>
      <description>&lt;p&gt;인덱스 : data에 빠르게 접근하기 위한 수단&lt;/p&gt;&#xA;&lt;h2 id=&#34;기본&#34;&gt;기본&lt;/h2&gt;&#xA;&lt;h3 id=&#34;인덱스-파일index-entriy의-구조&#34;&gt;인덱스 파일(index entriy)의 구조&lt;/h3&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240506050531.png&#34; alt=&#34;Pasted image 20240506050531 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;search key 검색키 : record 를 찾는 데 사용되는 속성이나 속성들의 집합&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;인덱스의-종류&#34;&gt;인덱스의 종류&lt;/h3&gt;&#xA;&lt;p&gt;Ordered indices : record가 정렬된 순서와 동일하게 정렬된 search key&#xA;Hash indices : buckets 범위 안에서 값이 일정하게 분배로 된어 있다 값이 할댕&lt;/p&gt;&#xA;&lt;h2 id=&#34;인덱스-평가-지표&#34;&gt;인덱스 평가 지표&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Access types(접근 유형)&#xA;&lt;ul&gt;&#xA;&lt;li&gt;지정된 value 를 통해 즉각적으로 record 를 찾기&lt;/li&gt;&#xA;&lt;li&gt;지정된 value 를 통해 범위를 통해 record 를 찾기&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Access time(접근 시간) : 특정한 data 혹은 data 집합 접근에 걸리는 시간&lt;/li&gt;&#xA;&lt;li&gt;Insertion time(삽입 시간) 새로운 데이터 삽입 + 인덱스 구조 업데이트&lt;/li&gt;&#xA;&lt;li&gt;Deletion time(삭제 시간) 데이터 삭제 + 인덱스 구조 업데이트&lt;/li&gt;&#xA;&lt;li&gt;Space overhead(공간 부담) : 인덱스 구조가 차지하는 추가적인 공간&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;ordered-index&#34;&gt;Ordered index&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;primary index (clustering index) : 검색 키의 값을 파일과 동일하게 정렬된 순서로 저장&#xA;&lt;ul&gt;&#xA;&lt;li&gt;일반적인 상황에서는 primary index 의 search key 가 primary key 인 경우가 많지만 무조건 그럴 필요는 없다&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;secondary index (non clustering index) : 검색 키의 값과 파일의 순서가 동일한 순서가 아님&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;dense-index-sparse-index&#34;&gt;Dense index, sparse index&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Dense index : index file(index entry)에 모든 search key 값이 나타난다&#xA;&lt;ul&gt;&#xA;&lt;li&gt;access time 적어짐&lt;/li&gt;&#xA;&lt;li&gt;insetion time, Deletion time 커짐&lt;/li&gt;&#xA;&lt;li&gt;space overhead 커짐&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;spase index : index file(index entry)에 search key 값이 단지 몇 개만 나타나다&#xA;&lt;ul&gt;&#xA;&lt;li&gt;access time 많아짐&lt;/li&gt;&#xA;&lt;li&gt;insertion time, Deletion time 작아짐&lt;/li&gt;&#xA;&lt;li&gt;space overhead 작아짐&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;두개의-조합&#34;&gt;두개의 조합&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240506100581.png&#34; alt=&#34;Pasted image 20240506100581 (Image resource not found)&#34; &gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>dbms 잡 정보</title>
      <link>http://localhost:1313/temp/dbms-%EC%9E%A1-%EC%A0%95%EB%B3%B4/</link>
      <pubDate>Sat, 20 Apr 2024 01:32:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/dbms-%EC%9E%A1-%EC%A0%95%EB%B3%B4/</guid>
      <description>&lt;h2 id=&#34;데이터베이스-별-기본-파일-저장-위치&#34;&gt;데이터베이스 별 기본 파일 저장 위치&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;/opt/oracle/oradata&lt;/code&gt; : oracle database&#xA;&lt;code&gt;/var/lib/mysql&lt;/code&gt; : mysql&#xA;&lt;code&gt;/var/lib/mysql&lt;/code&gt; : mariadb&#xA;&lt;code&gt;/var/lib/postgresql/&amp;lt;version&amp;gt;/main&lt;/code&gt; : postgresql&lt;/p&gt;</description>
    </item>
    <item>
      <title>데이터베이스 sql</title>
      <link>http://localhost:1313/06.university/databaseuniversity/%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4-sql/</link>
      <pubDate>Fri, 19 Apr 2024 00:30:00 +0900</pubDate>
      <guid>http://localhost:1313/06.university/databaseuniversity/%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4-sql/</guid>
      <description>&lt;h2 id=&#34;sql&#34;&gt;SQL&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;DDL (data definition laguage)&#xA;&lt;ul&gt;&#xA;&lt;li&gt;쿼리&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Create Table&lt;/li&gt;&#xA;&lt;li&gt;Drop Table&lt;/li&gt;&#xA;&lt;li&gt;Truncate Table&lt;/li&gt;&#xA;&lt;li&gt;Alter Table&#xA;&lt;ul&gt;&#xA;&lt;li&gt;alter table r {add, add constraint, modifiy, drop colume, set unused, drop unused colume} A&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;rename&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Data Type&lt;/li&gt;&#xA;&lt;li&gt;Constraint (NOT NULL, DEFAULT, CHECK, REFERENCE)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;DML (data manipulation language)&#xA;&lt;ul&gt;&#xA;&lt;li&gt;select&#xA;&lt;ul&gt;&#xA;&lt;li&gt;select&lt;/li&gt;&#xA;&lt;li&gt;from&lt;/li&gt;&#xA;&lt;li&gt;where&lt;/li&gt;&#xA;&lt;li&gt;group by&lt;/li&gt;&#xA;&lt;li&gt;having&lt;/li&gt;&#xA;&lt;li&gt;order by&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;delete&lt;/li&gt;&#xA;&lt;li&gt;insert&lt;/li&gt;&#xA;&lt;li&gt;update&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;domain-types&#34;&gt;Domain Types&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;char(n) : 고정 길이 문자열&lt;/li&gt;&#xA;&lt;li&gt;varchar(n) : 가변 길이 문자열&lt;/li&gt;&#xA;&lt;li&gt;int : integer 정수 하위 집합&lt;/li&gt;&#xA;&lt;li&gt;smallint : 작은 int&lt;/li&gt;&#xA;&lt;li&gt;numeric(p, d) : p=숫자 전체 길이, d=소수점 아래자리수&#xA;&lt;ul&gt;&#xA;&lt;li&gt;ex) numeric(3,1) : 0.1 부터 99.9 까지 저장 가능 더 정밀한 소수점은 버려짐&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;real, double precision : 부동 소수점 숫자&lt;/li&gt;&#xA;&lt;li&gt;float(n) : n 자리 정밀도 소수&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;mysql&#34;&gt;MySQL&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;TINYINT&lt;/strong&gt;: 1바이트 정수 (-128 ~ 127 또는 0 ~ 255)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;SMALLINT&lt;/strong&gt;: 2바이트 정수 (-32,768 ~ 32,767 또는 0 ~ 65,535)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;MEDIUMINT&lt;/strong&gt;: 3바이트 정수 (-8,388,608 ~ 8,388,607 또는 0 ~ 16,777,215)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;INT (INTEGER)&lt;/strong&gt;: 4바이트 정수 (-2,147,483,648 ~ 2,147,483,647 또는 0 ~ 4,294,967,295)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;BIGINT&lt;/strong&gt;: 8바이트 정수 (-9,223,372,036,854,775,808 ~ 9,223,372,036,854,775,807 또는 0 ~ 18,446,744,073,709,551,615)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;FLOAT&lt;/strong&gt;: 4바이트 부동 소수점 수 (가변 소수점)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;DOUBLE&lt;/strong&gt;: 8바이트 부동 소수점 수 (가변 소수점)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;DECIMAL (NUMERIC)&lt;/strong&gt;: 고정 소수점 수 (정밀도와 소수 자릿수 지정 가능)&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;postgresql&#34;&gt;PostgreSQL&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;SMALLINT&lt;/strong&gt;: 2바이트 정수 (-32,768 ~ 32,767)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;INTEGER (INT)&lt;/strong&gt;: 4바이트 정수 (-2,147,483,648 ~ 2,147,483,647)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;BIGINT&lt;/strong&gt;: 8바이트 정수 (-9,223,372,036,854,775,808 ~ 9,223,372,036,854,775,807)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;REAL&lt;/strong&gt;: 4바이트 부동 소수점 수 (가변 소수점)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;DOUBLE PRECISION&lt;/strong&gt;: 8바이트 부동 소수점 수 (가변 소수점)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;NUMERIC&lt;/strong&gt;: 고정 소수점 수 (정밀도와 소수 자릿수 지정 가능)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;DECIMAL&lt;/strong&gt;: &lt;code&gt;NUMERIC&lt;/code&gt;의 동의어&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;oracle&#34;&gt;Oracle&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;NUMBER&lt;/strong&gt;: 가변 정밀도와 소수 자릿수를 갖는 숫자 (정밀도와 소수 자릿수 지정 가능)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;BINARY_FLOAT&lt;/strong&gt;: 4바이트 부동 소수점 수 (가변 소수점)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;BINARY_DOUBLE&lt;/strong&gt;: 8바이트 부동 소수점 수 (가변 소수점)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;FLOAT&lt;/strong&gt;: &lt;code&gt;NUMBER&lt;/code&gt;의 동의어로 사용되며, 정밀도 지정 가능&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;create-table-ddl&#34;&gt;CREATE TABLE DDL&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;테이블이름&lt;/span&gt; (&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;컬럼이름&lt;/span&gt; datatype [DEFAULT기본값] [&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;컬럼제약조건&lt;/span&gt;],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;컬럼이름&lt;/span&gt; datatype [DEFAULT기본값] [&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;컬럼제약조건&lt;/span&gt;],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;…&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;테이블&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;제약조건&lt;/span&gt;] &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;…&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;table 이름은 reserbed word 는 사용 불가 이름의 시작은 문자로 그리고 &lt;code&gt;A~Z, a~z, 0~9, _, $, #&lt;/code&gt; 문자만 허용&lt;/p&gt;</description>
    </item>
    <item>
      <title>sql date 관련 정리</title>
      <link>http://localhost:1313/temp/sql-date-%EA%B4%80%EB%A0%A8-%EC%A0%95%EB%A6%AC/</link>
      <pubDate>Fri, 12 Apr 2024 09:58:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/sql-date-%EA%B4%80%EB%A0%A8-%EC%A0%95%EB%A6%AC/</guid>
      <description>&lt;p&gt;sql 에서 제공하는 date 에 관련한 정보를 기술한다&lt;/p&gt;&#xA;&lt;h2 id=&#34;자료형&#34;&gt;자료형&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-date-타입&#34;&gt;1. DATE 타입&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;DATE 타입은 날짜는 포함하지만 시간은 포함하지 않을 때 사용하는 타입입니다.&lt;/li&gt;&#xA;&lt;li&gt;DATE 타입 YYYY-MM-DD 형식 입력가능하며, &amp;lsquo;1000-01-01&amp;rsquo; 부터 &amp;lsquo;9999-12-31&amp;rsquo; 까지만 입력가능합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2-datetime-타입&#34;&gt;2. DATETIME 타입&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;DATETIME 타입은 날짜와 시간을 모두 포함할 때 사용하는 타입입니다.&lt;/li&gt;&#xA;&lt;li&gt;YYYY-MM-DD HH:MM:SS의 형태로 사용되며 &amp;lsquo;1001-01-01 00:00:00&amp;rsquo;부터 &amp;lsquo;9999-12-31 23:59:59&amp;rsquo;까지 입력이 가능하다&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;3-time-타입&#34;&gt;3. TIME 타입&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;TIME은 HH:MM:SS의 형태를 지닌다.(HHH:MM:SS의 형태를 띄기도 한다)&lt;/li&gt;&#xA;&lt;li&gt;-838:59:59 부터 838:59:59 까지의 범위를 가진다. 이때 TIME type의 시간이 크다고 느낄수도 있다.&lt;/li&gt;&#xA;&lt;li&gt;TIME은 현재의 시간을 표현할때만 쓰는것이 아니라 이미 지나버린 시간이나, 특정 이벤트끼리의 간극을 표현하는데 사용되기 때문에 이처럼 쓰인다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;4-timestamp-타입&#34;&gt;4. TIMESTAMP 타입&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;TIMESTAMP 역시 날짜와 시간을 포함한다.&lt;/li&gt;&#xA;&lt;li&gt;TIMESTAMP는 1970-01-01 00:00:01 UTC 부터 2038-01-19 03:14:07UTC 까지가 그 범위이다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;관련-함수&#34;&gt;관련 함수&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;dayofweek(date)&lt;/strong&gt;&#xA;날짜를 한 주의 몇 번째 요일인지를 나타내는 숫자로 리턴한다.&#xA;(1 = 일요일, 2 = 월요일, &amp;hellip; 7 = 토요일)&#xA;mysql&amp;gt; select dayofweek(&amp;lsquo;1998-02-03&amp;rsquo;); -&amp;gt; 3&lt;/p&gt;</description>
    </item>
    <item>
      <title>sql 틀린문제</title>
      <link>http://localhost:1313/temp/sql-%ED%8B%80%EB%A6%B0%EB%AC%B8%EC%A0%9C/</link>
      <pubDate>Thu, 11 Apr 2024 13:04:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/sql-%ED%8B%80%EB%A6%B0%EB%AC%B8%EC%A0%9C/</guid>
      <description>&lt;h2 id=&#34;null-의-비교연산&#34;&gt;null 의 비교연산&lt;/h2&gt;&#xA;&lt;p&gt;null&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; referee_id&lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;or&lt;/span&gt; referee_id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;-- 틀린답&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;이&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;아닌&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; referee_id&lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;or&lt;/span&gt; referee_id &lt;span style=&#34;color:#66d9ef&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;-- 이것이 맞는 답&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;SQL에서 NULL 값은 특별하게 취급되며, NULL은 &amp;lsquo;값이 없음&amp;rsquo;을 의미합니다. 따라서, NULL 값은 다른 값들과 일반적인 비교 연산자(=, !=, &amp;lt;, &amp;gt;, 등)로 비교할 수 없습니다. NULL과의 비교는 IS NULL 또는 IS NOT NULL 연산자를 사용해야만 합니다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;not-in-문제&#34;&gt;not in 문제&lt;/h2&gt;&#xA;&lt;p&gt;visits table and transactions table 이 존재 방문했지만 거래를 하지 않은 고객을 식별하려면 방문한 모든 고객의 목록에서 거래를 한 고객의 기록을 제거해야 합니다. 이를 통해 이 문제를 일반적인 &amp;ldquo;NOT IN&amp;rdquo; 문제로 변환합니다. &amp;ldquo;NOT IN&amp;rdquo; 문제를 해결하는 방법은 크게 두 가지입니다:&lt;/p&gt;</description>
    </item>
    <item>
      <title>docker 없이 컨테이너</title>
      <link>http://localhost:1313/temp/docker-%EC%97%86%EC%9D%B4-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88/</link>
      <pubDate>Wed, 10 Apr 2024 03:21:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/docker-%EC%97%86%EC%9D%B4-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/sam0kim/container-internal&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;관련 리포지토리&lt;/a&gt;&#xA;&lt;a href=&#34;https://www.youtube.com/watch?v=mSD88FuST80&amp;amp;t=650s&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;유튜브 영상&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;아래의 패지지 의존&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get update &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get -y install gcc &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get -y install make &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get -y install pkg-config &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get -y install libseccomp-dev &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get -y install tree &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get -y install jq &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get -y install bridge-utils&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;전제&#34;&gt;전제&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;루트 파일 시스템&#xA;&lt;ul&gt;&#xA;&lt;li&gt;container =&amp;gt; / 는 overlay 로 마운트&lt;/li&gt;&#xA;&lt;li&gt;host =&amp;gt; / 는 일반적인 곳으로 마운트&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;프로세스&#xA;&lt;ul&gt;&#xA;&lt;li&gt;container =&amp;gt; 1번이 shell&lt;/li&gt;&#xA;&lt;li&gt;host =&amp;gt; 일반&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;네트워크&#xA;&lt;ul&gt;&#xA;&lt;li&gt;container =&amp;gt; eth0@~~&lt;/li&gt;&#xA;&lt;li&gt;host =&amp;gt; 일반&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;유저 및 호스트&#xA;&lt;ul&gt;&#xA;&lt;li&gt;container =&amp;gt; root (host 의 root 와 동일할까??), 이상한 문자열 호스트네임&lt;/li&gt;&#xA;&lt;li&gt;host =&amp;gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;chroot&#34;&gt;chroot&lt;/h2&gt;&#xA;&lt;p&gt;프로세스를 가두자 =&amp;gt; 사용자 프로세스를 fake 루트를 통해 막는다 (프로세스를 가둔다는 말이 무었일까 #ModificationRequired )&lt;/p&gt;</description>
    </item>
    <item>
      <title>docker 명령 모음</title>
      <link>http://localhost:1313/temp/docker-%EB%AA%85%EB%A0%B9-%EB%AA%A8%EC%9D%8C/</link>
      <pubDate>Mon, 08 Apr 2024 13:33:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/docker-%EB%AA%85%EB%A0%B9-%EB%AA%A8%EC%9D%8C/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&amp;lt;옵션&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &amp;lt;이미지 식별자&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&amp;lt;명령어&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&amp;lt;인자&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;-d : detach =&amp;gt; background&#xA;-it : interactive, tty&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker exec -it &amp;lt;컨테이너 식별자&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&amp;lt;명령어&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>학교 시스템 데이터베이스</title>
      <link>http://localhost:1313/06.university/databaseuniversity/%ED%95%99%EA%B5%90-%EC%8B%9C%EC%8A%A4%ED%85%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4/</link>
      <pubDate>Thu, 21 Mar 2024 01:14:00 +0900</pubDate>
      <guid>http://localhost:1313/06.university/databaseuniversity/%ED%95%99%EA%B5%90-%EC%8B%9C%EC%8A%A4%ED%85%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4/</guid>
      <description>&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240315140348-1.png&#34; alt=&#34; (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;table&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;mean&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;student&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;학생&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;instructor&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;교수&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;advisor&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;지도관계&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;department&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;학과&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;course&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;과목&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;prereq&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;선이수관계&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;section&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;특정 강좌&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;teaches&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;강의교수&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;takes&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;수강&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;classroom&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;강의실&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;time_slot&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;시간표&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;우측부터 설명&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;student(학생) 말그대로 학생&#xA;&lt;ul&gt;&#xA;&lt;li&gt;ID=PK dept_name(학과명)=FK&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;advisor(지도관계) 학생과 교수의 지도관계&#xA;&lt;ul&gt;&#xA;&lt;li&gt;s_id(학생ID)=PK, FK&lt;/li&gt;&#xA;&lt;li&gt;i_id(교수ID)=FK&lt;/li&gt;&#xA;&lt;li&gt;학생의 지도교수가 아직 배정 받지 못한 경우가 있을 수 있음 NULL 값 부여불가 기능을 사용&lt;/li&gt;&#xA;&lt;li&gt;s_id 만 PK 이므로 모든 학생이 들어가고 학생의 중복은 불가능하다&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;instructor(교수)&lt;/li&gt;&#xA;&lt;li&gt;department(학과)&lt;/li&gt;&#xA;&lt;li&gt;course(과목): 학과에 존재하는 모든 과목&lt;/li&gt;&#xA;&lt;li&gt;prereq(선이수 관계) : 학과에 존재하는 과목의 모든 선이수 관계&#xA;&lt;ul&gt;&#xA;&lt;li&gt;모든 값이 PK 이면서 FK&lt;/li&gt;&#xA;&lt;li&gt;couse_id, prereq_id 묶어서 하나의 PK&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;section(강의) : course 와 달리 실제 강의를 의미함&lt;/li&gt;&#xA;&lt;li&gt;teaches(강의 교수)&lt;/li&gt;&#xA;&lt;li&gt;classroom(강의실)&lt;/li&gt;&#xA;&lt;li&gt;tasks(수강신청 목록)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;prereq 의 두 attribute 가 하나의 PK 를 이루는가 즉 집합인가?&lt;/p&gt;</description>
    </item>
    <item>
      <title>x86-64 CPU 레지스터(Register)의 개념 및 종류</title>
      <link>http://localhost:1313/temp/x86-64-cpu-%EB%A0%88%EC%A7%80%EC%8A%A4%ED%84%B0register%EC%9D%98-%EA%B0%9C%EB%85%90-%EB%B0%8F-%EC%A2%85%EB%A5%98/</link>
      <pubDate>Wed, 20 Mar 2024 14:24:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/x86-64-cpu-%EB%A0%88%EC%A7%80%EC%8A%A4%ED%84%B0register%EC%9D%98-%EA%B0%9C%EB%85%90-%EB%B0%8F-%EC%A2%85%EB%A5%98/</guid>
      <description>&lt;p&gt;32bit, 64bit 운영체제에서 32bit, 64bit 는 레지스터 및 데이터 경로의 크기 를 의미한다.&lt;br&gt;&#xA;위 예시에서 AH 는 8bit 운영체제와 호환되는 레지스터라고 이해하면 된다. &lt;/p&gt;&#xA;&lt;p&gt; 운영체제의 발전에 따라, 수행해야할 기능이 많아지면서&lt;br&gt;&#xA;많은 정보를 다룰 수 있도록 새로운 레지스터가 추가되고, 크기도 점점 커졌다.&lt;/p&gt;&#xA;&lt;p&gt; *  E 는 Extended 의 약자. R은 왜 R인지 모르겠다..&lt;br&gt;&#xA;* CPU의 아키텍쳐에 따라 레지스터의 종류가 다를 수 있다.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;범용-레지스터&#34;&gt;&lt;strong&gt;범용 레지스터&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;====&#xA;범용 레지스터는 연산 결과의 임시 저장, 산술 및 논리 연산, 주소 색인 등 다양한 용도로 사용되는 다목적 레지스터이다.&lt;br&gt;&#xA;종류는 EAX, EBX, ECX, EDX, ESI, EDI, ESP, EBP, EIP 가 있다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>대학교 운영체제</title>
      <link>http://localhost:1313/02.inbox/%EB%8C%80%ED%95%99%EA%B5%90-%EC%9A%B4%EC%98%81%EC%B2%B4%EC%A0%9C/</link>
      <pubDate>Mon, 18 Mar 2024 05:46:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EB%8C%80%ED%95%99%EA%B5%90-%EC%9A%B4%EC%98%81%EC%B2%B4%EC%A0%9C/</guid>
      <description>&lt;h2 id=&#34;cpu-동작-과정&#34;&gt;cpu 동작 과정&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/Pasted%20video%2020240318100401.mp4&#34; alt=&#34;Pasted video 20240318100401 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;cpu-구조&#34;&gt;cpu 구조&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240318163101.gif&#34; alt=&#34; (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240318163101.gif&#34; alt=&#34;Pasted image 20240318163101 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;주요 부품&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;레지스터&#xA;&lt;ul&gt;&#xA;&lt;li&gt;PC  프로그램 카운터 (progam counter) : 다음에 실행될 메모리 주소를 저장&lt;/li&gt;&#xA;&lt;li&gt;MAR  메모리 주소 레지스터 (memory Address registor) : pc 에서 주소를 넘겨 받아 메인 메모리에 접근해 데이터를 MBR  (memory buffer registor)에 저장하는 역할&lt;/li&gt;&#xA;&lt;li&gt;MBR 메모리 버퍼 레지스터 (memory buffer registor) : MBR 을 통해 가져온 데이터를 임시 저장, 명령 부분은 IR(Instruction Register) 에 저장, 연산에 사용될 데이터는 AC(Accumulator) 누산기 레지스터에 저장, 메모리에 저장될 데이터를 임시 저장&lt;/li&gt;&#xA;&lt;li&gt;IR 명령어 레지스터 (Instruction Register) : 현재 실행되고 있는 명령을 저장하는 레지스터&lt;/li&gt;&#xA;&lt;li&gt;AC 누산기 (Accumulator) : ALU 연산을 위한 레지스터로서 연산해야 할 값 또는 연산 결과를 임시 저장&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;coutrol 제어장치 : 명령어 레지스터 IR 에 있는 명령을 받아 해석하고 장치들을 제어&lt;/li&gt;&#xA;&lt;li&gt;ALU : 산술 논리 연산 장치&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;추가 부품&lt;/p&gt;</description>
    </item>
    <item>
      <title>mysql 명령 모음</title>
      <link>http://localhost:1313/02.inbox/mysql-%EB%AA%85%EB%A0%B9-%EB%AA%A8%EC%9D%8C/</link>
      <pubDate>Tue, 05 Mar 2024 16:15:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/mysql-%EB%AA%85%EB%A0%B9-%EB%AA%A8%EC%9D%8C/</guid>
      <description>&lt;p&gt;mysql 로그인&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mysql -u &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;name&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; -p &lt;span style=&#34;color:#75715e&#34;&gt;# name 유저로 -p 패스워드를 사용해 로그인 하겠다&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;mysql 유저 생성(외부에서)&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mysqladmin -u &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;name&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;mysql 유저 정보 확인&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;USE mysql; &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;user&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;host&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;user&lt;/span&gt;; &lt;span style=&#34;color:#75715e&#34;&gt;/* mysql 유저 정보 확인 */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;mysql 유저 권한 추가&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;GRANT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ALL&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;privileges&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt; DB명.&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TO&lt;/span&gt; username&lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;hostname IDENTIFIED &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;비밀번호&amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;mysql 유저 권환 확인&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SHOW&lt;/span&gt; GRANTS &lt;span style=&#34;color:#66d9ef&#34;&gt;FOR&lt;/span&gt; username&lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;hostname;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SHOW&lt;/span&gt; VARIABLES &lt;span style=&#34;color:#66d9ef&#34;&gt;LIKE&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;general_log%&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;서버 관리를 하다보면 mysql 사용자 계정을 추가해 줄때가 있다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>리눅스 시스템 기본</title>
      <link>http://localhost:1313/%EC%8B%A4%EC%8A%B5%EC%9C%BC%EB%A1%9C-%EB%B0%B0%EC%9A%B0%EB%8A%94-%EB%A6%AC%EB%88%85%EC%8A%A4-%EA%B5%AC%EC%A1%B0/%EB%A6%AC%EB%88%85%EC%8A%A4-%EC%8B%9C%EC%8A%A4%ED%85%9C-%EA%B8%B0%EB%B3%B8/</link>
      <pubDate>Mon, 04 Mar 2024 17:29:00 +0900</pubDate>
      <guid>http://localhost:1313/%EC%8B%A4%EC%8A%B5%EC%9C%BC%EB%A1%9C-%EB%B0%B0%EC%9A%B0%EB%8A%94-%EB%A6%AC%EB%88%85%EC%8A%A4-%EA%B5%AC%EC%A1%B0/%EB%A6%AC%EB%88%85%EC%8A%A4-%EC%8B%9C%EC%8A%A4%ED%85%9C-%EA%B8%B0%EB%B3%B8/</guid>
      <description>&lt;p&gt;운영 체제 레벨의 패키지 관리자로는 아래와 같은 것들이 있습니다:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;code&gt;dnf&lt;/code&gt;: Fedora 리눅스에서 사용되는 패키지 관리자로, yum의 최신 버전입니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;pacman&lt;/code&gt;: Arch 리눅스에서 사용되는 패키지 관리자입니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;zypper&lt;/code&gt;: openSUSE에서 사용되는 패키지 관리자입니다.&#xA;apt yum brew&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;프로그래밍 언어 레벨의 패키지 관리자로는 아래와 같은 것들이 있습니다:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;code&gt;gem&lt;/code&gt;: Ruby 언어의 패키지 관리자입니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;composer&lt;/code&gt;: PHP 언어의 패키지 관리자입니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;nuget&lt;/code&gt;: .NET 언어의 패키지 관리자입니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;maven&lt;/code&gt;과 &lt;code&gt;gradle&lt;/code&gt;: Java 언어의 패키지 관리자입니다.&#xA;pip, cargo, npm&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;시스템 콜의 종류&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;﻿﻿프로세스 생성, 삭제&lt;/li&gt;&#xA;&lt;li&gt;﻿﻿메모리 확보, 해제&lt;/li&gt;&#xA;&lt;li&gt;﻿﻿프로세스 간 통신(IPC)&lt;/li&gt;&#xA;&lt;li&gt;﻿﻿네트워크&lt;/li&gt;&#xA;&lt;li&gt;﻿﻿파일시스템 다루기&lt;/li&gt;&#xA;&lt;li&gt;﻿﻿파일 다루기(디바이스 접근)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;strace : 시스템 호출 목록 확인&#xA;os 제공&lt;/p&gt;</description>
    </item>
    <item>
      <title>find 명확하게 이해하자</title>
      <link>http://localhost:1313/temp/find-%EB%AA%85%ED%99%95%ED%95%98%EA%B2%8C-%EC%9D%B4%ED%95%B4%ED%95%98%EC%9E%90/</link>
      <pubDate>Sat, 02 Mar 2024 14:44:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/find-%EB%AA%85%ED%99%95%ED%95%98%EA%B2%8C-%EC%9D%B4%ED%95%B4%ED%95%98%EC%9E%90/</guid>
      <description>&lt;p&gt;어떤 폴더를 제외하고 파일을 찾고자 -not -path 옵션을 사용했지만 접근 불가능한 파일(proc 내부의 파일들)에 접근하려고 해서 오류(Permission denied)를 뿜어내서 찾아보게 되었다&#xA;하지만 생각보다 조금 내용이 복잡한 것 같아 완벽하게 정리해 보고자 한다&lt;/p&gt;&#xA;&lt;p&gt;find 명령이 하는 일이 단순하게 2가지를 한다고 이해하면&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;찾는 것 ~= 탐색하는 것&lt;/li&gt;&#xA;&lt;li&gt;탐색의 나열중 조건에 맞는 것을 출력하는 것&#xA;2가지 이다&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;find 기본 문법&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;find &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;option&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;starting pointing&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;expression&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; ...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;option&lt;/li&gt;&#xA;&lt;li&gt;starting pointing : find 명령의 시작 위치&lt;/li&gt;&#xA;&lt;li&gt;expression: 조건 여러가지 종류가 존재&#xA;&lt;ul&gt;&#xA;&lt;li&gt;테스트(Tests) : 파일의 속성에 기반한 true false 값 반환&#xA;&lt;ul&gt;&#xA;&lt;li&gt;ex) -name &amp;lsquo;stdio.h&amp;rsquo; =&amp;gt; 이름이 stdio.h 인 경우 true&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;동작(Actions) : T/F 반환 이외의 std 출력과 같은 부가적이 동작이 있음 그리고 그 부가적인 동작의 성공 여부에 따라 T/F 를 반환&#xA;&lt;ul&gt;&#xA;&lt;li&gt;ex) -path &amp;lsquo;/include&amp;rsquo; -prune =&amp;gt; &amp;lsquo;/include&amp;rsquo; 폴더의 내부는 탐색하지 않는다 또한 전체의 결과는 true 이다&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;전역 옵션(Global options) 전역 옵션은 명령 줄의 어느 부분에서도 지정된 테스트 및 동작의 작동에 영향을 줍니다. 전역 옵션은 항상 true를 반환합니다. 예를 들어 -depth 옵션은 find가 파일 시스템을 깊이 우선 순서로 탐색하도록 만듭니다.&lt;/li&gt;&#xA;&lt;li&gt;위치 옵션(Positional options) 위치 옵션은 그들 뒤에 따라오는 테스트 또는 동작에만 영향을 미칩니다. 위치 옵션은 항상 true를 반환합니다. 예를 들어 -regextype 옵션은 위치 지정이며, 명령 줄에서 나중에 발생하는 정규 표현식에 대해 정규 표현식 방언을 지정합니다.&lt;/li&gt;&#xA;&lt;li&gt;연산자(Operators) 연산자는 표현 내의 다른 항목들을 결합합니다. 예를 들어 -o(논리 OR를 의미함)와 -a(논리 AND를 의미함)가 있습니다. 연산자가 누락된 경우 -a가 가정됩니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;code&gt;/usr&lt;/code&gt; 폴더에서 &lt;code&gt;/usr/bin&lt;/code&gt; 출력하지도 탐색하지도 않고 이름이 stdio.h 인 파일을 찾는다&#xA;&lt;code&gt;find /usr -not \( -path &#39;/usr/bin&#39; -prune \)  -name &#39;stdio.h&#39;&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>정규 표현식</title>
      <link>http://localhost:1313/temp/%EC%A0%95%EA%B7%9C-%ED%91%9C%ED%98%84%EC%8B%9D/</link>
      <pubDate>Fri, 01 Mar 2024 05:45:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/%EC%A0%95%EA%B7%9C-%ED%91%9C%ED%98%84%EC%8B%9D/</guid>
      <description>&lt;p&gt;문자열의 일정한 패턴을 표현하는 일종의 형식 언어&lt;/p&gt;</description>
    </item>
    <item>
      <title>sudo vs su</title>
      <link>http://localhost:1313/temp/sudo-vs-su/</link>
      <pubDate>Wed, 28 Feb 2024 09:13:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/sudo-vs-su/</guid>
      <description>&lt;p&gt;sudo, sudoedit — 명령을 다른 사용자로 실행합니다&lt;br&gt;&#xA;su - 대체 사용자 및 그룹 ID를 사용하여 명령을 실행합니다&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;3308&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3308&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3308&lt;/span&gt; pts/1    00:00:00     bash&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;3519&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3519&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3308&lt;/span&gt; pts/1    00:00:00       sudo&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;3520&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3520&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3520&lt;/span&gt; pts/3    00:00:00         sudo&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;3521&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3521&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3520&lt;/span&gt; pts/3    00:00:00           su&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;3522&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3522&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3520&lt;/span&gt; pts/3    00:00:00             bash&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;3388&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3388&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3388&lt;/span&gt; pts/2    00:00:00     bash&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;3539&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3539&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3388&lt;/span&gt; pts/2    00:00:00       sudo&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;3540&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3540&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3540&lt;/span&gt; pts/4    00:00:00         sudo&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;3541&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3541&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3540&lt;/span&gt; pts/4    00:00:00           bash&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>환경변수와 셸변수의 차이</title>
      <link>http://localhost:1313/temp/%ED%99%98%EA%B2%BD%EB%B3%80%EC%88%98%EC%99%80-%EC%85%B8%EB%B3%80%EC%88%98%EC%9D%98-%EC%B0%A8%EC%9D%B4/</link>
      <pubDate>Mon, 26 Feb 2024 02:58:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/%ED%99%98%EA%B2%BD%EB%B3%80%EC%88%98%EC%99%80-%EC%85%B8%EB%B3%80%EC%88%98%EC%9D%98-%EC%B0%A8%EC%9D%B4/</guid>
      <description>&lt;p&gt;이둘의 차이를 알려면 먼저 셀변수라는 것을 알아야 한다&#xA;터미널에 들어가면 보이는 창 이것이 바로 interactive 하게 작용하는 shell 이 실행중이다&lt;/p&gt;</description>
    </item>
    <item>
      <title>gitstatus 프롬프트</title>
      <link>http://localhost:1313/02.inbox/gitstatus-%ED%94%84%EB%A1%AC%ED%94%84%ED%8A%B8/</link>
      <pubDate>Sat, 24 Feb 2024 08:39:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/gitstatus-%ED%94%84%EB%A1%AC%ED%94%84%ED%8A%B8/</guid>
      <description>&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;segment&lt;/th&gt;&#xA;          &lt;th&gt;meaning&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;master&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;HEAD가 위치한 브렌치 이름&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;#v1&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;HEAD가 위치한 태그 이름 (브랜치 일 때는 사용 x)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;@5fc6fca4&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;HEAD가 위치한 커밋 hash (브랜치 or hash 일때 사용 x)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;⇣1&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;로컬 브랜치가 원격 브랜치보다 1개의 커밋만큼 뒤쳐져 있음&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;⇡2&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;로컬 브랜치가 원격 브랜치보다 2개의 커밋만큼 앞서 있음&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;⇠3&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;로컬 브랜치가 푸시 원격 브랜치보다 3개의 커밋만큼 뒤쳐져 있음 ??&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;⇢4&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;로컬 브랜치가 푸시 원격 브랜치보다 4개의 커밋만큼 앞서 있음 ??&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;*5&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;5개의 스태시가 있음&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;merge&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;병합이 진행 중임 (다른 작업일 수도 있음)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;~6&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;6개의 병합 충돌이 있음&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;+7&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;7개의 stage 에 변경사항 발생&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;!8&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;8개의 stage 에 없는 변경사항&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;?9&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;9개의 추적되지 않은 파일&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;</description>
    </item>
    <item>
      <title>interactive shell vs non-interactive shell</title>
      <link>http://localhost:1313/temp/interactive-shell-vs-non-interactive-shell/</link>
      <pubDate>Wed, 21 Feb 2024 17:21:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/interactive-shell-vs-non-interactive-shell/</guid>
      <description>&lt;p&gt;ex) 터미널 vs #!/bin/bash 로 시작하는 파일&lt;/p&gt;&#xA;&lt;p&gt;파일의 셸은 $BASH_ENV 환경변수를 로드한다&lt;/p&gt;</description>
    </item>
    <item>
      <title>shell 의 로그인 과정</title>
      <link>http://localhost:1313/temp/shell-%EC%9D%98-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EA%B3%BC%EC%A0%95/</link>
      <pubDate>Wed, 21 Feb 2024 16:53:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/shell-%EC%9D%98-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EA%B3%BC%EC%A0%95/</guid>
      <description>&lt;p&gt;linux bash 기준으로 설명&lt;/p&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20231223130204.png&#34; alt=&#34;login shell vs non-login shell-20231223130204 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;login-shell-vs-non-login-shell&#34;&gt;Login Shell vs non Login Shell&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Login Shell : ssh, x 윈도우 접속시 userid passwd 입력해서 들어가는 방법&lt;/li&gt;&#xA;&lt;li&gt;Non Longin Shell : 이미 다른 로그인 된 shell 에서 shell 을 fork 형태로 불러내는 방법&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;interactive-shell-vs-non-interactive-shell&#34;&gt;Interactive Shell vs non Interactive Shell&lt;/h2&gt;&#xA;&lt;p&gt;타 프로그래밍 언어와의 큰 차이이다 interactive Shell 은 python 명령어 입력시 나타나는 것과 비슷한 것으로 사용자 입력을 순차적으로 입력 받을 수 있는 방식이다&#xA;이에 반해 non interactive shell 은 &lt;code&gt;python hello.py&lt;/code&gt; 같이 실행한다&lt;/p&gt;</description>
    </item>
    <item>
      <title>bash</title>
      <link>http://localhost:1313/temp/bash/</link>
      <pubDate>Wed, 21 Feb 2024 16:50:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/bash/</guid>
      <description>&lt;h2 id=&#34;-vs-source--&#34;&gt;./ vs source == .&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://ss64.com/bash/source.html&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;도트 및 소스 연산자 공식문서&lt;/a&gt;&#xA;source 와 . 은 완벽하게 동일&#xA;test.sh 파일&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ps -ejH &lt;span style=&#34;color:#75715e&#34;&gt;# 플로세스를 tree 형태로 보여주는 명령&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;실행별 차이&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;User@HostName:~/test$ . test.sh &lt;span style=&#34;color:#75715e&#34;&gt;# . or source &lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    PID    PGID     SID TTY          TIME CMD&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;3996&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3996&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3996&lt;/span&gt; ?        00:00:00     SessionLeader&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;3998&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3996&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3996&lt;/span&gt; ?        00:00:00       Relay&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;4003&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;4003&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;4003&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;4003&lt;/span&gt; pts/6    00:00:00         bash&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;39032&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;39032&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;4003&lt;/span&gt; pts/6    00:00:00           ps &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;User@HostName:~/test$ ./test.sh &lt;span style=&#34;color:#75715e&#34;&gt;# ./&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    PID    PGID     SID TTY          TIME CMD&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;3996&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3996&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3996&lt;/span&gt; ?        00:00:00     SessionLeader&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;3998&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3996&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3996&lt;/span&gt; ?        00:00:00       Relay&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;4003&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;4003&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;4003&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;4003&lt;/span&gt; pts/6    00:00:00         bash&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;39255&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;39255&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;4003&lt;/span&gt; pts/6    00:00:00           test.sh &lt;span style=&#34;color:#75715e&#34;&gt;# !!!!!!!!!&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;39256&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;39255&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;4003&lt;/span&gt; pts/6    00:00:00             ps&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;./test.sh의 경우 다른 명령(gcc)와 마찬가지로 명령을 셸에서 해석하여 시스템에게 전달하며 새로운 프로세스&lt;u&gt; fork() 형태로 하위 프로세스로 생성한다?&lt;/u&gt; #ModificationRequired&lt;/p&gt;</description>
    </item>
    <item>
      <title>java 쓰레드(thread)</title>
      <link>http://localhost:1313/temp/java-%EC%93%B0%EB%A0%88%EB%93%9Cthread/</link>
      <pubDate>Sun, 18 Feb 2024 19:19:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/java-%EC%93%B0%EB%A0%88%EB%93%9Cthread/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://localhost:1313/memory&#34; class=&#34;internal-file-link&#34;&gt;java 메모리(memory)&lt;/a&gt;).md) 참고&#xA;![Pasted image 2024&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240218210440.png&#34; alt=&#34; (Image resource not found)&#34; &gt;210440.png)&lt;/p&gt;&#xA;&lt;p&gt;java는 thread의&lt;/p&gt;&#xA;&lt;h2 id=&#34;쓰레드-구현-방법&#34;&gt;쓰레드 구현 방법&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Thread 상속&lt;/li&gt;&#xA;&lt;li&gt;Runnable 인터페이스 구현&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Thread thread &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Thread(){ &lt;span style=&#34;color:#75715e&#34;&gt;// Thread 상속 및 익명 클래스로 사용&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Override&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;run&lt;/span&gt;() { 여기에 사용&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;thread.&lt;span style=&#34;color:#a6e22e&#34;&gt;start&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Thread thread &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Thread(&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Runnable(){ &lt;span style=&#34;color:#75715e&#34;&gt;// Runnable 구현 및 생성자의 인자&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Override&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;run&lt;/span&gt;() { 여기에 사용&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;});&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;thread.&lt;span style=&#34;color:#a6e22e&#34;&gt;start&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Thread 를 상속한 객체는 그 자체로 하나의 쓰레드 객체를 의미하지만&#xA;Runnable 인터페이스를 구현한 객체는 쓰레드로 들어가 일거리라는 의미이다 그러므로 Thread 객체를 new Thread 할 때 생성자에 넣어주어야 한다&lt;/p&gt;</description>
    </item>
    <item>
      <title>프로그래밍 특성 분류</title>
      <link>http://localhost:1313/temp/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-%ED%8A%B9%EC%84%B1-%EB%B6%84%EB%A5%98/</link>
      <pubDate>Sun, 18 Feb 2024 17:07:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-%ED%8A%B9%EC%84%B1-%EB%B6%84%EB%A5%98/</guid>
      <description>&lt;h2 id=&#34;정적-타이핑-언어-동적-타입핑-언어&#34;&gt;정적 타이핑 언어 동적 타입핑 언어&lt;/h2&gt;&#xA;&lt;p&gt;코드상의 타입의 명시 유무&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;정적 타이핑 언어&#xA;&lt;ul&gt;&#xA;&lt;li&gt;c, c++, java, typescript&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;동적 타입핑 언어&#xA;&lt;ul&gt;&#xA;&lt;li&gt;python, javascript&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;runtime-타입-정보-유지&#34;&gt;runtime 타입 정보 유지&lt;/h2&gt;&#xA;&lt;p&gt;실행시간에 타입정보를 유지하는가&#xA;실행 시간에 타입 정보를 유지하는 언어의 특성은 &amp;ldquo;런타임 타입 정보&amp;rdquo; (Runtime Type Information, 줄여서 RTTI) 또는 &amp;ldquo;타입 인트로스펙션&amp;rdquo; (Type Introspection)이라고 부릅니다.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;h2 id=&#34;유지&#34;&gt;유지&lt;/h2&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://dataonair.or.kr/db-tech-reference/d-lounge/technical-data/?mod=document&amp;amp;uid=235810&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;https://dataonair.or.kr/db-tech-reference/d-lounge/technical-data/?mod=document&amp;uid=235810&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;타입정보를 유지하므로 인한 기술 reflection&lt;/p&gt;</description>
    </item>
    <item>
      <title>gcc include path 확인하기</title>
      <link>http://localhost:1313/02.inbox/gcc-include-path-%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0/</link>
      <pubDate>Thu, 15 Feb 2024 04:55:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/gcc-include-path-%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo | gcc -xc -E -v -&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo | gcc -xc++ -E -v -&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>servlet</title>
      <link>http://localhost:1313/temp/servlet/</link>
      <pubDate>Wed, 14 Feb 2024 04:16:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/servlet/</guid>
      <description>&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240214041835.png&#34; alt=&#34; (Image resource not found)&#34; &gt;%20image%2020240214041835.png)&#xA;일반적으로 java 진영에서 많이 사용됨&#xA;소켓 연결 http 파싱후 읽기 등 일반적으로 동일한 방식의 http 방식의 처리를 객체화 하여 쉽게 처리하게 해줌&lt;/p&gt;&#xA;&lt;p&gt;사용자 입장에서 비지니스 로직 파트만 실행될 수 있게 한다&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;HttpServletRequest 요청된 http 정보를 객체화 오버라딩해서 사용&lt;/li&gt;&#xA;&lt;li&gt;HttpServletResponse 응답용 http 정보를 객체화됨&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>form 태그의 http 패킷(massage) 전송</title>
      <link>http://localhost:1313/02.inbox/form-%ED%83%9C%EA%B7%B8%EC%9D%98-http-%ED%8C%A8%ED%82%B7massage-%EC%A0%84%EC%86%A1/</link>
      <pubDate>Tue, 13 Feb 2024 15:15:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/form-%ED%83%9C%EA%B7%B8%EC%9D%98-http-%ED%8C%A8%ED%82%B7massage-%EC%A0%84%EC%86%A1/</guid>
      <description>&lt;p&gt;클라이언트측 post 메서드 전송 예시&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;form&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;action&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://www.example.com/test&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;method&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;POST&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;label&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;userId&amp;#34;&lt;/span&gt;&amp;gt;User ID:&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;label&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;br&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;text&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;userId&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;userId&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;br&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;label&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt;&amp;gt;Password:&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;label&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;br&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;br&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;submit&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Submit&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;form&lt;/span&gt;&amp;gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;서버측으로 전송되는 패킷 예시&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-http&#34; data-lang=&#34;http&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;POST&lt;/span&gt; /test &lt;span style=&#34;color:#66d9ef&#34;&gt;HTTP&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Host&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;www.example.com&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;User-Agent&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Accept&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Accept-Language&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;en-US,en;q=0.5&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Accept-Encoding&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;gzip, deflate, br&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-Type&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;application/x-www-form-urlencoded&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-Length&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;43&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Origin&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;http://www.example.com&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Connection&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;keep-alive&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Referer&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;http://www.example.com/test&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Cookie&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;PHPSESSID=5a1lvj45uk83a3k9opjkpo3jm2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;\n\r&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;userId=user&amp;amp;password=password&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;클라이언트측 get 메서드 html&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;form&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;action&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://www.example.com/test&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;method&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;GET&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;label&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;userId&amp;#34;&lt;/span&gt;&amp;gt;User ID:&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;label&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;br&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;text&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;userId&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;userId&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;br&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;label&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt;&amp;gt;Password:&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;label&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;br&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;br&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;submit&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Submit&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;form&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;서버측으로 전송되는 패킷 예시&lt;/p&gt;</description>
    </item>
    <item>
      <title>stateful 과 stateless 프로토콜</title>
      <link>http://localhost:1313/temp/stateful-%EA%B3%BC-stateless-%ED%94%84%EB%A1%9C%ED%86%A0%EC%BD%9C/</link>
      <pubDate>Tue, 13 Feb 2024 02:02:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/stateful-%EA%B3%BC-stateless-%ED%94%84%EB%A1%9C%ED%86%A0%EC%BD%9C/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;stateful : TCP, FTP&lt;/li&gt;&#xA;&lt;li&gt;stateless : udp http &amp;hellip;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;==stateful 구조는 server와 client 세션의 state(상태)에 기반하여 client 에 response 를 보낸다==&#xA;즉 server 측 client 모두 state 를 저장한다 (참조 &lt;a href=&#34;https://d2.naver.com/helloworld/47667&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;네트워크 스텍&lt;/a&gt;)&lt;/p&gt;&#xA;&lt;p&gt;stateless : 보내고 아몰랑??&lt;/p&gt;&#xA;&lt;h2 id=&#34;궁금증&#34;&gt;궁금증&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;http(stateless) 응용계층의 프로토콜은 하위계층(4계층) TCP(stateful) 를 사용한다??&lt;/li&gt;&#xA;&lt;li&gt;statless http 프로토콜은 연결된 상태를 어떻게 판단 구현하는가??&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;2가지에 대해 궁금증이 생겨서  글을 작성하게됨&lt;/p&gt;&#xA;&lt;h2 id=&#34;tcp-프로토콜은-stateful-을-어떻게-구현하는가&#34;&gt;TCP 프로토콜은 stateful 을 어떻게 구현하는가&lt;/h2&gt;&#xA;&lt;p&gt;stateful 을 구현하고자 하는 &lt;a href=&#34;http://localhost:1313/02.inbox/%eb%94%b0%eb%9d%bcIT/%eb%84%a4%ed%8a%b8%ec%9b%8c%ed%81%ac%204%ea%b3%84%ec%b8%b5.md#TCP&#34; class=&#34;internal-file-link&#34;&gt;&lt;/a&gt; 는 syn.. ack&amp;hellip; 두가지 정보의 교환으로 서로의 연결이 되었다는 것을 논리적으로 확인하게 된다 이때 상태 정보가 운영체제에 스텍으로 메모리에 저장된다 &lt;a href=&#34;https://elixir.bootlin.com/linux/latest/source/net/ipv4/tcp_ipv4.c#L2161&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>네트워크 고급</title>
      <link>http://localhost:1313/02.inbox/%EB%94%B0%EB%9D%BCit/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EA%B3%A0%EA%B8%89/</link>
      <pubDate>Mon, 12 Feb 2024 04:19:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EB%94%B0%EB%9D%BCit/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EA%B3%A0%EA%B8%89/</guid>
      <description>&lt;p&gt;계층별 장비&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240212042148.png&#34; alt=&#34; (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;물리계층&#34;&gt;물리계층&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;리피터 : 전기적 신호가 약할때 증폭 기능&lt;/li&gt;&#xA;&lt;li&gt;허브 : 데이터를 모든 장비에 전송 일종의 브로드캐스트&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;데이터-링크-2계층&#34;&gt;데이터 링크 2계층&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;브릿지 : 맥주로를 기반으로 전송 포트를 결정&lt;/li&gt;&#xA;&lt;li&gt;스위치 :  브릿지에 collision domain 기능 추가&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;네트워크-계층&#34;&gt;네트워크 계층&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;라우터 : 라우팅 테이브를 참고하여 목적지와 연결되는 포트로 paket 을 전송 =&amp;gt; 라우팅&#xA;&lt;ul&gt;&#xA;&lt;li&gt;3계층 장비는 브로트캐스트를 모두 차단&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;케이블&#34;&gt;케이블&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240212044805.png&#34; alt=&#34;Pasted image 20240212044805 (Image resource not found)&#34; &gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240212044836.png&#34; alt=&#34;Pasted image 20240212044836 (Image resource not found)&#34; &gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>네트워크 관련 명령어 모음</title>
      <link>http://localhost:1313/02.inbox/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EA%B4%80%EB%A0%A8-%EB%AA%85%EB%A0%B9%EC%96%B4-%EB%AA%A8%EC%9D%8C/</link>
      <pubDate>Sun, 11 Feb 2024 20:16:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EA%B4%80%EB%A0%A8-%EB%AA%85%EB%A0%B9%EC%96%B4-%EB%AA%A8%EC%9D%8C/</guid>
      <description>&lt;h2 id=&#34;unix-공통&#34;&gt;unix 공통&lt;/h2&gt;&#xA;&lt;p&gt;ifconfig&#xA;netstat&#xA;ping&#xA;traceroute : 지나간 네트워크 대역 확인&#xA;nc(netcat) :&#xA;nmap :&#xA;route : 라우팅 테이블?&#xA;arp : 동일 네트워크 맥주소 확인 프로토콜&#xA;telnet&lt;/p&gt;&#xA;&lt;h2 id=&#34;linux&#34;&gt;linux&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;ss -ltan&lt;/code&gt; : -l listen, -a all, -t tcp, -n numeric&lt;/p&gt;&#xA;&lt;h3 id=&#34;ip&#34;&gt;ip&lt;/h3&gt;&#xA;&lt;p&gt;ip route&#xA;ip addr&lt;/p&gt;&#xA;&lt;h2 id=&#34;window&#34;&gt;window&lt;/h2&gt;&#xA;&lt;p&gt;ipconfig&#xA;netstat&#xA;ping&#xA;arp : 동일 네트워크 맥주소 확인 프로토콜&#xA;tracert&lt;/p&gt;&#xA;&lt;p&gt;=================&#xA;mac&#xA;맥 환경에서, &#xA;잘모르는 프레임웍 이용한 서버 동작시,&#xA;특정프로그램 이용시,&#xA;내가 사용하는 것 외 데이터가 세어나가는지,&#xA;내가 모르는 포트를 열어놓은 프로세스가 있는지 (찾아서 kill하려고),&#xA;혹은 방화벽 제외 / NAT환경에서의 포트포워딩 정책에 SNAT, DNAT등에 포트 값을 알아내야 할 경우&#xA;lsof와 netstast과 다음과 같은 옵션으로 찾으면 된다.&#xA;(기타 : linux의 경우 netstat -anp | grep 포트번호 or LISTEN or EST등의 소켓 상태로 필터링해서 사용해왔음)&lt;/p&gt;</description>
    </item>
    <item>
      <title>나의 웹서버 패킷 분석 이야기</title>
      <link>http://localhost:1313/temp/%EB%82%98%EC%9D%98-%EC%9B%B9%EC%84%9C%EB%B2%84-%ED%8C%A8%ED%82%B7-%EB%B6%84%EC%84%9D-%EC%9D%B4%EC%95%BC%EA%B8%B0/</link>
      <pubDate>Wed, 07 Feb 2024 20:34:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/%EB%82%98%EC%9D%98-%EC%9B%B9%EC%84%9C%EB%B2%84-%ED%8C%A8%ED%82%B7-%EB%B6%84%EC%84%9D-%EC%9D%B4%EC%95%BC%EA%B8%B0/</guid>
      <description>&lt;p&gt;내가 만든 웹서버 shinnk.iptime.org html과 css 로만 만들어진 단순한 index.html 파일을 요청하는 상황이다&#xA;chrome 프로세스가 port 50837를 사용한다&#xA;웹서버는 80 포트로 listen 중이다 http&#xA;wire shark 로 확인하였다&#xA;(https 의 경우 ssl 암호화 과정때문에 프로토콜이 일부 보이지 않는다 그래서 http 로 진행)&lt;/p&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240207203522.png&#34; alt=&#34;Pasted image 20240207203522 (Image resource not found)&#34; &gt;ng)&lt;/p&gt;&#xA;&lt;p&gt;총 7개의 통신 흔적이 보인다&#xA;http 통신은 tcp 를 사용한다 그러므로 3way handshake 과정이 선행된다&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;no 24&lt;/li&gt;&#xA;&lt;li&gt;no 26&lt;/li&gt;&#xA;&lt;li&gt;no 27&lt;/li&gt;&#xA;&lt;li&gt;no 30&lt;/li&gt;&#xA;&lt;li&gt;no 31&lt;/li&gt;&#xA;&lt;li&gt;no 32&lt;/li&gt;&#xA;&lt;li&gt;no 33&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;24 26 27  가 3 way handshake 과정이다&lt;/p&gt;</description>
    </item>
    <item>
      <title>composite pattern</title>
      <link>http://localhost:1313/temp/composite-pattern/</link>
      <pubDate>Tue, 06 Feb 2024 04:27:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/composite-pattern/</guid>
      <description>&lt;p&gt;복합 객체와 단일 객체를 동일하게 취급하고 싶다&#xA;과일과 과일박스를 동일한 과일박스 안에 넣고 싶다&#xA;트리 형태로 퍼져나간다&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;animal&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;__init__&lt;/span&gt;(self, name):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; name&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;speak&lt;/span&gt;(self):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;pass&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dog&lt;/span&gt;(animal):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;speak&lt;/span&gt;(self):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        print(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;name)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;cat&lt;/span&gt;(animal):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;speak&lt;/span&gt;(self):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        print(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;name)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;animal_group&lt;/span&gt;(animal):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;__init__&lt;/span&gt;(self):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;animals &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt;(self, animal):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;animals&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(animal)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;speak&lt;/span&gt;(self):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;group speak&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; animal &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;animals:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            animal&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;speak()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;group1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; animal_group()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;group1&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add(dog(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dog1&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;group1&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add(dog(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dog2&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;group1&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add(cat(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cat1&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;group2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; animal_group()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;group2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add(cat(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cat2&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;group2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add(group1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;group2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;speak()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;====&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;group speak&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;group speak&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dog1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dog2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>네트워크 4계층</title>
      <link>http://localhost:1313/02.inbox/%EB%94%B0%EB%9D%BCit/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-4%EA%B3%84%EC%B8%B5/</link>
      <pubDate>Tue, 06 Feb 2024 01:19:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EB%94%B0%EB%9D%BCit/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-4%EA%B3%84%EC%B8%B5/</guid>
      <description>&lt;p&gt;&lt;strong&gt;프로그램(프로세스) 간 통신&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;4계층 프로토콜&lt;/li&gt;&#xA;&lt;li&gt;포트번호&lt;/li&gt;&#xA;&lt;li&gt;프로그램 연결 정보&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;4계층-프로토콜&#34;&gt;4계층 프로토콜&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;전송계층&lt;/strong&gt;&#xA;&lt;strong&gt;송신자 프로세스 수신자 프로세스 통신&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;TCP&lt;/li&gt;&#xA;&lt;li&gt;UDP&lt;/li&gt;&#xA;&lt;li&gt;포트번호(4계층 주소)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;udp&#34;&gt;UDP&lt;/h3&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240206174953.png&#34; alt=&#34;Pasted image 20240206174953 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;source Port : 출발 프로세스 포트번호(2바이트 2^16)&lt;/li&gt;&#xA;&lt;li&gt;Destination Port : 도착 프로세스 포트번호&lt;/li&gt;&#xA;&lt;li&gt;Length : 길이&lt;/li&gt;&#xA;&lt;li&gt;Checksum&#xA;DNS 서버 전송이 실패해도 다시보내면 그만&#xA;tftp 서버 : 파일 공유&#xA;RIP 프로토콜 : 라우팅 정보 공유&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;###&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240206174939.png&#34; alt=&#34;Pasted image 20240206174939 (Image resource not found)&#34; &gt;6174939.png)&lt;/p&gt;</description>
    </item>
    <item>
      <title>네트워크 3계층</title>
      <link>http://localhost:1313/02.inbox/%EB%94%B0%EB%9D%BCit/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-3%EA%B3%84%EC%B8%B5/</link>
      <pubDate>Mon, 05 Feb 2024 15:01:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EB%94%B0%EB%9D%BCit/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-3%EA%B3%84%EC%B8%B5/</guid>
      <description>&lt;p&gt;&lt;strong&gt;먼거리(인터넷 통신) 간 통신&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;용어 설명&#xA;IPv4: 현제 PC 에 할당된 ip 주소&#xA;서브넷 마스크 : ip 주소에 대한 네트워크 대역을 규정하는 것&#xA;게이트 웨이 : 외부와 통신할 때 사용하는 네트워크 출입구&lt;/p&gt;&#xA;&lt;h2 id=&#34;목차&#34;&gt;목차&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;ARP 프로토콜 : 동일 네트워크 대역 MAC 주소를 알기 위해 사용하는 프로토콜&lt;/li&gt;&#xA;&lt;li&gt;IPv4 프로토콜 :&lt;/li&gt;&#xA;&lt;li&gt;ICMP 프로토콜 : 연결 확인용 프로토콜&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240205150757.png&#34; alt=&#34;네트워크 3계층-20240205150757 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;arp-protocol&#34;&gt;ARP Protocol&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;동일 네트워크 대역&lt;/strong&gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240205150706.png&#34; alt=&#34;네트워크 3계층-20240205150706 (Image resource not found)&#34; &gt;&#xA;같은 네트워크 대역에서 통신을 하기 위해 MAC 주소를 ip 주소를 이용해서 알아오는 프로토콜&lt;/p&gt;</description>
    </item>
    <item>
      <title>네트워크 2계층</title>
      <link>http://localhost:1313/02.inbox/%EB%94%B0%EB%9D%BCit/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-2%EA%B3%84%EC%B8%B5/</link>
      <pubDate>Mon, 05 Feb 2024 14:54:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EB%94%B0%EB%9D%BCit/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-2%EA%B3%84%EC%B8%B5/</guid>
      <description>&lt;p&gt;ㅆ&lt;strong&gt;근거리(동일 네트워크 대역) 간 통신&lt;/strong&gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240205143927.png&#34; alt=&#34;네트워크-20240205143927 (Image resource not found)&#34; &gt;7.png)&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;ethernet type 을 상위 프로토콜 type 로 이해하자&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ipconfig /all&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;명령으로 자신의 mac 주소를 확인&lt;/p&gt;&#xA;&lt;h2 id=&#34;mac-주소&#34;&gt;mac 주소&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;앞 3자리 OUI : IEEE 에서 부여하는 일종의 제조회사 식별 ID&lt;/li&gt;&#xA;&lt;li&gt;뒤 3자리 고유번호 : 제조사에서 부여한 고유번호&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;destination Address , source address, Ethernet type 만 확인&#xA;destination address 목적지 MAC 주소&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Ethernet Type : 상위 프로토콜 타입 2바이트: IPv4(0x0800), ARP(Ox0806)&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>네트워크</title>
      <link>http://localhost:1313/02.inbox/%EB%94%B0%EB%9D%BCit/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC/</link>
      <pubDate>Mon, 05 Feb 2024 13:17:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EB%94%B0%EB%9D%BCit/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC/</guid>
      <description>&lt;h2 id=&#34;크기에-따른-분류&#34;&gt;크기에 따른 분류&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;LAN ( Local Area Network )&lt;/li&gt;&#xA;&lt;li&gt;WAN ( Wide Area Network )&lt;/li&gt;&#xA;&lt;li&gt;MAN ( Metropolitan Area Network )&lt;/li&gt;&#xA;&lt;li&gt;VLAN&lt;/li&gt;&#xA;&lt;li&gt;CAN&lt;/li&gt;&#xA;&lt;li&gt;PAN&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;연결-형테애-따른-분류&#34;&gt;연결 형테애 따른 분류&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Star 중앙장비에 모든 노드가 연결&lt;/li&gt;&#xA;&lt;li&gt;Mesh 여러노드의 그물 형태&lt;/li&gt;&#xA;&lt;li&gt;Tree 계층 구조의 형태&lt;/li&gt;&#xA;&lt;li&gt;링형, 버스형, 혼합형&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;통신방식에-따른-분류&#34;&gt;통신방식에 따른 분류&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;유니 캐스트 ( 특정 대상과 1:1 통신 )&lt;/li&gt;&#xA;&lt;li&gt;멀티 캐스트 ( 특정 다수와 1:N 통신 멀티 캐스트 {특정 인원})&lt;/li&gt;&#xA;&lt;li&gt;브로트 캐스트 ( 네트워크에 있는 모든 대상과 통신 )&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;계층별-프로토콜&#34;&gt;계층별 프로토콜&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240506030571.png&#34; alt=&#34;네트워크-20240205135843 (Image resource not found)&#34; &gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240506030575.png&#34; alt=&#34;네트워크-20240205140100 (Image resource not found)&#34; &gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240506030587.png&#34; alt=&#34;네트워크-20240205133316 (Image resource not found)&#34; &gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>네트워크 인터페이스</title>
      <link>http://localhost:1313/02.inbox/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4/</link>
      <pubDate>Sun, 04 Feb 2024 21:22:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4/</guid>
      <description>&lt;h2 id=&#34;linux&#34;&gt;Linux&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;enp0s1:&#xA;| | |&#xA;v | |&#xA;en| |   --&amp;gt; ethernet&#xA;  v |&#xA;  p0|   --&amp;gt; bus number (0)&#xA;    v&#xA;    s1  --&amp;gt; slot number (1)&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt; * Two character prefixes based on the type of interface:&#xA; *   en — Ethernet&#xA; *   sl — serial line IP (slip)&#xA; *   wl — wlan&#xA; *   ww — wwan&#xA; *&#xA; * Type of names:&#xA; *   b&amp;lt;number&amp;gt;                             — BCMA bus core number&#xA; *   c&amp;lt;bus_id&amp;gt;                             — CCW bus group name, without leading zeros [s390]&#xA; *   o&amp;lt;index&amp;gt;[d&amp;lt;dev_port&amp;gt;]                 — on-board device index number&#xA; *   s&amp;lt;slot&amp;gt;[f&amp;lt;function&amp;gt;][d&amp;lt;dev_port&amp;gt;]     — hotplug slot index number&#xA; *   x&amp;lt;MAC&amp;gt;                                — MAC address&#xA; *   [P&amp;lt;domain&amp;gt;]p&amp;lt;bus&amp;gt;s&amp;lt;slot&amp;gt;[f&amp;lt;function&amp;gt;][d&amp;lt;dev_port&amp;gt;]&#xA; *                                         — PCI geographical location&#xA; *   [P&amp;lt;domain&amp;gt;]p&amp;lt;bus&amp;gt;s&amp;lt;slot&amp;gt;[f&amp;lt;function&amp;gt;][u&amp;lt;port&amp;gt;][..][c&amp;lt;config&amp;gt;][i&amp;lt;interface&amp;gt;]&#xA; *                                         — USB port number chain&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1. 온보드 장치에 대해 펌웨어/BIOS 제공 인덱스 번호를 통합한 이름(예: eno1)&#xA;2. 펌웨어/BIOS 제공 PCI Express 핫플러그 슬롯 인덱스 번호를 포함하는 이름(예: ens1)&#xA;3. 하드웨어 커넥터의 물리적/지리적 위치를 통합한 이름(예: enp2s0)&#xA;4. 인터페이스의 MAC 주소를 통합한 이름(예: enx78e7d1ea46da)&#xA;5. 예측할 수 없는 고전적인 커널 기반 ethX 이름 지정(예: eth0)&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;mac-os&#34;&gt;mac OS&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;ap1&lt;/code&gt;: 액세스 포인트. MacBook을 연결을 공유하는 무선 호스트로 사용하는 경우에 사용됩니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;awdl0&lt;/code&gt;: Apple Wireless Direct 링크. AirDrop, Airplay 등을 위한 WIFI p2p 연결. Bluetooth에도 사용됩니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;llw0&lt;/code&gt;: 대기 시간이 짧은 WLAN 인터페이스. Skywalk 시스템에서 사용됩니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;utun0&lt;/code&gt;: 터널링 인터페이스. 터널 트래픽에 대한 VPN 연결이나 Back To My Mack와 같은 소프트웨어에 사용됩니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;utun1&lt;/code&gt;: utun01과 동일&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;lo0&lt;/code&gt;: 루프백(localhost)&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;gif0&lt;/code&gt;: 소프트웨어 네트워크 인터페이스&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;stf0&lt;/code&gt;: 6to4 터널 인터페이스&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;en0&lt;/code&gt;: 물리적 무선&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;en1&lt;/code&gt;: 썬더볼트 1&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;en2&lt;/code&gt;: 썬더볼트 2&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;en3&lt;/code&gt;: 썬더볼트 3&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;en4&lt;/code&gt;: 썬더볼트 4&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;en5&lt;/code&gt;: iBridge / Apple T2 컨트롤러&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;en6&lt;/code&gt;: 블루투스 팬&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;en8&lt;/code&gt;: 아이폰 USB&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;en9&lt;/code&gt;: VM 네트워크 인터페이스&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;en10&lt;/code&gt;: 아이패드&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;bridge0&lt;/code&gt;: Thunderbolt 브리지&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>spring bean scope</title>
      <link>http://localhost:1313/temp/spring-bean-scope/</link>
      <pubDate>Fri, 02 Feb 2024 09:26:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/spring-bean-scope/</guid>
      <description>&lt;p&gt;스프링은 다음과 같은 다양한 스코프를 지원한다.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;싱글톤: 기본 스코프, 스프링 컨테이너의 시작과 종료까지 유지되는 가장 넓은 범위의 스코프이다.&lt;/li&gt;&#xA;&lt;li&gt;프로토타입: 스프링 컨테이너는 프로토타입 빈의 생성과 의존관계 주입까지만 관여하고 더는 관리하지 않는 매우 짧은 범위의 스코프이다.&lt;/li&gt;&#xA;&lt;li&gt;웹 관련 스코프&#xA;&lt;ul&gt;&#xA;&lt;li&gt;request: 웹 요청이 들어오고 나갈때 까지 유지되는 스코프이다.&lt;/li&gt;&#xA;&lt;li&gt;session: 웹 세션이 생성되고 종료될 때 까지 유지되는 스코프이다.&lt;/li&gt;&#xA;&lt;li&gt;application: 웹의 서블릿 컨텍스트와 같은 범위로 유지되는 스코프이다&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;프로토타입&#34;&gt;프로토타입&lt;/h2&gt;&#xA;&lt;p&gt;초기화 메서드 실행되지만 종료 메서드 호출 안됨 사용자가 직접 해야함&lt;/p&gt;</description>
    </item>
    <item>
      <title>spring life cycle</title>
      <link>http://localhost:1313/temp/spring-life-cycle/</link>
      <pubDate>Thu, 01 Feb 2024 14:18:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/spring-life-cycle/</guid>
      <description>&lt;p&gt;&lt;strong&gt;스프링 빈의 이벤트 라이프사이클&lt;/strong&gt;&#xA;스프링 컨테이너 생성&#xA;-&amp;gt; 스프링 빈 생성&#xA;-&amp;gt; 의존관계 주입&#xA;-&amp;gt; 초기화 콜백&#xA;-&amp;gt; 사용&#xA;-&amp;gt; 소멸전 콜백&#xA;-&amp;gt; 스프링 종료&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;스프링빈 생성시 생성자 의존관계일떄는 같이&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240201211107.png&#34; alt=&#34; (Image resource not found)&#34; &gt;&#xA;설정정보(xml, java etc)를 바탕으로 빈을 관리하는 컨테이너를 생성&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;스프링-빈-생성--의존관계-주입&#34;&gt;스프링 빈 생성 &amp;amp; 의존관계 주입&lt;/h2&gt;&#xA;&lt;h3 id=&#34;수동&#34;&gt;수동&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Configuration&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// 중복되는 객체생성을 막아준다&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;AppConfig&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;@Bean&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; MemberService &lt;span style=&#34;color:#a6e22e&#34;&gt;memberService&lt;/span&gt;(){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; MemberServiceImpl(memberRepository());}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;@Bean&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; OrderService &lt;span style=&#34;color:#a6e22e&#34;&gt;orderService&lt;/span&gt;(){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; OrderServiceImpl(memberRepository(), discountPolicy()); &lt;span style=&#34;color:#75715e&#34;&gt;//필드 주입을 한다면 필요 없음}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;@Bean&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; DiscountPolicy &lt;span style=&#34;color:#a6e22e&#34;&gt;discountPolicy&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; RateDiscountPolicy();}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;@Bean&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; MemberRepository &lt;span style=&#34;color:#a6e22e&#34;&gt;memberRepository&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; MemoryMemberRepository();}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;@Configration 바이트 조작 기술을 통해 중복되는 객체(memberRepository) 생성을 1개만 생성해 공유해 준다&#xA;@Bean 메서드 수준의 어노테이션을 통해 return 되는 값을 객체로 만들어준다&lt;/p&gt;</description>
    </item>
    <item>
      <title>spring @Autowired 의존관계 주입시 중복 문제</title>
      <link>http://localhost:1313/temp/spring-@autowired-%EC%9D%98%EC%A1%B4%EA%B4%80%EA%B3%84-%EC%A3%BC%EC%9E%85%EC%8B%9C-%EC%A4%91%EB%B3%B5-%EB%AC%B8%EC%A0%9C/</link>
      <pubDate>Thu, 01 Feb 2024 08:31:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/spring-@autowired-%EC%9D%98%EC%A1%B4%EA%B4%80%EA%B3%84-%EC%A3%BC%EC%9E%85%EC%8B%9C-%EC%A4%91%EB%B3%B5-%EB%AC%B8%EC%A0%9C/</guid>
      <description>&lt;p&gt;Autowired 어노테이션을 통해 어떠한 객체를 생성할 spring에서 의존 관계를 자동으로 주입해 준다&#xA;이때 조회되는 빈이 2개 이상이라면 즉 동일한 부모타입의 객체가 2개가 중복으로 등록되었다면 다음의 3가지 방법으로 해결한다&#xA;조회 대상 빈이 2개 이상일 때 해결 방법&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;@Autowired 필드 명 매칭&lt;/li&gt;&#xA;&lt;li&gt;@Qualifier -&amp;gt; @Qualifier끼리 매칭 빈 이름 매칭&lt;/li&gt;&#xA;&lt;li&gt;@Primary 사용&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>java 메모리(memory)</title>
      <link>http://localhost:1313/02.inbox/java-%EB%A9%94%EB%AA%A8%EB%A6%ACmemory/</link>
      <pubDate>Mon, 29 Jan 2024 05:38:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/java-%EB%A9%94%EB%AA%A8%EB%A6%ACmemory/</guid>
      <description>&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240127113149-1.jpeg&#34; alt=&#34;Pasted image 20240127113149-1 (Image resource not found)&#34; &gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>java 제네릭(generic)</title>
      <link>http://localhost:1313/02.inbox/java-%EC%A0%9C%EB%84%A4%EB%A6%ADgeneric/</link>
      <pubDate>Mon, 29 Jan 2024 05:00:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/java-%EC%A0%9C%EB%84%A4%EB%A6%ADgeneric/</guid>
      <description>&lt;p&gt;java 는 제네릭 배열을 생성하지 못한다&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://cla9.tistory.com/44&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;java generic 원리&lt;/a&gt; 중요!!!&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;Integer &amp;lt;: Number&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;Double &amp;lt;: Number&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;ArrayList&amp;lt;E&amp;gt; &amp;lt;:  List&amp;lt;E&amp;gt;&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;Collection&amp;lt;E&amp;gt; &amp;lt;:  Iterable&amp;lt;E&amp;gt;&lt;/code&gt;&#xA;Super type : Number 는 Integer  에 대해 Super type 이다&#xA;Sub type : Integer 는 Number 에 대해 Sub type 이다&#xA;variant 공변 : Number 와 Integer 는 공변한다&#xA;Invariant 불공변 : Integer 와 String 는 공변하지 않는다&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt; Java에서는 해당 경우에 Substitution Principle을 적용하지 않습니다&lt;/p&gt;</description>
    </item>
    <item>
      <title>java 리플렉션(reflection)</title>
      <link>http://localhost:1313/02.inbox/java-%EB%A6%AC%ED%94%8C%EB%A0%89%EC%85%98reflection/</link>
      <pubDate>Sat, 27 Jan 2024 11:29:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/java-%EB%A6%AC%ED%94%8C%EB%A0%89%EC%85%98reflection/</guid>
      <description>&lt;p&gt;클래스 인터페이스의 메타 정보를 java.lang.Class 클래스 객체에서 관리한다&#xA;이를 통해 런타임 시점에 클래스의 정보를 확인할 수 있다&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Class &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;클래스&lt;/span&gt; 이름.&lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;; &lt;span style=&#34;color:#75715e&#34;&gt;// 클래스 이름을 통해 얻는다&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Class &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Class&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;forName&lt;/span&gt;(클래스 이름); &lt;span style=&#34;color:#75715e&#34;&gt;// 클래스 이름을 통해 얻는다&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Class &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;객체&lt;/span&gt; 참조 변수.&lt;span style=&#34;color:#a6e22e&#34;&gt;getClass&lt;/span&gt;(); &lt;span style=&#34;color:#75715e&#34;&gt;// 객체의 이름을 통해 얻는다&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;이렇게 얻어진 객체로 부터 여러가지 정보를 확인할 수 있다&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;메서드&lt;/th&gt;&#xA;          &lt;th&gt;info&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Package getPackage()&lt;/td&gt;&#xA;          &lt;td&gt;패키지 정보 읽기&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;String getSimpleName()&lt;/td&gt;&#xA;          &lt;td&gt;패키지를 제외한 타입 이름&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;String getName()&lt;/td&gt;&#xA;          &lt;td&gt;패키지를 포함한 전체 타입 이름&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Constuctor[] getDeclaredConstructors()&lt;/td&gt;&#xA;          &lt;td&gt;생성자 정보 읽기&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Method[] getDeclaredMethod()&lt;/td&gt;&#xA;          &lt;td&gt;메서드 정보 읽기&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Field[] getDeclaredField()&lt;/td&gt;&#xA;          &lt;td&gt;필드 정보 읽기&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;등등 많은 것들 을 얻을 수 있다&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://cla9.tistory.com/52&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;제네릭은 런타임에는 타입을 알지 못한다&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>싱글톤 패턴의 문제</title>
      <link>http://localhost:1313/02.inbox/%EC%8B%B1%EA%B8%80%ED%86%A4-%ED%8C%A8%ED%84%B4%EC%9D%98-%EB%AC%B8%EC%A0%9C/</link>
      <pubDate>Fri, 26 Jan 2024 05:15:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EC%8B%B1%EA%B8%80%ED%86%A4-%ED%8C%A8%ED%84%B4%EC%9D%98-%EB%AC%B8%EC%A0%9C/</guid>
      <description>&lt;p&gt;클래스의 생성자를 통해 만들어지는 인스턴스의 개수를 1개로 고정시키는 디자인 패턴이다&#xA;하지만 이는 몇가지 문제를 만들어낸다&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://localhost:1313/%7c%ec%8b%b1%ea%b8%80%ed%86%a4%20%ed%8c%a8%ed%84%b4%ec%9d%98%20%eb%ac%b8%ec%a0%9c#%ec%bd%94%eb%93%9c%ec%96%91%20%ec%a6%9d%ea%b0%80&#34; class=&#34;internal-file-link&#34;&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;의존성 문제&lt;/li&gt;&#xA;&lt;li&gt;OCP 원칙 위반&lt;/li&gt;&#xA;&lt;li&gt;테스트 어려움&lt;/li&gt;&#xA;&lt;li&gt;내부 속성 변경 어려움&lt;/li&gt;&#xA;&lt;li&gt;자식 클래스 생성 어려움&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;코드-양-증가&#34;&gt;코드 양 증가&lt;/h2&gt;&#xA;&lt;p&gt;싱글톤 패턴을 구현하려면 클래스 내에 싱글톤 인스턴스를 생성하고 관리하는 코드가 추가됩니다. 이로 인해 코드가 더 복잡해지고, 가독성이 떨어질 수 있습니다.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;SingletonImpl&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;implements&lt;/span&gt; Singleton{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; SingletonImpl instance;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;SingletonImpl&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// private 생성자&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; SingletonImpl &lt;span style=&#34;color:#a6e22e&#34;&gt;getInstance&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (instance &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            instance &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; SingletonImpl();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; instance;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;의존성-문제&#34;&gt;의존성 문제&lt;/h2&gt;&#xA;&lt;p&gt;클라이언트는 Singleton 클래스에 직접 의존하게 되므로, 의존성 역전 원칙(Dependency Inversion Principle, DIP)을 위반합니다. 즉, 클라이언트는 구체 클래스에 종속되어 유연성이 감소합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>java 컬렉션(Collections Framework)</title>
      <link>http://localhost:1313/02.inbox/java-%EC%BB%AC%EB%A0%89%EC%85%98collections-framework/</link>
      <pubDate>Mon, 22 Jan 2024 18:17:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/java-%EC%BB%AC%EB%A0%89%EC%85%98collections-framework/</guid>
      <description>&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240122181734.jpeg&#34; alt=&#34;Pasted image 20240122181734 (Image resource not found)&#34; &gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240206060503.svg&#34; alt=&#34;Pasted image 20240206060503 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;리스트 : 배열의 확장&lt;/li&gt;&#xA;&lt;li&gt;배열리스트 : 크기를 내부에서 자동으로 정해주는 배열 (vector)&lt;/li&gt;&#xA;&lt;li&gt;링크드리스트 : 인접한 위치에 저장되지 않고 포인터를 사용하여 연결되는 선형 데이터 구조&lt;/li&gt;&#xA;&lt;li&gt;큐 : 선입선출&lt;/li&gt;&#xA;&lt;li&gt;set : 집합 중복 불가&lt;/li&gt;&#xA;&lt;li&gt;map = dictionary : key value 한쌍 구조&lt;/li&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Makefile</title>
      <link>http://localhost:1313/temp/makefile/</link>
      <pubDate>Mon, 22 Jan 2024 03:36:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/makefile/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;target : dependency&#xA;&amp;lt;탭&amp;gt; command&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;tarrget 은 일반적인 command 로 생성된 파일을 의미할 수도 있고 목표하는 의미가 될 수도 있다&#xA;예를 들어 target 에 clean 이 들어가면 빌드 생성파일을 삭제한다&lt;/p&gt;&#xA;&lt;h2 id=&#34;변수&#34;&gt;변수&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;매크로의 사용에서 ${..}, $(..), $..를 모두 사용할 수 있습니다. 그러나 대부분의 책에서는 $(..) 을 사용하라고 권하는군요&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;OBJS = main.o read.o write.o&#xA;&#xA;test : $(OBJS)&#xA;&#x9;gcc -o test $(OBJS)&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;미리-정해저-있는-predefind-변수&#34;&gt;미리 정해저 있는 predefind 변수&lt;/h3&gt;&#xA;&lt;p&gt;make -p&lt;/p&gt;&#xA;&lt;h2 id=&#34;자동변수&#34;&gt;자동변수&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;$@&lt;/code&gt; : 현재 타겟 이름&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;$^&lt;/code&gt; : 현재 타겟이 의존하는 대상들의 전체 목록&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;$^&lt;/code&gt; : 의존 대상의 처음 대상&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>java cli compile</title>
      <link>http://localhost:1313/temp/java-cli-compile/</link>
      <pubDate>Wed, 10 Jan 2024 00:09:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/java-cli-compile/</guid>
      <description></description>
    </item>
    <item>
      <title>투 포인터 알고리즘</title>
      <link>http://localhost:1313/02.inbox/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8B%A4-with-python/%ED%88%AC-%ED%8F%AC%EC%9D%B8%ED%84%B0-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/</link>
      <pubDate>Tue, 09 Jan 2024 22:56:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8B%A4-with-python/%ED%88%AC-%ED%8F%AC%EC%9D%B8%ED%84%B0-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/</guid>
      <description>&lt;p&gt;리스트에 순차적으로 접근해야 할 때 두개의 점의 위치를 기록하면서 처리하는 알고리즘&lt;/p&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250106192245.png&#34; alt=&#34;Pasted image 20250106192245 (Image resource not found)&#34; &gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250106192241.png&#34; alt=&#34;Pasted image 20250106192241 (Image resource not found)&#34; &gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250106192805.png&#34; alt=&#34;Pasted image 20250106192805 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;완전 탐색에서&#xA;인덱스인 end 가 1 증가하면 부분합이 증가&#xA;인덱스인 start 가 1 증가하면 부분합이 감소&#xA;이조건을 이용해서 $O(n)$ 으로 만들어야 한다&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;countSubarraysWithSum&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;vector&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;amp;&lt;/span&gt; vec, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; M) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; ret &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; &lt;span style=&#34;color:#75715e&#34;&gt;// 부분합이 M인 부분 배열의 개수&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; start &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; &lt;span style=&#34;color:#75715e&#34;&gt;// start 포인터 초기화&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; end &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; &lt;span style=&#34;color:#75715e&#34;&gt;// end 포인터&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; interval_sum &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; &lt;span style=&#34;color:#75715e&#34;&gt;// 현재 부분합&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; (start &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; vec.size()) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// end 포인터를 가능한 만큼 이동&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; (end &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; n &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; interval_sum &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; M) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            interval_sum &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; vec[end]; &lt;span style=&#34;color:#75715e&#34;&gt;// 부분합 계산&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            end&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;                    &lt;span style=&#34;color:#75715e&#34;&gt;// 인덱스 이동&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// 부분합이 M일 때 카운트 증가&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (interval_sum &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; M) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            ret&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;// interval_sum 이 target 보다 클 때는 start 를 이동&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// start 포인터를 증가시키고, interval_sum에서 vec[start]를 빼기&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        interval_sum &lt;span style=&#34;color:#f92672&#34;&gt;-=&lt;/span&gt; vec[start];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        start&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; ret;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250107072079.png&#34; alt=&#34;Pasted image 20250107072079 (Image resource not found)&#34; &gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>python 매개변수 전달</title>
      <link>http://localhost:1313/02.inbox/python-%EB%A7%A4%EA%B0%9C%EB%B3%80%EC%88%98-%EC%A0%84%EB%8B%AC/</link>
      <pubDate>Mon, 08 Jan 2024 07:12:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/python-%EB%A7%A4%EA%B0%9C%EB%B3%80%EC%88%98-%EC%A0%84%EB%8B%AC/</guid>
      <description>&lt;p&gt;파이썬의 매개변수 전달 방식 : 혼합 방식&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;파이썬은 모든 것이 객체이며 다음 2 종류가 있음&lt;/li&gt;&#xA;&lt;li&gt;불변 객체 (immutable object) : int, float, complex, tuples, string, bytes 등&lt;/li&gt;&#xA;&lt;li&gt;가변 객체 (mutable object) : list, dict, set, bytearray 등&lt;/li&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;li&gt;불변 객체가 매개변수로 전달될 때는 call-by-value 로 전달&lt;/li&gt;&#xA;&lt;li&gt;가변 객체가 매개변수로 전달될 때는 call-by-reference 로 전달&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;[!NOTE] 참조&#xA;Call-by-value : 실 매개변수의 값이 전달되며, 함수 내에서 형식 매개변수의 값을 변경해도 실 매개변수의 값은 변하지 않음&#xA;Call-by-reference : 실 매개변수의 주소가 전달&lt;/p&gt;</description>
    </item>
    <item>
      <title>정렬</title>
      <link>http://localhost:1313/temp/%EC%A0%95%EB%A0%AC/</link>
      <pubDate>Mon, 08 Jan 2024 04:24:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/%EC%A0%95%EB%A0%AC/</guid>
      <description>&lt;h2 id=&#34;처리되지-않은-데이터-중에서-가장-작은-데이터를-선택해-맨-앞의-처리되지-않은-데이터과-교체한다&#34;&gt;==&lt;strong&gt;처리되지 않은 데이터 중에서 가장 작은 데이터를 선택해 맨 앞의 처리되지 않은 데이터과 교체한다&lt;/strong&gt;==&lt;/h2&gt;&#xA;&lt;p&gt;==&lt;strong&gt;처리되지 않은 데이터를 하나씩 골라 처리된 데이트의 적절한 위치에 삽입한다&lt;/strong&gt;==&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;새로운 배열을 만들 것인가&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;==&lt;strong&gt;기준 데이터를 설정하고 기준보다 큰 데이터와 작은 데이트의 위치를 변경&lt;/strong&gt;==&lt;/p&gt;</description>
    </item>
    <item>
      <title>java 어노테이션(anotation)</title>
      <link>http://localhost:1313/02.inbox/java-%EC%96%B4%EB%85%B8%ED%85%8C%EC%9D%B4%EC%85%98anotation/</link>
      <pubDate>Fri, 05 Jan 2024 21:01:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/java-%EC%96%B4%EB%85%B8%ED%85%8C%EC%9D%B4%EC%85%98anotation/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;어노테이션 적용대상  @Target 클래스 필드 메서드 또다른 어노테이션&lt;/li&gt;&#xA;&lt;li&gt;어노테이션 유지정책&#xA;&lt;ul&gt;&#xA;&lt;li&gt;SOURCE=컴파일까지 컴파일 시점에 적용&lt;/li&gt;&#xA;&lt;li&gt;CLASS=메모리 로딩때 까지 이후 제거&lt;/li&gt;&#xA;&lt;li&gt;RUNTIME=계속 유지&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>pragma</title>
      <link>http://localhost:1313/02.inbox/pragma/</link>
      <pubDate>Thu, 04 Jan 2024 12:18:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/pragma/</guid>
      <description>&lt;p&gt;사용할 일은 잦은데~ 너무 무관심한 척 한 것 같다~ &lt;/p&gt;&#xA;&lt;p&gt;매번 매번 사용해도 헷갈리는 pragma의 용법에 대해 모아 총정리 하였다.&lt;/p&gt;&#xA;&lt;p&gt;#pragma는 define 이나 include와 같이 #으로 시작하는 전처리구문(precompiler)의 하나이다.  &lt;/p&gt;&#xA;&lt;p&gt; 컴파일러에 종속적인 구문이라 컴파일러가 변경되었을 경우 제대로된 동작을 보장하지 못하므로 프로젝트 진행중에 서로 다른 컴파일러를 사용한다면 사용하지 않음이 바람직 하겠다.  &lt;/p&gt;&#xA;&lt;p&gt; - 대신 대체하는 문법을 사용해야 되겠다.&lt;/p&gt;&#xA;&lt;p&gt;**#pragma once  &lt;/p&gt;&#xA;&lt;p&gt;** 이것은 &amp;ldquo;컴파일러에게 한번만 컴파일해!&amp;rdquo; 라고 명령한다.  &lt;/p&gt;&#xA;&lt;p&gt; 헤더의 중복을 막아준다.  &lt;/p&gt;&#xA;&lt;p&gt; 무슨말인가 하면&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;a.h를 구현한 a.cpp, a.h는 독립적이다.(include가 없다.)  &lt;/p&gt;</description>
    </item>
    <item>
      <title>BFS 알고리즘</title>
      <link>http://localhost:1313/02.inbox/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8B%A4-with-python/bfs-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/</link>
      <pubDate>Fri, 29 Dec 2023 11:29:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8B%A4-with-python/bfs-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/</guid>
      <description>&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250203205355.png&#34; alt=&#34; (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;queue&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;array&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// for std::array&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;namespace&lt;/span&gt; std;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;bfs&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; start) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    queue&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; q;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    q.push(start);              &lt;span style=&#34;color:#75715e&#34;&gt;// 초기 시작 노드 큐에 삽입&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    visited[start] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; true;      &lt;span style=&#34;color:#75715e&#34;&gt;// 방문 처리&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;// que 처리 알고리즘&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;q.empty()) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;    &lt;span style=&#34;color:#75715e&#34;&gt;// 해당 노드 처리&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; q.front();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        q.pop();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;// 해당 노드와 연결된 방문하지 않은 노드 처리&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; y : graph[x]) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;visited[y]) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                q.push(y);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                visited[y] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; true;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;// visited 배열을 std::array로 변경 (선택적)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;array&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;bool&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; visited{}; &lt;span style=&#34;color:#75715e&#34;&gt;// 기본적으로 false로 초기화&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;// 그래프 연결 정보를 중괄호 초기화 리스트로 표현&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;vector&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; graph[] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;    {}, &lt;span style=&#34;color:#75715e&#34;&gt;// 0번 인덱스는 사용하지 않음 (1번부터 시작)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;    {&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;},  &lt;span style=&#34;color:#75715e&#34;&gt;// 1번 노드에 연결된 노드들&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;    {&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;},      &lt;span style=&#34;color:#75715e&#34;&gt;// 2번 노드에 연결된 노드들&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;    {&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;},  &lt;span style=&#34;color:#75715e&#34;&gt;// 3번 노드에 연결된 노드들&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;    {&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;},      &lt;span style=&#34;color:#75715e&#34;&gt;// 4번 노드에 연결된 노드들&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;    {&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;},      &lt;span style=&#34;color:#75715e&#34;&gt;// 5번 노드에 연결된 노드들&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;    {&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;},        &lt;span style=&#34;color:#75715e&#34;&gt;// 6번 노드에 연결된 노드들&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;    {&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;},  &lt;span style=&#34;color:#75715e&#34;&gt;// 7번 노드에 연결된 노드들&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;    {&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;}       &lt;span style=&#34;color:#75715e&#34;&gt;// 8번 노드에 연결된 노드들&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    bfs(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;); &lt;span style=&#34;color:#75715e&#34;&gt;// 1번 노드부터 탐색 시작&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>cpp STL</title>
      <link>http://localhost:1313/leetcode75/cpp-stl/</link>
      <pubDate>Thu, 28 Dec 2023 10:00:00 +0900</pubDate>
      <guid>http://localhost:1313/leetcode75/cpp-stl/</guid>
      <description>&lt;h2 id=&#34;standard-template-library---stl&#34;&gt;Standard Template Library - STL&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;임의 타입의 객체를 보관할 수 있는 컨테이너 (container)&lt;/li&gt;&#xA;&lt;li&gt;컨테이너에 보관된 원소에 접근할 수 있는 반복자 (iterator)&lt;/li&gt;&#xA;&lt;li&gt;반복자들을 가지고 일련의 작업을 수행하는 알고리즘 (algorithm)&#xA;&lt;a href=&#34;https://en.cppreference.com/w/cpp/container&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;cpp reference&lt;/a&gt;&#xA;다음은 C++의 주요 컨테이너와 관련된 개념에 대한 간단한 설명입니다:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;container&#34;&gt;Container&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;시퀀스 컨테이너 (Sequence Container)&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;array&lt;/code&gt;&lt;/strong&gt; (C++11): 고정 길이 배열&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;vector&lt;/code&gt;&lt;/strong&gt;: 동적 가변 길이 배열&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;inplace_vector&lt;/code&gt;&lt;/strong&gt; (C++26): 동적으로 크기를 조정 가능하지만, 고정된 용량을 가지는 연속 배열로, 요소가 메모리 내에서 제자리에서 관리됨. 메모리 사용을 최적화하고 성능을 개선하기 위해 설계됨.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;deque&lt;/code&gt;&lt;/strong&gt;: 분할 가변 길이 배열 + 양방향 capacity&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;forward_list&lt;/code&gt;&lt;/strong&gt; (C++11): 단방향 링크드 리스트&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;list&lt;/code&gt;&lt;/strong&gt;: 양방향 링크드 리스트&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;연관 컨테이너 (Associative Container)&lt;/p&gt;</description>
    </item>
    <item>
      <title>python 람다(lambda)</title>
      <link>http://localhost:1313/02.inbox/python-%EB%9E%8C%EB%8B%A4lambda/</link>
      <pubDate>Thu, 28 Dec 2023 07:20:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/python-%EB%9E%8C%EB%8B%A4lambda/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;익명함수로도 불리운다&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20231228101705.jpeg&#34; alt=&#34; (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;인수는 무제한 가능&#xA;함수 이름(생략 가능) = lambda&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20231228101705.jpeg&#34; alt=&#34; (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>DFS 알고리즘</title>
      <link>http://localhost:1313/02.inbox/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8B%A4-with-python/dfs-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/</link>
      <pubDate>Tue, 26 Dec 2023 07:59:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8B%A4-with-python/dfs-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/</guid>
      <description>&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20231228191101.gif&#34; alt=&#34;1_GT9oSo0agIeIj6nTg3jFEA (Image resource not found)&#34; &gt;1.gif)&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;stack vs recursion 풀이 2개로 나뉘며&#xA;stack 의 경우 dfs 시 탐색해야할 나머지 노드를 stack 에 저장해두고 빼서 탐색하는 방식의 알고리즘&#xA;recursion 의 경우&#xA;하위 트리가 없을 때 또는 자신이 null 일때 탈출조건을 준다면 recursion 풀이가 가능하다&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;binary-tree-dfs&#34;&gt;binary tree DFS&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;stack 기반 풀이&#xA;1.&lt;/li&gt;&#xA;&lt;li&gt;recursion 기반 풀이&#xA;1.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;grath-dfs&#34;&gt;grath DFS&lt;/h2&gt;&#xA;&lt;p&gt;기본적으로 작은 숫자부터 탐색하는 것을 기본으로 한다&lt;/p&gt;&#xA;&lt;p&gt;recursion 풀이&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;namespace&lt;/span&gt; std;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;bool&lt;/span&gt; visited[&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vector&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; graph[&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// DFS 함수 정의&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dfs&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; x) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 현재 노드 방문 처리&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    visited[x] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; true;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 현재 노드와 연결된 다른 노드를 재귀적으로 방문&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; graph[x].size(); i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; graph[x][i];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;visited[y]) dfs(y);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 각 노드의 인접 노드 정보를 초기화 리스트로 간단하게 할당&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    graph[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    graph[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    graph[&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    graph[&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    graph[&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    graph[&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    graph[&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    graph[&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    dfs(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;stack 풀이&lt;/p&gt;</description>
    </item>
    <item>
      <title>스택과 큐 자료구조</title>
      <link>http://localhost:1313/02.inbox/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8B%A4-with-python/%EC%8A%A4%ED%83%9D%EA%B3%BC-%ED%81%90-%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/</link>
      <pubDate>Mon, 25 Dec 2023 12:15:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8B%A4-with-python/%EC%8A%A4%ED%83%9D%EA%B3%BC-%ED%81%90-%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;[!NOTE] 스택&#xA;선입 후출&#xA;박스 쌓기&#xA;pop 함수 &amp;ldquo;후출&amp;rdquo; 구현&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;[!NOTE] 큐&#xA;선입 선출&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;python-의-스택&#34;&gt;python 의 스택&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20231225165748.png&#34; alt=&#34;스택과 큐 자료구조-20231225165748 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;c-의-스택&#34;&gt;c++ 의 스택&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20231225165800.png&#34; alt=&#34;스택과 큐 자료구조-20231225165800 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;java의-스택&#34;&gt;java의 스택&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20231225165815.png&#34; alt=&#34;스택과 큐 자료구조-20231225165815 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;python-의-큐&#34;&gt;python 의 큐&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20231225165829.png&#34; alt=&#34;스택과 큐 자료구조-20231225165829 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;c-의-큐&#34;&gt;c++ 의 큐&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20231225165844.png&#34; alt=&#34;스택과 큐 자료구조-20231225165844 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;java의-큐&#34;&gt;java의 큐&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20231225165618.png&#34; alt=&#34;스택과 큐 자료구조-20231225165618 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;스택 라이브러리 대신에 재귀함수를 이용하는 경우&lt;/p&gt;</description>
    </item>
    <item>
      <title>python 입력함수</title>
      <link>http://localhost:1313/temp/python-%EC%9E%85%EB%A0%A5%ED%95%A8%EC%88%98/</link>
      <pubDate>Mon, 25 Dec 2023 04:06:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/python-%EC%9E%85%EB%A0%A5%ED%95%A8%EC%88%98/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(function) &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;input&lt;/span&gt;(  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;__prompt: object &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;,  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; str&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>python 클래스 및 인스턴스 변수</title>
      <link>http://localhost:1313/temp/python-%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%B0%8F-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4-%EB%B3%80%EC%88%98/</link>
      <pubDate>Sun, 24 Dec 2023 14:28:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/python-%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%B0%8F-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4-%EB%B3%80%EC%88%98/</guid>
      <description></description>
    </item>
    <item>
      <title>python 모듈(module)</title>
      <link>http://localhost:1313/temp/python-%EB%AA%A8%EB%93%88module/</link>
      <pubDate>Sun, 24 Dec 2023 09:18:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/python-%EB%AA%A8%EB%93%88module/</guid>
      <description></description>
    </item>
    <item>
      <title>python 이름공간(namespace)</title>
      <link>http://localhost:1313/02.inbox/python-%EC%9D%B4%EB%A6%84%EA%B3%B5%EA%B0%84namespace/</link>
      <pubDate>Sun, 24 Dec 2023 09:14:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/python-%EC%9D%B4%EB%A6%84%EA%B3%B5%EA%B0%84namespace/</guid>
      <description>&lt;p&gt;이름공간과 스코프 두가지 개념을 인지&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240428050441.png&#34; alt=&#34; (Image resource not found)&#34; &gt;%20image%2020240428050441.png)&lt;/p&gt;&#xA;&lt;p&gt;python 에는 포인터 개념이 내부적으로 작동&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;text&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PythonGeeks&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id of text is:&amp;#34;&lt;/span&gt;,id(text))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id of PythonGeeks is:&amp;#34;&lt;/span&gt;,id(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PythonGeeks&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;id of text &lt;span style=&#34;color:#f92672&#34;&gt;is&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;140569298174960&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;id of PythonGeeks &lt;span style=&#34;color:#f92672&#34;&gt;is&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;140569298174960&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;c/cpp 과 완벽히 동일&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;[!NOTE] namespace&#xA;네임스페이스(Namespaces)는 이름을 객체에 매핑(mapping)하는 것으로, 파이썬에서는 변수가 실제 객체를 참조하는 이름의 집합을 의미한다&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;[!NOTE] scope&#xA;변수(variable)나 함수(function)와 같은 식별자(identifier)들이 유효(valid)하고, 접근(access) 가능한 범위(range)를 말한다&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;namespace 의 종류&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;built in namespace :  인터프리터가 시작될 때 생성&lt;/li&gt;&#xA;&lt;li&gt;global namespace :  모든 전역 객체&lt;/li&gt;&#xA;&lt;li&gt;local namespace : 함수 내부&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;func&lt;/span&gt;():&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    var1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;지역공간 namespace : &amp;#34;&lt;/span&gt; , locals())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;var &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;built in namespace : &amp;#34;&lt;/span&gt; , dir())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;전역공간 namespace : &amp;#34;&lt;/span&gt; , globals())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;func()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;built &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; namespace :  built &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; namespace :  [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ArithmeticError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;AssertionError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;AttributeError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;BaseException&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;BaseExceptionGroup&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;BlockingIOError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;BrokenPipeError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;BufferError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;BytesWarning&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ChildProcessError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ConnectionAbortedError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ConnectionError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ConnectionRefusedError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ConnectionResetError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;DeprecationWarning&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;EOFError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Ellipsis&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;EncodingWarning&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;EnvironmentError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Exception&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ExceptionGroup&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;False&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;FileExistsError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;FileNotFoundError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;FloatingPointError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;FutureWarning&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;GeneratorExit&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;IOError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ImportError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ImportWarning&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;IndentationError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;IndexError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;InterruptedError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;IsADirectoryError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;KeyError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;KeyboardInterrupt&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;LookupError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;MemoryError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ModuleNotFoundError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;NameError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;None&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;NotADirectoryError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;NotImplemented&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;NotImplementedError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;OSError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;OverflowError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;PendingDeprecationWarning&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;PermissionError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ProcessLookupError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;RecursionError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ReferenceError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ResourceWarning&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;RuntimeError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;RuntimeWarning&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;StopAsyncIteration&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;StopIteration&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;SyntaxError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;SyntaxWarning&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;SystemError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;SystemExit&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;TabError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;TimeoutError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;True&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;TypeError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;UnboundLocalError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;UnicodeDecodeError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;UnicodeEncodeError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;UnicodeError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;UnicodeTranslateError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;UnicodeWarning&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;UserWarning&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ValueError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Warning&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ZeroDivisionError&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;__build_class__&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;__debug__&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;__doc__&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;__import__&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;__loader__&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;__name__&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;__package__&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;__spec__&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;abs&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;aiter&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;all&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;anext&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;any&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ascii&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bin&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bool&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;breakpoint&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bytearray&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bytes&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;callable&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;chr&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;classmethod&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;compile&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;complex&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;copyright&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;credits&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;delattr&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dict&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dir&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;divmod&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;enumerate&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;eval&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;exec&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;exit&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;filter&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;float&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;format&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;frozenset&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;getattr&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;globals&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hasattr&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hash&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;help&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hex&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;input&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;int&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;isinstance&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;issubclass&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;iter&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;len&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;license&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;list&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;locals&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;map&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;max&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;memoryview&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;min&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;next&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;object&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;oct&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;open&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ord&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pow&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;print&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;property&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;quit&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;range&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;repr&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;reversed&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;round&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;set&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;setattr&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;slice&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sorted&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;staticmethod&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;str&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sum&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;super&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tuple&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;type&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;vars&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;zip&amp;#39;&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;전역공간 namespace :  {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;__name__&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;__doc__&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;__package__&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;__loader__&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;_frozen_importlib_external&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;SourceFileLoader object at &lt;span style=&#34;color:#ae81ff&#34;&gt;0x7f2a74ccb350&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;__spec__&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;__annotations__&amp;#39;&lt;/span&gt;: {}, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;__builtins__&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;module &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;builtins&amp;#39;&lt;/span&gt; (built&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;__file__&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/home/shinnk/source_main/personal/python/class/namepace.py&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;__cached__&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;func&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;function func at &lt;span style=&#34;color:#ae81ff&#34;&gt;0x7f2a74c704a0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;var&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;지역공간 namespace :  {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;var1&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240428050445.png&#34; alt=&#34;Pasted image 20240428050445 (Image resource not found)&#34; &gt;&#xA;함수 내부에서&lt;/p&gt;</description>
    </item>
    <item>
      <title>python 클래스(class)</title>
      <link>http://localhost:1313/temp/python-%ED%81%B4%EB%9E%98%EC%8A%A4class/</link>
      <pubDate>Sun, 24 Dec 2023 09:12:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/python-%ED%81%B4%EB%9E%98%EC%8A%A4class/</guid>
      <description></description>
    </item>
    <item>
      <title>구현(Implementation)</title>
      <link>http://localhost:1313/02.inbox/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8B%A4-with-python/%EA%B5%AC%ED%98%84implementation/</link>
      <pubDate>Sat, 23 Dec 2023 12:43:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8B%A4-with-python/%EA%B5%AC%ED%98%84implementation/</guid>
      <description>&lt;p&gt;&lt;strong&gt;머릿속에 있는 알고리즘을 소스코드로 바꾸는 과정&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;알고리즘은 간단한데 코드가 지나칠 만큼 길어지는 문제&lt;/li&gt;&#xA;&lt;li&gt;실수 연산을 다루고 특정 소수점 자리까지 출력해야 하는 문제&lt;/li&gt;&#xA;&lt;li&gt;문자열을 특정한 기준에 따라서 끊어 처리해야 하는 문제&lt;/li&gt;&#xA;&lt;li&gt;적절한 라이브러리를 찾아서 사용해야 하는 문제 ( 모든 순열 모든 조합을 찾는 문제 python itertools 모듈을 사용해야 쉬워진다 )&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;시뮬레이션 유형 구현 유형 완전탐색 &#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240428050418.png&#34; alt=&#34; (Image resource not found)&#34; &gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240428050422.png&#34; alt=&#34;Pasted image 20240428050422 (Image resource not found)&#34; &gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240428050425.png&#34; alt=&#34;Pasted image 20240428050425 (Image resource not found)&#34; &gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>리스트 컴프리헨션(List Comprehension)</title>
      <link>http://localhost:1313/02.inbox/%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EC%BB%B4%ED%94%84%EB%A6%AC%ED%97%A8%EC%85%98list-comprehension/</link>
      <pubDate>Sat, 23 Dec 2023 11:09:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EC%BB%B4%ED%94%84%EB%A6%AC%ED%97%A8%EC%85%98list-comprehension/</guid>
      <description>&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20231223111957.png&#34; alt=&#34; (Image resource not found)&#34; &gt;%20image%2020231223111957.png)&lt;/p&gt;&#xA;&lt;p&gt;컴퓨터 계산 기준 output 식 발견&#xA;뒤의 for , if 좌측에서 우측으로 순서대로 순회후 out put을 계산&lt;/p&gt;&#xA;&lt;h2 id=&#34;for문&#34;&gt;for문&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;for 문이 무조건 한개는 있어야 한다&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lst &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [x&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; lst]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(a)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; [ (x, y) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;쌈밥&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;치킨&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;피자&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; y &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;사과&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;아이스크림&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;커피&amp;#39;&lt;/span&gt;]] [(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;쌈밥&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;사과&amp;#39;&lt;/span&gt;), &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;쌈밥&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;아이스크림&amp;#39;&lt;/span&gt;), &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;쌈밥&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;커피&amp;#39;&lt;/span&gt;), &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;치킨&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;사과&amp;#39;&lt;/span&gt;), &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;치킨&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;아이스크림&amp;#39;&lt;/span&gt;), &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;치킨&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;커피&amp;#39;&lt;/span&gt;),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;피자&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;사과&amp;#39;&lt;/span&gt;), &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;피자&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;아이스크림&amp;#39;&lt;/span&gt;),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;피자&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;커피&amp;#39;&lt;/span&gt;)]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;좌측부터 계산&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;if-문&#34;&gt;if 문&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lst &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;c &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [x &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; lst &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(c)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;중첩-if-문&#34;&gt;중첩 if 문&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;d &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [x &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; lst &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; x&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;if-else&#34;&gt;if else&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lst &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;e &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [x &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;less than 4&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; lst]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(e)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;less than 4&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;less than 4&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;less than 4&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;less than 4&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;[!NOTE]&#xA;if else 문은 왜 앞에다가 사용하는가??&#xA;if else 는 여기서는 삼항 연산자로 사용된다&#xA;처음에 예시로 든 (x+1)  과 (x if x &amp;gt; 4 else &amp;rsquo;less than 4&amp;rsquo;) 이렇게 하나의 output 이다&#xA;문으로 보지 않도록 하자&lt;/p&gt;</description>
    </item>
    <item>
      <title>함수포인터</title>
      <link>http://localhost:1313/02.inbox/%ED%95%A8%EC%88%98%ED%8F%AC%EC%9D%B8%ED%84%B0/</link>
      <pubDate>Fri, 22 Dec 2023 11:30:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%ED%95%A8%EC%88%98%ED%8F%AC%EC%9D%B8%ED%84%B0/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;foo&lt;/span&gt;(){ &lt;span style=&#34;color:#75715e&#34;&gt;// foo 코드는 메모리 주소 0x002717f0에서 시작한다.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%d&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;foo&lt;/span&gt;()); &lt;span style=&#34;color:#75715e&#34;&gt;// 주소 0x002717f0로 점프한다. 5 출력&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%p&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;,foo); &lt;span style=&#34;color:#75715e&#34;&gt;// 주소를 출력&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;코드에서 보듯 함수의 이름은 함수의 주소를 가르킨다 int a[7] 에서 a 가 주소를 가리키듯&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; a, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; b){&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b;} &lt;span style=&#34;color:#75715e&#34;&gt;//덧셈함수&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sub&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; a, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; b){&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; b;} &lt;span style=&#34;color:#75715e&#34;&gt;//뺄셈함수&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;mul&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; a, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; b){&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; b;} &lt;span style=&#34;color:#75715e&#34;&gt;//곱셈함수&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;div&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; a, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; b){&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; b;} &lt;span style=&#34;color:#75715e&#34;&gt;//나눗셈함수&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;fp[&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;])(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;); &lt;span style=&#34;color:#75715e&#34;&gt;//함수 포인터 배열 선언&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;fp[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; add; &lt;span style=&#34;color:#75715e&#34;&gt;// 배열[1]에 덧셈 함수의 메모리 주소 저장&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;fp[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sub; &lt;span style=&#34;color:#75715e&#34;&gt;// 배열[2]에 뺄셈 함수의 메모리 주소 저장&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;fp[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mul; &lt;span style=&#34;color:#75715e&#34;&gt;// 배열[3]에 곱셈 함수의 메모리 주소 저장&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#x9;fp[&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; div; &lt;span style=&#34;color:#75715e&#34;&gt;// 배열[4]에 나눗셈 함수의 메모리 주소 저장&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;; i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;배열[%d](20,%2010));&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;typedef&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;int&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;PtrFunc)(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PtrFunc fp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; NULL;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; add;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>c, cpp 연산자 우선순위</title>
      <link>http://localhost:1313/02.inbox/c-cpp-%EC%97%B0%EC%82%B0%EC%9E%90-%EC%9A%B0%EC%84%A0%EC%88%9C%EC%9C%84/</link>
      <pubDate>Fri, 22 Dec 2023 10:31:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/c-cpp-%EC%97%B0%EC%82%B0%EC%9E%90-%EC%9A%B0%EC%84%A0%EC%88%9C%EC%9C%84/</guid>
      <description>&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20231222103216.png&#34; alt=&#34;c 연산자 우선순위-20231222103216 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://learn.microsoft.com/ko-kr/cpp/c-language/precedence-and-order-of-evaluation?view=msvc-170#precedence-and-associativity-of-c-operators&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://learn.microsoft.com/ko-kr/cpp/cpp/cpp-built-in-operators-precedence-and-associativity?view=msvc-170#c-operator-precedence-and-associativity-table&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>python 인수 규칙</title>
      <link>http://localhost:1313/02.inbox/python-%EC%9D%B8%EC%88%98-%EA%B7%9C%EC%B9%99/</link>
      <pubDate>Fri, 22 Dec 2023 07:18:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/python-%EC%9D%B8%EC%88%98-%EA%B7%9C%EC%B9%99/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;values: object,  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sep: str &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;,  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;end: str &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;,  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;file: SupportsWrite[str] &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;,  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;flush: Literal[&lt;span style=&#34;color:#66d9ef&#34;&gt;False&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;False&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;파이썬의 print 내장함수 구현체이다&lt;/p&gt;&#xA;&lt;dl&gt;&#xA;&lt;dt&gt;&lt;a href=&#34;http://localhost:1313/%ea%b0%80%eb%b3%80%ec%9d%b8%ec%9e%90%28variadic%29#%ec%9c%84%ec%b9%98%20%ea%b0%80%eb%b3%80%20%ec%9d%b8%ec%9e%90%20*args&#34; class=&#34;internal-file-link&#34;&gt;가변인자&lt;/a&gt; 를 사용함 정확하게는 위치 가변인자를 사용하였다&lt;/dt&gt;&#xA;&lt;dd&gt;object 매개변수의 올 수 있는 타입을 지정하여 오류를 막는다&#xA;&lt;code&gt;: str | None&lt;/code&gt; str 또는 None 가 올 수 있다는 이야기이다&#xA;&lt;code&gt; = &amp;quot; &amp;quot;&lt;/code&gt; None 일때의 기본값을 지정해준다&lt;/dd&gt;&#xA;&lt;/dl&gt;</description>
    </item>
    <item>
      <title>time 명령어</title>
      <link>http://localhost:1313/02.inbox/time-%EB%AA%85%EB%A0%B9%EC%96%B4/</link>
      <pubDate>Thu, 21 Dec 2023 04:32:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/time-%EB%AA%85%EB%A0%B9%EC%96%B4/</guid>
      <description>&lt;p&gt;실제 경과 시간을 나타내는 &amp;ldquo;Real&amp;rdquo;, 프로세스에서 사용된 CPU 시간만을 나타내는 &amp;ldquo;User&amp;rdquo; 및 &amp;ldquo;Sys&amp;quot;는 커널 내에서 실행되는 코드에서 사용된 CPU 시간을 나타냅니다.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Real(실제 시간):&lt;/strong&gt; 호출의 시작에서 끝까지의 경과 시간으로, 다른 프로세스에 의해 사용된 시간 조각과 프로세스가 차단된 시간(예를 들어 I/O 완료를 기다리는 경우)을 포함한 모든 경과 시간입니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;User(사용자 모드 시간):&lt;/strong&gt; 프로세스 내에서 사용자 모드 코드(커널 외부)에서 소비한 CPU 시간입니다. 이는 프로세스를 실행하는 데 사용된 실제 CPU 시간만을 나타냅니다. 다른 프로세스 및 프로세스가 차단된 시간은 이 숫자에 포함되지 않습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>날짜 형식 포멧</title>
      <link>http://localhost:1313/02.inbox/%EB%82%A0%EC%A7%9C-%ED%98%95%EC%8B%9D-%ED%8F%AC%EB%A9%A7/</link>
      <pubDate>Thu, 21 Dec 2023 03:07:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EB%82%A0%EC%A7%9C-%ED%98%95%EC%8B%9D-%ED%8F%AC%EB%A9%A7/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://momentjs.com/docs/#/displaying/format/&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;https://momentjs.com/docs/#/displaying/format/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;Token&lt;/th&gt;&#xA;          &lt;th&gt;Output&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Month&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;M&lt;/td&gt;&#xA;          &lt;td&gt;1 2 &amp;hellip; 11 12&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Mo&lt;/td&gt;&#xA;          &lt;td&gt;1st 2nd &amp;hellip; 11th 12th&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;MM&lt;/td&gt;&#xA;          &lt;td&gt;01 02 &amp;hellip; 11 12&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;MMM&lt;/td&gt;&#xA;          &lt;td&gt;Jan Feb &amp;hellip; Nov Dec&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;MMMM&lt;/td&gt;&#xA;          &lt;td&gt;January February &amp;hellip; November December&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Quarter&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Q&lt;/td&gt;&#xA;          &lt;td&gt;1 2 3 4&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Qo&lt;/td&gt;&#xA;          &lt;td&gt;1st 2nd 3rd 4th&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Day of Month&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;D&lt;/td&gt;&#xA;          &lt;td&gt;1 2 &amp;hellip; 30 31&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Do&lt;/td&gt;&#xA;          &lt;td&gt;1st 2nd &amp;hellip; 30th 31st&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;DD&lt;/td&gt;&#xA;          &lt;td&gt;01 02 &amp;hellip; 30 31&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Day of Year&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;DDD&lt;/td&gt;&#xA;          &lt;td&gt;1 2 &amp;hellip; 364 365&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;DDDo&lt;/td&gt;&#xA;          &lt;td&gt;1st 2nd &amp;hellip; 364th 365th&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;DDDD&lt;/td&gt;&#xA;          &lt;td&gt;001 002 &amp;hellip; 364 365&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Day of Week&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;d&lt;/td&gt;&#xA;          &lt;td&gt;0 1 &amp;hellip; 5 6&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;do&lt;/td&gt;&#xA;          &lt;td&gt;0th 1st &amp;hellip; 5th 6th&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;dd&lt;/td&gt;&#xA;          &lt;td&gt;Su Mo &amp;hellip; Fr Sa&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;ddd&lt;/td&gt;&#xA;          &lt;td&gt;Sun Mon &amp;hellip; Fri Sat&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;dddd&lt;/td&gt;&#xA;          &lt;td&gt;Sunday Monday &amp;hellip; Friday Saturday&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Day of Week (Locale)&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;e&lt;/td&gt;&#xA;          &lt;td&gt;0 1 &amp;hellip; 5 6&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Day of Week (ISO)&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;E&lt;/td&gt;&#xA;          &lt;td&gt;1 2 &amp;hellip; 6 7&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Week of Year&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;w&lt;/td&gt;&#xA;          &lt;td&gt;1 2 &amp;hellip; 52 53&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;wo&lt;/td&gt;&#xA;          &lt;td&gt;1st 2nd &amp;hellip; 52nd 53rd&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;ww&lt;/td&gt;&#xA;          &lt;td&gt;01 02 &amp;hellip; 52 53&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Week of Year (ISO)&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;W&lt;/td&gt;&#xA;          &lt;td&gt;1 2 &amp;hellip; 52 53&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Wo&lt;/td&gt;&#xA;          &lt;td&gt;1st 2nd &amp;hellip; 52nd 53rd&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;WW&lt;/td&gt;&#xA;          &lt;td&gt;01 02 &amp;hellip; 52 53&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Year&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;YY&lt;/td&gt;&#xA;          &lt;td&gt;70 71 &amp;hellip; 29 30&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;YYYY&lt;/td&gt;&#xA;          &lt;td&gt;1970 1971 &amp;hellip; 2029 2030&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;YYYYYY&lt;/td&gt;&#xA;          &lt;td&gt;-001970 -001971 &amp;hellip; +001907 +001971  &lt;br&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;a href=&#34;https://tc39.es/ecma262/#sec-expanded-years&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;&lt;/a&gt; (Covering the full time value range of approximately 273,790 years forward or backward from 01 January, 1970)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Y&lt;/td&gt;&#xA;          &lt;td&gt;1970 1971 &amp;hellip; 9999 +10000 +10001  &lt;br&gt;&lt;strong&gt;Note:&lt;/strong&gt; This complies with the ISO 8601 standard for dates past the year 9999&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Era Year&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;y&lt;/td&gt;&#xA;          &lt;td&gt;1 2 &amp;hellip; 2020 &amp;hellip;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Era&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;N, NN, NNN&lt;/td&gt;&#xA;          &lt;td&gt;BC AD  &lt;br&gt;&lt;strong&gt;Note:&lt;/strong&gt; Abbr era name&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;NNNN&lt;/td&gt;&#xA;          &lt;td&gt;Before Christ, Anno Domini  &lt;br&gt;&lt;strong&gt;Note:&lt;/strong&gt; Full era name&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;NNNNN&lt;/td&gt;&#xA;          &lt;td&gt;BC AD  &lt;br&gt;&lt;strong&gt;Note:&lt;/strong&gt; Narrow era name&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Week Year&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;gg&lt;/td&gt;&#xA;          &lt;td&gt;70 71 &amp;hellip; 29 30&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;gggg&lt;/td&gt;&#xA;          &lt;td&gt;1970 1971 &amp;hellip; 2029 2030&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Week Year (ISO)&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;GG&lt;/td&gt;&#xA;          &lt;td&gt;70 71 &amp;hellip; 29 30&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;GGGG&lt;/td&gt;&#xA;          &lt;td&gt;1970 1971 &amp;hellip; 2029 2030&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;AM/PM&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;A&lt;/td&gt;&#xA;          &lt;td&gt;AM PM&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;a&lt;/td&gt;&#xA;          &lt;td&gt;am pm&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Hour&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;H&lt;/td&gt;&#xA;          &lt;td&gt;0 1 &amp;hellip; 22 23&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;HH&lt;/td&gt;&#xA;          &lt;td&gt;00 01 &amp;hellip; 22 23&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;h&lt;/td&gt;&#xA;          &lt;td&gt;1 2 &amp;hellip; 11 12&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;hh&lt;/td&gt;&#xA;          &lt;td&gt;01 02 &amp;hellip; 11 12&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;k&lt;/td&gt;&#xA;          &lt;td&gt;1 2 &amp;hellip; 23 24&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;kk&lt;/td&gt;&#xA;          &lt;td&gt;01 02 &amp;hellip; 23 24&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Minute&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;m&lt;/td&gt;&#xA;          &lt;td&gt;0 1 &amp;hellip; 58 59&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;mm&lt;/td&gt;&#xA;          &lt;td&gt;00 01 &amp;hellip; 58 59&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Second&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;s&lt;/td&gt;&#xA;          &lt;td&gt;0 1 &amp;hellip; 58 59&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;ss&lt;/td&gt;&#xA;          &lt;td&gt;00 01 &amp;hellip; 58 59&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Fractional Second&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;S&lt;/td&gt;&#xA;          &lt;td&gt;0 1 &amp;hellip; 8 9&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;SS&lt;/td&gt;&#xA;          &lt;td&gt;00 01 &amp;hellip; 98 99&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;SSS&lt;/td&gt;&#xA;          &lt;td&gt;000 001 &amp;hellip; 998 999&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;SSSS &amp;hellip; SSSSSSSSS&lt;/td&gt;&#xA;          &lt;td&gt;000[0..] 001[0..] &amp;hellip; 998[0..] 999[0..]&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Time Zone&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;z or zz&lt;/td&gt;&#xA;          &lt;td&gt;EST CST &amp;hellip; MST PST  &lt;br&gt;&lt;strong&gt;Note:&lt;/strong&gt; as of &lt;strong&gt;1.6.0&lt;/strong&gt;, the z/zz format tokens have been deprecated from plain moment objects. &lt;a href=&#34;https://github.com/moment/moment/issues/162&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;Read more about it here.&lt;/a&gt; However, they &lt;em&gt;do&lt;/em&gt; work if you are using a specific time zone with the moment-timezone addon.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Z&lt;/td&gt;&#xA;          &lt;td&gt;-07:00 -06:00 &amp;hellip; +06:00 +07:00&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;ZZ&lt;/td&gt;&#xA;          &lt;td&gt;-0700 -0600 &amp;hellip; +0600 +0700&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Unix Timestamp&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;X&lt;/td&gt;&#xA;          &lt;td&gt;1360013296&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Unix Millisecond Timestamp&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;x&lt;/td&gt;&#xA;          &lt;td&gt;1360013296123&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;</description>
    </item>
    <item>
      <title>ascii code</title>
      <link>http://localhost:1313/02.inbox/ascii-code/</link>
      <pubDate>Wed, 20 Dec 2023 07:12:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/ascii-code/</guid>
      <description>&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20231213153502.png&#34; alt=&#34;Untitled (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20231223153501.png&#34; alt=&#34;Untitled 1 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;제어 문자&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;0 (Null) - 십진수 0에 해당하는 제어 문자입니다. 주로 문자열의 종료를 나타내는 데 사용됩니다.&lt;/li&gt;&#xA;&lt;li&gt;1 (Start of Heading) - 통신 제어에서 사용되는 제어 문자로, 통신 헤더의 시작을 나타냅니다.&lt;/li&gt;&#xA;&lt;li&gt;2 (Start of Text) - 통신 제어에서 사용되는 제어 문자로, 텍스트 데이터의 시작을 나타냅니다.&lt;/li&gt;&#xA;&lt;li&gt;3 (End of Text) - 통신 제어에서 사용되는 제어 문자로, 텍스트 데이터의 종료를 나타냅니다.&lt;/li&gt;&#xA;&lt;li&gt;4 (End of Transmission) - 통신 제어에서 사용되는 제어 문자로, 전송의 종료를 나타냅니다.&lt;/li&gt;&#xA;&lt;li&gt;5 (Enquiry) - 통신 제어에서 사용되는 제어 문자로, 상대방에게 정보 요청을 나타냅니다.&lt;/li&gt;&#xA;&lt;li&gt;6 (Acknowledge) - 통신 제어에서 사용되는 제어 문자로, 정보 수신을 확인하는 신호를 나타냅니다.&lt;/li&gt;&#xA;&lt;li&gt;7 (Bell) - 터미널이나 출력 장치에서 경고음을 발생시키는 제어 문자입니다.&lt;/li&gt;&#xA;&lt;li&gt;8 (Backspace) - 커서를 한 칸 뒤로 이동시키는 제어 문자입니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;공백문자&lt;/p&gt;</description>
    </item>
    <item>
      <title>disk</title>
      <link>http://localhost:1313/02.inbox/disk/</link>
      <pubDate>Wed, 20 Dec 2023 07:12:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/disk/</guid>
      <description>&lt;p&gt;mount 인수 없음&#xA;findmnt 추천2&#xA;fdisk -l (파티션 설정)&#xA;lsblk * 추천1&#xA;df -a&#xA;dmesg&#xA;blkid&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;[!NOTE] 순서&#xA;디스크 -&amp;gt; 파티션 -&amp;gt; 파일시스템 지정 -&amp;gt; 마운트&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;디스크 -&amp;gt; 파티션 :&#xA;&lt;ul&gt;&#xA;&lt;li&gt;파티션 정보를 저장하는 두 가지 다른 테이블 형식 mbr, gpt 방식을 먼저 정하자&#xA;&lt;ul&gt;&#xA;&lt;li&gt;fdisk&lt;/li&gt;&#xA;&lt;li&gt;parted&lt;/li&gt;&#xA;&lt;li&gt;gdisk&lt;/li&gt;&#xA;&lt;li&gt;cfdisk&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;파티션을 어떻게 사용할지 종류를 지정하자 linux, lvm, swap, EFI 등등&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;파티션 -&amp;gt; 파일지스템 지정:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;파티션을 사용하기 전 어떠한 파일 시스템을 사용할지 정하자&#xA;&lt;ul&gt;&#xA;&lt;li&gt;mkfs.[파일 시스템] [옵션] [디스크 파티션]&lt;/li&gt;&#xA;&lt;li&gt;mkfs -t(파일 시스템) [옵션] [디스크 파이션]&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;[!NOTE] 참조&lt;/p&gt;</description>
    </item>
    <item>
      <title>git reflog</title>
      <link>http://localhost:1313/02.inbox/git-reflog/</link>
      <pubDate>Wed, 20 Dec 2023 07:12:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/git-reflog/</guid>
      <description></description>
    </item>
    <item>
      <title>javascript 자료형</title>
      <link>http://localhost:1313/02.inbox/javascript-%EC%9E%90%EB%A3%8C%ED%98%95/</link>
      <pubDate>Wed, 20 Dec 2023 07:12:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/javascript-%EC%9E%90%EB%A3%8C%ED%98%95/</guid>
      <description>&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;var&lt;/th&gt;&#xA;          &lt;th&gt;let&lt;/th&gt;&#xA;          &lt;th&gt;const&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;재선언&lt;/td&gt;&#xA;          &lt;td&gt;o&lt;/td&gt;&#xA;          &lt;td&gt;x&lt;/td&gt;&#xA;          &lt;td&gt;x&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;업데이트&lt;/td&gt;&#xA;          &lt;td&gt;o&lt;/td&gt;&#xA;          &lt;td&gt;o&lt;/td&gt;&#xA;          &lt;td&gt;x&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;호이스팅&lt;/td&gt;&#xA;          &lt;td&gt;o&lt;/td&gt;&#xA;          &lt;td&gt;o&lt;/td&gt;&#xA;          &lt;td&gt;o&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;자동 초기화&lt;/td&gt;&#xA;          &lt;td&gt;o&lt;/td&gt;&#xA;          &lt;td&gt;x&lt;/td&gt;&#xA;          &lt;td&gt;x&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;호이스팅: let, const 는 오류 발생(호이스팅은 되어도 자동 초기화 안해서 오류 발생)&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;변환&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;// undefined&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;기준&lt;/th&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;원시(primitive)&lt;/td&gt;&#xA;          &lt;td&gt;number&lt;/td&gt;&#xA;          &lt;td&gt;boolean&lt;/td&gt;&#xA;          &lt;td&gt;null&lt;/td&gt;&#xA;          &lt;td&gt;undifined&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;참조(reference)&lt;/td&gt;&#xA;          &lt;td&gt;BigInt&lt;/td&gt;&#xA;          &lt;td&gt;object&lt;/td&gt;&#xA;          &lt;td&gt;array&lt;/td&gt;&#xA;          &lt;td&gt;function&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;자바스크립트에서는 원시 타입(primitive type) 참조 타입(reference type)이라는 두 가지 자료형을 제공한다.&lt;/p&gt;&#xA;&lt;p&gt;숫자, 불린값, null과 undefined는 원시 타입이다. 객체, 배열, 함수는 참조 타입이다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>javascript 함수</title>
      <link>http://localhost:1313/02.inbox/javascript-%ED%95%A8%EC%88%98/</link>
      <pubDate>Wed, 20 Dec 2023 07:12:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/javascript-%ED%95%A8%EC%88%98/</guid>
      <description>&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;var&lt;/th&gt;&#xA;          &lt;th&gt;let&lt;/th&gt;&#xA;          &lt;th&gt;const&lt;/th&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;재선언&lt;/td&gt;&#xA;          &lt;td&gt;o&lt;/td&gt;&#xA;          &lt;td&gt;x&lt;/td&gt;&#xA;          &lt;td&gt;x&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;업데이트&lt;/td&gt;&#xA;          &lt;td&gt;o&lt;/td&gt;&#xA;          &lt;td&gt;o&lt;/td&gt;&#xA;          &lt;td&gt;x&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;호이스팅&lt;/td&gt;&#xA;          &lt;td&gt;o&lt;/td&gt;&#xA;          &lt;td&gt;o&lt;/td&gt;&#xA;          &lt;td&gt;o&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;자동 초기화&lt;/td&gt;&#xA;          &lt;td&gt;o&lt;/td&gt;&#xA;          &lt;td&gt;x&lt;/td&gt;&#xA;          &lt;td&gt;x&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;호이스팅: let, const 는 오류 발생(호이스팅은 되어도 자동 초기화 안해서 오류 발생)&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;변환&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;// undefined&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;기준&lt;/th&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;원시(primitive)&lt;/td&gt;&#xA;          &lt;td&gt;number&lt;/td&gt;&#xA;          &lt;td&gt;boolean&lt;/td&gt;&#xA;          &lt;td&gt;null&lt;/td&gt;&#xA;          &lt;td&gt;undifined&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;참조(reference)&lt;/td&gt;&#xA;          &lt;td&gt;BigInt&lt;/td&gt;&#xA;          &lt;td&gt;object&lt;/td&gt;&#xA;          &lt;td&gt;array&lt;/td&gt;&#xA;          &lt;td&gt;function&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;자바스크립트에서는 원시 타입(primitive type) 참조 타입(reference type)이라는 두 가지 자료형을 제공한다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>python 기본 가상환경 venv</title>
      <link>http://localhost:1313/02.inbox/python-%EA%B8%B0%EB%B3%B8-%EA%B0%80%EC%83%81%ED%99%98%EA%B2%BD-venv/</link>
      <pubDate>Wed, 20 Dec 2023 07:12:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/python-%EA%B8%B0%EB%B3%B8-%EA%B0%80%EC%83%81%ED%99%98%EA%B2%BD-venv/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;python -m venv 가상환경이름&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이제 가상 환경을 활성화합니다. 운영체제에 따라 활성화 방법이 다릅니다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-macos-경우&#34;&gt;(1) MacOS 경우&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;source 가상환경이름/bin/activate&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;2-windowos-경우&#34;&gt;(2) WindowOS 경우&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;source 가상환경이름/Scripts/activate&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;정상적으로 가상환경이 실행되었다면, 터미널에서 현재 디렉토리 맨 앞에 상환경 이름이 괄호 안에 출력됩니다.&lt;/p&gt;&#xA;&lt;p&gt;가상 환경을 비활성화하는 방법입니다.&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;deactivate&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;생성했던 가상 환경을 삭제하는 방법입니다.&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo rm -rf 가상환경이름&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>RAID</title>
      <link>http://localhost:1313/02.inbox/raid/</link>
      <pubDate>Wed, 20 Dec 2023 07:12:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/raid/</guid>
      <description>&lt;p&gt;하드웨어 RAID&lt;/p&gt;&#xA;&lt;p&gt;소프트웨어 RAID&lt;/p&gt;&#xA;&lt;p&gt;여기서는 소프트웨어 RAID 를 이야기 한다&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20230626150025.png&#34; alt=&#34;2023-06-26150025 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;linear RAID : 디스크 여러개를 단순히 이어서 사용한다&lt;/p&gt;&#xA;&lt;p&gt;RAID 0 : 순서대로 저장하는 것이 아니라 동시에 사용 속도를 나누어 사용하므로 속도가 N 개 만큼 빠르다&lt;/p&gt;&#xA;&lt;p&gt;RAID 1 : 복사본 생성&lt;/p&gt;&#xA;&lt;p&gt;RAID 5 : 1개 오류 허용&lt;/p&gt;&#xA;&lt;p&gt;RAID 6 :&lt;/p&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20230626150727.png&#34; alt=&#34;2023-06-26150727 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20230626150829.png&#34; alt=&#34;2023-06-26150829 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20230626151558.png&#34; alt=&#34;2023-06-26151558 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20230626151130.png&#34; alt=&#34;2023-06-26151130 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20230626151329.png&#34; alt=&#34;2023-06-26151329 (Image resource not found)&#34; &gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>UTF-8</title>
      <link>http://localhost:1313/02.inbox/utf-8/</link>
      <pubDate>Wed, 20 Dec 2023 07:12:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/utf-8/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://news.hada.io/topic?id=23059&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;GEEK News&lt;/a&gt; 꼭 읽어보기 바람&lt;/p&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20231225115136.png&#34; alt=&#34;UTF-8-20231225115136 (Image resource not found)&#34; &gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20231225115121.png&#34; alt=&#34;UTF-8-20231225115121 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;예시 1: 문자 &lt;strong&gt;A&lt;/strong&gt;는 아스키 문자이며 유니코드 값은 65로, 이는 16진수 0x41(0100 0001)인데, 7비트 이내로 표현 가능하므로 UTF-8로도 0x41로 표현된다.&lt;/li&gt;&#xA;&lt;li&gt;예시 2: 문자 &lt;strong&gt;π&lt;/strong&gt;는 유니코드 값이 7비트를 벗어난다. 그러나 11비트 이내에 표현이 가능한 비교적 앞쪽에 위치한 문자며, 따라서 그림과 같이 2바이트에 표현이 가능 하다.&lt;/li&gt;&#xA;&lt;li&gt;예시 3: 문자 &lt;strong&gt;한&lt;/strong&gt;은 한글 문자로 16비트를 모두 사용한다. 마지막 16비트가 1이며 따라서 이를 표현하기 위해서는 그림과 같이 3바이트를 사용해야 한다. 참고로 유니코드에는 완성형 한글 11,172자뿐만 아니라 조합형 자모가 모두 포함되어 있으며, 이처럼 한글의 UTF-8 인코딩 값은 모두 각 문자당 3바이트를 차지한다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20231225115204.png&#34; alt=&#34;UTF-8-20231225115204 (Image resource not found)&#34; &gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>문서 객체 모델 (DOM)</title>
      <link>http://localhost:1313/02.inbox/%EB%AC%B8%EC%84%9C-%EA%B0%9D%EC%B2%B4-%EB%AA%A8%EB%8D%B8-dom/</link>
      <pubDate>Wed, 20 Dec 2023 07:12:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EB%AC%B8%EC%84%9C-%EA%B0%9D%EC%B2%B4-%EB%AA%A8%EB%8D%B8-dom/</guid>
      <description>&lt;hr&gt;&#xA;&lt;p&gt;The HTML DOM document object is the owner of all other objects in your web page.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;The document object represents your web page.&lt;/p&gt;&#xA;&lt;p&gt;If you want to access any element in an HTML page, you always start with accessing the document object.&lt;/p&gt;&#xA;&lt;p&gt;Below are some examples of how you can use the document object to access and manipulate HTML.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Method&lt;/th&gt;&#xA;          &lt;th&gt;Description&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;document.getElementById(&lt;em&gt;id&lt;/em&gt;)&lt;/td&gt;&#xA;          &lt;td&gt;Find an element by element id&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;document.getElementsByTagName(&lt;em&gt;name&lt;/em&gt;)&lt;/td&gt;&#xA;          &lt;td&gt;Find elements by tag name&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;document.getElementsByClassName(&lt;em&gt;name&lt;/em&gt;)&lt;/td&gt;&#xA;          &lt;td&gt;Find elements by class name&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Property&lt;/th&gt;&#xA;          &lt;th&gt;Description&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;em&gt;element&lt;/em&gt;.innerHTML =  &lt;em&gt;new html content&lt;/em&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Change the inner HTML of an element&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;em&gt;element&lt;/em&gt;.&lt;em&gt;attribute = new value&lt;/em&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Change the attribute value of an HTML element&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;em&gt;element&lt;/em&gt;.style.&lt;em&gt;property = new style&lt;/em&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Change the style of an HTML element&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Method&lt;/td&gt;&#xA;          &lt;td&gt;Description&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;em&gt;element&lt;/em&gt;.setAttribute_(attribute, value)_&lt;/td&gt;&#xA;          &lt;td&gt;Change the attribute value of an HTML element&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Method&lt;/th&gt;&#xA;          &lt;th&gt;Description&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;document.createElement(&lt;em&gt;element&lt;/em&gt;)&lt;/td&gt;&#xA;          &lt;td&gt;Create an HTML element&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;document.removeChild(&lt;em&gt;element&lt;/em&gt;)&lt;/td&gt;&#xA;          &lt;td&gt;Remove an HTML element&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;document.appendChild(&lt;em&gt;element&lt;/em&gt;)&lt;/td&gt;&#xA;          &lt;td&gt;Add an HTML element&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;document.replaceChild(&lt;em&gt;new, old&lt;/em&gt;)&lt;/td&gt;&#xA;          &lt;td&gt;Replace an HTML element&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;document.write(&lt;em&gt;text&lt;/em&gt;)&lt;/td&gt;&#xA;          &lt;td&gt;Write into the HTML output stream&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Method&lt;/th&gt;&#xA;          &lt;th&gt;Description&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;document.getElementById(&lt;em&gt;id&lt;/em&gt;).onclick = function(){&lt;em&gt;code&lt;/em&gt;}&lt;/td&gt;&#xA;          &lt;td&gt;Adding event handler code to an onclick event&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;The first HTML DOM Level 1 (1998), defined 11 HTML objects, object collections, and properties. These are still valid in HTML5.&lt;/p&gt;</description>
    </item>
    <item>
      <title>알고리즘 성능 평가</title>
      <link>http://localhost:1313/02.inbox/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8B%A4-with-python/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EC%84%B1%EB%8A%A5-%ED%8F%89%EA%B0%80/</link>
      <pubDate>Wed, 20 Dec 2023 07:12:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8B%A4-with-python/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EC%84%B1%EB%8A%A5-%ED%8F%89%EA%B0%80/</guid>
      <description>&lt;p&gt;시간 복잡도&#xA;공간 복잡도&lt;/p&gt;&#xA;&lt;h2 id=&#34;수행시간-요구-사항&#34;&gt;수행시간 요구 사항&lt;/h2&gt;&#xA;&lt;p&gt;N &amp;lt; 500 시간 복잡도 O(N^3)&#xA;N &amp;lt; 2000 시간 복잡도 O(N^2)&#xA;N &amp;lt; 100,000 시간 복잡도 O(NlogN)&#xA;N &amp;lt; 10,000,000 시간 복잡도 O(N)&#xA;예측 다음과 같은 이론을 따르는 것이 좋다&lt;/p&gt;</description>
    </item>
    <item>
      <title>익명 클래스(Anonymous Class)</title>
      <link>http://localhost:1313/temp/%EC%9D%B5%EB%AA%85-%ED%81%B4%EB%9E%98%EC%8A%A4anonymous-class/</link>
      <pubDate>Wed, 20 Dec 2023 07:12:00 +0900</pubDate>
      <guid>http://localhost:1313/temp/%EC%9D%B5%EB%AA%85-%ED%81%B4%EB%9E%98%EC%8A%A4anonymous-class/</guid>
      <description>&lt;p&gt;내부 클래스의 일종으로 이름이 없는 클래스&lt;/p&gt;&#xA;&lt;h2 id=&#34;java&#34;&gt;java&lt;/h2&gt;&#xA;&lt;p&gt;인라인으로 한방에 사용&#xA;새로 정의한 메소드 사용 불가&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 부모 클래스&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Animal&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; String &lt;span style=&#34;color:#a6e22e&#34;&gt;bark&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;동물이 웁니다&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Main&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(String&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; args) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Animal dog &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Animal() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// @Override 메소드&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; String &lt;span style=&#34;color:#a6e22e&#34;&gt;bark&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;개가 짖습니다&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// 새로 정의한 메소드&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; String &lt;span style=&#34;color:#a6e22e&#34;&gt;run&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;달리기 ㄱㄱ싱&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        };&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        dog.&lt;span style=&#34;color:#a6e22e&#34;&gt;bark&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        dog.&lt;span style=&#34;color:#a6e22e&#34;&gt;run&lt;/span&gt;(); &lt;span style=&#34;color:#75715e&#34;&gt;// ! Error - 외부에서 호출 불가능&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;1-클래스-필드로-이용&#34;&gt;&lt;strong&gt;1. 클래스 필드로 이용&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;특정 클래스 내부에서 여러 메소드에서 이용될때 고려해볼 만 하다&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Animal&lt;/span&gt; { ... }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Creature&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 필드에 익명자식 객체를 생성 하여 이용&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Animal dog &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Animal() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; String &lt;span style=&#34;color:#a6e22e&#34;&gt;bark&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;멍멍&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    };&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;method&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        dog.&lt;span style=&#34;color:#a6e22e&#34;&gt;bark&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;method2&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        dog.&lt;span style=&#34;color:#a6e22e&#34;&gt;bark&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;2-지역-변수로서-이용&#34;&gt;&lt;strong&gt;2. 지역 변수로서 이용&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;메소드에서 일회용으로 사용하고 버려질 클래스라면 적당하다&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Animal&lt;/span&gt; { ... }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Creature&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;// ...&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;method&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &#x9;&lt;span style=&#34;color:#75715e&#34;&gt;// 지역 변수같이 클래스를 선언하여 일회용으로 사용&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Animal dog &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Animal() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; String &lt;span style=&#34;color:#a6e22e&#34;&gt;bark&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;멍멍&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        };&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        dog.&lt;span style=&#34;color:#a6e22e&#34;&gt;bark&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;3-메소드-아규먼트로-이용&#34;&gt;&lt;strong&gt;3. 메소드 아규먼트로 이용&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;만일 메소드 매개변수로서 클래스 자료형이 이용된다고 할때 일회성으로만 사용한다면 아규먼트로 익명 객체를 넘겨주면 된다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Animal&lt;/span&gt; { ... }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Creature&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;// ...&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;method&lt;/span&gt;(Animal dog) { &lt;span style=&#34;color:#75715e&#34;&gt;// 익명 객체 매개변수로 받아 사용&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        dog.&lt;span style=&#34;color:#a6e22e&#34;&gt;bark&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Main&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(String&lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt; args) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Creature monster &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Creature();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// 메소드 아규먼트에 익명 클래스 자체를 입력값으로 할당&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        monster.&lt;span style=&#34;color:#a6e22e&#34;&gt;method&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Animal() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; String &lt;span style=&#34;color:#a6e22e&#34;&gt;bark&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;멍멍&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        });&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>파이썬 문법</title>
      <link>http://localhost:1313/02.inbox/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8B%A4-with-python/%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EB%AC%B8%EB%B2%95/</link>
      <pubDate>Wed, 20 Dec 2023 07:12:00 +0900</pubDate>
      <guid>http://localhost:1313/02.inbox/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8B%A4-with-python/%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EB%AC%B8%EB%B2%95/</guid>
      <description>&lt;p&gt;파이썬 자료형&lt;/p&gt;&#xA;&lt;p&gt;정수형 실수형 복소수형 문자열 리스트 튜플 사전 등등&lt;br&gt;&#xA;python 타입 확인&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;\__class\__&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;type(a)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;isinstance(a) &lt;span style=&#34;color:#75715e&#34;&gt;# 상속관계도 알려줌&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;리스트-&#34;&gt;리스트 []&lt;/h2&gt;&#xA;&lt;p&gt;append(value)&#xA;sort()&#xA;reverse()&#xA;insert(index,value)&#xA;count(value)&#xA;remove(value)&lt;/p&gt;&#xA;&lt;h2 id=&#34;튜플-&#34;&gt;튜플 ()&lt;/h2&gt;&#xA;&lt;p&gt;변경 불가&#xA;문자열&lt;/p&gt;&#xA;&lt;h2 id=&#34;dictionary&#34;&gt;dictionary&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;key &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a[key] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; value&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;집합&#34;&gt;집합&lt;/h2&gt;&#xA;&lt;h2 id=&#34;입출력&#34;&gt;입출력&lt;/h2&gt;&#xA;&lt;p&gt;map() 리스트의 모든 원소에 각각 특정한 함수를 적용할 때 사용합니다&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;list(map(int, input()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;split()))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;map( 함수 &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; 리스트 )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;바르게 입력받기&#xA;sys.stdin.readline() 줄바꿈 기호 입력되므로 rstrip() 메서드도 사용한다&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stin&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;readline()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;rstrip()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;f-string-36-부터&#34;&gt;f-string 3.6 부터&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;정답은 &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;answer&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;입니다&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;조건부-표현식&#34;&gt;조건부 표현식&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Success&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; score &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Fail&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;람다-표현식&#34;&gt;람다 표현식&lt;/h2&gt;&#xA;&lt;p&gt;함수를 한줄에 작성 가능&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/00.data-view-and-bases/%ED%95%99%EA%B5%90-database-%EA%B0%95%EC%9D%98/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/00.data-view-and-bases/%ED%95%99%EA%B5%90-database-%EA%B0%95%EC%9D%98/</guid>
      <description>&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-dataview&#34; data-lang=&#34;dataview&#34;&gt;table sequence&#xA;where source = &amp;#34;database(university)&amp;#34; and (&amp;#34;00&amp;#34; &amp;lt; sequence and &amp;#34;10&amp;#34; &amp;gt; sequence)&#xA;sort sequence&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-dataview&#34; data-lang=&#34;dataview&#34;&gt;table sequence&#xA;where source = &amp;#34;database(university)&amp;#34; and (&amp;#34;10&amp;#34; &amp;lt;= sequence and &amp;#34;20&amp;#34; &amp;gt; sequence)&#xA;sort sequence&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/02.inbox/onenote/html-and-css/css-%EB%B3%B5%ED%95%A9-%EC%84%A0%ED%83%9D%EC%9E%90-%ED%8C%A8%ED%84%B4-%EC%9A%B0%EC%84%A0-%EC%A0%81%EC%9A%A9-%EC%88%9C%EC%9C%84-%EA%B7%9C%EC%B9%99/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/02.inbox/onenote/html-and-css/css-%EB%B3%B5%ED%95%A9-%EC%84%A0%ED%83%9D%EC%9E%90-%ED%8C%A8%ED%84%B4-%EC%9A%B0%EC%84%A0-%EC%A0%81%EC%9A%A9-%EC%88%9C%EC%9C%84-%EA%B7%9C%EC%B9%99/</guid>
      <description>&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240428070496.png&#34; alt=&#34; (Image resource not found)&#34; &gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/02.inbox/onenote/html-and-css/%EB%A6%AC%EB%88%85%EC%8A%A4/rooting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/02.inbox/onenote/html-and-css/%EB%A6%AC%EB%88%85%EC%8A%A4/rooting/</guid>
      <description>&lt;p&gt;&lt;strong&gt;All comments before this are misleading.&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;==Mobile SoC boot process is more complicated than PC boot process. Android phones have 3 stages with different bootloaders. Basically, first two stages are inaccessible as they are fused by the developer in the production mode (which phones are released in). Third one is the one stored in androids boot partition. Roughly, the bootloader hash key should match the one hardcoded into the SoC. First stage bootloader checks the hash key and passes the control to the second stage bootloader. In case of mismatch, the phone goes to the first stage bootloader which boots the recovery mode (EDL, or emergency download mode). In case of match, the second stage bootloader is placed in EFS filesystem (inaccessible in production mode), which is similar to BIOS - it contains all the configuration to initialize all the hardware components. It&amp;rsquo;s called linuxloader bootloader (you can dig it out from xbl.elf of your phone&amp;rsquo;s firmware) which boots one of the EFS partitions, containing the images, you may see on your phone in /dev/block/by-name directory (path can differ). These images contain the main partitions that you flash with an android firmware - boot, recovery, system, vendor, modem, etc. There are also other partitions, but they are not accessible. For example, toolsfv partition in development phones are used to open boot menu, which allows accessing shell, disabling secure boot, booting from usb, etc. You may find the description in Google. Second stage bootloader also provides access to the hypervisor (virtualization, that allows running virtual machines using kvm). Third stage bootloader is simply an android bootloader, which boots your lovely android OS.==&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/02.inbox/onenote/html-and-css/%EB%A6%AC%EB%88%85%EC%8A%A4/vimrc-%ED%8C%8C%EC%9D%BC/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/02.inbox/onenote/html-and-css/%EB%A6%AC%EB%88%85%EC%8A%A4/vimrc-%ED%8C%8C%EC%9D%BC/</guid>
      <description>&lt;p&gt;&amp;quot; 번들 선언부&lt;/p&gt;&#xA;&lt;p&gt;set rtp+=~/.vim/bundle/Vundle.vim&lt;/p&gt;&#xA;&lt;p&gt;call vundle#begin()&lt;/p&gt;&#xA;&lt;p&gt;&amp;quot; 번들 플러그인 관리 파일&lt;/p&gt;&#xA;&lt;p&gt;Plugin &amp;lsquo;VundleVim/Vundle.vim&amp;rsquo;&lt;/p&gt;&#xA;&lt;p&gt;&amp;quot; Keep Plugin commands between vundle#begin/end.&lt;/p&gt;&#xA;&lt;p&gt;Plugin &amp;lsquo;vim-airline/vim-airline&amp;rsquo;&lt;/p&gt;&#xA;&lt;p&gt;Plugin &amp;lsquo;vim-airline/vim-airline-themes&amp;rsquo;&lt;/p&gt;&#xA;&lt;p&gt;Plugin &amp;lsquo;The-NERD-Tree&amp;rsquo;&lt;/p&gt;&#xA;&lt;p&gt;Plugin &amp;rsquo;terryma/vim-multiple-cursors&#39;&lt;/p&gt;&#xA;&lt;p&gt;Plugin &amp;rsquo;terryma/vim-smooth-scroll&#39;&lt;/p&gt;&#xA;&lt;p&gt;Plugin &amp;lsquo;Raimondi/delimitMate&amp;rsquo;&lt;/p&gt;&#xA;&lt;p&gt;Plugin &amp;lsquo;SirVer/ultisnips&amp;rsquo;&lt;/p&gt;&#xA;&lt;p&gt;Plugin &amp;lsquo;honza/vim-snippets&amp;rsquo;&lt;/p&gt;&#xA;&lt;p&gt;Plugin &amp;lsquo;Syntastic&amp;rsquo;&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;번들 선언 종료 지시자&lt;/p&gt;&#xA;&lt;p&gt;call vundle#end() &amp;quot; required&lt;/p&gt;&#xA;&lt;p&gt;filetype plugin indent on &amp;quot; required&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://myeongjae.kim/blog/2017/07/19/vimlinux-10-deoplete%EA%B3%BC-clang_complete-%EC%9E%90%EB%8F%99-%EC%99%84%EC%84%B1-%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;https://myeongjae.kim/blog/2017/07/19/vimlinux-10-deoplete%EA%B3%BC-clang_complete-%EC%9E%90%EB%8F%99-%EC%99%84%EC%84%B1-%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://kamang-it.tistory.com/entry/vivimvi%EC%97%90%EC%84%9C-%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8-%EA%B4%80%EB%A6%AC-vundle&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;https://kamang-it.tistory.com/entry/vivimvi%EC%97%90%EC%84%9C-%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8-%EA%B4%80%EB%A6%AC-vundle&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://mju-my.sharepoint.com/:u:/g/personal/sygys10293_mju_ac_kr/EYI8l9Nc0WxBqOvJqtgLMq4Bn3UIu6qYYfH6xxLH0oEKhw&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;.vimrc&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/02.inbox/onenote/%EC%B1%85/%EC%A7%84%ED%99%94-%EC%8B%AC%EB%A6%AC%ED%95%99/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/02.inbox/onenote/%EC%B1%85/%EC%A7%84%ED%99%94-%EC%8B%AC%EB%A6%AC%ED%95%99/</guid>
      <description>&lt;p&gt;이기적 유전자 - 리처드 도킨스&lt;/p&gt;&#xA;&lt;p&gt;에덴의 강 - 리처드 도킨스&lt;/p&gt;&#xA;&lt;p&gt;인류의 기원 - 리처드 리키&lt;/p&gt;&#xA;&lt;p&gt;놀라운 가설 - 프랜시스 크릭&lt;/p&gt;&#xA;&lt;p&gt;스스로 치유하는 뇌 - 노먼 도이지&lt;/p&gt;&#xA;&lt;p&gt;색스의 진화 - 제러드 다이아몬드&lt;/p&gt;&#xA;&lt;p&gt;진화란 무엇인가 - 에른스트 마이어&lt;/p&gt;&#xA;&lt;p&gt;진화의 미스터리 - 조지 윌리엄스&lt;/p&gt;&#xA;&lt;p&gt;사회생물학 - 에드워드 윌슨&lt;/p&gt;&#xA;&lt;p&gt;이타적 유전자 - 매트 리들리&lt;/p&gt;&#xA;&lt;p&gt;지리의 힘 - 팀 마샬&lt;/p&gt;&#xA;&lt;p&gt;근대세계체제 - 이매뉴얼 월러스틴&lt;/p&gt;&#xA;&lt;p&gt;질투의 민낯 - 지그리트 엥겔브레히트&lt;/p&gt;&#xA;&lt;p&gt;성 정치학 - 케이트 밀레트&lt;/p&gt;&#xA;&lt;p&gt;인간의 조건 - 한나 아렌트&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/02.inbox/onenote/%EC%B1%85/%EC%B2%A0%ED%95%99/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/02.inbox/onenote/%EC%B1%85/%EC%B2%A0%ED%95%99/</guid>
      <description>&lt;p&gt;실존주의&lt;/p&gt;&#xA;&lt;p&gt;시지프 신화 - 알베르 카뮈&lt;/p&gt;&#xA;&lt;p&gt;변신 시골의사 - 프란츠 카프카&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/06.university/mju_ecs-project/dockerpty-document/dockerpty-__init__/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/06.university/mju_ecs-project/dockerpty-document/dockerpty-__init__/</guid>
      <description>&lt;p&gt;아래는 제공된 코드를 기반으로 한 &lt;code&gt;dockerpty&lt;/code&gt; 모듈의 구조화된 문서입니다. 이 문서에는 개요, 사용 방법 및 함수에 대한 자세한 설명이 포함되어 있습니다.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;dockerpty-문서&#34;&gt;&lt;code&gt;dockerpty&lt;/code&gt; 문서&lt;/h1&gt;&#xA;&lt;p&gt;&lt;code&gt;dockerpty&lt;/code&gt;는 Docker 컨테이너와 의사 터미널(PTY) 기능을 사용하여 상호 작용할 수 있는 Python 라이브러리입니다. 이 라이브러리를 사용하면 현재 프로세스 내에서 컨테이너의 PTY를 제어할 수 있습니다.&lt;/p&gt;&#xA;&lt;p&gt;이 라이브러리는 특히 Docker 컨테이너 내에서 대화형 명령을 실행하거나 PTY 지원을 통해 컨테이너에 연결하는 데 유용합니다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;목차&#34;&gt;목차&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://localhost:1313/#%ea%b0%9c%ec%9a%94&#34; class=&#34;internal-file-link&#34;&gt;개요&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://localhost:1313/#%ec%84%a4%ec%b9%98&#34; class=&#34;internal-file-link&#34;&gt;설치&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://localhost:1313/#%ec%82%ac%ec%9a%a9-%eb%b0%a9%eb%b2%95&#34; class=&#34;internal-file-link&#34;&gt;사용 방법&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://localhost:1313/#pty%eb%a1%9c-%ec%bb%a8%ed%85%8c%ec%9d%b4%eb%84%88-%ec%8b%9c%ec%9e%91%ed%95%98%ea%b8%b0&#34; class=&#34;internal-file-link&#34;&gt;PTY로 컨테이너 시작하기&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://localhost:1313/#%ec%bb%a8%ed%85%8c%ec%9d%b4%eb%84%88%ec%97%90%ec%84%9c-%eb%aa%85%eb%a0%b9-%ec%8b%a4%ed%96%89%ed%95%98%ea%b8%b0&#34; class=&#34;internal-file-link&#34;&gt;컨테이너에서 명령 실행하기&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://localhost:1313/#exec-%ec%84%b8%ec%85%98-%ec%8b%9c%ec%9e%91%ed%95%98%ea%b8%b0&#34; class=&#34;internal-file-link&#34;&gt;Exec 세션 시작하기&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://localhost:1313/#api-%ec%b0%b8%ec%a1%b0&#34; class=&#34;internal-file-link&#34;&gt;API 참조&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://localhost:1313/#start&#34; class=&#34;internal-file-link&#34;&gt;&lt;code&gt;start&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://localhost:1313/#exec_command&#34; class=&#34;internal-file-link&#34;&gt;&lt;code&gt;exec_command&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://localhost:1313/#start_exec&#34; class=&#34;internal-file-link&#34;&gt;&lt;code&gt;start_exec&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;개요&#34;&gt;개요&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;dockerpty&lt;/code&gt; 라이브러리는 PTY를 통해 Docker 컨테이너와 상호 작용할 수 있는 고급 인터페이스를 제공합니다. 이 라이브러리는 대화형 세션을 시작하고, 컨테이너 내에서 명령을 실행하며, 입출력 스트림을 관리하는 과정을 단순화합니다. 이 라이브러리는 Docker API 위에 구축되었으며 PTY 작업을 처리하는 복잡성을 추상화합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/06.university/mju_ecs-project/dockerpty-document/dockerpty-io/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/06.university/mju_ecs-project/dockerpty-document/dockerpty-io/</guid>
      <description>&lt;h3 id=&#34;문서-dockerptyiopy-모듈-분석&#34;&gt;문서: &lt;code&gt;dockerpty/io.py&lt;/code&gt; 모듈 분석&lt;/h3&gt;&#xA;&lt;h4 id=&#34;1-개요&#34;&gt;1. 개요&lt;/h4&gt;&#xA;&lt;p&gt;이 문서는 &lt;code&gt;dockerpty/io.py&lt;/code&gt; 파일의 주요 기능과 클래스에 대해 설명합니다. 이 파일은 Docker에서 사용되는 PTY(가상 터미널)와 관련된 입출력 작업을 관리하는 데 사용됩니다. 주요 기능은 파일 디스크립터를 다루고, 데이터 스트림을 읽고 쓰며, 멀티플렉싱된 데이터를 처리하는 것입니다.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h4 id=&#34;2-주요-함수-및-클래스&#34;&gt;2. 주요 함수 및 클래스&lt;/h4&gt;&#xA;&lt;h5 id=&#34;21-set_blockingfd-blockingtrue&#34;&gt;2.1 &lt;code&gt;set_blocking(fd, blocking=True)&lt;/code&gt;&lt;/h5&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;기능&lt;/strong&gt;: 파일 디스크립터(&lt;code&gt;fd&lt;/code&gt;)의 블로킹 모드를 설정하거나 해제합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;매개변수&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;fd&lt;/code&gt;: 파일 디스크립터 객체.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;blocking&lt;/code&gt;: 블로킹 모드를 활성화할지 여부 (기본값: &lt;code&gt;True&lt;/code&gt;).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;반환값&lt;/strong&gt;: 원래의 블로킹 상태를 반환합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h5 id=&#34;22-selectread_streams-write_streams-timeout0&#34;&gt;2.2 &lt;code&gt;select(read_streams, write_streams, timeout=0)&lt;/code&gt;&lt;/h5&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;기능&lt;/strong&gt;: 주어진 읽기 및 쓰기 스트림 중에서 준비된 스트림을 선택합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;매개변수&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;read_streams&lt;/code&gt;: 읽기 가능한 스트림 목록.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;write_streams&lt;/code&gt;: 쓰기 가능한 스트림 목록.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;timeout&lt;/code&gt;: 타임아웃 시간 (초 단위).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;반환값&lt;/strong&gt;: 읽기 및 쓰기 가능한 스트림의 튜플을 반환합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;예외 처리&lt;/strong&gt;: POSIX 시그널로 인해 &lt;code&gt;select()&lt;/code&gt;가 중단될 경우 빈 리스트를 반환합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h4 id=&#34;3-클래스-상세-설명&#34;&gt;3. 클래스 상세 설명&lt;/h4&gt;&#xA;&lt;h5 id=&#34;31-stream&#34;&gt;3.1 &lt;code&gt;Stream&lt;/code&gt;&lt;/h5&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;기능&lt;/strong&gt;: 파일 디스크립터를 추상화한 클래스입니다. 소켓과 파일 모두 일관된 방식으로 읽고 쓸 수 있도록 지원합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;주요 메서드&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;fileno()&lt;/code&gt;: 파일 디스크립터 번호를 반환합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;set_blocking(value)&lt;/code&gt;: 블로킹 모드를 설정합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;read(n=4096)&lt;/code&gt;: 최대 &lt;code&gt;n&lt;/code&gt; 바이트의 데이터를 읽습니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;write(data)&lt;/code&gt;: 데이터를 버퍼에 저장하고 비동기적으로 씁니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;do_write()&lt;/code&gt;: 버퍼에 있는 데이터를 가능한 만큼 씁니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;needs_write()&lt;/code&gt;: 쓰기를 대기 중인 데이터가 있는지 확인합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;close()&lt;/code&gt;: 스트림을 닫습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;복구 가능한 I/O 오류를 처리합니다 (&lt;code&gt;ERRNO_RECOVERABLE&lt;/code&gt; 참조).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h5 id=&#34;32-demuxer&#34;&gt;3.2 &lt;code&gt;Demuxer&lt;/code&gt;&lt;/h5&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;기능&lt;/strong&gt;: Docker에서 사용되는 멀티플렉싱된 데이터를 디멀티플렉싱하여 읽습니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;주요 메서드&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;read(n=4096)&lt;/code&gt;: 멀티플렉싱된 데이터를 디코딩하여 읽습니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;_next_packet_size(n)&lt;/code&gt;: 다음 패킷의 크기를 계산합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Docker는 PTY가 없는 경우 8바이트 헤더를 사용하여 데이터를 멀티플렉싱합니다.&lt;/li&gt;&#xA;&lt;li&gt;첫 4바이트는 스트림 유형(예: stdout, stderr)을 나타내고, 다음 4바이트는 데이터 길이를 나타냅니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h5 id=&#34;33-pump&#34;&gt;3.3 &lt;code&gt;Pump&lt;/code&gt;&lt;/h5&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;기능&lt;/strong&gt;: 두 개의 스트림 간 데이터를 전달하는 &amp;ldquo;펌프&amp;rdquo; 역할을 합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;주요 메서드&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;flush(n=4096)&lt;/code&gt;: 읽기 스트림에서 데이터를 읽고 쓰기 스트림으로 전달합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;is_done()&lt;/code&gt;: 펌프 작업이 완료되었는지 확인합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;읽기 스트림에서 EOF를 받으면 작업이 완료된 것으로 간주합니다.&lt;/li&gt;&#xA;&lt;li&gt;쓰기 스트림에 대기 중인 데이터가 없어야 작업이 완료됩니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h4 id=&#34;4-사용-예시&#34;&gt;4. 사용 예시&lt;/h4&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Stream 객체 생성&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fd &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;open(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/path/to/file&amp;#34;&lt;/span&gt;, os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;O_RDWR)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;stream &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Stream(fd)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 데이터 읽기&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; stream&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read(&lt;span style=&#34;color:#ae81ff&#34;&gt;1024&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 데이터 쓰기&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;stream&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(&lt;span style=&#34;color:#e6db74&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello, World!&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Demuxer 객체 생성&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;demuxer &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Demuxer(stream)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;decoded_data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; demuxer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Pump 객체 생성&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;from_stream &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Stream(fd1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;to_stream &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Stream(fd2)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pump &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Pump(from_stream, to_stream)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 데이터 펌핑&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pump&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;flush()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;h4 id=&#34;5-라이선스&#34;&gt;5. 라이선스&lt;/h4&gt;&#xA;&lt;p&gt;이 코드는 Apache License 2.0 하에 배포됩니다. 자세한 내용은 &lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;Apache License&lt;/a&gt;를 참조하십시오.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/06.university/mju_ecs-project/dockerpty-document/dockerpty-tty/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/06.university/mju_ecs-project/dockerpty-document/dockerpty-tty/</guid>
      <description>&lt;h1 id=&#34;dockerpty-ttypy-모듈-문서&#34;&gt;&lt;code&gt;dockerpty: tty.py&lt;/code&gt; 모듈 문서&lt;/h1&gt;&#xA;&lt;p&gt;&lt;code&gt;dockerpty: tty.py&lt;/code&gt; 모듈은 터미널(TTY) 장치와 상호 작용하기 위한 유틸리티를 제공하며, 특히 가상 터미널(PTY)과 관련된 작업에 유용합니다. 이 모듈은 TTY 크기를 확인하거나 터미널을 일시적으로 raw 모드로 전환하는 기능을 포함하고 있습니다. 이러한 기능은 Docker 컨테이너 또는 PTY와 TTY 간 데이터를 스트리밍해야 하는 환경에서 유용하게 사용됩니다.&lt;/p&gt;&#xA;&lt;p&gt;아래는 모듈의 구성 요소와 사용 방법에 대한 자세한 설명입니다.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;함수&#34;&gt;함수&lt;/h2&gt;&#xA;&lt;h3 id=&#34;sizefd&#34;&gt;&lt;code&gt;size(fd)&lt;/code&gt;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;설명&#34;&gt;설명&lt;/h4&gt;&#xA;&lt;p&gt;제공된 파일 디스크립터와 연결된 TTY의 크기를 &lt;code&gt;(행, 열)&lt;/code&gt; 형태의 튜플로 반환합니다. 파일 디스크립터는 일반적으로 TTY의 표준 출력 스트림(&lt;code&gt;stdout&lt;/code&gt;)을 나타내야 합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/06.university/mju_ecs-project/%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88-%ED%8F%AC%ED%8A%B8-%ED%95%A0%EB%8B%B9/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/06.university/mju_ecs-project/%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88-%ED%8F%AC%ED%8A%B8-%ED%95%A0%EB%8B%B9/</guid>
      <description>&lt;p&gt;현재 코드는 순차적으로 포트를 검사하는 방식을 사용하고 있기 때문에, 특히 &lt;code&gt;BASE_PORT&lt;/code&gt;에서 시작하여 &lt;code&gt;MAX_PORT&lt;/code&gt;까지의 범위가 넓을 경우 검색 시간이 오래 걸릴 수 있습니다. 이를 개선하기 위해 다음과 같은 방법들을 고려할 수 있습니다.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;1-랜덤-포트-할당&#34;&gt;&lt;strong&gt;1. 랜덤 포트 할당&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;순차적으로 검사하는 대신, 주어진 범위 내에서 랜덤하게 포트를 선택하여 검사하면 평균적으로 더 빠르게 사용 가능한 포트를 찾을 수 있습니다.&lt;/p&gt;&#xA;&lt;h3 id=&#34;수정된-코드&#34;&gt;수정된 코드&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; java.util.Random;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;/**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt; * 주어진 범위에서 사용 가능한 포트를 랜덤하게 찾습니다.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt; *&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt; * @param startPort 시작 포트&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt; * @param endPort   종료 포트&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt; * @return 사용 가능한 포트 번호, 없으면 -1 반환&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt; */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;findAvailablePort&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; startPort, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; endPort) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Random random &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Random();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; attempts &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; maxAttempts &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (endPort &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; startPort &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; 1); &lt;span style=&#34;color:#75715e&#34;&gt;// 최대 시도 횟수&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; (attempts &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; maxAttempts) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; port &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; startPort &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; random.&lt;span style=&#34;color:#a6e22e&#34;&gt;nextInt&lt;/span&gt;(endPort &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; startPort &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; 1);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (isPortAvailable(port)) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; port;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        attempts&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;1; &lt;span style=&#34;color:#75715e&#34;&gt;// 사용 가능한 포트가 없는 경우&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;장점&#34;&gt;장점&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;순차 검색보다 평균적으로 더 빠르게 사용 가능한 포트를 찾을 가능성이 높습니다.&lt;/li&gt;&#xA;&lt;li&gt;랜덤성을 통해 특정 포트에 대한 경쟁 상태를 줄일 수 있습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;단점&#34;&gt;단점&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;매우 드물지만, 모든 포트가 사용 중인 경우 최악의 경우에도 많은 시도가 필요할 수 있습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;2-할당된-포트-캐싱&#34;&gt;&lt;strong&gt;2. 할당된 포트 캐싱&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;이미 할당된 포트를 관리하는 데이터 구조(예: &lt;code&gt;Set&amp;lt;Integer&amp;gt;&lt;/code&gt;)를 사용하여, 중복 검사를 피하고 빠르게 사용 가능한 포트를 찾을 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/06.university/network/60222100-%EC%8B%A0%EB%85%84%EA%B8%B0-%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EA%B3%BC%EC%A0%9C-1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/06.university/network/60222100-%EC%8B%A0%EB%85%84%EA%B8%B0-%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EA%B3%BC%EC%A0%9C-1/</guid>
      <description>&lt;h3 id=&#34;1-smtp-simple-mail-transfer-protocol&#34;&gt;&lt;strong&gt;1. SMTP (Simple Mail Transfer Protocol)&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250318164056.png&#34; alt=&#34; (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;프로토콜&lt;/th&gt;&#xA;          &lt;th&gt;목적&lt;/th&gt;&#xA;          &lt;th&gt;주요 포트&lt;/th&gt;&#xA;          &lt;th&gt;특징&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;SMTP&lt;/td&gt;&#xA;          &lt;td&gt;이메일 전송&lt;/td&gt;&#xA;          &lt;td&gt;25, 465, 587&lt;/td&gt;&#xA;          &lt;td&gt;메일 서버 간 또는 클라이언트-서버 간 메일 전달&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;목적&lt;/strong&gt;: 이메일 전송을 위한 프로토콜입니다. 메일 클라이언트에서 메일 서버로, 또는 메일 서버 간에 이메일을 전달하는 데 사용됩니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;TCP 기반의 7계층(응용 계층) 프로토콜입니다.&lt;/li&gt;&#xA;&lt;li&gt;메일 전송 과정에서 신뢰성 있는 연결(TCP)을 제공합니다.&lt;/li&gt;&#xA;&lt;li&gt;메일 전송자 → 메일 서버 → 수신자 메일 서버로의 경로를 책임집니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;포트별 차이&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;25번 포트&lt;/strong&gt;: 기본 SMTP 포트로, 서버 간 메일 전송에 주로 사용됩니다. 하지만 스팸 메일 문제로 인해 일부 ISP에서는 차단할 수 있습니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;465번 포트&lt;/strong&gt;: SSL/TLS 암호화를 사용한 SMTP 전송을 위해 사용되지만, 비공식적으로 사용되는 포트입니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;587번 포트&lt;/strong&gt;: 현재 표준으로 권장되는 포트로, 메일 클라이언트가 메일 서버로 이메일을 보내는 데 사용됩니다. STARTTLS 명령을 통해 암호화된 통신이 가능합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;사용 사례&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Gmail, Outlook 등 메일 서비스 제공자가 사용.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;2-ssh-secure-shell&#34;&gt;&lt;strong&gt;2. SSH (Secure Shell)&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;프로토콜&lt;/th&gt;&#xA;          &lt;th&gt;목적&lt;/th&gt;&#xA;          &lt;th&gt;주요 포트&lt;/th&gt;&#xA;          &lt;th&gt;특징&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;SSH&lt;/td&gt;&#xA;          &lt;td&gt;원격 서버 관리&lt;/td&gt;&#xA;          &lt;td&gt;22&lt;/td&gt;&#xA;          &lt;td&gt;암호화된 연결로 보안성 제공&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;목적&lt;/strong&gt;: 원격 서버에 안전하게 접속하고 관리하기 위한 프로토콜입니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;TCP 기반으로 데이터를 암호화하여 보안성을 제공합니다.&lt;/li&gt;&#xA;&lt;li&gt;원격 서버에서 명령어 실행, 터널링 등의 작업을 지원합니다.&lt;/li&gt;&#xA;&lt;li&gt;기본 포트는 &lt;strong&gt;22번&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;보안 강화&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;패스워드 기반 인증 외에도 공개키/비밀키 기반 인증을 지원하여 보안성을 높입니다.&lt;/li&gt;&#xA;&lt;li&gt;중간자 공격(Man-in-the-Middle Attack) 방지 기능 포함.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;사용 사례&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;리눅스 서버 관리.&lt;/li&gt;&#xA;&lt;li&gt;AWS, Google Cloud 등의 클라우드 서버에 접근.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;3-websocket&#34;&gt;&lt;strong&gt;3. WebSocket&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;프로토콜&lt;/th&gt;&#xA;          &lt;th&gt;목적&lt;/th&gt;&#xA;          &lt;th&gt;주요 포트&lt;/th&gt;&#xA;          &lt;th&gt;특징&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;WebSocket&lt;/td&gt;&#xA;          &lt;td&gt;실시간 양방향 통신&lt;/td&gt;&#xA;          &lt;td&gt;80, 443&lt;/td&gt;&#xA;          &lt;td&gt;HTTP 기반 초기 연결, 이후 지속적 연결 유지&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;목적&lt;/strong&gt;: 실시간 양방향(full-duplex) 통신을 지원하는 프로토콜입니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;초기 연결은 HTTP/HTTPS 프로토콜을 사용하지만, 이후 WebSocket 핸드셰이크 과정을 통해 지속적인 연결(Persistent Connection)을 유지합니다.&lt;/li&gt;&#xA;&lt;li&gt;HTTP와 달리 요청-응답 방식이 아닌, 서버와 클라이언트 간 실시간 데이터 교환이 가능합니다.&lt;/li&gt;&#xA;&lt;li&gt;기본적으로 **80번(HTTP)**과 &lt;strong&gt;443번(HTTPS)&lt;/strong&gt; 포트를 사용하므로 방화벽 우회가 용이합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;사용 사례&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;채팅 애플리케이션(실시간 메시지 전송).&lt;/li&gt;&#xA;&lt;li&gt;실시간 주식 거래 플랫폼.&lt;/li&gt;&#xA;&lt;li&gt;온라인 게임에서의 실시간 데이터 동기화.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;4-xrdp&#34;&gt;&lt;strong&gt;4. XRDP&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;프로토콜&lt;/th&gt;&#xA;          &lt;th&gt;목적&lt;/th&gt;&#xA;          &lt;th&gt;주요 포트&lt;/th&gt;&#xA;          &lt;th&gt;특징&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;XRDP&lt;/td&gt;&#xA;          &lt;td&gt;원격지 GUI 제어&lt;/td&gt;&#xA;          &lt;td&gt;3389&lt;/td&gt;&#xA;          &lt;td&gt;RDP 기반으로 리눅스/Windows 모두 지원&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;목적&lt;/strong&gt;: 원격지에서 GUI 환경을 통해 서버를 제어하기 위한 프로토콜입니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;RDP(Remote Desktop Protocol)를 기반으로 하며, 리눅스 환경에서도 사용 가능하도록 구현되었습니다.&lt;/li&gt;&#xA;&lt;li&gt;기본 포트는 &lt;strong&gt;3389번&lt;/strong&gt;이며, Windows의 RDP와 호환됩니다.&lt;/li&gt;&#xA;&lt;li&gt;원격지에서 마우스, 키보드 입력을 전달하고, 서버의 화면을 실시간으로 전송받습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;사용 사례&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;리눅스 서버에 GUI 도구를 사용하여 접근.&lt;/li&gt;&#xA;&lt;li&gt;가상 데스크톱 환경에서 원격 작업 수행.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;5-ftp-file-transfer-protocol&#34;&gt;&lt;strong&gt;5. FTP (File Transfer Protocol)&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;프로토콜&lt;/th&gt;&#xA;          &lt;th&gt;목적&lt;/th&gt;&#xA;          &lt;th&gt;주요 포트&lt;/th&gt;&#xA;          &lt;th&gt;특징&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;FTP&lt;/td&gt;&#xA;          &lt;td&gt;파일 전송&lt;/td&gt;&#xA;          &lt;td&gt;20, 21&lt;/td&gt;&#xA;          &lt;td&gt;데이터 전송 신뢰성 보장, 기본 보안 취약&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;목적&lt;/strong&gt;: 파일 전송을 위한 프로토콜입니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;TCP 기반으로 데이터 전송의 신뢰성을 보장합니다.&lt;/li&gt;&#xA;&lt;li&gt;두 개의 포트를 사용합니다:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;21번 포트&lt;/strong&gt;: 제어 연결(Control Connection) - 명령어 및 인증 처리.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;20번 포트&lt;/strong&gt;: 데이터 연결(Data Connection) - 실제 파일 전송.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;기본적으로 암호화되지 않으므로 보안성이 취약합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;보안 강화&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;FTPS(File Transfer Protocol Secure): SSL/TLS를 사용하여 암호화.&lt;/li&gt;&#xA;&lt;li&gt;SFTP(Secure File Transfer Protocol): SSH를 통해 암호화된 파일 전송.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;사용 사례&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;웹사이트 운영 시 파일 업로드/다운로드.&lt;/li&gt;&#xA;&lt;li&gt;대용량 파일 공유.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/06.university/untitled/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/06.university/untitled/</guid>
      <description></description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/06.university/%EA%B3%A0%EC%A0%84%EC%9C%BC%EB%A1%9C-%EC%9D%BD%EB%8A%94-%EC%9D%B8%EB%AC%B8%ED%95%99-%EC%B1%85%EA%B8%B0%EB%A7%90/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/06.university/%EA%B3%A0%EC%A0%84%EC%9C%BC%EB%A1%9C-%EC%9D%BD%EB%8A%94-%EC%9D%B8%EB%AC%B8%ED%95%99-%EC%B1%85%EA%B8%B0%EB%A7%90/</guid>
      <description>&lt;p&gt;![Pasted image 20250113210870](../08.media/Pasted%2&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250113210712.png&#34; alt=&#34; (Image resource not found)&#34; &gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250113210895.png&#34; alt=&#34;Pasted image 20250113210895 (Image resource not found)&#34; &gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250113211860.png&#34; alt=&#34;Pasted image 20250113211860 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;시가 보통 1인칭의 고백 형식이라면, &amp;lt;나의 침실로&amp;gt;는 2인칭의 부름의 시 형식이다.&lt;/p&gt;&#xA;&lt;p&gt;네 개의 기둥으로 이루어진 시&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;마돈나&lt;/li&gt;&#xA;&lt;li&gt;밤&lt;/li&gt;&#xA;&lt;li&gt;침실&lt;/li&gt;&#xA;&lt;li&gt;오라&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250114034102.png&#34; alt=&#34;Pasted image 20250114034102 (Image resource not found)&#34; &gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250114034132.png&#34; alt=&#34;Pasted image 20250114034132 (Image resource not found)&#34; &gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250114034139.png&#34; alt=&#34;Pasted image 20250114034139 (Image resource not found)&#34; &gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250114034114.png&#34; alt=&#34;Pasted image 20250114034114 (Image resource not found)&#34; &gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250114035150.png&#34; alt=&#34;Pasted image 20250114035150 (Image resource not found)&#34; &gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250114035107.png&#34; alt=&#34;Pasted image 20250114035107 (Image resource not found)&#34; &gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250114035533.png&#34; alt=&#34;Pasted image 20250114035533 (Image resource not found)&#34; &gt;&#xA;이 시 속에는 두 개의 서로 다른 시선이 존재한다.&#xA;내가 인생의 그 사람을 만난 것은 우연인 가, 운명인가? 이 시의 ‘저녁’은 그 비밀을 담고 있다&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250114035865.png&#34; alt=&#34;Pasted image 20250114035865 (Image resource not found)&#34; &gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250114035882.png&#34; alt=&#34;Pasted image 20250114035882 (Image resource not found)&#34; &gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250114035876.png&#34; alt=&#34;Pasted image 20250114035876 (Image resource not found)&#34; &gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250114035889.png&#34; alt=&#34;Pasted image 20250114035889 (Image resource not found)&#34; &gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250114035802.png&#34; alt=&#34;Pasted image 20250114035802 (Image resource not found)&#34; &gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/06.university/%EA%B3%A0%EC%A0%84%EC%9C%BC%EB%A1%9C-%EC%9D%BD%EB%8A%94-%EC%9D%B8%EB%AC%B8%ED%95%99-%EC%B1%85%EC%A4%91%EA%B0%84/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/06.university/%EA%B3%A0%EC%A0%84%EC%9C%BC%EB%A1%9C-%EC%9D%BD%EB%8A%94-%EC%9D%B8%EB%AC%B8%ED%95%99-%EC%B1%85%EC%A4%91%EA%B0%84/</guid>
      <description>&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250102152137.png&#34; alt=&#34;Pasted image 20250102152137 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250102152143.png&#34; alt=&#34;Pasted image 20250102152143 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250102152145.png&#34; alt=&#34;Pasted image 20250102152145 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250102152151.png&#34; alt=&#34;Pasted image 20250102152151 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250102152158.png&#34; alt=&#34;Pasted image 20250102152158 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250102152167.png&#34; alt=&#34;Pasted image 20250102152167 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;엄마야 누나야 젠더 공간&lt;/li&gt;&#xA;&lt;li&gt;호격 야 부재하는 공간&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250102152102.png&#34; alt=&#34; (Image resource not found)&#34; &gt;, 연령, 부름&lt;/li&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250102152183.png&#34; alt=&#34;Pasted image 20250102152183 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250102152193.png&#34; alt=&#34;Pasted image 20250102152193 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250102152102.png&#34; alt=&#34;Pasted image 20250102152102 (Image resource not found)&#34; &gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/06.university/%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4-%EA%B3%B5%ED%95%99-%EC%8B%9C%ED%97%98%EB%AC%B8%EC%A0%9C/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/06.university/%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4-%EA%B3%B5%ED%95%99-%EC%8B%9C%ED%97%98%EB%AC%B8%EC%A0%9C/</guid>
      <description>&lt;p&gt;총 10문제가 나온다&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;소프트웨어 공학 구성요소 4가지 (상세내용x)&lt;/li&gt;&#xA;&lt;li&gt;폭포수 모델의 장점과 단점&lt;/li&gt;&#xA;&lt;li&gt;에자일 모델-스크럼의 장점과 단점&lt;/li&gt;&#xA;&lt;li&gt;UML 유스케이스 다이어그램 - 구성요소 엑터, 유스케이스, 관계 3가지 (설명x)&lt;/li&gt;&#xA;&lt;li&gt;UML 클래스 다이어그램 - 클래스 다이어그램의 관계 연관관계 합성연관관계 등등 관계들&lt;/li&gt;&#xA;&lt;li&gt;프로젝트 계획단계 개발비 산정에서 간이 기능점수 산정방법&lt;/li&gt;&#xA;&lt;li&gt;객체지향 단계에서오버로딩과 오버라이딩에 대한 차이점 설명&lt;/li&gt;&#xA;&lt;li&gt;응집도과 결합도에 대해 차이점과 설명&lt;/li&gt;&#xA;&lt;li&gt;ms 아키텍처의 장단점&lt;/li&gt;&#xA;&lt;li&gt;테스트 단계에서 확인테스트와 검증 테스트&lt;/li&gt;&#xA;&lt;li&gt;동적 테스트를 각각의 테스트 영세기반 ,화이트, 블랙박스 등등 각각에 대해 알기&lt;/li&gt;&#xA;&lt;li&gt;cmi 5개 단계 설명 42p??&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;소프트웨어-공학-구성요소-4가지&#34;&gt;소프트웨어 공학 구성요소 4가지&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;공학적 접근&lt;/li&gt;&#xA;&lt;li&gt;표준화&lt;/li&gt;&#xA;&lt;li&gt;자동화 도구 활용&lt;/li&gt;&#xA;&lt;li&gt;품질 보증 체제&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;폭포수-모델의-장점과-단점&#34;&gt;폭포수 모델의 장점과 단점&lt;/h2&gt;&#xA;&lt;p&gt;장점&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/06.university/%EC%8B%9C%EC%8A%A4%ED%85%9C-%EB%B6%84%EC%84%9D-%EC%84%A4%EA%B3%84-%EC%8B%9C%ED%97%98%EB%AC%B8%EC%A0%9C/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/06.university/%EC%8B%9C%EC%8A%A4%ED%85%9C-%EB%B6%84%EC%84%9D-%EC%84%A4%EA%B3%84-%EC%8B%9C%ED%97%98%EB%AC%B8%EC%A0%9C/</guid>
      <description>&lt;p&gt;총 10문제가 나온다&#xA;모두 주관식이다 암기과목&#xA;설명하는 문제 5개(주절주절) ,단답형 5개(쓰시오)&lt;/p&gt;&#xA;&lt;p&gt;2장??&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;소프트웨어 라이프사이클 5단계 설명이 가능하야 한다&lt;/li&gt;&#xA;&lt;li&gt;비기능 항목 5가지 특성 pdf 23p??&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;3-6장&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;dfd 자료 흐름도 4가지 구성요소를 설명하여라&lt;/li&gt;&#xA;&lt;li&gt;자료사전을 작성법 적는 문제 승차권 도서시스템 수강신청 3가지중 하나&lt;/li&gt;&#xA;&lt;li&gt;소단위 명세서 안나옴&lt;/li&gt;&#xA;&lt;li&gt;의사결정표를 사용하는 경우는 무었인가&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;소프트웨어 설계&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;소프트웨어 설계는 무었무었이 있어야 하는가 5가지&lt;/li&gt;&#xA;&lt;li&gt;코드의 기본기능, 3대기능, 부가기능&lt;/li&gt;&#xA;&lt;li&gt;입출력 단계는 안냄&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;9장??&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;파일의 레코드 형식 4가지&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;프로세스를 모듈화를 하는 이유가 무었인가&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/06.university/%EC%98%81%EC%96%B42-%EB%A9%94%EB%AA%A8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/06.university/%EC%98%81%EC%96%B42-%EB%A9%94%EB%AA%A8/</guid>
      <description>&lt;h2 id=&#34;1223&#34;&gt;12/23&lt;/h2&gt;&#xA;&lt;p&gt;캠프릿지 영영사전&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20241223130011.png&#34; alt=&#34; (Image resource not found)&#34; &gt;%20image%2020241223130011.png)&lt;/p&gt;&#xA;&lt;p&gt;aspire 은 완전자동사&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;완전 자동사는 주어 동사 만으로도 완전한 문장을 이룬다&#xA;불완전 동사 예시 =&amp;gt; he went pale&#xA;수식이 붙는다면 부사(상당어구)만 가능하다&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;it 은 완전히 동일한것을 지칭&#xA;one 은 비슷한 것을 지칭&lt;/p&gt;&#xA;&lt;h2 id=&#34;the-visual-village&#34;&gt;The visual village&lt;/h2&gt;&#xA;&lt;h3 id=&#34;a-문단&#34;&gt;a 문단&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;스마트폰 시대 이전, 사진작가가 되고자 하는 사람들은 고급 카메라를 사용해야 했고 사진 기술을 배워야 했습니다. 모든 사람이 카메라를 가진 것은 아니었고, 훌륭한 사진을 찍기 위해서는 기술과 안목이 필요했습니다. 하지만 오늘날, 스마트폰에 있는 다양한 카메라 앱 덕분에 우리는 모두 아마추어 사진작가가 되었습니다. 그리고 꽤 잘 찍기도 합니다. 현재 스마트폰 이미지의 품질은 거의 디지털 카메라와 동일해졌습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/06.university/%EC%B2%A0%ED%95%99%EA%B3%BC-%EC%9D%B8%EA%B0%84/01.%EC%B2%A0%ED%95%99%EC%9D%98-%EA%B0%9C%EB%85%90/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/06.university/%EC%B2%A0%ED%95%99%EA%B3%BC-%EC%9D%B8%EA%B0%84/01.%EC%B2%A0%ED%95%99%EC%9D%98-%EA%B0%9C%EB%85%90/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;철학이란 무엇인가&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;철학은 다른 학문들과는 달리 그것의 대상이 무엇이며 무엇을 하는 학문인지가 우선 불분명하다. 원론적인 정의로서 우리는 “어떤 특수한 분야의 지식, 경험, 활동에 적용되는(될 수 있는) 일반원리들에 관한 탐구(Oxford 영어 사전)”라는 규정을 발견할 수 있겠는데, 사실 다른 거의 모든 학문들도 자기 분야의 원리들을 연구하는 것에 다름 아니기에, 과연 철학은 어떻게 다른 학문들과 구분될 수 있겠는가 하는 의구심이 든다.&lt;/p&gt;&#xA;&lt;p&gt;이처럼 철학의 정체성이 쉽게 파악되지 않는 이유는 다음의 두 가지에서 찾아볼 수 있겠다.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/06.university/%EC%B2%A0%ED%95%99%EA%B3%BC-%EC%9D%B8%EA%B0%84/02.%EC%B2%A0%ED%95%99%EC%9D%98-%EC%9C%A0%EC%9A%A9%EC%84%B1%EA%B3%BC-%EA%B0%80%EC%B9%98/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/06.university/%EC%B2%A0%ED%95%99%EA%B3%BC-%EC%9D%B8%EA%B0%84/02.%EC%B2%A0%ED%95%99%EC%9D%98-%EC%9C%A0%EC%9A%A9%EC%84%B1%EA%B3%BC-%EA%B0%80%EC%B9%98/</guid>
      <description>&lt;p&gt;&lt;strong&gt;철학의 유용성과 가치&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;철학의 필요성에 대한 의문&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;우리는 철학과 관련해서 일반적으로 ‘철학은 도대체 어디에 쓸모가 있는가?’, ‘왜 우리는 철학을 하는가?’ 와 같은 질문들을 떠올린다. 철학은 그것의 근본적인 ‘목적’과 ‘가치’가 물어지는 유일한 학문이다. 다른 학문들(구체적이고 실질적인 학문들 뿐 아니라 추상적이고 이론적인 학문들조차도)은 그 쓰임새가 직관적이고도 쉽게 드러나지만 철학의 필요성은 쉽게 파악되지 않기 때문이다. 오히려 ‘쓸모없는 학문’이라는 통속적인 생각이 잘못된 선입견이 아닌 것처럼 여겨지기도 하고, 또한 실제로도 철학이 인간의 삶에 구체적인 도움을 주는 것 같지는 않다.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/06.university/%EC%B2%A0%ED%95%99%EA%B3%BC-%EC%9D%B8%EA%B0%84/03.%ED%94%8C%EB%9D%BC%ED%86%A4%EA%B3%BC-%EC%A2%8B%EC%9D%80-%EC%82%B6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/06.university/%EC%B2%A0%ED%95%99%EA%B3%BC-%EC%9D%B8%EA%B0%84/03.%ED%94%8C%EB%9D%BC%ED%86%A4%EA%B3%BC-%EC%A2%8B%EC%9D%80-%EC%82%B6/</guid>
      <description>&lt;p&gt;&lt;strong&gt;&amp;lt; 플라톤(BC 427-347)과 좋은 삶 &amp;gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;1. 플라톤의 대화편에서 소크라테스는 정의, 용기 혹은 경건과 같은 주제들을 다루면서 우리가 이와 같은 것들이 무엇인지 알아야 그러한 덕목을 갖출 수 있다고 얘기한다. 그래서 이들의 의미를 정확히 밝히고자 하는데 이 과정에서 이데아라는 것을 가정하게 된다.&lt;/p&gt;&#xA;&lt;p&gt;먼저 그는 각 대화편들에서 문제가 되는 주제의 다양한 예들을 열거한다. 그리고는 그 모든 예들에서 문제의 덕, 경건, 정의, 용기 등이 모두 발견되는 것을 지적한다. 하지만 그 구체적인 예들이 곧 그 덕목 자체는 아니라는 것도 언급한다. 따라서 그런 구체적인 경우들 외에 덕 그 자체가 따로 있지는 않을까하는 발상을 갖게 된다. 대화편 『에우튀프론』의 경우 토론되는 주제는 경건이라는 덕목인데, 경건에 대한 여러 사례들을 에우튀프론으로부터 들은 소크라테스는 다음과 같이 얘기한다.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/06.university/%EC%B2%A0%ED%95%99%EA%B3%BC-%EC%9D%B8%EA%B0%84/04.%EC%9D%B8%EA%B0%84%EA%B3%BC-%EB%A1%9C%EA%B3%A0%EC%8A%A4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/06.university/%EC%B2%A0%ED%95%99%EA%B3%BC-%EC%9D%B8%EA%B0%84/04.%EC%9D%B8%EA%B0%84%EA%B3%BC-%EB%A1%9C%EA%B3%A0%EC%8A%A4/</guid>
      <description>&lt;p&gt;&lt;strong&gt;&amp;lt; 아리스토텔레스(BC 384 – 322) &amp;gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;1) 지식의 발전 단계&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;인간이 자연을 있는 그대로 보는 데에 그치지 않고 그것의 근본 원리를 묻게 된 이유를 아리스토텔레스는 다음과 같이 설명하고 있다.&lt;/p&gt;&#xA;&lt;p&gt;원시 상태에 있는 무지한 인간은 모든 자연현상을 놀랍고 경이로운 눈으로 바라보았을 것이다. 그렇기에 이를 이해하고 설명하는 데에 있어서 어려워하고 당혹스러워 했을 것이다. 하지만 동시에 그것이 왜 그런지 알고 싶어 하는 호기심도 생겼을 것이다. 그래서 그것의 원인과 원리를 알고자 하는 마음 역시 생기게 되었을 것이고 이것이 바로 본격적인 앎의 시작이라고 아리스토텔레스는 추측하고 있다. 그리고 이 앎이 심화되고 그 단계가 높아지면 우리 인간이 처음에 가졌던 경이로운 감정과 호기심은 점점 소멸될 것이다.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/06.university/%EC%B2%A0%ED%95%99%EA%B3%BC-%EC%9D%B8%EA%B0%84/06.%EB%85%BC%EB%A6%AC%EC%99%80-%EC%82%AC%EA%B3%A0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/06.university/%EC%B2%A0%ED%95%99%EA%B3%BC-%EC%9D%B8%EA%B0%84/06.%EB%85%BC%EB%A6%AC%EC%99%80-%EC%82%AC%EA%B3%A0/</guid>
      <description>&lt;p&gt;&lt;strong&gt;논리와 사고&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;우리는 평소 바쁜 일상생활 속에서 상대방의 주장이 합당한지를 따지기도 전에 관습이나 주변 상황 등에 의해서 판단하고 이에 따라 그의 주장에 반응하곤 한다. 엄밀하고 논리적인 사고와 판단에 따라 행동하는 경우보다 그렇지 않은 경우가 더 많은 것 또한 사실이다. 그래도 어떤 결정적인 순간들에는 반드시 다른 사람들의 주장이 옳은지 그 정당성을 따져야 할 때가 있고, 또한 자기 자신의 주장도 신중하고 합당하게 내세워야 할 때가 있다. 이를 위해서 우리는 평소 논리적이고 합리적으로 사고하는 훈련을 행해야 한다. 또한 평소에 비논리적이고 비합리적으로 살고 있기 때문에 더더욱 이런 훈련이 필요할지도 모른다. 사실 우리의 일상은 이런 비논리나 (논리적 사고를 압도하는) 다른 억지에 둘러싸여 있다. 그러므로 그런 흐름에 휩쓸리지 않도록 논리적 훈련과 자기성찰이 더욱 요구되는 것이다. 올바른 사고가 이루어져야 그 합리적인 기초 위에서 진정한 사회적 활동이 가능하고 다른 이들과의 건설적인 토론도 가능해 지기에 논리적 사고는 인간사회의 소통과 발전을 위한 가장 중요한 기초가 되는 것이다.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/06.university/%EC%B2%A0%ED%95%99%EA%B3%BC-%EC%9D%B8%EA%B0%84/07.1.%EA%B3%A0%EB%8C%80%EC%97%90%EC%84%9C-%EA%B7%BC%EB%8C%80%EB%A1%9C/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/06.university/%EC%B2%A0%ED%95%99%EA%B3%BC-%EC%9D%B8%EA%B0%84/07.1.%EA%B3%A0%EB%8C%80%EC%97%90%EC%84%9C-%EA%B7%BC%EB%8C%80%EB%A1%9C/</guid>
      <description>&lt;p&gt;&lt;strong&gt;고대에서 근대로 / 존재론에서 인식론으로&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;우리는 이제 철학의 다음 시대인 근대로 넘어가 인간과 철학에 대한 새로운 사상들을 알아볼 텐데, 지금까지 살펴본 고대 그리스 시대의 이론은 형이상학과 존재론이라는 명칭으로 주로 불렸다면, 근대의 이론들은 인식론이라고 불리게 된다. 따라서 철학과 인간에 대한 논의도 이제 인식이라는 주제와 관점 아래에서 진행된다. 인간의 인식에 대한 본격적인 논의는 근대에서나 비로소 시작되기에 지금까지와는 다른 지평에서 철학이 전개되며, 이를 사전지식 없이 바로 접하면 그 이해가 어려울 수 있다. 이처럼 근대의 철학은 이전의 철학과 그 성격이 많이 다르기 때문에 고대와 근세시대 사이에 철학사와 문화(명)사가 어떻게 전개되었는지를 간단히 살펴보는 것이 어느 정도 도움이 될 수 있을 것이다.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/06.university/%EC%B2%A0%ED%95%99%EA%B3%BC-%EC%9D%B8%EA%B0%84/07.2.%EC%9D%B8%EA%B0%84%EA%B3%BC-%EC%A7%80%EC%8B%9D-1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/06.university/%EC%B2%A0%ED%95%99%EA%B3%BC-%EC%9D%B8%EA%B0%84/07.2.%EC%9D%B8%EA%B0%84%EA%B3%BC-%EC%A7%80%EC%8B%9D-1/</guid>
      <description>&lt;p&gt;&lt;strong&gt;&amp;lt; 인간과 지식 &amp;gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;&amp;lt;인식론의 쟁점&amp;gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;근대에 와서 중심 주제로 부각된 인식론은 인식, 혹은 지식 일반의 근본 문제들을 다루는 철학의 한 부문이다. 그 중 인식의 기원에 관한 이론들은 다음과 같고 이를 중심으로 근대 철학자들의 사상을 정리해 볼 수 있다.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;인식의 기원에 관한 이론들&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;\1) 경험론 (empiricism)&lt;/p&gt;&#xA;&lt;p&gt;경험론자들은 오관에 의해 제공되는 경험을 그들의 인식론의 기초로 삼았고 인간의 지식은 감각경험을 통해서 얻어진다고 주장한다. 존 로크는 우리 인간의 이성은 태어났을 때는 백지(tabula rasa)와 같다고 했다. 아무런 감각 자료가 새겨져 있지 않은 인간의 의식은 이제 생활하면서 많은 감각적 인상을 획득하게 된다는 것이다.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/06.university/%EC%B2%A0%ED%95%99%EA%B3%BC-%EC%9D%B8%EA%B0%84/08.%EC%9D%B8%EA%B0%84%EA%B3%BC-%EC%A7%80%EC%8B%9D-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/06.university/%EC%B2%A0%ED%95%99%EA%B3%BC-%EC%9D%B8%EA%B0%84/08.%EC%9D%B8%EA%B0%84%EA%B3%BC-%EC%A7%80%EC%8B%9D-2/</guid>
      <description>&lt;p&gt;&lt;strong&gt;&amp;lt;경험론&amp;gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;John Locke(1632–1704)와 경험론의 시작&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;(우리의 모든 지식은 외부 대상의 경험으로부터 유래하는가?)&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;인간지성론. 1690. (An Essay concerning human understanding)&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;- 지식의 원천 ＝ 경험&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;로크는 “우리의 모든 지식은 경험에 근거를 두고 있으며, 궁극적으로는 경험에서 지식이 도출된다.”고 주장했다. 그는 인간이 태어났을 때부터 갖고 있다는 본유 관념의 존재를 부정했다. 만약 그런 것들이 있다면 어린아이나 백치들도 손쉽게 수학이나 논리학 등을 알 텐데 그렇지 않다는 점을 들어서 결국 우리의 지식 중 본유적인 것은 아무 것도 없다고 말한다.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/06.university/%EC%B2%A0%ED%95%99%EA%B3%BC-%EC%9D%B8%EA%B0%84/09.%EC%9D%B8%EA%B0%84%EA%B3%BC-%EC%A7%80%EC%8B%9D-3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/06.university/%EC%B2%A0%ED%95%99%EA%B3%BC-%EC%9D%B8%EA%B0%84/09.%EC%9D%B8%EA%B0%84%EA%B3%BC-%EC%A7%80%EC%8B%9D-3/</guid>
      <description>&lt;p&gt;&lt;strong&gt;&amp;lt;칸트의 비판철학&amp;gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;칸트와 당시의 학문적 배경&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;우리는 오늘날 정보의 시대에 살고 있다. 학문의 세계도 그 덕을 많이 보기 때문에 이제 세계 어느 곳에서 어떤 유명한 학자가 어떤 중요한 학적 결실을 발표하면 멀리 있는 다른 사람들도 이를 빠르게 접할 수 있다. 대신 오늘날의 학문은 전문화와 세분화가 심해서 한 특정 분야에서 일어난 일들은 바로 그 분야의 전공자들 외에는 큰 관심을 받지 못하기 마련이다. 그래서 대부분의 중요한 학문적 성과들도 화젯거리조차 되지 못하는 일이 비일비재하다.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/06.university/%EC%B2%A0%ED%95%99%EA%B3%BC-%EC%9D%B8%EA%B0%84/10.%EC%9D%B8%EA%B0%84%EA%B3%BC-%EB%8F%84%EB%8D%95/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/06.university/%EC%B2%A0%ED%95%99%EA%B3%BC-%EC%9D%B8%EA%B0%84/10.%EC%9D%B8%EA%B0%84%EA%B3%BC-%EB%8F%84%EB%8D%95/</guid>
      <description>&lt;p&gt;&lt;strong&gt;인간과 도덕&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;1. 도덕이란 무엇인가&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;- 관습과 도덕&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;우리는 일상생활에서 흔히 “부모를 공경하라”, “선한 일을 행하라”, “거짓말을 하지 말라” 등과 같은 말을 대한다. 우리는 이런 교훈들을 우리가 살아가면서 마땅히 지켜야 할 도리들이라고 생각한다. 이와 같이 일반적으로 우리 모두가 수긍할 만한, 그리고 마땅히, 혹은 당연히 그렇게 해야 한다고 생각하는 것들을 우리는 ‘규범’, ‘관습’ 혹은 ‘도덕’이라고 부른다. 그 어원인 그리스 단어 ‘ethos’와 라틴어 ‘mores’ 등은 본래 습관, 혹은 관행이라는 뜻을 가졌는데, 도덕이라 불리는 것도 본래는 사소하고 우연적인 것 같은 습관에서 비롯되었다는 발상을 내포하고 있다. 한 사람에게 있어서 이런 습관이 오랜 시간을 거치면서 몸에 익어 익숙해진 후, 결국 그로부터 떨어질 수 없는 그의 성격과 성품이 되기도 하는데, 이 경우 우리는 이를 ‘덕(virtue, Tugend)’이라고 부르기도 한다. 이를 사회적인 차원에서 접근하면 일종의 ‘관습’으로 볼 수 있는데, 우리 사회에서 오랫동안 지켜 내려와서 우리 사회 구성원들이 널리 인정하는 ‘질서’·‘규범’·‘풍습’ 과 같은 것이 이에 해당한다고 볼 수 있다.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/06.university/%EC%B2%A0%ED%95%99%EA%B3%BC-%EC%9D%B8%EA%B0%84/11.%EC%9D%B8%EA%B0%84%EA%B3%BC-%EC%82%AC%ED%9A%8C/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/06.university/%EC%B2%A0%ED%95%99%EA%B3%BC-%EC%9D%B8%EA%B0%84/11.%EC%9D%B8%EA%B0%84%EA%B3%BC-%EC%82%AC%ED%9A%8C/</guid>
      <description>&lt;p&gt;&lt;strong&gt;1. 사회의 개념&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;1) 아리스토텔레스의 정치적 인간관&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;사회라는 말은 본래 아리스토텔레스의 인간에 대한 정의인 &amp;ldquo;정치적 동물(zoon&#xA;politikon)&amp;ldquo;이라는 표현에서 나왔다. politikon은 polis, 즉 도시 국가라는&#xA;원래의 뜻에서 파생된 말이니 처음부터 국가와 밀접한 연관을 맺고 있었다.&#xA;이 말이 후에 라틴어로 번역되면서 &amp;lsquo;사회적 동물(animal sociale)&amp;lsquo;이라는&#xA;말이 됐으므로, 결국 &amp;lsquo;국가&amp;rsquo;, &amp;lsquo;정치(공동체)&amp;rsquo;, &amp;lsquo;사회&amp;rsquo;라는 용어들은 공통의&#xA;기반으로부터 유래한 개념들이라고 볼 수 있다.&lt;/p&gt;&#xA;&lt;p&gt;아리스토텔레스가 인간을 정치적 동물이라고 한 것은 두 가지 이유에서이다.&#xA;첫째, 그는 인간이 그 자연적 본성상 무리를 떠나서 살 수 없다고 보았다.&#xA;쉽게 말해 인간은 혼자 있으면 불안하고 외롭다고 느껴서 의례 다른 인간들을&#xA;찾기 마련이라는 의미이다. 하지만 두 번째로 이 말 속에는 인간이 다른 그&#xA;어떤 동물들보다도 고도의 군집생활을 할 수 있고, 하고 있는 존재라는&#xA;의미가 또한 들어 있다. 물론 사자나 원숭이들도 무리를 이루어 살아가고&#xA;있다. 하지만 인간의 모임이 더 높은 수준의 공동체를 이룬다는 데에는&#xA;이견이 없을 것이다. 흥미로운 점은, 아리스토텔레스가 그 근본이유를 인간의&#xA;언어구사 능력에서 찾는다는 데에 있다. 다시 말해 겉으로 보이는 것들, 예를&#xA;들어 웅장한 파르테논 신전이나 거대한 피라미드를 갖고 있기 때문에 인간의&#xA;공동체가 수준 높은 것이 아니라, 고작(?) 언어를 통한 복잡한 의사교환이&#xA;가능하다는 점 때문에 인간사회가 다른 동물들의 사회보다 위대하다는&#xA;것이다. 크게 두드러져 보이지도 않는 언어활동을 아리스토텔레스는 왜&#xA;중요하게 여겼을까? 그것은 바로 이를 통해서 인간 삶과 인간사회의 근본적인&#xA;가치들, 즉 정당한 것과 부당한 것, 선한 것과 악한 것 등에 대한 구성원&#xA;각자의 의견과 생각을 교환하거나 공유하는 것, 심지어 합의하는 것까지&#xA;가능하기 때문이다. 이런 중요한 가치에 대한 의사교환과 잇따르는 (어느&#xA;정도의) 합의에 의해 그 공동체는 정체성과 나아갈 방향성을 얻는 것이다.&#xA;따라서 아리스토텔레스는 언어를 통해 형성된 정신적 공감대가 사회와&#xA;국가라는 공동체를 형성하는 가장 중요한 토대가 된다고 본 것이다.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/markdown-test/math-test/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/markdown-test/math-test/</guid>
      <description>&lt;h1 id=&#34;수학-표현식-테스트&#34;&gt;수학 표현식 테스트&lt;/h1&gt;&#xA;&lt;p&gt;이 문서는 KaTeX 수학 렌더링 기능을 테스트하기 위한 파일입니다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;인라인-수학-표현식&#34;&gt;인라인 수학 표현식&lt;/h2&gt;&#xA;&lt;p&gt;다음은 인라인 수학 표현식입니다: $E = mc^2$&lt;/p&gt;&#xA;&lt;p&gt;그리고 또 다른 예: $\sum_{i=1}^{n} x_i = x_1 + x_2 + \cdots + x_n$&lt;/p&gt;&#xA;&lt;h2 id=&#34;블록-수학-표현식&#34;&gt;블록 수학 표현식&lt;/h2&gt;&#xA;&lt;p&gt;아래는 블록 수학 표현식입니다:&lt;/p&gt;&#xA;&lt;p&gt;$$&#xA;\int_{-\infty}^{\infty} e^{-x^2} dx = \sqrt{\pi}&#xA;$$&lt;/p&gt;&#xA;&lt;p&gt;복잡한 방정식:&lt;/p&gt;&#xA;&lt;p&gt;$$&#xA;\frac{d}{dx}\left( \int_{a}^{x} f(t) , dt\right) = f(x)&#xA;$$&lt;/p&gt;&#xA;&lt;p&gt;행렬:&lt;/p&gt;&#xA;&lt;p&gt;$$&#xA;A = \begin{pmatrix}&#xA;a &amp;amp; b \&#xA;c &amp;amp; d&#xA;\end{pmatrix}&#xA;$$&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/markdown-test/test-math-lists/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/markdown-test/test-math-lists/</guid>
      <description></description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/temp/101-%EB%AC%B8%EC%A0%9C/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/temp/101-%EB%AC%B8%EC%A0%9C/</guid>
      <description>&lt;p&gt;나의 경우 문장을 단어로 분할을 위해 인덱스를 잡고 vector 에 추가하여 임시로 저장&#xA;이후에 vector 를 나중에&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Given an input string s, reverse the order of the words.&#xA;&#xA;A word is defined as a sequence of non-space characters. The words in s will be separated by at least one space.&#xA;&#xA;Return a string of the words in reverse order concatenated by a single space.&#xA;&#xA;Note that s may contain leading or trailing spaces or multiple spaces between two words. The returned string should only have a single space separating the words. Do not include any extra spaces.&#xA;&#xA; &#xA;&#xA;Example 1:&#xA;&#xA;Input: s = &amp;#34;the sky is blue&amp;#34;&#xA;Output: &amp;#34;blue is sky the&amp;#34;&#xA;Example 2:&#xA;&#xA;Input: s = &amp;#34;  hello world  &amp;#34;&#xA;Output: &amp;#34;world hello&amp;#34;&#xA;Explanation: Your reversed string should not contain leading or trailing spaces.&#xA;Example 3:&#xA;&#xA;Input: s = &amp;#34;a good   example&amp;#34;&#xA;Output: &amp;#34;example good a&amp;#34;&#xA;Explanation: You need to reduce multiple spaces between two words to a single space in the reversed string.&#xA; &#xA;&#xA;Constraints:&#xA;&#xA;1 &amp;lt;= s.length &amp;lt;= 104&#xA;s contains English letters (upper-case and lower-case), digits, and spaces &amp;#39; &amp;#39;.&#xA;There is at least one word in s.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 처음에 문자가 나오는 인덱스 저장 , 문자가 끝나는 다음 인덱스 저장 배열&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 단어를 지우고 다시 쓴다&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Solution&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    string reverseWords(string s) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        vector&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;pair&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;,&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; vector_index;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; s.size(); i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (s[i] &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; start_index &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; i;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; (i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; s.size() &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; s[i] &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                vector_index.push_back(make_pair(start_index, i)); &lt;span style=&#34;color:#75715e&#34;&gt;// i는 다음 공백의 인덱스&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        string result;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; vector_index.size()&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; ; i&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; ; i&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; first_index &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; vector_index[i].first;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; second_index &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; vector_index[i].second;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            result &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; s.substr(first_index, second_index &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; first_index);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            result &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        result.pop_back();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; result;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;vector_index 를 만드는 반복분을&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/temp/arm-cpu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/temp/arm-cpu/</guid>
      <description>&lt;p&gt;CPU 설계에서 비순차 실행 및 슈퍼스칼라 아키텍처는 성능 향상을 위한 여러 기법들을 포함하고 있습니다. RISC(축소 명령 집합 컴퓨터) 진영에서 사용되는 주요 성능 향상 기법들은 다음과 같습니다:&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-비순차-실행-out-of-order-execution&#34;&gt;1. 비순차 실행 (Out-of-Order Execution)&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;개념&lt;/strong&gt;: 명령어가 프로그램의 순서와 관계없이 실행될 수 있도록 하는 기법입니다. 이는 데이터 종속성이나 자원 대기 시간으로 인해 발생하는 지연을 최소화합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;장점&lt;/strong&gt;: 실행 가능한 명령어가 있다면, 지연되는 명령어를 건너뛰고 다른 명령어를 실행하여 CPU의 자원을 효율적으로 사용할 수 있습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;2-슈퍼스칼라-아키텍처-superscalar-architecture&#34;&gt;2. 슈퍼스칼라 아키텍처 (Superscalar Architecture)&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;개념&lt;/strong&gt;: 한 사이클 내에 여러 개의 명령어를 동시에 실행할 수 있는 구조입니다. 여러 개의 실행 유닛을 통해 명령어의 병렬 처리를 가능하게 합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;장점&lt;/strong&gt;: 명령어 레벨 병렬성을 활용하여 성능을 극대화할 수 있습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;3-파이프라이닝-pipelining&#34;&gt;3. 파이프라이닝 (Pipelining)&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;개념&lt;/strong&gt;: 명령어를 여러 단계로 나누어 각 단계를 동시에 처리하는 기법입니다. 각 단계는 명령어의 서로 다른 부분을 처리합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;장점&lt;/strong&gt;: 명령어 처리 속도를 높이고 CPU 자원의 활용도를 증가시킬 수 있습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;4-명령어-예측-instruction-prediction&#34;&gt;4. 명령어 예측 (Instruction Prediction)&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;개념&lt;/strong&gt;: 분기 명령어의 결과를 예측하여 분기 예측을 통해 파이프라인의 중단을 최소화합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;장점&lt;/strong&gt;: 잘못된 예측을 줄이면 파이프라인의 비효율성을 줄이고 성능을 향상시킬 수 있습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;5-레지스터-재배치-register-renaming&#34;&gt;5. 레지스터 재배치 (Register Renaming)&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;개념&lt;/strong&gt;: 물리적 레지스터 수를 늘려서 명령어 간의 데이터 종속성을 해결하는 기법입니다. 가상의 레지스터를 사용해 실제 레지스터와의 매핑을 관리합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;장점&lt;/strong&gt;: 명령어 간의 충돌을 줄여 비순차 실행의 이점을 극대화합니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;6-캐시-메모리-cache-memory&#34;&gt;6. 캐시 메모리 (Cache Memory)&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;개념&lt;/strong&gt;: CPU와 메모리 사이에 위치하여 자주 사용하는 데이터를 빠르게 접근할 수 있도록 하는 메모리입니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;장점&lt;/strong&gt;: 데이터 접근 시간을 줄여 CPU의 성능을 향상시킵니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;7-멀티스레딩-multithreading&#34;&gt;7. 멀티스레딩 (Multithreading)&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;개념&lt;/strong&gt;: 하나의 CPU 코어가 여러 스레드를 동시에 실행할 수 있도록 하는 기술입니다. 각 스레드는 독립적으로 실행되며, 자원을 공유합니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;장점&lt;/strong&gt;: CPU의 자원 활용도를 높이고, 대기 시간 동안 다른 스레드를 실행하여 성능을 향상시킬 수 있습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;8-simd-single-instruction-multiple-data&#34;&gt;8. SIMD (Single Instruction, Multiple Data)&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;개념&lt;/strong&gt;: 하나의 명령어로 여러 데이터에 동시에 작업을 수행하는 방식입니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;장점&lt;/strong&gt;: 벡터 연산이나 이미지 처리와 같은 데이터 집약적인 작업에서 성능을 크게 향상시킬 수 있습니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;이러한 기법들은 RISC 아키텍처에서 성능을 극대화하기 위해 사용되며, 현대 CPU 설계의 핵심 요소로 자리 잡고 있습니다. 추가적인 질문이 있다면 언제든지 말씀해 주세요!&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/temp/execute-run-code/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/temp/execute-run-code/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello world&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;std&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello, World!&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello world&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Main&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(String &lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt;args) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;System.&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;println&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello, World!&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/temp/mac-java-%EB%B2%84%EC%A0%84-%EB%B3%80%EA%B2%BD/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/temp/mac-java-%EB%B2%84%EC%A0%84-%EB%B3%80%EA%B2%BD/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;JDKS_DIR&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/Library/Java/JavaVirtualMachines&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;JDKS&lt;span style=&#34;color:#f92672&#34;&gt;=(&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;ls &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JDKS_DIR&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;JDKS_STATES&lt;span style=&#34;color:#f92672&#34;&gt;=()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;((&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0; i &amp;lt; &lt;span style=&#34;color:#e6db74&#34;&gt;${#&lt;/span&gt;JDKS[@]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;; i++ &lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -f &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JDKS_DIR&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JDKS[$i](%20-f%20&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JDKS_DIR&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JDKS[$i); then&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;JDKS_STATES[&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;i&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;]=enable&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;else&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;JDKS_STATES[&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;i&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;]=disable&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;fi&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;i&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JDKS[$i]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JDKS_STATES[$i]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;done&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;DEFAULT_JDK_DIR=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;DEFAULT_JDK=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;OPTION=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;while [](%20!%20&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$OPTION&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;%20=~%20^[0-9]+$%20||%20OPTION%20-ge%20&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${#&lt;/span&gt;JDKS[@]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;%20); do&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;read -p &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Enter Default JDK: &amp;#34;&lt;/span&gt;  OPTION&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;if [ ! &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$OPTION&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; =~ ^[0-9](%20!%20&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$OPTION&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;%20=~%20^[0-9); then&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Sorry integers only&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;fi&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;if [](%20OPTION%20-ge%20&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${#&lt;/span&gt;JDKS[@]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;%20); then&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Out of index&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;fi&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;done&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;DEFAULT_JDK_DIR=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JDKS_DIR&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JDKS[$OPTION]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;DEFAULT_JDK=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JDKS[$OPTION]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;for (( i = 0; i &amp;lt; &lt;span style=&#34;color:#e6db74&#34;&gt;${#&lt;/span&gt;JDKS[@]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;; i++ )); do&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;if [ -f &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JDKS_DIR&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JDKS[$i](%20-f%20&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JDKS_DIR&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JDKS[$i); then&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;sudo mv &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JDKS_DIR&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JDKS[$i]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/Contents/Info.plist&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JDKS_DIR&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JDKS[$i]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/Contents/Info.plist.disable&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;fi&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;done&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;if [ -f &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;DEFAULT_JDK_DIR&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/Contents/Info.plist.disable&amp;#34;&lt;/span&gt; ](%20-f%20&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;DEFAULT_JDK_DIR&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/Contents/Info.plist.disable&amp;#34;&lt;/span&gt;%20); then&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;sudo mv &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;DEFAULT_JDK_DIR&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/Contents/Info.plist.disable&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;DEFAULT_JDK_DIR&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/Contents/Info.plist&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Enable &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;DEFAULT_JDK&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; as default JDK&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fi&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/temp/python-login/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/temp/python-login/</guid>
      <description>&lt;p&gt;&lt;code&gt;refresh_token&lt;/code&gt;은 JWT 인증 시스템에서 중요한 역할을 합니다. 일반적으로 &lt;code&gt;access_token&lt;/code&gt;은 짧은 유효 기간을 가지며, 클라이언트가 보호된 리소스에 접근할 때 사용됩니다. 반면, &lt;code&gt;refresh_token&lt;/code&gt;은 긴 유효 기간을 가지며, 만료된 &lt;code&gt;access_token&lt;/code&gt;을 갱신하는 데 사용됩니다. 이를 통해 사용자는 매번 로그인하지 않고도 안전하게 세션을 유지할 수 있습니다.&lt;/p&gt;&#xA;&lt;p&gt;현재 코드에서는 &lt;code&gt;access_token&lt;/code&gt;만 발행하고 있으며, &lt;code&gt;refresh_token&lt;/code&gt;이 누락되어 있습니다. 이를 추가하여 완전한 JWT 인증 시스템을 구현해보겠습니다.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;1-refresh_token-추가를-위한-설정&#34;&gt;1. &lt;code&gt;refresh_token&lt;/code&gt; 추가를 위한 설정&lt;/h3&gt;&#xA;&lt;p&gt;Flask-JWT-Extended는 &lt;code&gt;create_refresh_token()&lt;/code&gt; 함수를 제공하며, 이를 사용하여 &lt;code&gt;refresh_token&lt;/code&gt;을 생성할 수 있습니다. 또한, &lt;code&gt;@jwt_required(refresh=True)&lt;/code&gt; 데코레이터를 사용하여 &lt;code&gt;refresh_token&lt;/code&gt;을 검증하고 새로운 &lt;code&gt;access_token&lt;/code&gt;을 발급할 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/temp/sizeof/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/temp/sizeof/</guid>
      <description>&lt;p&gt;&lt;code&gt;sizeof&lt;/code&gt; 연산자는 C 언어에서 객체나 데이터 타입의 크기를 바이트 단위로 반환하는 데 사용됩니다. &lt;code&gt;sizeof&lt;/code&gt;의 사용법과 규칙은 다음과 같습니다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-기본-사용법&#34;&gt;1. 기본 사용법&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;변수나 데이터 타입&lt;/strong&gt;의 크기를 알아낼 수 있습니다.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; a;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%zu&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;sizeof&lt;/span&gt;(a));        &lt;span style=&#34;color:#75715e&#34;&gt;// int의 크기 출력&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%zu&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;sizeof&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt;));      &lt;span style=&#34;color:#75715e&#34;&gt;// int 타입의 크기 출력&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;2-배열의-크기&#34;&gt;2. 배열의 크기&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;배열&lt;/strong&gt;에 대해서는 전체 배열의 크기를 반환합니다.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; text[] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%zu&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;sizeof&lt;/span&gt;(text));     &lt;span style=&#34;color:#75715e&#34;&gt;// 6 (5 characters + 1 for &amp;#39;\0&amp;#39;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;그러나 &lt;strong&gt;포인터&lt;/strong&gt;에 대해서는 포인터의 크기만 반환합니다.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;ptr &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%zu&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;sizeof&lt;/span&gt;(ptr));      &lt;span style=&#34;color:#75715e&#34;&gt;// 보통 4 또는 8 (32비트 또는 64비트 시스템에서의 포인터 크기)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;3-구조체의-크기&#34;&gt;3. 구조체의 크기&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;구조체&lt;/strong&gt;의 크기는 그 안에 포함된 멤버들의 크기의 합과 메모리 정렬 패딩을 고려하여 계산됩니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/temp/spring-intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/temp/spring-intro/</guid>
      <description>&lt;h2 id=&#34;spring-boot-devtools-사용법&#34;&gt;&lt;a href=&#34;https://barbera.tistory.com/47&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;Spring Boot Devtools 사용법&lt;/a&gt;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;controller란-무엇인가&#34;&gt;controller란 무엇인가?&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;사용자의 요청이 진입하는 지점(entry point)이며&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;요청에 따라 어떤 처리를 할지 결정해주며&lt;/p&gt;&#xA;&lt;p&gt;단, controller는 단지 결정만 해주고 실질적인 처리는 서비스(Layered Architecture)에서 담당한다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;사용자에게 View(또는 서버에서 처리된 데이터를 포함하는 View)를 응답으로 보내준다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;mvc&#34;&gt;mvc&lt;/h2&gt;&#xA;&lt;p&gt;model view controller&lt;/p&gt;&#xA;&lt;p&gt;model :&#xA;view :&#xA;controller :&lt;/p&gt;&#xA;&lt;h2 id=&#34;ss-명령어-유닉스&#34;&gt;ss 명령어 유닉스&lt;/h2&gt;&#xA;&lt;p&gt;ss -ltn 명령어를 통해 listen 되고 있는 포트를 본다&lt;/p&gt;&#xA;&lt;h2 id=&#34;netstat--ano--p-tcp-윈도우&#34;&gt;netstat -ano -p tcp 윈도우&lt;/h2&gt;&#xA;&lt;h2 id=&#34;jsp&#34;&gt;jsp&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-jsp&#34; data-lang=&#34;jsp&#34;&gt;&amp;lt;% 스크립틀릿 scriptlet java코드 작성영역 %&amp;gt; 서버 생성시 초기화 jspinit()&#xA;&amp;lt;%! 선언문 멤버필드 멤버 메서드 정의 %&amp;gt; 객체 생성시 초기화 &#xA;&amp;lt;%= 출력부 %&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;http-프로토콜&#34;&gt;http 프로토콜&lt;/h2&gt;&#xA;&lt;p&gt;http + ssl =&amp;gt; https&#xA;http method&#xA;총 9개&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/temp/test/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/temp/test/</guid>
      <description>&lt;p&gt;파일 테이블&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;파일 포인터&lt;/li&gt;&#xA;&lt;li&gt;파일 상태 플래그&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;1-파일-file&#34;&gt;1. 파일 (File)&lt;/h2&gt;&#xA;&lt;p&gt;파일은 데이터를 저장하는 기본 단위로, 디스크와 같은 저장 매체에 존재하는 정보의 집합입니다. 파일은 텍스트, 이미지, 비디오 등 다양한 형태로 존재할 수 있으며, 파일 시스템에 의해 관리됩니다. 각 파일은 고유한 이름과 경로를 가지며, 파일의 내용과 메타데이터(예: 크기, 생성 날짜, 수정 날짜 등)가 포함됩니다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;2-파일-테이블-file-table&#34;&gt;2. 파일 테이블 (File Table)&lt;/h2&gt;&#xA;&lt;p&gt;파일 테이블은 운영체제가 시스템에서 열린 파일에 대한 정보를 관리하는 데이터 구조입니다. 시스템 전체에서 열린 파일에 대한 상태를 추적하며, 각 파일에 대한 메타 정보를 포함합니다. 파일 테이블은 모든 프로세스가 공유할 수 있으며, 파일의 참조 카운터와 접근 정보 등이 포함됩니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/temp/tmux-pane-window-%EC%B0%A8%EC%9D%B4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/temp/tmux-pane-window-%EC%B0%A8%EC%9D%B4/</guid>
      <description></description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/temp/unix-%EB%8F%84%EB%A9%94%EC%9D%B8-%EC%86%8C%EC%BC%93/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/temp/unix-%EB%8F%84%EB%A9%94%EC%9D%B8-%EC%86%8C%EC%BC%93/</guid>
      <description>&lt;p&gt;&lt;code&gt;PF_UNIX&lt;/code&gt; (또는 &lt;code&gt;AF_UNIX&lt;/code&gt;)는 로컬 시스템 내에서 프로세스 간 통신(IPC)을 위한 프로토콜로, 네트워크를 거치지 않고 소켓을 사용해 데이터를 교환합니다. 아래는 &lt;code&gt;PF_UNIX&lt;/code&gt;와 &lt;code&gt;datagram socket&lt;/code&gt;을 사용한 클라이언트와 서버 예제입니다.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;서버-코드-datagram-socket-with-pf_&#34;&gt;&lt;strong&gt;서버 코드 (Datagram Socket with PF_UNIX)&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; server_sock;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; sockaddr_un server_addr, client_addr;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; buffer[BUFFER_SIZE];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;socklen_t&lt;/span&gt; client_addr_len;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 1. 소켓 생성&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ((server_sock &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;socket&lt;/span&gt;(PF_UNIX, SOCK_DGRAM, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;perror&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;socket&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;exit&lt;/span&gt;(EXIT_FAILURE);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 2. 주소 구조체 초기화&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;memset&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;server_addr, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;sizeof&lt;/span&gt;(server_addr));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    server_addr.sun_family &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; AF_UNIX;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;strncpy&lt;/span&gt;(server_addr.sun_path, SOCKET_PATH, &lt;span style=&#34;color:#66d9ef&#34;&gt;sizeof&lt;/span&gt;(server_addr.sun_path) &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 3. 소켓 주소 바인딩&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;unlink&lt;/span&gt;(SOCKET_PATH); &lt;span style=&#34;color:#75715e&#34;&gt;// 기존 소켓 파일 삭제&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;bind&lt;/span&gt;(server_sock, (&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; sockaddr &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;server_addr, &lt;span style=&#34;color:#66d9ef&#34;&gt;sizeof&lt;/span&gt;(server_addr)) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;perror&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bind&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;(server_sock);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;exit&lt;/span&gt;(EXIT_FAILURE);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Server is running and waiting for messages...&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 4. 데이터 수신&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    client_addr_len &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;sizeof&lt;/span&gt;(client_addr);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;ssize_t&lt;/span&gt; received &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;recvfrom&lt;/span&gt;(server_sock, buffer, BUFFER_SIZE, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                    (&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; sockaddr &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;client_addr, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;client_addr_len);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (received &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;perror&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;recvfrom&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        buffer[received] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\0&amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Received: %s&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, buffer);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// 5. 클라이언트로 응답 전송&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;response &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Message received!&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;sendto&lt;/span&gt;(server_sock, response, &lt;span style=&#34;color:#a6e22e&#34;&gt;strlen&lt;/span&gt;(response), &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                   (&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; sockaddr &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;client_addr, client_addr_len) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;perror&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sendto&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 6. 소켓 종료&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;(server_sock);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;unlink&lt;/span&gt;(SOCKET_PATH); &lt;span style=&#34;color:#75715e&#34;&gt;// 소켓 파일 삭제&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;h2 id=&#34;클라이언트-코드-datagram-socket-with-pf_&#34;&gt;&lt;strong&gt;클라이언트 코드 (Datagram Socket with PF_UNIX)&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; client_sock;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; sockaddr_un server_addr, client_addr;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; buffer[BUFFER_SIZE];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 1. 소켓 생성&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ((client_sock &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;socket&lt;/span&gt;(PF_UNIX, SOCK_DGRAM, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;perror&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;socket&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;exit&lt;/span&gt;(EXIT_FAILURE);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 2. 클라이언트 주소 구조체 초기화&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;memset&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;client_addr, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;sizeof&lt;/span&gt;(client_addr));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    client_addr.sun_family &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; AF_UNIX;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;strncpy&lt;/span&gt;(client_addr.sun_path, CLIENT_SOCKET_PATH, &lt;span style=&#34;color:#66d9ef&#34;&gt;sizeof&lt;/span&gt;(client_addr.sun_path) &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 3. 소켓 주소 바인딩&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;unlink&lt;/span&gt;(CLIENT_SOCKET_PATH); &lt;span style=&#34;color:#75715e&#34;&gt;// 기존 소켓 파일 삭제&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;bind&lt;/span&gt;(client_sock, (&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; sockaddr &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;client_addr, &lt;span style=&#34;color:#66d9ef&#34;&gt;sizeof&lt;/span&gt;(client_addr)) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;perror&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bind&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;(client_sock);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;exit&lt;/span&gt;(EXIT_FAILURE);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 4. 서버 주소 구조체 초기화&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;memset&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;server_addr, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;sizeof&lt;/span&gt;(server_addr));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    server_addr.sun_family &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; AF_UNIX;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;strncpy&lt;/span&gt;(server_addr.sun_path, SERVER_SOCKET_PATH, &lt;span style=&#34;color:#66d9ef&#34;&gt;sizeof&lt;/span&gt;(server_addr.sun_path) &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 5. 서버로 메시지 전송&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;message &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello from client!&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;sendto&lt;/span&gt;(client_sock, message, &lt;span style=&#34;color:#a6e22e&#34;&gt;strlen&lt;/span&gt;(message), &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               (&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; sockaddr &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;server_addr, &lt;span style=&#34;color:#66d9ef&#34;&gt;sizeof&lt;/span&gt;(server_addr)) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;perror&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sendto&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;(client_sock);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;exit&lt;/span&gt;(EXIT_FAILURE);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Message sent to server.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 6. 서버로부터 응답 수신&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;ssize_t&lt;/span&gt; received &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;recvfrom&lt;/span&gt;(client_sock, buffer, BUFFER_SIZE, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, NULL, NULL);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (received &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;perror&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;recvfrom&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;(client_sock);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;exit&lt;/span&gt;(EXIT_FAILURE);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    buffer[received] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\0&amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Received from server: %s&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, buffer);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// 7. 소켓 종료&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;(client_sock);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;unlink&lt;/span&gt;(CLIENT_SOCKET_PATH); &lt;span style=&#34;color:#75715e&#34;&gt;// 소켓 파일 삭제&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;h2 id=&#34;실행-방법&#34;&gt;&lt;strong&gt;실행 방법&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;서버를 먼저 실행:&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/temp/untitled-4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/temp/untitled-4/</guid>
      <description>&lt;p&gt;SQL 표준에서는&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;dirty read: commit 되지 않은 데이터를 읽었을 때 발생하며, 데이터를 읽은 이후에 이 데이터를 rollback하게 되는 경우 문제가 발생하는 현상&lt;/li&gt;&#xA;&lt;li&gt;non-repeatable read: 한 트랜잭션에서 같은 데이터를 두 번 읽었는데 두 데이터의 결과가 다른 현상&lt;/li&gt;&#xA;&lt;li&gt;phantom read: 한 트랜잭션에서 같은 조건으로 데이터를 두 번 읽었는데 두 데이터의 결과가 다른 현상&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;이렇게 세 가지 이상 현상 개념에 대해서 다루고 이에 대한 isolation level을 아래와 같이 정의했습니다.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;read uncommited: 세 가지 이상 현상을 다 허용&lt;/li&gt;&#xA;&lt;li&gt;read commited: dirty read가 발생하는 schedule은 허용 X&lt;/li&gt;&#xA;&lt;li&gt;repeatable read: non-repeatable read까지 발생하는 scehdule은 허용 X&lt;/li&gt;&#xA;&lt;li&gt;serializable: 가장 엄격한 isolation level로 모든 이상 현상이 발생하는 schedule 허용 X&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;하지만 1995년 이 SQL 표준을 비판하는 논문이 등장하였고 이 논문에서는 SQL 표준에서 언급한 이상 현상 외에 더 많은 이상 현상이 존재하며, 다룬 이상 현상도 더 넓은 개념에서 바라보아야 한다고 비판하였습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/temp/untitled-5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/temp/untitled-5/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.postgresql.org/docs/current/sql-createrole.html&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;https://www.postgresql.org/docs/current/sql-createrole.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;(&lt;code&gt;CREATE USER&lt;/code&gt; is the same as &lt;code&gt;CREATE ROLE&lt;/code&gt; except that it implies &lt;code&gt;LOGIN&lt;/code&gt;.)&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/temp/untitled-7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/temp/untitled-7/</guid>
      <description></description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/temp/untitled-8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/temp/untitled-8/</guid>
      <description>&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20241220070853.png&#34; alt=&#34; (Image resource not found)&#34; &gt;%20image%2020241220070853.png)&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/temp/untitled/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/temp/untitled/</guid>
      <description></description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/temp/wordpress-%EA%B3%BC%EC%A0%9C/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/temp/wordpress-%EA%B3%BC%EC%A0%9C/</guid>
      <description>&lt;p&gt;wordpress docker 이미지를 사용하되 컴포즈를 통해 내부 네트워크에서 db 컨테이너와 함께 사용하자&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs.docker.com/compose/install/&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;맥 +docker compose 조합 compose 문서&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;먼저 wordpress 폴더를 만들어서 들어가자 여기에 db 가 사용하는 data 폴더 docker compose yml 파일등이 들어간다&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir wordpress&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd wordpress&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;내부 네트워크에서 db와 wordpress 가 통신한다&#xA;오직 services.wordpress.port 가 현재 10202:80 으로 들어가 있는데 {접속포트}:80 이므로 접속할 포트(일반적으로 80) 로 설정한다&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;networks&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;wordpress&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;external&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;services&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# 데이터베이스&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;db&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# We use a mariadb image which supports both amd64 &amp;amp; arm64 architecture&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;image&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;mariadb:10.6.4-focal&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# If you really want to use MySQL, uncomment the following line&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;#image: mysql:8.0.27&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;container_name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;mariadb_for_wordpress&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;command&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;--default-authentication-plugin=mysql_native_password&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;environment&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;MYSQL_ROOT_PASSWORD=somewordpress&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;MYSQL_DATABASE=wordpress&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;MYSQL_USER=wordpress&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;MYSQL_PASSWORD=wordpress&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;restart&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;always&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;networks&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;wordpress&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;volumes&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;./db_data:/var/lib/mysql&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# 워드프레스&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;wordpress&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;image&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;wordpress:latest&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;container_name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;wordpress&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;ports&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;10202&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;restart&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;always&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;environment&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;WORDPRESS_DB_HOST=db&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;WORDPRESS_DB_USER=wordpress&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;WORDPRESS_DB_PASSWORD=wordpress&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;WORDPRESS_DB_NAME=wordpress&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;networks&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;wordpress&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;depends_on&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;db&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;컨테이너 실행&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/temp/%EB%8F%99%EC%9E%91%EC%9B%90%EB%A6%AC/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/temp/%EB%8F%99%EC%9E%91%EC%9B%90%EB%A6%AC/</guid>
      <description>&lt;p&gt;&lt;strong&gt;src/app.py:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Flask 애플리케이션 기본 및 oracle 드라이버 설정&#xA;&lt;strong&gt;src/views.py:&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;db 쿼리 및 사용자에게 보낼 html 을 정함&lt;/li&gt;&#xA;&lt;li&gt;여기서 기능을 추가하면 됩니다!!!&#xA;&lt;strong&gt;src/test_views.py:&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;예시 db 쿼리 입니다&#xA;src/templates/base.html&lt;/li&gt;&#xA;&lt;li&gt;기본적인 html 양식입니다 다른 html 에서 {% extends &amp;ldquo;base.html&amp;rdquo; %} 를 통해 가져와서 사용하게 됩니다&#xA;src/templates/home.html&lt;/li&gt;&#xA;&lt;li&gt;제일 처음에 보이는 양식입니다 로그인 화면을 생각중입니다&#xA;src/templates/test/html 들&lt;/li&gt;&#xA;&lt;li&gt;예시를 위해 만든 html 입니다 복사해서 기능 추가할 때 가져가면 됩니다&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;기능을 추가할 때 view.py 와 실제 사용자에게 전해줄 templates 폴더에 html 문서만 작성해주시면 됩니다&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/temp/%EC%84%A0%ED%98%95%EB%8C%80%EC%88%98%ED%95%99/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/temp/%EC%84%A0%ED%98%95%EB%8C%80%EC%88%98%ED%95%99/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;선형변환은 선형 결합을 보존하는, 두 벡터 공간 사이의 함수이다.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;선형결합&#xA;선형결합 = 좌표평면위의 (3,2) 백터를 정의한다면&#xA;실제로는 기저가 (1,0) , (0,1) 를 기저로 한다는 것을 정의한다&#xA;즉 좌표평면위의 (3,2) 백터는 (1,0) , (0,1) 과 (3,2) 의 선형 결합이다&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;두 벡터 공간 사이의 함수이다&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;$R_2 의\ 기저는 { u_1 = (1,3), u_2 = (2,2)}$ $이를\ 통해\ 직교기저 {v_1, v_2} 를\ 구하여라\  &amp;amp;\  정규직교기저 {p_1, p_2} 를 구하라$&lt;/p&gt;&#xA;&lt;p&gt;$문제\ 2\ 그램\ 슈미트\ 직교화\ 과정을\ 통해\ 직교기저가\ 아닌\ 기저에서\ 직교기저를\ 구한다$&#xA;$u_1 = v_1 = (1,3)$&#xA;$u_2 = (2,2)$&#xA;$v_2 = u_2 + \frac{u_2 \cdot v_1}{|v_1|^2} v_1$&#xA;$v_2 = (2,2) + \frac{4}{10}(1,-3)$&#xA;$v_2 = (\frac{12}{5}, \frac{4}{5})$&#xA;$즉\ 직교기저\ (v_1,v_2) = {(1,-3),(\frac{12}{5},\frac{4}{5})}$&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/temp/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EC%9D%98%EC%A1%B4%EC%84%B1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/temp/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EC%9D%98%EC%A1%B4%EC%84%B1/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://neetcode.io/roadmap&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; &gt;https://neetcode.io/roadmap&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20240406092231.png&#34; alt=&#34; (Image resource not found)&#34; &gt;%20image%2020240406092231.png)&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/temp/%EC%9B%90%EA%B2%A9%EC%A7%80-%EC%84%9C%EB%B2%84-%EC%8B%9C%EA%B0%84-%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/temp/%EC%9B%90%EA%B2%A9%EC%A7%80-%EC%84%9C%EB%B2%84-%EC%8B%9C%EA%B0%84-%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0/</guid>
      <description>&lt;p&gt;NTP 와 같은 프로토콜을  통해 시간을 동기화 할 수 있지만 원격지 서버의 허용을 대부분 안해주기 때문에 웹서버의 요청시 http 응답의 Date 항목을 통해 원격지 서버의 시간을 예측해 본다&lt;/p&gt;&#xA;&lt;p&gt;현재 서버의 시간을 확인하는 예시&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; timespec ts;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// 현재 시간을 가져옵니다.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;clock_gettime&lt;/span&gt;(CLOCK_REALTIME, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;ts);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// 시간 출력&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%04ld-%02ld-%02ld %02ld:%02ld:%02ld.%09ld&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               ts.tv_sec &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;31557600&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1970&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;// 연도 계산&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;               (ts.tv_sec &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;31557600&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2629743&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;// 월 계산&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;               (ts.tv_sec &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2629743&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;86400&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;// 일 계산&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;               (ts.tv_sec &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;86400&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3600&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;// 시 계산&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;               (ts.tv_sec &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3600&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;// 분 계산&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;               ts.tv_sec &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;// 초 계산&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;               ts.tv_nsec); &lt;span style=&#34;color:#75715e&#34;&gt;// 나노초&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;fflush&lt;/span&gt;(stdout); &lt;span style=&#34;color:#75715e&#34;&gt;// 출력 버퍼를 플러시하여 즉시 출력&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;usleep&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;); &lt;span style=&#34;color:#75715e&#34;&gt;// 10,000 마이크로초 (1 밀리초) 대기&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;위와 같은 인터페이스로 구현하고자 한다&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/temp/%EC%9E%90%EC%82%B0-%EA%B4%80%EB%A6%AC/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/temp/%EC%9E%90%EC%82%B0-%EA%B4%80%EB%A6%AC/</guid>
      <description>&lt;h2 id=&#34;학자금-대출&#34;&gt;학자금 대출&lt;/h2&gt;&#xA;&lt;p&gt;3000 만원의 대출금의 경우 1.7% 기준 1년에 510,000 의 이자가 발생하고 한달 42500원의 이자금이 발생되게 된다&#xA;2000만원의 대출금의 경우 1.7% 기준 1년에 28,333 의 이자가 발생하고 한달 28333원의 이자금이 발생되게 된다&lt;/p&gt;&#xA;&lt;h2 id=&#34;세대주-관련&#34;&gt;세대주 관련&lt;/h2&gt;&#xA;&lt;p&gt;주민등록법상&#xA;세법상&#xA;주택청약시&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;주민등록법상과 관련되 세대주&lt;/strong&gt; 의 경우에는 단순히 전입신고를 통해 세대주가 인정되게 된다&#xA;&lt;strong&gt;세법상&lt;/strong&gt;의 경우에는 전입신고와 (30세 이상 또는 결혼 또는 중위소득 40 이상(2024 기준 891,378원)(지난 1년이상)) 을 받으면 인정되게 된다&#xA;&lt;strong&gt;주택청약시&lt;/strong&gt; 세대주 요건의 경우에는 위의 경우 세법상 경우를 따라가지만 무주택 기간산정에(보통은 만 30세 이상부터 카운트가 되고, 만 30세 전이라도 혼인시에는 혼인신고 시점부터 무주택 기간이 산정됩니다)&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/temp/%ED%81%B4%EB%9D%BC%EC%9A%B0%EB%93%9C-%EC%BB%B4%ED%93%A8%ED%8C%85-%EA%B3%BC%EC%A0%9C/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/temp/%ED%81%B4%EB%9D%BC%EC%9A%B0%EB%93%9C-%EC%BB%B4%ED%93%A8%ED%8C%85-%EA%B3%BC%EC%A0%9C/</guid>
      <description>&lt;h2 id=&#34;하둡-컨테이너를-구성하고자-하는-환경가상머신-리눅스-서버-등-설명&#34;&gt;하둡 컨테이너를 구성하고자 하는 환경(가상머신, 리눅스 서버 등) 설명&lt;/h2&gt;&#xA;&lt;p&gt;초기 arm 기반 mac 에서 실행되지 않아&#xA;홈서버를 사용하여 x86-64 cpu, linux ubuntu server 버전에서 ssh 로 접근하여 사용하였음&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-p 50070:50070 &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-p 50030:50030&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;등을 사용하여 실행시 적절하게 외부에서 hdfs mapreduce 웹 인터페이스 또한 접근가능&lt;/p&gt;&#xA;&lt;h2 id=&#34;wordcount-실행-결과&#34;&gt;WordCount 실행 결과&lt;/h2&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20241105134407.png&#34; alt=&#34;Pasted image 20241105134407 (Image resource not found)&#34; &gt;&#xA;psql manual 파일을 사용하였다 &#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20241105132079.png&#34; alt=&#34; (Image resource not found)&#34; &gt;&#xA;psql_manual_file.txt 를 하둡파일시스템으로 input&lt;/p&gt;&#xA;&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20241105134994.png&#34; alt=&#34;Pasted image 20241105134994 (Image resource not found)&#34; &gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20241105132250.png&#34; alt=&#34;Pasted image 20241105132250 (Image resource not found)&#34; &gt;&#xA;실행 및 웹 인터페이스로 접근한 완료된 word count 작업&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/temp/%ED%82%A4%EB%B3%B4%EB%93%9C%ED%95%98%EB%93%9C%EC%9B%A8%EC%96%B4-%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EC%9D%B8%EC%8B%9D-%EA%B3%BC%EC%A0%95/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/temp/%ED%82%A4%EB%B3%B4%EB%93%9C%ED%95%98%EB%93%9C%EC%9B%A8%EC%96%B4-%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EC%9D%B8%EC%8B%9D-%EA%B3%BC%EC%A0%95/</guid>
      <description>&lt;p&gt;리눅스에서 키보드를 인식하고 입력을 처리하는 과정은 여러 단계로 나뉘며, 하드웨어와 소프트웨어 간의 상호작용을 포함합니다. 아래는 리눅스 시스템에서 키보드가 인식되는 과정을 단계별로 설명한 것입니다.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;1-하드웨드-초기화-및-드라이버-로드&#34;&gt;1. &lt;strong&gt;하드웨드 초기화 및 드라이버 로드&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;키보드는 USB 또는 PS/2 포트를 통해 연결됩니다. 리눅스 커널은 부팅 과정에서 하드웨어 장치를 스캔하며, 연결된 키보드를 감지합니다.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;USB 키보드&lt;/strong&gt;: USB 장치는 &lt;code&gt;usbhid&lt;/code&gt; 드라이버에 의해 관리됩니다.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;PS/2 키보드&lt;/strong&gt;: PS/2 장치는 &lt;code&gt;atkbd&lt;/code&gt; 드라이버에 의해 관리됩니다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;커널은 적절한 드라이버를 자동으로 로드하여 키보드와 통신할 수 있도록 준비합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/temp/%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EA%B8%88%EC%9A%94%EC%9D%BC-10-1-%EC%9D%B4%ED%9B%84-%EB%B3%80%EA%B2%BD%EC%A0%90/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/temp/%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EA%B8%88%EC%9A%94%EC%9D%BC-10-1-%EC%9D%B4%ED%9B%84-%EB%B3%80%EA%B2%BD%EC%A0%90/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/temp/%ED%99%98%EA%B2%BD%EB%B3%80%EC%88%98-%EB%AA%A9%EB%A1%9D/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/temp/%ED%99%98%EA%B2%BD%EB%B3%80%EC%88%98-%EB%AA%A9%EB%A1%9D/</guid>
      <description>&lt;p&gt;아래는 &lt;code&gt;env&lt;/code&gt; 명령어를 통해 출력된 환경 변수들에 대한 자세한 설명입니다. 각 변수는 시스템, 사용자, 프로그램 등에서 특정 정보를 저장하거나 설정하기 위해 사용됩니다.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;1-기본-시스템-및-셸-관련-변수&#34;&gt;&lt;strong&gt;1. 기본 시스템 및 셸 관련 변수&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;SHELL=/bin/bash&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;&#xA;현재 사용 중인 셸(Shell)의 경로를 나타냅니다. 여기서는 Bash가 사용 중임을 의미합니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;TERM=xterm-256color&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;&#xA;터미널 유형을 나타냅니다. &lt;code&gt;xterm-256color&lt;/code&gt;는 256색을 지원하는 터미널임을 의미합니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;USER=shinnk&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;&#xA;현재 로그인한 사용자의 이름입니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;HOME=/home/shinnk&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;&#xA;사용자의 홈 디렉토리 경로입니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;PWD=/home/shinnk&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;&#xA;현재 작업 디렉토리(Working Directory)의 경로입니다.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;&lt;code&gt;LOGNAME=shinnk&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;&#xA;로그인한 사용자의 이름입니다. 일반적으로 &lt;code&gt;USER&lt;/code&gt;와 동일합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>di (의존성 주입) 의 타 프레임워크 접근 유튜브 댓글</title>
      <link>http://localhost:1313/02.inbox/di-%EC%9D%98%EC%A1%B4%EC%84%B1-%EC%A3%BC%EC%9E%85-%EC%9D%98-%ED%83%80-%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8C%ED%81%AC-%EC%A0%91%EA%B7%BC-%EC%9C%A0%ED%8A%9C%EB%B8%8C-%EB%8C%93%EA%B8%80/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/02.inbox/di-%EC%9D%98%EC%A1%B4%EC%84%B1-%EC%A3%BC%EC%9E%85-%EC%9D%98-%ED%83%80-%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8C%ED%81%AC-%EC%A0%91%EA%B7%BC-%EC%9C%A0%ED%8A%9C%EB%B8%8C-%EB%8C%93%EA%B8%80/</guid>
      <description>&lt;p&gt;영상을보다가 좀 답답해서 글을 써봅니다. 호돌맨과 항로님이 그냥 코딩에대한 감각이 없는것같다는 생각이 듭니다. 두분이 좋아하는 방식은 데이터를 다루는 영역에서 유효한 방식인데 그게 두분 전문분야인 웹 백엔드죠. 그러다보니 조금 착각이 일어나시는 것 같습니다. 우선 백엔드의 환경에 대해서 알아야하는데 웹 백엔드는 환경을 통제하기 쉽고(내 서버에 배포) 일종의 요청의 처음과 끝이 존재하는 심플한 방식이고 데이터를 가공해서 스토리지에 저장하는것이 주 목적입니다. 이런 환경에서는 말씀하시는 클래스와 DI같은 레이어링을 위한 추상화 방식이 유효해집니다. 스토리지는 인터페이스는 같지만 실제 구현체가 여러종류일 수 있고 (다형성) 그런 구현체를 주입하기위한 DI는 유효할 수 있습니다, 두분이 좋아하시는 자바 스프링의 어노테이션은 나름 괜찮은 표현력을 제공하죠. 저도 어떤 환경에서 프로그래밍을 하던 데이터 레이어가 복잡해지면 그와 같은 방식을 선호합니다. 나쁘지않은 방식이죠 근데 웹 프론트 환경에서의 클래스와 DI는 복잡도를 더 높입니다. 두분이 선호하는 클래스와 DI방식의 프레임워크로는 앵귤러가 있는데요, 앵귤러는 어노테이션 DI 다 스프링처럼 제공합니다. 근데 앵귤러가 왜 시장에서 외면받았느냐를 분석해드리겠습니다. 실제로 웹 프론트엔드 환경에서 코딩을 해보시면 아시겠지만 js환경에서 앵귤러와같은 표현력을 제공하려면 추상화비용에서 오는 손실이 백엔드보다 더 큽니다. 랜더링이라는 개념이 있고 데이터와 상호작용을 해야해하고 이러한 구현들은 클라이언트 전체적인 아키텍쳐와 상호작용합니다. (백엔드와는 이런 부분들이 다르죠). 예를들어 클라이언트에선 뭔가 백그라운드에서 돌아가고 있을 수 도 있고, 거기에 필요한 데이터 영역이 UI와 상호작용할수도 있습니다. 이 뿐만 아니라 컴포넌트끼리의 상호작용까지 있습니다. 이런 환경에서 과도하게 추상화된 영역은 버그를 일으키고 의존성을 파악하기도 힘들어집니다. 디버깅도 어려워지죠. 작성하기 귀찮은 보일러플레이트는 덤이구요. 그래서 앵귤러는 웹 프론트엔드 환경에서 외면받았습니다. react에서도 mobx와 같은 도구들이 있는데요 컨셉은 좋습니다, 클래스로 탄탄하게 데이터를 다루는 표현력을 제공하겠다, 너무 좋죠. 근데 이게 생각보다 간단하지않습니다. 이런 도구들이 react와 붙으려면 역시 복잡한 의존관계를 관리해야하고 규모가 커질수록 이는 파악하기 어려워집니다. 앵귤러와 비슷한 딜레마가 있습니다, 그래서 메이저가 되진 못했죠. 결론적으로 자연스럽게 코딩하다보면, 호돌맨님과 향로님이 제시하시는 방식은 외면받을 수 밖에 없다는걸 깨달을 때가 되신것같은데 아직 깨닫지못했다는게 정말 신기할 따름입니다. 아키텍쳐만 정해주고 직접 코딩하시진 않아서 그런걸까요? 정말로 리액트에서 클래스랑 DI를 사용하는 방식이 생산성이높다는 생각이든다면 뭔가 어거지 보일러 플레이트를 만들면서 잘못 코딩하고 계신거같고 제 생각엔 그냥 효율성 안나오지만 보일러플레이트 정형화되게 착착 쌓고 이러다보니 아 코딩하기 편하군 이라는 착각에 빠져계신 것 같습니다. 실제 웹 프론트엔드에서 생산성높게 일하는 회사가 어떤 방식을 취하고 계신지 한번 살펴보기를 권합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Drawing 2025-06-02 09.33.51.excalidraw</title>
      <link>http://localhost:1313/04.excalidraw/drawing-2025-06-02-09.33.51.excalidraw/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/04.excalidraw/drawing-2025-06-02-09.33.51.excalidraw/</guid>
      <description>&lt;p&gt;==⚠  Switch to EXCALIDRAW VIEW in the MORE OPTIONS menu of this document. ⚠== You can decompress Drawing data with the command palette: &amp;lsquo;Decompress current Excalidraw file&amp;rsquo;. For more info check in plugin settings under &amp;lsquo;Saving&amp;rsquo;&lt;/p&gt;&#xA;&lt;h2 id=&#34;drawing&#34;&gt;Drawing&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-compressed-json&#34; data-lang=&#34;compressed-json&#34;&gt;N4IgLgngDgpiBcIYA8DGBDANgSwCYCd0B3EAGhADcZ8BnbAewDsEAmcm+gV31TkQAswYKDXgB6MQHNsYfpwBGAOlT0AtmIBeNCtlQbs6RmPry6uA4wC0KDDgLFLUTJ2lH8MTDHQ0YNMWHRJMRZFAEYQljIkT1UYRjAaBABtAF1ydCgoAGUAsD5QSXw8LOwNPkZOTExyHRgiACF0VABrQq5GXABhekx6fAQQAGIAM1GxkABfCaA==&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;%%&lt;/p&gt;</description>
    </item>
    <item>
      <title>Drawing 2025-06-02 09.38.04.excalidraw</title>
      <link>http://localhost:1313/04.excalidraw/drawing-2025-06-02-09.38.04.excalidraw/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/04.excalidraw/drawing-2025-06-02-09.38.04.excalidraw/</guid>
      <description>&lt;p&gt;==⚠  Switch to EXCALIDRAW VIEW in the MORE OPTIONS menu of this document. ⚠== You can decompress Drawing data with the command palette: &amp;lsquo;Decompress current Excalidraw file&amp;rsquo;. For more info check in plugin settings under &amp;lsquo;Saving&amp;rsquo;&lt;/p&gt;&#xA;&lt;h2 id=&#34;drawing&#34;&gt;Drawing&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-compressed-json&#34; data-lang=&#34;compressed-json&#34;&gt;N4IgLgngDgpiBcIYA8DGBDANgSwCYCd0B3EAGhADcZ8BnbAewDsEAmcm+gV31TkQAswYKDXgB6MQHNsYfpwBGAOlT0AtmIBeNCtlQbs6RmPry6uA4wC0KDDgLFLUTJ2lH8MTDHQ0YNMWHRJMRZFAEYQljIkT1UYRjAaBABtAF1ydCgoAGUAsD5QSXw8LOwNPkZOTExyHRgiACF0VABrQq5GXABhekx6fAQQAGIAM1GxkABfCaA==&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;%%&lt;/p&gt;</description>
    </item>
    <item>
      <title>Drawing 2025-06-02 09.38.12.excalidraw</title>
      <link>http://localhost:1313/04.excalidraw/drawing-2025-06-02-09.38.12.excalidraw/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/04.excalidraw/drawing-2025-06-02-09.38.12.excalidraw/</guid>
      <description>&lt;p&gt;==⚠  Switch to EXCALIDRAW VIEW in the MORE OPTIONS menu of this document. ⚠== You can decompress Drawing data with the command palette: &amp;lsquo;Decompress current Excalidraw file&amp;rsquo;. For more info check in plugin settings under &amp;lsquo;Saving&amp;rsquo;&lt;/p&gt;&#xA;&lt;h1 id=&#34;excalidraw-data&#34;&gt;Excalidraw Data&lt;/h1&gt;&#xA;&lt;h2 id=&#34;text-elements&#34;&gt;Text Elements&lt;/h2&gt;&#xA;&lt;p&gt;%%&lt;/p&gt;&#xA;&lt;h2 id=&#34;drawing&#34;&gt;Drawing&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-compressed-json&#34; data-lang=&#34;compressed-json&#34;&gt;N4KAkARALgngDgUwgLgAQQQDwMYEMA2AlgCYBOuA7hADTgQBuCpAzoQPYB2KqATLZMzYBXUtiRoIACyhQ4zZAHoFAc0JRJQgEYA6bGwC2CgF7N6hbEcK4OCtptbErHALRY8RMpWdx8Q1TdIEfARcZgRmBShcZQUebQBGAFYEmjoghH0EDihmbgBtAF1+CFw4OABlKKhxVFAwSHUMmogiZWlU+oZCBAoAIVxsAGtlUmEOYgBhNnw2Um4IAGIAMxXV&#xA;&#xA;jshsEUDsgElq/UrRwYQpmbmJBfiEK6v1iE3Sbag9jP6hkbHJ6dn5qHIOZhwXBPO4PJ4vfQAMUI+HwlRgwXmgg8oK2WWe+0ObGOAHUSOpuHxwBs0btMX9sQh4YiJMiSKjHuiIQAlYRtDjhXJoeL8EmMskZADyQOwahg3HiAAZJbz7qSMRlIZwoJDcPoYeK0IlZWCmfsldlyoQjDUeDLiXL+Qr9AAVLBQACCrS4EmCSygDPB5OBjsebAokhCxG4HCE&#xA;&#xA;sJ18ohAFFxg6/QGg/NgaMqBGrRC4ymbfBmqMhONPXrFeRMqyaahQ+GLcxsKNYQANbiJABsAA5tABmZvxACcfcS8XiAHZ4q3W7Ka3X8ABNbgAFg7yUSPHic54HY3PdbC6H2otRjYBm4dU69AIQhq8WJAF8016Mqz88QOcwueg8wXZSMSEaTYTzZ037EJUCBwE2X6kCQACybDEAgMa4JowTBmgSwEGEEEkKcPxoCekC9NMKHvsomi4AAFCuQ7ULww7&#xA;&#xA;UZR1GStoiQAJTrJAzIIMoYbAvMpAkeR64yrwHZCYJDFMaxN53uiWLHMKUDsACx7EpAkiEG0rTSEw3BofgGEqfcnDMFE2QAAqBK+Ig1H8F68qpoSCkIUBEByOnoQgdkQMIzmEByeLEASaAAZ0bBwApRnKfUnTqL5HC+co3CMc2dkCPoh4xRwCVBQkKUQMZgRqi5NSMTyKmQCErCZfMFUII5UBGq5uXGT6kVRRspTcDZHllQ0pTaUFKXlaE8XzEVPF&#xA;&#xA;lbeZUYAWuE9fcHWoe5g3QH15yoMFUUYMNVWur5IRzBNKnXlJFpLCWCAceMTAjbNm1ZIhyGdaQtkGdgRBgWgXWeRwarWc93Wbd5RVPS9m36MCxykAAcr9IMA504OkJDCFIQgRFdSdIWaAAVgg2A5OUP1wDBcEo49i16fDJT44QjA2oe+CtQ0OZIukNOcGxcrGQY2aICGYb4J5MxDGjbmU55Z0GOUbPhS6qC6fpm34KEjo03TDP87CN7gJNkBLDC4T&#xA;&#xA;Hsd15AA=&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;%%&lt;/p&gt;</description>
    </item>
    <item>
      <title>Drawing 2025-10-11 13.12.38.excalidraw</title>
      <link>http://localhost:1313/04.excalidraw/drawing-2025-10-11-13.12.38.excalidraw/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/04.excalidraw/drawing-2025-10-11-13.12.38.excalidraw/</guid>
      <description>&lt;p&gt;==⚠  Switch to EXCALIDRAW VIEW in the MORE OPTIONS menu of this document. ⚠== You can decompress Drawing data with the command palette: &amp;lsquo;Decompress current Excalidraw file&amp;rsquo;. For more info check in plugin settings under &amp;lsquo;Saving&amp;rsquo;&lt;/p&gt;&#xA;&lt;h1 id=&#34;excalidraw-data&#34;&gt;Excalidraw Data&lt;/h1&gt;&#xA;&lt;h2 id=&#34;text-elements&#34;&gt;Text Elements&lt;/h2&gt;&#xA;&lt;p&gt;Hello ^c34eIMiq&lt;/p&gt;&#xA;&lt;p&gt;%%&lt;/p&gt;&#xA;&lt;h2 id=&#34;drawing&#34;&gt;Drawing&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-compressed-json&#34; data-lang=&#34;compressed-json&#34;&gt;N4KAkARALgngDgUwgLgAQQQDwMYEMA2AlgCYBOuA7hADTgQBuCpAzoQPYB2KqATLZMzYBXUtiRoIACyhQ4zZAHoFAc0JRJQgEYA6bGwC2CgF7N6hbEcK4OCtptbErHALRY8RMpWdx8Q1TdIEfARcZgRmBShcZQUebQBGAFYEmjoghH0EDihmbgBtcDBQMBKIEm4IbABmABYEAEkAWUIAR1SSyFhECqgsKHbSzG5nePia7QAORIA2RIAGadqAdlnp&#xA;&#xA;nkT+Uphh+IBOacnpmp4Jiaqqubmlifi+QsgKEnVuGqqE3Y+b6YndmsSq24be5SBCEZTSbjrTaQazKYLcObQiDMKCkNgAawQAGE2Pg2KQKgBieIIEkkgaQTS4bDo5RooQcYg4vEEiSo6zMOC4QLZCkQABmhHw+AAyrB4RJBB4+Si0ZiAOpPSSQpGyjEIMUwCXoKXlJH08EccK5NDxJFsLnYNTbU2XJF04RwerEE2oPIAXSR/PImWd3A4QmFSMIjKw&#xA;&#xA;FVwcz59MZRuYroDQeBYQQxG4YyqExqSyW50RwMYLHYXDQEyRBdYnAAcpwxC9pksFvFc8HmAARdK9VNofkEMJIzTCRkAUWCmWyroKHSK91K5QkbCWxAA8gAhAD6UHqAEUeABxCaYJYAJQAWhwsfp4gAJCmlLridDctFUGcAX3unuBQjgxFwnbTKxzEkJy7JmSRIniNIptwPb4H2wK9Jg/QSFeQR4lGlAACp9BUqHCmwfL8pwUAioQRgPjweYdAKxE&#xA;&#xA;AGK4PoQo2qgQLUYhUAAIJEMoxboME/L9GWTBQOYBBcWCvHQBafJ6NkuAhkwfpoAm+DmqQYIhgQ2FIbhaEEUiuBCFAbBHuEZEPqiQgIBBCmoWCEKmtoULAkQHDov6gb4IUr6bMUs5dugJgANItOi6JXpgQ7KGQQ4TJhQVzCeHGtvKfL3hUgTYFEHBwkgSJDGg0zxJMpxLDUXw/H8AJIsxzg8A22iJD8iQfNMcy7FUSysaUjzEM8aANYkezrLMuzxE&#xA;&#xA;s+ynEikiguCyGoPE0wHBM9VjJmnXdTCOXalRpRqpizL4kSZKknlwJUjSDoMkyuJHWy5AcJy3JZIJwKCsKmrasiuJ6kmqLqoqfXKmgdzUftGrig+33SvqwiGsaabmpa1ppnawJXU6Lr5J+1HegxDQBSpwahgVj7xFGg7ELGrp+Xe8APlU9w+UmCDQaaPDxBMS1VLsiQ1EJhacGmfwCxWHDVhwtZoB8SRzE1DYtu2wT/t2vbWedlMjhkL0TjOtP+RU&#xA;&#xA;C7Luum47vuh6nuel43tCdPdBIT5sC+U7vh0OOlN+v4qwtgHAbscwXEVNluR5ibUZBmIBbBYTeb5wJzugRurhu257gex5nhe15pfT4akM+fKk84RzaACMxNTMHVVC1/PArVnMTAkCzTGNuwja1SK9f1C1JE5NQfHMmZZjwqyg6UM32fNxU87UlxNeNEzZjmVQGdtD67QI/0HbdrLoMSp3kv21K0tGN0sj0D1PTyr240KoqQxUuqpqqW8IID3dj5vc&#xA;&#xA;oQ1qUNPxTfhJDU0RsCC01IUa2g3hADGzoJzu0gHjX0hNPLE2IGGB2PAAExgRmgfW0Bc4gyZqqVmAVFgrBGmMUWRZuC7CWFQqsNYKJXB4G3UYcxP5lDbB2NmqBo7q2ogOa6Wsxw5FDqpL8P4/w8PGm1P2AcFgcNcu5ZSKCXJsCglHNWSI4BsBDKItAk4OiGI6BvEocwZzwLAMYkooxkg8H7v7IeSwR4zE/jY0uHUahzxuNcJe5wLEfggqEKAOJ9CM&#xA;&#xA;RkCmAACro3kKiw57SiKQKAK4QyOBytwPB6QRFKXQNUOoTRWi3hotgIQrpnBzFLpRZx6w+Y/EzCcTakBlC4DgNwJYpcvFczaqcLmSxOZdSIcCLIxAUmMhDMoDJM4MCjhejkiAwVQrhUitFUgsV4qJWSqlW2xTSnDAqUBDmEwgK/AzJ1LqmZtnNNababQvMaj9xWmNICrjEiDLBokzi+cnYzVwMg+JkBhkcS+RQH5AUICOyoEiIIA4KA8L4bHQotNo&#xA;&#xA;A4QkAACgAJR5G0NoBQgAWbsADgTC13SEWIqRcikIoFEWyPRRi+BmKbWRUhcSPEKj8RvqUAsIl3DMsksZVpwYwWaCvEOfQbB4AABkc723QOxQuwwObtO+Fmb49Z6yJGuDVeVbVtATSOFUexvNRjOM7kqNMowdUfDbmq64gJpqzQcrwBlsIdov2/odXeEB94nT5BdE+lN3UXw5Fya+hE76fShpIakGhAgylfu/YGC1XXqnDY/H6z9gQGiATgxNoDka&#xA;&#xA;wFRlA0+wC4niLBiQ7gGZ/jTHobxRaNaJZSwWgCK4S0eAjyRJ7KRAUZHPIuMce5tdqKEC4crHhll+GlBgVjAx8CICCOHDM8c2Ng7KNQETNRGiYJaLej6AmYikSySiApUgOT13UXxBpDgWkUXoAxVinFBKiUYQoNpeaEA73YrxYS+IxLg4IDsnNNMTknVGRMmZclaBx2oPQY+KoEAEUlCRQnCAMBB4UF3OKqo7LOgEJlThfKOwgIJEzCsXp1qbiarQ&#xA;&#xA;HVJaTl9ivANUNcaHCu4JtLMCCegGQZOrXgiJN29z4SC9adH1x8rqMgDfdINz1eRejDQ/SUabY3f3jSqP638U0KZhhmuGWa4wgPPXm5i8Q0bUSnXAr0u7T2qKHSTcMNQsFU2zWeva5bTRdT6Vmf4g6OVMDFhW+tjDuBFRqItHmK1FbcIClBjWQjF36LXdZj2kjvY9qSBcC4A8V37o3ZHLdcEJ2dBvRAZ9r6KgkuyGSphXo6IMSYtwBl7EeWsoQAJP&#xA;&#xA;knLRL4Ca2yaSB7iLySNCev5pbSgXv8NenSEg+SGWMqZVgEHUDRfDrZe1U9gMIenEOsFmAtyEC3OK9E+guBInSmyfDwIi7GbeJzZVZH3MUbrlquxdH9X90Y8a4ELHuBseohxh1zlqLOvXnx7EO9joHzOgI0Tp8JMysvsGl6oaPryZ1Ip4HKmQbA40yjrT1FM3FpzQZ8B+bIH2npJjczO78ZWf+WUWzDtEgOfx85gQrmFo3FuL8dt+ZfPULQCvbngt&#xA;&#xA;xaBdNEkG4+x2ERdHVF0gVl+yazi/GRLkBO0pd9v8AO5w25ZZLRBdRuXVb5eO0VkrxvqsVfMhSs3UAaV1bQA1voXW+ItewwwYSHXHdSX5cCQ9/XFJDbUpe8bb6pugdmxbyDMuCsQFcv+lbQH1jeXADjcFcA4BiikZMu8M1MissngMBghAEAUBXFD/1oPBP8kr1X/PJT86zN6PoMUbry97xOofQolQRDX3qA3kvl1oct+gHD6T7LO91+yD3jItE5O/&#xA;&#xA;1TTjyAtfu8N6bwDU1GOO+L/rxkFfmIsfQ1+qUTfE+G9Hh0/js0G+u9b/0EuQzBbNhj6X1PmrtL6UP6P5uBvtFSXh94LtR/1+r6HubKNeV+x+2+HyQKz4oK2Wh+YBn+GQQ4jIUB3yIQYKEKoB4+CB+gKBL6uGEAp8mBT++gtEu6p+2ozmyI2AaIwoAAGhWtmNoK8F1MBPLD8AsA/swNQbiPgAAJovDsIJD/aQBGBsAGCZ4coEBWSQjrYAHgH6Cn7X&#xA;&#xA;T44EGUz550gkCVaW4d7qHEBigIDXIsQP46GNBsBoJIG4CaDBCaKG7aHqRnx3SoBIori4hgqkDKBUiooKrUC8DjTeFeGoAVKJDop8imTKCBjcgZTuG4CeEXB+GxG8DxGBHBGyEf474IC34iScCK7xIChkHDJMDjISEApXqWFjqR4HpEAGGLalBXo54R6y6gJGQx7cDVGQD6DciYikCVj4wtHlHAjtGkCdHmGlHS5WSyF2AABWCAWUzAIoV6cAJhZh&#xA;&#xA;JRVheW8EpQ1IIkjAmEYh+ARR+C0qyI6QWU1CB6pSxk+gmEuGzO0eeucK26uMaIjeRxmRvEfCQSKIHExxWxOxYiieYAzMCCQo4QGS74r4QAA=&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;%%&lt;/p&gt;</description>
    </item>
    <item>
      <title>Make shorter</title>
      <link>http://localhost:1313/copilot/copilot-custom-prompts/make-shorter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/copilot/copilot-custom-prompts/make-shorter/</guid>
      <description>&lt;p&gt;Reduce {} to half its length while preserving these elements:&#xA;1. Main ideas and key points&#xA;2. Essential details&#xA;3. Original tone and style&#xA;Return only the shortened text.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Rest Full API</title>
      <link>http://localhost:1313/temp/rest-full-api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/temp/rest-full-api/</guid>
      <description>&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250314030577.png&#34; alt=&#34; (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;RESTful API는 현대 웹 애플리케이션의 필수 요소로 자리잡았습니다. 그러나 RESTful API를 설계할 때는 몇 가지 원칙을 따르는 것이 중요합니다. 이번 글에서는 RESTful API 설계의 핵심 원칙과 그 원칙을 예시를 통해 자세히 살펴보겠습니다. 이 원칙들을 준수하면 API의 일관성과 확장성을 높이고, 개발자들에게 편의성을 제공할 수 있습니다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-자원리소스-기반-uri&#34;&gt;1. 자원(리소스) 기반 URI&lt;/h2&gt;&#xA;&lt;p&gt;자원(리소스) 기반 URI는 RESTful API의 핵심입니다. 각 자원은 고유한 URI(Uniform Resource Identifier)를 가지며, 이를 통해 자원을 식별합니다. 자원 기반 URI는 설계의 일관성을 유지하고 의미를 명확하게 전달하는 데 도움을 줍니다. 예를 들어, 다음과 같은 URI를 사용하여 각각의 리소스를 다룰 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>tmux</title>
      <link>http://localhost:1313/temp/tmux/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/temp/tmux/</guid>
      <description>&lt;p&gt;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250117105337.png&#34; alt=&#34;Pasted image 20250117105337 (Image resource not found)&#34; &gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250117105406.png&#34; alt=&#34;Pasted image 20250117105406 (Image resource not found)&#34; &gt;&#xA;&#xA;        &lt;img src=&#34;http://localhost:1313/08.media/20250117105309.png&#34; alt=&#34;Pasted image 20250117105309 (Image resource not found)&#34; &gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;tmux&lt;/code&gt;는 터미널 멀티플렉서로, 하나의 터미널 창에서 여러 세션을 관리할 수 있게 해줍니다. 아래에 &lt;code&gt;tmux&lt;/code&gt;의 기본 사용법(생성, 접근, 종료 등)을 정리해 드릴게요.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-1-tmux-설치-확인-리눅스-기준&#34;&gt;🔹 1. tmux 설치 확인 (리눅스 기준)&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tmux -V  &lt;span style=&#34;color:#75715e&#34;&gt;# 버전 확인&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;설치가 필요하다면:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;우분투/데비안:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt install tmux&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;CentOS:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo yum install tmux&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;macOS (Homebrew):&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brew install tmux&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-2-세션-생성&#34;&gt;🔹 2. 세션 생성&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tmux new -s &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;세션이름&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;예시:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
